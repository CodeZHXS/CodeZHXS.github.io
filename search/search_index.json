{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9648\u88d5\u6770\u7684\u4e2a\u4eba\u7f51\u7ad9","text":"<p>https://codezhxs.github.io</p> <p>\u4f60\u597d!!</p> <p>\u70b9\u51fb\u4e0a\u65b9\u7684  \u6309\u94ae\u5207\u6362\u591c\u95f4\u6a21\u5f0f</p> <p>\u5982\u679c\u6709\u7a7a\u6211\u4f1a\u66f4\u65b0\u535a\u5ba2\u5feb\u6377\u952e\u8bf4\u660e -&gt; \u53c2\u8003\u6587\u6863</p> <p>\u6700\u8fd1\u66f4\u65b0\uff1a</p> <ul> <li>(20240515) ABC352(A-F) \u9898\u89e3</li> <li>(20240510) ABC351(A-G) \u9898\u89e3</li> <li>(20240402) ABC347(A-E) \u9898\u89e3</li> </ul>"},{"location":"algorithm/","title":"\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e9b\u7b97\u6cd5\u9898\u89e3","text":"<p>\u76ee\u524d\u968f\u7f18\u66f4\u65b0abc\u9898\u89e3...</p>"},{"location":"algorithm/#_2","title":"\u8c22\u8c22","text":""},{"location":"algorithm/20240325/","title":"20240325","text":""},{"location":"algorithm/20240325/#i-","title":"I - \u53cc\u5411\u6392\u5e8f","text":""},{"location":"algorithm/20240325/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a = (1, 2, \\cdots, n)\\)\uff0c\u4f60\u9700\u8981\u6267\u884c \\(m\\) \u79cd\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6709\u4e24\u79cd\u7c7b\u578b\uff1a</p> <ul> <li><code>0 x</code>\uff1a\u8868\u793a\u5c06\u5e8f\u5217\u7684 \\(a_1, a_2, \\cdots, a_x\\) \u964d\u5e8f\u6392\u5217\u3002</li> <li><code>1 x</code>\uff1a\u8868\u793a\u5c06\u5e8f\u5217\u7684 \\(a_{x+1}, a_{x+2}, \\cdots, a_n\\) \u5347\u5e8f\u6392\u5217\u3002</li> </ul> <p>\u5728 \\(m\\)\u200b \u6b21\u64cd\u4f5c\u5168\u90e8\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5e8f\u5217\u3002</p>"},{"location":"algorithm/20240325/#_2","title":"\u6570\u636e\u8303\u56f4","text":"<ul> <li> <p>\u5bf9\u4e8e \\(60\\%\\) \u7684\u6570\u636e\uff0c \\(1 \\le n, m \\le 5000\\)</p> </li> <li> <p>\u5bf9\u4e8e\u6240\u6709\u7684\u6570\u636e\uff0c\\(1 \\le n, m \\le 10^5\\)\u200b</p> </li> </ul>"},{"location":"algorithm/20240325/#60-pts","title":"\\(60\\%\\) pts \u505a\u6cd5","text":"<p>\u5bf9\u4e8e \\(60\\%\\) \u7684\u6570\u636e\uff0c \\(1 \\le n, m &lt; 5000\\)</p> <p>\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\uff0c\u66b4\u529b\u7684\u4f7f\u7528 <code>sort()</code> \u6392\u5e8f\u3002</p> <p>\u5355\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6 \\(O(nlogn)\\)\uff0c\u4e00\u5171 \\(m\\) \u6b21\u64cd\u4f5c\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(mnlogn)\\)\uff0c\u53ef\u4ee5\u901a\u8fc7 \\(60\\%\\)\u200b \u7684\u6570\u636e\u3002</p>"},{"location":"algorithm/20240325/#100-pts","title":"\\(100\\%\\)\u200b pts \u505a\u6cd5","text":"<p>\u5bf9\u4e8e\u6240\u6709\u7684\u6570\u636e\uff0c\\(1 \\le n, m &lt; 10^5\\)</p> <p>\u6211\u4eec\u9700\u8981\u5c06\u5355\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u538b\u7f29\u5230 \\(logn\\) \u4ee5\u5185\u3002</p> <p>\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6316\u6398\u4e00\u4e9b\u6027\u8d28\uff1a</p> <ul> <li>\u6027\u8d281\uff1a\u4efb\u610f\u65f6\u523b\uff0c\u6574\u4e2a\u5e8f\u5217\u8981\u4e48\u662f\u5148\u51cf\u540e\u589e\uff0c\u8981\u4e48\u662f\u5355\u8c03\u9012\u589e\uff0c\u8981\u4e48\u662f\u5355\u8c03\u9012\u51cf\u7684\u3002</li> </ul> <p>\u5148\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u521d\u59cb\u7684\u5e8f\u5217\u4e3a\uff1a</p> \\(i\\) 1 2 3 4 5 6 7 \\(a_i\\) \\(1\\) \\(2\\) \\(3\\) \\(4\\) \\(5\\) \\(6\\) \\(7\\) <p>\u67d0\u6b21\u64cd\u4f5c\u5c06\u524d\u7f00 \\([1, 3]\\) \u964d\u5e8f\u6392\u5217\uff0c\u5e8f\u5217\u53d8\u6210\uff1a</p> \\(i\\) 1 2 3 4 5 6 7 \\(a_i\\) \\(3\\) \\(2\\) \\(1\\) \\(4\\) \\(5\\) \\(6\\) \\(7\\) <p>\u5b9a\u4e49\uff1a\u6700\u540e\u4e00\u4e2a\u964d\u5e8f\u5143\u7d20\u7684\u4e0b\u6807\u4e3a \\(mid\\)\uff0c\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\\(mid=3\\)</p> <p>\\(mid\\) \u662f\u4e00\u6761\u5206\u754c\u7ebf\uff0c\u8868\u793a \\([1, mid]\\) \u8fd9\u4e2a\u533a\u95f4\u662f\u964d\u5e8f\uff0c\\([mid+1, n]\\) \u8fd9\u4e2a\u533a\u95f4\u5c31\u662f\u5347\u5e8f\u3002</p> <p>\u5982\u679c\u6574\u4e2a\u5e8f\u5217\u662f\u5347\u5e8f\uff0c\u5219 \\(mid = 0\\)\uff0c\u5982\u679c\u6574\u4e2a\u5e8f\u5217\u662f\u964d\u5e8f\uff0c\u5219 \\(mid = n\\)\u3002</p> <p>\u63a5\u4e0b\u6765\u7684\u51e0\u79cd\u53ef\u80fd\u7684\u64cd\u4f5c\u7c7b\u578b\uff1a</p> <ol> <li> <p>\u5047\u8bbe \\(mid = 3\\)\uff0c\u73b0\u5728\u6709\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5c06\u533a\u95f4 \\([1, 2]\\)\u200b \u964d\u5e8f\uff0c\u7531\u4e8e\u533a\u95f4 \\([1, 3]\\)\u200b \u5df2\u7ecf\u662f\u964d\u5e8f\uff0c\u6240\u4ee5\u8fd9\u4e2a\u64cd\u4f5c\u662f\u4e0d\u7528\u505a\u7684\u3002</p> <p>\u5f52\u7eb3\uff1a\u5982\u679c \\(x \\le mid\\)\uff0c\u5219\u5c06 \\([1, x]\\) \u964d\u5e8f\u6ca1\u6709\u610f\u4e49\u3002</p> </li> <li> <p>\u5047\u8bbe \\(mid = 3\\)\uff0c \u73b0\u5728\u6709\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5c06\u533a\u95f4 \\([1, 4]\\) \u964d\u5e8f\uff0c\u7531\u4e8e \\(4 &gt; 3\\)\uff0c\u6240\u4ee5\u8fd9\u4e2a\u64cd\u4f5c\u662f\u6709\u6548\u7684\uff0c\u64cd\u4f5c\u6267\u884c\u540e\uff0c\\(mid = 4\\)</p> <p>\u5f52\u7eb3\uff1a\u5982\u679c \\(x &gt; mid\\)\uff0c\u5219\u5c06 \\([1, x]\\) \u964d\u5e8f\u540e\uff0c\\(mid\\) \u7684\u503c\u53d8\u6210 \\(x\\)\u200b\u3002</p> </li> <li> <p>\u5047\u8bbe \\(mid = 3\\)\uff0c \u73b0\u5728\u6709\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5c06\u533a\u95f4 \\([6, 7]\\) \u5347\u5e8f\uff0c\u7531\u4e8e\u533a\u95f4 \\([4, 7]\\) \u5df2\u7ecf\u662f\u964d\u5e8f\uff0c\u6240\u4ee5\u8fd9\u4e2a\u64cd\u4f5c\u662f\u4e0d\u7528\u505a\u7684\u3002</p> <p>\u5f52\u7eb3\uff1a\u5982\u679c \\(x \\ge mid+1\\)\uff0c\u5219\u5c06 \\([x, n]\\) \u5347\u5e8f\u6ca1\u6709\u610f\u4e49\u3002</p> </li> <li> <p>\u5047\u8bbe \\(mid = 3\\)\uff0c\u73b0\u5728\u6709\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5c06\u533a\u95f4 \\([2, 7]\\) \u964d\u5e8f\uff0c\u7531\u4e8e \\(2 &lt; 4\\)\uff0c\u6240\u4ee5\u8fd9\u4e2a\u64cd\u4f5c\u662f\u6709\u6548\u7684\uff0c\u64cd\u4f5c\u6267\u884c\u540e\uff0c\\(mid = 1\\)</p> <p>\u5f52\u7eb3\uff1a\u5982\u679c \\(x &lt; mid + 1\\)\uff0c\u5219\u5c06 \\([x, n]\\) \u5347\u5e8f\u540e\uff0c\\(mid\\) \u7684\u503c\u53d8\u6210 \\(x-1\\)\u3002</p> </li> </ol> <p>\u6b64\u65f6\u5e8f\u5217\u53d8\u6210\uff1a</p> \\(i\\) 1 2 3 4 5 6 7 \\(a_i\\) \\(4\\) \\(1\\) \\(2\\) \\(3\\) \\(5\\) \\(6\\) \\(7\\) <ul> <li> <p>\u6027\u8d282\uff1a\u4e0b\u6807\u8d8a\u9760\u8fd1 \\(mid\\) \u7684\u6570\u5b57\u503c\u8d8a\u5c0f\u3002</p> <p>\u8bc1\u660e\uff1a\u6839\u636e \\(mid\\) \u7684\u5b9a\u4e49\uff0c\u533a\u95f4 \\([1, mid]\\) \u662f\u964d\u5e8f\uff0c\\([mid+1, n]\\) \u662f\u5347\u5e8f\uff0c\u663e\u7136\u5f97\u8bc1\u3002</p> </li> </ul> <p>\u8003\u8651\u7ed9\u6bcf\u4e2a\u6570\u5b57\u52a0\u4e0a\u5206\u533a\u6807\u7b7e</p> <p>\\(b_k = 0\\) \u8868\u793a\u6570\u5b57 \\(k\\) \u5f53\u524d\u5728 \\([1, mid]\\) \u7684\u964d\u5e8f\u533a\u95f4\u4e2d\u3002</p> <p>\\(b_k = 1\\) \u8868\u793a\u6570\u5b57 \\(k\\) \u5f53\u524d\u5728 \\([mid+1, n]\\) \u7684\u5347\u5e8f\u533a\u95f4\u4e2d\u3002</p> <p>\u4e00\u4e2a \\(b\\) \u6570\u7ec4\u53ef\u4ee5\u5bf9\u5e94\u4e00\u4e2a\u5e8f\u5217\u7684\uff0c\u4f8b\u5982\uff0c\u5f53\u524d\u7684 \\(b\\) \u6570\u7ec4\u4e3a\uff1a</p> \\(k\\) 1 2 3 4 5 6 7 \\(b_k\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) <p>\u5bf9\u5e94\u7684\u5e8f\u5217\u5c31\u662f \\((4, 1, 2, 3, 5, 6, 7)\\)\u200b\uff0c\u4ece\u540e\u5f80\u524d\u8bfb \\(0\\)\uff0c\u4ece\u524d\u5f80\u540e\u8bfb \\(1\\)</p> <p>\u53ea\u8981\u7ef4\u62a4 \\(b\\) \u6570\u7ec4\uff0c\u76f8\u5f53\u4e8e\u7ef4\u62a4\u6574\u4e2a\u5e8f\u5217\u3002</p> <p>\u8003\u8651\u64cd\u4f5c\u5bf9 \\(b\\) \u6570\u7ec4\u7684\u5f71\u54cd</p> <p>\u5047\u8bbe\u73b0\u5728 \\([1, mid]\\) \u662f\u964d\u5e8f\uff0c\\([mid+1, n]\\) \u662f\u5347\u5e8f\u3002</p> <p>\u5219 \\(b\\) \u6570\u7ec4\u4e2d\u6709 \\(mid\\) \u4e2a \\(0\\)\uff0c\\(n-mid\\) \u4e2a \\(1\\)\u3002</p> <ol> <li> <p>\u5bf9\u4e8e\u5c06 \\([1, x]\\) \u964d\u5e8f\uff0c\u5982\u679c \\(x \\le mid\\)\u200b\uff0c\u5219\u6ca1\u6709\u610f\u4e49\uff0c\u8df3\u8fc7\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u5c06 \\([1, x]\\) \u964d\u5e8f\uff0c\u5982\u679c \\(x &gt; mid\\)\uff0c\u64cd\u4f5c\u540e \\(mid\\) \u7684\u503c\u53d8\u6210 \\(x\\)\u3002</p> <p>\u8fd9\u610f\u5473\u7740\u64cd\u4f5c\u540e \\(b\\) \u6570\u7ec4\u6709 \\(x\\) \u4e2a \\(0\\)\uff0c\u800c\u73b0\u5728\u53ea\u6709 \\(mid\\) \u4e2a \\(0\\)\u3002</p> <p>\u6240\u4ee5\u8fd8\u9700\u8981\u5c06 \\(x-mid\\) \u4e2a \\(1\\) \u6539\u6210 \\(0\\)\uff0c\u800c\u8fd9\u4e9b\u6570\u5b57\u662f\u5c5e\u4e8e \\([mid+1, n]\\)\u200b \u7684\u5347\u5e8f\u533a\u95f4\u7684\u3002</p> <p>\u53c8\u56e0\u4e3a\u8d8a\u9760\u8fd1 \\(mid\\) \u7684\u6570\u5b57\u8d8a\u5c0f\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u6700\u5c0f\u7684 \\(x-mid\\) \u4e2a \\(b_k = 0\\) \u6539\u6210 \\(b_k = 1\\)\u200b\u200b \u5373\u53ef\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u5c06 \\([x, n]\\) \u5347\u5e8f\uff0c\u5982\u679c \\(x \\ge mid+1\\)\uff0c\u5219\u6ca1\u6709\u610f\u4e49\uff0c\u8df3\u8fc7\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u5c06 \\([x, n]\\) \u5347\u5e8f\uff0c\u5982\u679c \\(x &lt; mid + 1\\)\uff0c\u64cd\u4f5c\u540e \\(mid\\) \u7684\u503c\u53d8\u6210 \\(x - 1\\)\u3002</p> <p>\u8fd9\u610f\u5473\u7740\u64cd\u4f5c\u540e \\(b\\) \u6570\u7ec4\u6709 \\(n-x+1\\) \u4e2a \\(1\\)\uff0c\u800c\u73b0\u5728\u53ea\u6709 \\(n-mid\\) \u4e2a \\(1\\)\u3002</p> <p>\u6240\u4ee5\u8fd8\u9700\u8981\u5c06 \\(mid+1-x\\) \u4e2a \\(1\\) \u6539\u6210 \\(0\\)\uff0c\u800c\u8fd9\u4e9b\u6570\u5b57\u662f\u5c5e\u4e8e \\([1, mid]\\)\u200b \u7684\u5c06\u5e8f\u533a\u95f4\u7684\u3002</p> <p>\u53c8\u56e0\u4e3a\u8d8a\u9760\u8fd1 \\(mid\\) \u7684\u6570\u5b57\u8d8a\u5c0f\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u6700\u5c0f\u7684 \\(mid+1-x\\) \u4e2a \\(b_k = 0\\) \u6539\u6210 \\(b_k = 1\\) \u5373\u53ef\u3002</p> </li> </ol> <p>\u600e\u4e48\u5feb\u901f\u4fee\u6539\uff1f</p> <p>\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 \\(b\\) \u6570\u7ec4\u7684\u533a\u95f4\u548c\uff0c\u5728\u4fee\u6539\u65f6\u8ba1\u7b97\u51fa\u5de6\u53f3\u5b50\u6811\u6709\u591a\u5c11\u4e2a \\(0\\)\u200b\uff0c\u4f18\u5148\u8fdb\u5165\u5de6\u5b50\u6811\u8fdb\u884c\u4fee\u6539\uff08\u56e0\u4e3a\u5de6\u5b50\u6811\u7684\u503c\u66f4\u5c0f\uff09\u3002</p>"},{"location":"algorithm/20240325/#_3","title":"\u53c2\u8003\u4ee3\u7801","text":"\u53c2\u8003\u4ee3\u7801 C++JavaPython <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nconst int maxn = 1E5 + 10;\nstruct Node {\nint sum, lazy;\n}t[maxn*4];\n\nvoid build(int p, int beg, int end)\n{\nt[p].lazy = -1;\nif(beg == end)\n{\nt[p].sum = 1;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid+1, end);\nt[p].sum = t[lch].sum + t[rch].sum;\n}\n\nvoid pushdown(int p, int beg, int end)\n{\nif(t[p].lazy == -1)\nreturn;\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nt[lch].sum = (mid-beg+1) * t[p].lazy;\nt[rch].sum = (end-mid) * t[p].lazy;\nt[lch].lazy = t[rch].lazy = t[p].lazy;\nt[p].lazy = -1;\n}\n\n// \u5c06[beg, end]\u533a\u95f4\u7684\u524dk\u4e2a0\u6539\u62101\nvoid zero_to_one(int p, int beg, int end, int k)\n{\nint cnt = end - beg + 1 - t[p].sum; // \u8ba1\u7b97[beg, end]\u6709\u591a\u5c11\u4e2a0\nif(cnt &lt;= k) // \u5982\u679c\u672c\u8eab\u4e0d\u8db3k\u4e2a\u5c31\u76f4\u63a5\u6279\u91cf\u4fee\u6539\n{\nt[p].sum = end - beg + 1; // \u5c06\u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u6539\u62101\nt[p].lazy = 1; // \u6253\u4e0a\u61d2\u6807\u8bb0\nreturn;\n}\n// \u5982\u679c0\u7684\u6570\u91cf\u5927\u4e8ek\u4e2a\npushdown(p, beg, end);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nint lcnt = mid - beg + 1 - t[lch].sum; // \u8ba1\u7b97\u5de6\u5b69\u5b50\u8fd8\u6709\u591a\u5c11\u4e2a0\nif(lcnt &lt; k) // \u5982\u679c\u5de6\u5b69\u5b50\u4e0d\u8db3k\u4e2a0\n{\nzero_to_one(lch, beg, mid, lcnt); // \u5de6\u5b69\u5b50\u5168\u6539\u62100\nzero_to_one(rch, mid+1, end, k-lcnt);\n}\nelse zero_to_one(lch, beg, mid, k); // \u5426\u5219\uff0c\u53ea\u9700\u8981\u5728\u5de6\u5b69\u5b50\u4e0a\u6539k\u4e2a\nt[p].sum = t[lch].sum + t[rch].sum;\n}\n\n// \u5c06[beg, end]\u533a\u95f4\u7684\u524dk\u4e2a1\u6539\u62100\nvoid one_to_zero(int p, int beg, int end, int k)\n{\nint cnt = t[p].sum; // \u8ba1\u7b97[beg, end]\u6709\u591a\u5c11\u4e2a1\nif(cnt &lt;= k) // \u5982\u679c\u672c\u8eab\u4e0d\u8db3k\u4e2a\u5c31\u76f4\u63a5\u6279\u91cf\u4fee\u6539\n{\nt[p].sum = 0; // \u5c06\u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u6539\u62100\nt[p].lazy = 0; // \u6253\u4e0a\u61d2\u6807\u8bb0\nreturn;\n}\n// \u5982\u679c1\u7684\u6570\u91cf\u5927\u4e8ek\u4e2a\npushdown(p, beg, end);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nint lcnt = t[lch].sum; // \u8ba1\u7b97\u5de6\u5b69\u5b50\u8fd8\u6709\u591a\u5c11\u4e2a1\nif(lcnt &lt; k) // \u5982\u679c\u5de6\u5b69\u5b50\u4e0d\u8db3k\u4e2a1\n{\none_to_zero(lch, beg, mid, lcnt); // \u5de6\u5b69\u5b50\u5168\u6539\u62100\none_to_zero(rch, mid+1, end, k-lcnt);\n}\nelse one_to_zero(lch, beg, mid, k); // \u5426\u5219\uff0c\u53ea\u9700\u8981\u5728\u5de6\u5b69\u5b50\u4e0a\u6539k\u4e2a\nt[p].sum = t[lch].sum + t[rch].sum;\n}\n\nint ask(int p, int beg, int end, int pos)\n{\nif(beg == end)\nreturn t[p].sum;\npushdown(p, beg, end);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn pos &lt;= mid ? ask(lch, beg, mid, pos) : ask(rch, mid+1, end, pos);\n}\n\nint main()\n{\nint n, m;\ncin &gt;&gt; n &gt;&gt; m;\nbuild(1, 1, n);\nint mid = 0, op, x;\nwhile(m--)\n{\nscanf(\"%d %d\", &amp;op, &amp;x);\nif(op == 0)\n{\nif(x &lt;= mid)\ncontinue;\none_to_zero(1, 1, n, x - mid);\nmid = x;\n}\nelse\n{\nif(x &gt;= mid+1)\ncontinue;\nzero_to_one(1, 1, n, mid + 1 - x);\nmid = x-1;\n}\n}\nvector&lt;int&gt; zero, one;\nfor(int i = 1; i &lt;= n; i++)\nask(1, 1, n, i) ? one.push_back(i) : zero.push_back(i);\nfor(int i = zero.size()-1; i &gt;= 0; i--)\nprintf(\"%d \", zero[i]);\nfor(auto x : one)\nprintf(\"%d \", x);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.ArrayList;\nimport java.util.Scanner;\n\nclass Node {\npublic int sum, lazy;\n};\n\npublic class Main {\n\nprivate static Node[] t;\n\nprivate static void build(int p, int beg, int end) {\nt[p] = new Node();\nt[p].lazy = -1;\nif (beg == end) {\nt[p].sum = 1;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid + 1, end);\nt[p].sum = t[lch].sum + t[rch].sum;\n}\n\nprivate static void pushdown(int p, int beg, int end) {\nif (t[p].lazy == -1)\nreturn;\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nt[lch].sum = (mid - beg + 1) * t[p].lazy;\nt[rch].sum = (end - mid) * t[p].lazy;\nt[lch].lazy = t[rch].lazy = t[p].lazy;\nt[p].lazy = -1;\n}\n\n// \u5c06[beg, end]\u533a\u95f4\u7684\u524dk\u4e2a0\u6539\u62101\nprivate static void zero_to_one(int p, int beg, int end, int k) {\nint cnt = end - beg + 1 - t[p].sum; // \u8ba1\u7b97[beg, end]\u6709\u591a\u5c11\u4e2a0\nif (cnt &lt;= k) // \u5982\u679c\u672c\u8eab\u4e0d\u8db3k\u4e2a\u5c31\u76f4\u63a5\u6279\u91cf\u4fee\u6539\n{\nt[p].sum = end - beg + 1; // \u5c06\u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u6539\u62101\nt[p].lazy = 1; // \u6253\u4e0a\u61d2\u6807\u8bb0\nreturn;\n}\n// \u5982\u679c0\u7684\u6570\u91cf\u5927\u4e8ek\u4e2a\npushdown(p, beg, end);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nint lcnt = mid - beg + 1 - t[lch].sum; // \u8ba1\u7b97\u5de6\u5b69\u5b50\u8fd8\u6709\u591a\u5c11\u4e2a0\nif (lcnt &lt; k) // \u5982\u679c\u5de6\u5b69\u5b50\u4e0d\u8db3k\u4e2a0\n{\nzero_to_one(lch, beg, mid, lcnt); // \u5de6\u5b69\u5b50\u5168\u6539\u62100\nzero_to_one(rch, mid + 1, end, k - lcnt);\n} else\nzero_to_one(lch, beg, mid, k); // \u5426\u5219\uff0c\u53ea\u9700\u8981\u5728\u5de6\u5b69\u5b50\u4e0a\u6539k\u4e2a\nt[p].sum = t[lch].sum + t[rch].sum;\n}\n\n// \u5c06[beg, end]\u533a\u95f4\u7684\u524dk\u4e2a1\u6539\u62100\nprivate static void one_to_zero(int p, int beg, int end, int k) {\nint cnt = t[p].sum; // \u8ba1\u7b97[beg, end]\u6709\u591a\u5c11\u4e2a1\nif (cnt &lt;= k) // \u5982\u679c\u672c\u8eab\u4e0d\u8db3k\u4e2a\u5c31\u76f4\u63a5\u6279\u91cf\u4fee\u6539\n{\nt[p].sum = 0; // \u5c06\u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u6539\u62100\nt[p].lazy = 0; // \u6253\u4e0a\u61d2\u6807\u8bb0\nreturn;\n}\n// \u5982\u679c0\u7684\u6570\u91cf\u5927\u4e8ek\u4e2a\npushdown(p, beg, end);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nint lcnt = t[lch].sum; // \u8ba1\u7b97\u5de6\u5b69\u5b50\u8fd8\u6709\u591a\u5c11\u4e2a1\nif (lcnt &lt; k) // \u5982\u679c\u5de6\u5b69\u5b50\u4e0d\u8db3k\u4e2a1\n{\none_to_zero(lch, beg, mid, lcnt); // \u5de6\u5b69\u5b50\u5168\u6539\u62100\none_to_zero(rch, mid + 1, end, k - lcnt);\n} else\none_to_zero(lch, beg, mid, k); // \u5426\u5219\uff0c\u53ea\u9700\u8981\u5728\u5de6\u5b69\u5b50\u4e0a\u6539k\u4e2a\nt[p].sum = t[lch].sum + t[rch].sum;\n}\n\nprivate static int ask(int p, int beg, int end, int pos) {\nif (beg == end)\nreturn t[p].sum;\npushdown(p, beg, end);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn pos &lt;= mid ? ask(lch, beg, mid, pos) : ask(rch, mid + 1, end, pos);\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint m = in.nextInt();\nt = new Node[n * 4];\nbuild(1, 1, n);\nint mid = 0, op, x;\nwhile (m-- &gt; 0) {\nop = in.nextInt();\nx = in.nextInt();\nif (op == 0) {\nif (x &lt;= mid)\ncontinue;\none_to_zero(1, 1, n, x - mid);\nmid = x;\n} else {\nif (x &gt;= mid + 1)\ncontinue;\nzero_to_one(1, 1, n, mid - x + 1);\nmid = x - 1;\n}\n}\nArrayList&lt;Integer&gt; zero = new ArrayList&lt;&gt;();\nArrayList&lt;Integer&gt; one = new ArrayList&lt;&gt;();\nfor (int i = 1; i &lt;= n; i++)\nif (ask(1, 1, n, i) == 1)\none.add(i);\nelse\nzero.add(i);\nfor (int i = zero.size() - 1; i &gt;= 0; i--)\nSystem.out.printf(\"%d \", zero.get(i));\nfor (int i = 0; i &lt; one.size(); i++)\nSystem.out.printf(\"%d \", one.get(i));\nin.close();\n}\n}\n</code></pre> <pre><code>class Node:\n    def __init__(self) -&gt; None:\n        self.sum = 0\n        self.lazy = -1\n\ndef build(p:int, beg:int, end:int) -&gt; Node:\n    if beg == end:\n        t[p].sum = 1\n        return\n    mid = (beg + end) // 2\n    lch, rch = p * 2, p * 2 + 1\n    build(lch, beg, mid)\n    build(rch, mid+1, end)\n    t[p].sum = t[lch].sum + t[rch].sum\n\ndef pushdown(p:int, beg:int, end:int) -&gt; Node:\n    if t[p].lazy == -1:\n        return\n    mid = (beg + end) // 2\n    lch, rch = p * 2, p * 2 + 1\n    t[lch].sum = (mid-beg+1) * t[p].lazy\n    t[rch].sum = (end-mid) * t[p].lazy\n    t[lch].lazy = t[rch].lazy = t[p].lazy\n    t[p].lazy = -1\n\n# \u5c06[beg, end]\u533a\u95f4\u7684\u524dk\u4e2a0\u6539\u62101\ndef zero_to_one(p:int, beg:int, end:int, k:int) -&gt; None:\n    cnt = end - beg + 1 - t[p].sum; # \u8ba1\u7b97[beg, end]\u6709\u591a\u5c11\u4e2a0\n    if(cnt &lt;= k): # \u5982\u679c\u672c\u8eab\u4e0d\u8db3k\u4e2a\u5c31\u76f4\u63a5\u6279\u91cf\u4fee\u6539\n        t[p].sum = end - beg + 1 # \u5c06\u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u6539\u62101\n        t[p].lazy = 1 # \u6253\u4e0a\u61d2\u6807\u8bb0\n        return\n    # \u5982\u679c0\u7684\u6570\u91cf\u5927\u4e8ek\u4e2a\n    pushdown(p, beg, end)\n    mid = (beg + end) // 2\n    lch, rch = p * 2, p * 2 + 1\n    lcnt = mid - beg + 1 - t[lch].sum # \u8ba1\u7b97\u5de6\u5b69\u5b50\u8fd8\u6709\u591a\u5c11\u4e2a0\n    if(lcnt &lt; k): # \u5982\u679c\u5de6\u5b69\u5b50\u4e0d\u8db3k\u4e2a0\n        zero_to_one(lch, beg, mid, lcnt) # \u5de6\u5b69\u5b50\u5168\u6539\u62100\n        zero_to_one(rch, mid+1, end, k-lcnt)\n    else:\n        zero_to_one(lch, beg, mid, k) # \u5426\u5219\uff0c\u53ea\u9700\u8981\u5728\u5de6\u5b69\u5b50\u4e0a\u6539k\u4e2a\n    t[p].sum = t[lch].sum + t[rch].sum\n\n# \u5c06 [beg, end]\u533a\u95f4\u7684\u524dk\u4e2a1\u6539\u62100\ndef one_to_zero(p:int, beg:int, end:int, k:int) -&gt; None:\n    cnt = t[p].sum # \u8ba1\u7b97[beg, end]\u6709\u591a\u5c11\u4e2a1\n    if(cnt &lt;= k): # \u5982\u679c\u672c\u8eab\u4e0d\u8db3k\u4e2a\u5c31\u76f4\u63a5\u6279\u91cf\u4fee\u6539\n        t[p].sum = 0 # \u5c06\u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u6539\u62100\n        t[p].lazy = 0 # \u6253\u4e0a\u61d2\u6807\u8bb0\n        return\n    # \u5982\u679c0\u7684\u6570\u91cf\u5927\u4e8ek\u4e2a\n    pushdown(p, beg, end)\n    mid = (beg + end) // 2\n    lch, rch = p * 2, p * 2 + 1\n    lcnt = t[lch].sum # \u8ba1\u7b97\u5de6\u5b69\u5b50\u8fd8\u6709\u591a\u5c11\u4e2a1\n    if(lcnt &lt; k): # \u5982\u679c\u5de6\u5b69\u5b50\u4e0d\u8db3k\u4e2a1\n        one_to_zero(lch, beg, mid, lcnt) # \u5de6\u5b69\u5b50\u5168\u6539\u62100\n        one_to_zero(rch, mid+1, end, k-lcnt)\n    else:\n        one_to_zero(lch, beg, mid, k) # \u5426\u5219\uff0c\u53ea\u9700\u8981\u5728\u5de6\u5b69\u5b50\u4e0a\u6539k\u4e2a\n    t[p].sum = t[lch].sum + t[rch].sum\n\ndef ask(p:int, beg:int, end:int, pos:int) -&gt; int:\n    if beg == end:\n        return t[p].sum\n    pushdown(p, beg, end)\n    mid = (beg + end) // 2\n    lch, rch = p * 2, p * 2 + 1\n    if pos &lt;= mid:\n        return ask(lch, beg, mid, pos)\n    else:\n        return ask(rch, mid+1, end, pos)\n\nn, m = map(int, input().split())\nt = [Node() for _ in range(4*n)]\nbuild(1, 1, n)\nmid = 1\nfor _ in range(m):\n    op, x = map(int, input().split())\n    if op == 0:\n        if x &lt;= mid - 1:\n            continue\n        one_to_zero(1, 1, n, x - mid + 1)\n        mid = x + 1\n    else:\n        if x &gt;= mid:\n            continue\n        zero_to_one(1, 1, n, mid - x)\n        mid = x\nzero, one = [], []\nfor i in range(1, n+1):\n    if ask(1, 1, n, i):\n        one.append(i)\n    else:\n        zero.append(i)\nzero.reverse()\nans = zero + one\nfor i in range(n):\n    print(ans[i], end=' ')\n</code></pre>"},{"location":"algorithm/20240325/#_4","title":"\u5b66\u4e60\u8d44\u6599","text":"<ul> <li> <p>\u7ebf\u6bb5\u6811\u6a21\u677f\uff1aP3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1 - \u6d1b\u8c37</p> </li> <li> <p>\u5982\u679c\u4e0d\u4f1a\u7ebf\u6bb5\u6811\uff0c\u70b9\u51fb \u7ebf\u6bb5\u6811 - OI Wiki (oi-wiki.org) \u8fdb\u884c\u5b66\u4e60\u3002</p> </li> <li>\u4e5f\u53ef\u4ee5\u770b\u770b \u8fd9\u4e2a\u89c6\u9891\u3002</li> </ul>"},{"location":"algorithm/20240325/#on","title":"\u79bb\u7ebf \\(O(n)\\) \u505a\u6cd5","text":"<p>\u8003\u8651\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u5047\u8bbe\u5f53\u524d\u7684\u5206\u754c\u7ebf\u662f \\(mid\\)\u3002 </li> <li>\u964d\u5e8f\u64cd\u4f5c \\([1, x]\\)\uff0c\u5176\u4e2d \\(x&gt;mid\\)\uff0c\u64cd\u4f5c\u540e\uff0c\\(b\\) \u6570\u7ec4\u589e\u52a0 \\(x-mid\\) \u4e2a \\(0\\)\uff0c\\(mid=x\\)\u3002</li> <li>\u5347\u5e8f\u64cd\u4f5c \\([y, n]\\)\uff0c\u5176\u4e2d \\(y\u2264x\\)\uff0c\u64cd\u4f5c\u540e\uff0c\\(b\\) \u6570\u7ec4\u51cf\u5c11 \\(x-y+1\\) \u4e2a \\(0\\)\uff0c\\(mid=y-1\\)\u3002</li> <li> <p>\u964d\u5e8f\u64cd\u4f5c \\([1, z]\\)\uff0c\u5176\u4e2d \\(z&gt;y-1\\)\uff0c\u64cd\u4f5c\u540e\uff0c\\(b\\) \u6570\u7ec4\u589e\u52a0 \\(z-y+1\\) \u4e2a \\(0\\)\uff0c\\(mid=z\\)\u3002</p> </li> <li> <p>\u4e00\u6765\u4e00\u56de\uff0c\u603b\u5171\u589e\u52a0 \\(x-mid-(x-y+1)+z-y+1=z-mid\\) \u4e2a \\(0\\)\u3002</p> </li> <li> <p>\u5982\u679c \\(z&gt;x\\)\u200b\uff0c\u540c\u6837\u662f\u589e\u52a0\uff0c\u7b2c 4 \u6b65\u6bd4\u7b2c 2 \u6b65\u589e\u52a0\u7684\u66f4\u591a\uff0c\u76f8\u5f53\u4e8e\u7b2c 2 \u6b65\u548c\u7b2c 3 \u6b65\u6ca1\u505a\u8fc7\u3002</p> </li> </ol> <p>\u6709\u6548\u64cd\u4f5c\u7684\u6027\u8d28\uff1a</p> <ul> <li> <p>\u5347\u5e8f\u964d\u5e8f\u4ea4\u66ff\u64cd\u4f5c\u3002</p> </li> <li> <p>\u964d\u5e8f\u4e0d\u4f1a\u51fa\u73b0 \\(z&gt;x\\) \u7684\u60c5\u51b5\uff0c\u5347\u5e8f\u4e0d\u4f1a\u51fa\u73b0 \\(z&lt;x\\) \u7684\u60c5\u51b5\u3002</p> </li> </ul> <p>\u8003\u8651\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u5047\u8bbe\u521d\u59cb\u5e8f\u5217 \\(a=(1,2, \u22ef,n)\\)\u3002</li> <li>\u964d\u5e8f\u64cd\u4f5c \\([1, x]\\)\uff0c\u7531\u4e8e\u4e0b\u4e00\u6b21\u964d\u5e8f\u4e0d\u4f1a\u51fa\u73b0 \\(z&gt;x\\)\uff0c\u6240\u4ee5 \\([x+1, n]\\) \u7684\u90e8\u5206\u56fa\u5b9a\u3002</li> <li>\u5347\u5e8f\u64cd\u4f5c \\([x, n]\\)\uff0c\u7531\u4e8e\u4e0b\u4e00\u6b21\u5347\u5e8f\u4e0d\u4f1a\u51fa\u73b0 \\(z&lt;x\\)\uff0c\u6240\u4ee5 \\([1, x-1]\\) \u7684\u90e8\u5206\u56fa\u5b9a\u3002 </li> </ol>"},{"location":"algorithm/20240325/#_5","title":"\u53c2\u8003\u4ee3\u7801","text":"\u53c2\u8003\u4ee3\u7801 C++JavaPython <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nstruct Node\n{\nint op, x;\n};\n\nint main()\n{\nint n, m, op, z;\ncin &gt;&gt; n &gt;&gt; m;\nvector&lt;Node&gt; q;\nq.push_back({1, 1}); // \u521d\u59cb\u65f6\u90fd\u662f\u5347\u5e8f\nwhile(m--)\n{\nscanf(\"%d %d\", &amp;op, &amp;z);\nif(op == 0)\n{\nif(!q.empty() &amp;&amp; q.back().op == 0)\n{\nz = max(z, q.back().x); // \u540c\u79cd\u64cd\u4f5c\u4fdd\u7559\u66f4\u957f\nq.pop_back();\n}\nwhile(q.size() &gt;= 2 &amp;&amp; z &gt;= q[q.size()-2].x)\n{\n// \u964d\u5e8f\u4e0d\u80fd\u51fa\u73b0 z &gt;= x\nq.pop_back();\nq.pop_back(); }\nq.push_back({op, z});\n}\nelse\n{\nif(!q.empty() &amp;&amp; q.back().op == 1)\n{\nz = min(z, q.back().x); // \u540c\u79cd\u64cd\u4f5c\u4fdd\u7559\u66f4\u957f\nq.pop_back();\n}\nwhile(q.size() &gt;= 2 &amp;&amp; z &lt;= q[q.size()-2].x)\n{\n// \u5347\u5e8f\u4e0d\u80fd\u51fa\u73b0 z &lt;= x\nq.pop_back();\nq.pop_back(); }\nq.push_back({op, z});\n}\n}\nvector&lt;int&gt; ans(n+1);\nint num = n, l = 1, r = n;\nfor(auto &amp;p : q)\n{\nint op = p.op, x = p.x;\nif(op == 0) // \u540e\u7f00\u88ab\u56fa\u5b9a\nwhile(l &lt;= r &amp;&amp; r &gt; x)\nans[r--] = num--;\nelse        // \u524d\u7f00\u88ab\u56fa\u5b9a\nwhile(l &lt;= r &amp;&amp; l &lt; x)\nans[l++] = num--;\nif(l &gt; r)\nbreak;\n}\n// \u5904\u7406\u6700\u540e\u5269\u4e0b\u7684[l, r]\nif(q.back().op == 0)\nwhile(l &lt;= r)\nans[l++] = num--;\nelse\nwhile(l &lt;= r)\nans[r--] = num--;\nfor(int i = 1; i &lt;= n; i++)\nprintf(\"%d \", ans[i]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.ArrayList;\nimport java.util.Scanner;\n\nclass Node {\npublic int op, x;\n\npublic Node(int _o, int _x) {\nop = _o;\nx = _x;\n}\n};\n\npublic class Main {\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint m = in.nextInt();\nint op, z;\nArrayList&lt;Node&gt; q = new ArrayList&lt;&gt;();\nq.add(new Node(1, 1)); // \u521d\u59cb\u65f6\u90fd\u662f\u5347\u5e8f\nwhile (m-- &gt; 0) {\nop = in.nextInt();\nz = in.nextInt();\nif (op == 0) {\nif (!q.isEmpty() &amp;&amp; q.get(q.size() - 1).op == 0) {\nz = Math.max(z, q.get(q.size() - 1).x); // \u540c\u79cd\u64cd\u4f5c\u4fdd\u7559\u66f4\u957f\nq.remove(q.size() - 1);\n}\nwhile (q.size() &gt;= 2 &amp;&amp; z &gt;= q.get(q.size() - 2).x) {\n// \u964d\u5e8f\u4e0d\u80fd\u51fa\u73b0 z &gt;= x\nq.remove(q.size() - 1);\nq.remove(q.size() - 1);\n}\nq.add(new Node(op, z));\n} else {\nif (!q.isEmpty() &amp;&amp; q.get(q.size() - 1).op == 1) {\nz = Math.min(z, q.get(q.size() - 1).x); // \u540c\u79cd\u64cd\u4f5c\u4fdd\u7559\u66f4\u957f\nq.remove(q.size() - 1);\n}\nwhile (q.size() &gt;= 2 &amp;&amp; z &lt;= q.get(q.size() - 2).x) {\n// \u5347\u5e8f\u4e0d\u80fd\u51fa\u73b0 z &lt;= x\nq.remove(q.size() - 1);\nq.remove(q.size() - 1);\n}\nq.add(new Node(op, z));\n}\n}\nint[] ans = new int[n + 1];\nint num = n, l = 1, r = n;\nfor (Node p : q) {\nop = p.op;\nint x = p.x;\nif (op == 0) // \u540e\u7f00\u88ab\u56fa\u5b9a\nwhile (l &lt;= r &amp;&amp; r &gt; x)\nans[r--] = num--;\nelse // \u524d\u7f00\u88ab\u56fa\u5b9a\nwhile (l &lt;= r &amp;&amp; l &lt; x)\nans[l++] = num--;\nif (l &gt; r)\nbreak;\n}\n// \u5904\u7406\u6700\u540e\u5269\u4e0b\u7684[l, r]\nif (q.get(q.size() - 1).op == 0)\nwhile (l &lt;= r)\nans[l++] = num--;\nelse\nwhile (l &lt;= r)\nans[r--] = num--;\nfor (int i = 1; i &lt;= n; i++)\nSystem.out.printf(\"%d \", ans[i]);\nin.close();\n}\n}\n</code></pre> <pre><code>from typing import List\n\n\nclass Node:\n    def __init__(self, op:int, x:int) -&gt; None:\n        self.op = op\n        self.x = x\n\nn, m = map(int, input().split())\nq = []\nq.append(Node(1, 1)) # \u521d\u59cb\u65f6\u90fd\u662f\u5347\u5e8f\nfor _ in range(m):\n    op, z = map(int, input().split())\n    if op == 0:\n        if q and q[-1].op == 0:\n            z = max(z, q[-1].x)\n            q.pop()\n        while len(q) &gt;= 2 and z &gt;= q[-2].x:\n            # \u964d\u5e8f\u4e0d\u80fd\u51fa\u73b0 z &gt;= x\n            q.pop()\n            q.pop()\n        q.append(Node(op, z))\n    else:\n        if q and q[-1].op == 1:\n            z = min(z, q[-1].x)\n            q.pop()\n        while len(q) &gt;= 2 and z &lt;= q[-2].x:\n            # \u5347\u5e8f\u4e0d\u80fd\u51fa\u73b0 z &lt;= x\n            q.pop()\n            q.pop()\n        q.append(Node(op, z))\n\nans = [0] * (n+1)\nnum, l, r = n, 1, n\nfor p in q:\n    op = p.op\n    x = p.x\n    if op == 0: # \u540e\u7f00\u88ab\u56fa\u5b9a\n        while l &lt;= r and r &gt; x:\n            ans[r] = num\n            r -= 1\n            num -= 1\n    else:\n        while l &lt;= r and l &lt; x:\n            ans[l] = num\n            l += 1\n            num -= 1\n    if l &gt; r:\n        break\n# \u5904\u7406\u6700\u540e\u5269\u4e0b\u7684 [l, r]\nif q[-1].op == 0:\n    while l &lt;= r:\n        ans[l] = num\n        l += 1\n        num -= 1\nelse:\n    while l &lt;= r:\n        ans[r] = num\n        r -= 1\n        num -= 1\n\nfor i in range(1, n+1):\n    print(ans[i], end = ' ')\n</code></pre>"},{"location":"algorithm/note/","title":"\u7b14\u8bb0","text":"<p>\u8bb0\u5f55\u4e00\u4e9b\u6211\u7ecf\u5e38\u5fd8\u7684\u77e5\u8bc6\u70b9</p>"},{"location":"algorithm/note/#_1","title":"\u4f4d\u8fd0\u7b97","text":""},{"location":"algorithm/note/#_2","title":"\u679a\u4e3e\u7279\u5b9a\u96c6\u5408\u7684\u5b50\u96c6","text":"<ul> <li>\u8bbe\u67d0\u4e2a\u7279\u5b9a\u7684 \\(sup = (01101101)_2\\)\uff0c \u679a\u4e3e\u51fa \\(sup\\) \u7684\u6240\u6709\u5b50\u96c6\u3002</li> </ul> <p>\u4ece\u540e\u5f80\u524d\u679a\u4e3e\uff0c\u7528 \\(sup\\) \u4f5c\u4e3a\u63a9\u7801\u3002</p> <pre><code>int s = sup;\ndo {\n... // \u5bf9\u5b50\u96c6\u7684\u5904\u7406\ns = (s - 1) &amp; sup;\n} while(s != sup);\n</code></pre>"},{"location":"algorithm/note/#k","title":"\u679a\u4e3e\u5927\u5c0f\u4e3a \\(k\\) \u7684\u5b50\u96c6","text":"<ul> <li>\u679a\u4e3e\u51fa\u6240\u6709 \\(n = 7\\)\uff0c \\(k = 4\\) \u7684\u5b50\u96c6\u3002</li> </ul> \u53d8\u91cf \u503c \u542b\u4e49 <code>s</code> \\(0101110\\) \u5f53\u524d\u679a\u4e3e\u51fa\u6765\u7684\u96c6\u5408 <code>lb = s &amp; -s</code> \\(0000010\\) <code>s</code> \u7684 lowbit <code>left = s + lb</code> \\(0110000\\) \u5c06 <code>s</code> \u6700\u53f3\u7aef\u8fde\u7eed\u7684 \\(1\\) \u533a\u95f4\u90fd\u53d8\u6210 \\(0\\)\uff0c\u7136\u540e\u5728\u533a\u95f4\u5de6\u8fb9\u8865\u4e00\u4e2a \\(1\\) <code>right = (s &amp; ~left) / lb &gt;&gt; 1</code> \\(0000011\\) \u5c06 <code>s</code> \u6700\u53f3\u7aef\u8fde\u7eed\u7684 \\(1\\) \u533a\u95f4\u4e0d\u65ad\u53f3\u79fb\uff0c\u76f4\u5230 \\(1\\) \u7684\u6570\u91cf\u51cf\u5c11\u4e00\u4e2a <code>s = left | right</code> \\(0110011\\) \u4e0b\u4e00\u4e2a\u679a\u4e3e\u51fa\u6765\u7684\u96c6\u5408 <pre><code>for(int s = (1 &lt;&lt; k) - 1; s &lt; 1 &lt;&lt; n; )\n{\n... // \u5bf9\u5b50\u96c6\u7684\u5904\u7406\nint lb = s &amp; -s, left = s + lb, right = (s &amp; ~left) / lb &gt;&gt; 1;\ns = left | right;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/","title":"ABC308(A-G)","text":"<p>AtCoder Beginner Contest 308 - AtCoder</p> <p>\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u573a\uff0c\u53ea\u6709G\u9898\u7684\u5c0f\u7ed3\u8bba\u548c\u8fb9\u754c\u5904\u7406\u82b1\u4e86\u4e00\u70b9\u65f6\u95f4\u3002</p>"},{"location":"algorithm/AtCoder/abc308/#a-new-scheme","title":"A - New Scheme","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(8\\) \u7684\u5e8f\u5217 \\(A = (A_1,A_2,...,A_8)\\) \uff0c\u5224\u65ad\u5e8f\u5217\u662f\u5426\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6</p> <ul> <li>\u5e8f\u5217\u662f\u5426\u5355\u8c03\u9012\u589e\uff0c\u5373\u662f\u5426\u6ee1\u8db3 \\(A_1 \u2264 A_2 \u2264\\  ... \u2264 A_8\\)</li> <li>\u5e8f\u5217\u7684\u6bcf\u4e2a\u503c\u662f\u5426\u5728 \\([100, 675]\\) \u7684\u8303\u56f4\u5185\u3002</li> <li>\u5e8f\u5217\u7684\u6bcf\u4e2a\u503c\u662f\u5426\u662f \\(25\\) \u7684\u500d\u6570\u3002</li> </ul> <p>\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\u5219\u8f93\u51fa <code>Yes</code>\uff0c\u5426\u5219\u8f93\u51fa <code>No</code></p> <p>\u76f4\u63a5\u6a21\u62df</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint a[10], pre = 0;\nbool f = 1;\nfor(int i = 0; i &lt; 8; i++)\n{\ncin &gt;&gt; a[i];\nif(a[i] &lt; pre || a[i] &lt; 100 || a[i] &gt; 675 || a[i] % 25)\nf = 0;\npre = a[i];\n}\nif(f)\nputs(\"Yes\");\nelse\nputs(\"No\");\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#b-default-price","title":"B - Default Price","text":"<p>\u4f60\u5728\u9910\u5385\u70b9\u4e86 \\(N\\) \u4e2a\u83dc\uff0c\u6bcf\u4e2a\u83dc\u7684\u540d\u5b57\u7528\u5b57\u7b26\u4e32 \\(C_i\\) \u8868\u793a\u3002\u83dc\u5355\u4e2d\u6709 \\(M\\) \u79cd\u83dc\uff0c\u7b2c \\(i\\) \u79cd\u83dc\u7684\u540d\u5b57\u662f \\(D_i\\) \uff0c\u4ef7\u683c\u662f \\(P_i\\) \uff0c\u6709\u4e00\u4e9b\u83dc\u7684\u540d\u5b57\u6ca1\u6709\u5728\u83dc\u5355\u4e2d\uff0c\u4ef7\u683c\u662f \\(P_0\\) \uff0c\u95ee\uff1a\u4f60\u9700\u8981\u652f\u4ed8\u591a\u5c11\u94b1\u3002</p> <p>\u54c8\u5e0c\u8868\u5373\u53ef</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;unordered_map&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, m, p0, x;\ncin &gt;&gt; n &gt;&gt; m;\nvector&lt;string&gt; a(n), b(m);\nfor(int i = 0; i &lt; n; i++)\ncin &gt;&gt; a[i];\nfor(int i = 0; i &lt; m; i++)\ncin &gt;&gt; b[i];\ncin &gt;&gt; p0;\nunordered_map&lt;string, int&gt; p;\nfor(int i = 0; i &lt; m; i++)\n{\ncin &gt;&gt; x;\np[b[i]] = x;\n}\nint sum = 0;\nfor(int i = 0; i &lt; n; i++)\n{\nif(p.count(a[i]))\nsum += p[a[i]];\nelse\nsum += p0;\n}\ncout &lt;&lt; sum &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#c-standings","title":"C - Standings","text":"<p>\u6709 \\(N\\) \u4e2a\u4eba\uff0c\u6bcf\u4eba\u6709 \\(A_i\\) \u548c \\(B_i\\) \u5c5e\u6027\uff0c\u6309\u7167\u6bcf\u4e2a\u4eba\u7684 \\(\\large \\frac{A_i}{A_i+B_i}\\) \u964d\u5e8f\u6392\u5e8f\uff0c\u5982\u679c \\(\\large \\frac{A_i}{A_i+B_i}\\) \u76f8\u540c\u5219\u6309\u7167\u7f16\u53f7\u5347\u5e8f\u6392\u5217\uff0c\u8f93\u51fa\u6392\u5217\u540e\u7684\u7f16\u53f7\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\n\nint n;\n\nstruct Node {\nint id;\nLL a, s;\nbool operator &gt; (const Node &amp;y) const\n{\nLL m1 = a * y.s, m2 = y.a * s;\nif(m1 != m2)\nreturn m1 &gt; m2;\nreturn id &lt; y.id;\n}\n}p[maxn];\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 0; i &lt; n; i++)\n{\np[i].id = i + 1;\ncin &gt;&gt; p[i].a &gt;&gt; p[i].s;\np[i].s += p[i].a;\n}\nsort(p, p+n, greater&lt;Node&gt;());\nfor(int i = 0; i &lt; n; i++)\ncout &lt;&lt; p[i].id &lt;&lt; ' ';\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#d-snuke-maze","title":"D - Snuke Maze","text":"<p>\u6709\u4e00\u4e2a \\(H \\times M\\) \u7684\u4e8c\u7ef4\u5730\u56fe\uff0c\u5730\u56fe\u4e0a\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u3002\u4f60\u53ef\u4ee5\u8fdb\u884c <code>\u4e0a\u4e0b\u5de6\u53f3</code> \u7684\u79fb\u52a8\uff0c\u5728\u79fb\u52a8\u65f6\uff0c\u9700\u9075\u5faa <code>snuke</code> \u7684\u987a\u5e8f\uff0c\u5373\uff1a\u5982\u679c\u4f60\u76ee\u524d\u7684\u6240\u5728\u5b57\u7b26\u662f <code>s</code>\uff0c\u4e0b\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f <code>n</code>\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff08\u53ef\u4ee5\u5faa\u73af\uff0c\u5373 <code>e</code> \u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u662f <code>s</code>\uff09\u3002</p> <p>\u521d\u59cb\u65f6\u4f60\u7684\u4f4d\u7f6e\u662f \\((1, 1)\\) \uff0c\u95ee\uff1a\u80fd\u4e0d\u80fd\u8d70\u5230 \\((H, M)\\) \uff0c\u5982\u679c\u80fd\u5219\u8f93\u51fa <code>Yes</code> \u5426\u5219\u8f93\u51fa <code>No</code></p> <p>\u76f4\u63a5dfs</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 510;\nchar g[maxn][maxn];\nbool vis[maxn][maxn];\nint n, m;\nchar ne[300];\n\nint dr[] = {-1, 1, 0, 0};\nint dc[] = {0, 0, -1, 1};\n\nbool inlim(int r, int c)\n{return r &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; c &gt;= 0 &amp;&amp; c &lt; m;}\n\nvoid dfs(int r, int c)\n{\nvis[r][c] = 1;\nchar nch = ne[g[r][c]];\nfor(int i = 0; i &lt; 4 &amp;&amp; !vis[n-1][m-1]; i++)\n{\nint nr = r + dr[i], nc = c + dc[i];\nif(!inlim(nr, nc))\ncontinue;\nif(!vis[nr][nc] &amp;&amp; g[nr][nc] == nch)\ndfs(nr, nc);\n}\n}\n\nint main()\n{\nne['s'] = 'n';\nne['n'] = 'u';\nne['u'] = 'k';\nne['k'] = 'e';\nne['e'] = 's';\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 0; i &lt; n; i++)\ncin &gt;&gt; g[i];\ndfs(0, 0);\nif(vis[n-1][m-1])\nputs(\"Yes\");\nelse\nputs(\"No\");\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#e-mex","title":"E - MEX","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5e8f\u5217 \\(A\\) \uff0c\\(A\\) \u4e2d\u7684\u503c\u662f \\(0\\) \uff0c\\(1\\) \uff0c\\(2\\) \uff0c\u540c\u65f6\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5b57\u7b26\u4e32 \\(S\\) \uff0c\\(S\\) \u4e2d\u7684\u5b57\u7b26\u662f \\(M\\) \uff0c\\(E\\) \uff0c\\(X\\) </p> <p>\u6c42\u51fa\u6240\u6709\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u4e09\u5143\u7ec4 \\(mex(A_i, A_j, A_k)\\) \u503c\u7684\u548c\uff0c</p> <ul> <li>\\(1 \u2264 i &lt; j &lt; k \u2264 N\\)</li> <li>\\(S_iS_jS_k=\\) <code>MEX</code></li> </ul> <p>\\(mex(A_i, A_j, A_k)\\) \u8868\u793a\u6ca1\u6709\u51fa\u73b0\u5728 \\((A_i, A_j, A_k)\\) \u4e2d\u7684\u6700\u5c0f\u975e\u8d1f\u6574\u6570\u503c\u3002</p> <p>\u5206<code>0</code>, <code>1</code>, <code>2</code>\u5904\u7406\u4e00\u4e2a\u524d\u7f00\u548c\u8bb0\u5f55 <code>M</code> \u7684\u6570\u91cf\uff0c<code>M[i][0]</code> \u8868\u793a\u524d <code>i</code> \u4e2a\u5b57\u7b26\u4e2d\u5bf9\u5e94\u6570\u5b57\u662f <code>0</code> \u7684\u5b57\u7b26 <code>M</code> \u7684\u6570\u91cf\uff0c\u5176\u4f59\u540c\u7406\uff0c\u518d\u5904\u7406\u51fa <code>X</code> \u7684\u540e\u7f00\u548c\u3002\u7136\u540e\u679a\u4e3e\u4e2d\u95f4\u7684 <code>E</code> \uff0c\u5206\u60c5\u51b5\u7d2f\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint mex[3][3][3], n, a[maxn], M[maxn][3], X[maxn][3];\nchar s[maxn];\n\nint main()\n{\nfor(int i = 0; i &lt; 3; i++)\nfor(int j = 0; j &lt; 3; j++)\nfor(int k = 0; k &lt; 3; k++)\nfor(int x = 0; x &lt;= 3; x++)\nif(x != i &amp;&amp; x != j &amp;&amp; x != k)\n{\nmex[i][j][k] = x;\nbreak;\n}\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]);\nscanf(\"%s\", s+1);\nfor(int i = 1; i &lt;= n; i++)\n{\nfor(int j = 0; j &lt; 3; j++)\nM[i][j] = M[i-1][j];\nif(s[i] == 'M')\nM[i][a[i]]++;\n}\nfor(int i = n; i; i--)\n{\nfor(int j = 0; j &lt; 3; j++)\nX[i][j] = X[i+1][j];\nif(s[i] == 'X')\nX[i][a[i]]++;\n}\nLL ans = 0;\nfor(int i = 1; i &lt;= n; i++)\n{\nif(s[i] == 'E')\n{\nint y = a[i];\nfor(int x = 0; x &lt; 3; x++)\nfor(int z = 0; z &lt; 3; z++)\nans += (LL)mex[x][y][z] * M[i][x] * X[i][z];\n}\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#f-vouchers","title":"F - Vouchers","text":"<p>\u6709 \\(N\\) \u4e2a\u5546\u54c1\uff0c\u7b2c \\(i\\) \u4e2a\u5546\u54c1\u7684\u4ef7\u683c\u662f \\(P_i\\) \u5143\u3002\u6709 \\(M\\) \u5f20\u4f18\u60e0\u5238\uff0c\u7b2c \\(i\\) \u5f20\u4f18\u60e0\u5238\u662f\u6ee1 \\(L_i\\) \u51cf \\(D_i\\) \u5143\u7684\u3002\u6bcf\u4e00\u4e2a\u5546\u54c1\u53ea\u80fd\u7528\u4e00\u5f20\u4f18\u60e0\u5238\uff0c\u6bcf\u4e00\u5f20\u4f18\u60e0\u5238\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u4e14\u53ea\u80fd\u5bf9\u4e00\u4e2a\u5546\u54c1\u4f7f\u7528\u3002\u95ee\uff1a\u5c06\u8fd9 \\(N\\) \u4e2a\u5546\u54c1\u5168\u90e8\u4e70\u4e0b\uff0c\u6700\u5c11\u9700\u8981\u82b1\u591a\u5c11\u94b1\uff1f</p> <p>\u8d2a\u5fc3\uff0c\u5c06\u5546\u54c1\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u4f18\u60e0\u5238\u6309\u7167 \\(L_i\\) \u6392\u5e8f\uff0c\u7528\u4e00\u4e2a\u5927\u9876\u5806\u6309\u7167 \\(D\\) \u7684\u503c\u7ef4\u62a4\u5f53\u524d\u53ef\u7528\u7684\u4f18\u60e0\u5238\uff0c\u4ece\u5c0f\u5230\u5927\u626b\u63cf\u5546\u54c1\uff0c\u6bcf\u6b21\u8d2d\u4e70\u5546\u54c1\u65f6\u5f39\u51fa\u4f18\u60e0\u529b\u5ea6\u6700\u5927\u7684\u4f18\u60e0\u5238\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(NlogN + MlogM)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint p[maxn], n, m;\n\nstruct Node{\nint l, d;\nbool operator &lt; (const Node &amp;y) const\n{return l &lt; y.l;}\n}c[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%d\", &amp;p[i]);\nfor(int i = 0; i &lt; m; i++)\nscanf(\"%d\", &amp;c[i].l);\nfor(int i = 0; i &lt; m; i++)\nscanf(\"%d\", &amp;c[i].d);\nsort(p, p+n);\nsort(c, c+m);\npriority_queue&lt;int&gt; heap;\nLL sum = 0;\nfor(int i = 0, j = 0; i &lt; n; i++)\n{\nwhile(j &lt; n &amp;&amp; c[j].l &lt;= p[i])\nheap.push(c[j++].d);\nif(!heap.empty())\n{\np[i] -= heap.top();\nheap.pop();\n}\nsum += p[i];\n}\ncout &lt;&lt; sum &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#g-minimum-xor-pair-query","title":"G - Minimum Xor Pair Query","text":"<p>\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u6709\u4e09\u79cd\u64cd\u4f5c:</p> <ul> <li><code>1 x</code> \uff1a\u4ece\u96c6\u5408\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6570 <code>x</code></li> <li><code>2 x</code> \uff1a\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u4e00\u4e2a\u6570 <code>x</code></li> <li><code>3</code> \uff1a\u67e5\u8be2\u96c6\u5408\u4e2d\u6700\u5c0f\u7684\u5f02\u6216\u70b9\u5bf9\u7684\u503c\u3002</li> </ul> <p>\u7ed3\u8bba\u9898\uff1a\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684\u5f02\u6216\u70b9\u5bf9\uff0c\u4e00\u5b9a\u6765\u81ea\u4e8e\u5c06\u6570\u7ec4\u6392\u5e8f\u540e\u67d0\u4e00\u5bf9\u76f8\u90bb\u7684\u6570\u3002</p> <p>\u8bc1\u660e\u5982\u4e0b\uff1a\u8003\u8651\u4e09\u4e2a\u6570\u7684\u60c5\u51b5 \\(x \u2264 y \u2264 z\\) \uff0c\u53ea\u9700\u8981\u8bc1\u660e \\(min(x \\oplus y, y \\oplus z) &lt; x \\oplus z\\)</p> <p>\u5047\u8bbe \\(x\\) \u548c \\(z\\) \u7684\u6700\u9ad8\u7684\u4e0d\u540c\u4f4d\u662f\u7b2c \\(k\\) \u4f4d\uff08\u4ece\u53f3\u5f00\u59cb\u7b97\uff0c\u53f3\u8fb9\u662f\u7b2c \\(0\\) \u4f4d\uff09\uff0c\u7531\u4e8e \\(x \u2264 z\\) \uff0c\u56e0\u6b64 \\(z\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(1\\) \uff0c\\(x\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(0\\) \uff0c\u6b64\u65f6\u6709 \\(x \\oplus z \u2265 2^{k}\\)</p> <p>\u5bf9\u4e8e \\(y\\) \u7684\u7b2c \\(k+1\\) \u4f4d\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0c\\(y\\) \u7684\u5206\u5e03\u60c5\u51b5\u4e00\u5b9a\u4e0e \\(x\\) \u548c \\(z\\) \u7684\u60c5\u51b5\u76f8\u540c\uff08\u5426\u5219\u5c31\u4e0e \\(x \u2264 y \u2264 z\\) \u77db\u76fe\uff09\u3002</p> <p>\u8003\u8651 \\(y\\) \u7684\u7b2c \\(k\\) \u4f4d\uff1a</p> <ul> <li>\u82e5 \\(y\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(0\\) \uff0c\u5219\u6709 \\(x \\oplus y &lt; 2^{k}\\)</li> <li>\u82e5 \\(y\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(1\\) \uff0c\u5219\u6709 \\(y \\oplus z &lt; 2^{k}\\)</li> </ul> <p>\u56e0\u6b64\u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u6709 \\(min(x \\oplus y, y \\oplus z) &lt; x \\oplus z\\) \uff0c\u8bc1\u6bd5\u3002</p> <p>\u7ef4\u62a4\u6709\u5e8f\u7684\u6570\u7ec4\uff0c\u5f53\u7136\u4f7f\u7528 <code>set</code> \u5b9e\u73b0\u4e86\uff0c\u5f53\u7136\u672c\u9898\u6709\u91cd\u590d\u503c\uff0c\u6240\u4ee5\u8981\u7528 <code>multiset</code>\uff0c\u5f00\u4e00\u4e2a <code>num</code> \u7ef4\u62a4\u6570\u5b57\u7684\u96c6\u5408\uff0c\u7136\u540e\u5f00\u4e00\u4e2a <code>val</code> \u7ef4\u62a4\u6240\u6709\u76f8\u90bb\u7684\u5f02\u6216\u503c\u3002\u5bf9\u4e8e\u4e09\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u6dfb\u52a0 <code>x</code> \uff1a\u5047\u8bbe\u6dfb\u52a0\u540e <code>num</code> \u4e2d\u6709 <code>pre \u2264 x \u2264 ne</code>\uff0c\u6dfb\u52a0\u540e <code>(pre, ne)</code> \u4e0d\u518d\u76f8\u90bb\uff0c\u5728 <code>val</code> \u4e2d\u5220\u6389 <code>(pre, ne)</code> \u7684\u5f02\u6216\u503c\uff0c\u540c\u65f6\u6dfb\u52a0 <code>(pre, x)</code> \u548c <code>(x, ne)</code> \u7684\u5f02\u6216\u503c\u3002</li> <li>\u5220\u9664 <code>x</code> \uff1a\u5047\u8bbe\u5220\u9664\u524d <code>num</code> \u4e2d\u6709 <code>pre \u2264 x \u2264 ne</code>\uff0c\u5220\u9664\u540e <code>(pre, x)</code> \u548c <code>(x, ne)</code> \u4e0d\u518d\u76f8\u90bb\uff0c\u5220\u9664\u5176\u5f02\u6216\u503c\uff0c\u540c\u65f6\u6dfb\u52a0 <code>(pre, ne)</code> \u7684\u5f02\u6216\u503c\u3002</li> <li>\u67e5\u8be2\uff1a\u7531\u4e8e <code>val</code> \u4e5f\u662f <code>multiset</code>\uff0c\u76f4\u63a5\u8f93\u51fa <code>begin</code> \u8fed\u4ee3\u5668\u503c\u3002</li> </ul> <p>\u4e09\u79cd\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f \\(O(logN)\\)\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(qlogN)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\nmultiset&lt;int&gt; num, val;\n\nint main()\n{\nint q, op, x;\nmultiset&lt;int&gt;::iterator pre, ne;\ncin &gt;&gt; q;\nwhile(q--)\n{\nscanf(\"%d\", &amp;op);\nif(op == 1)\n{\nscanf(\"%d\", &amp;x);\npre = ne = num.upper_bound(x);\nbool pf = 0, nf = 0;\nif(ne != num.end())\nval.insert(x ^ *ne), nf = 1;\nif(pre != num.begin())\n{\npre--;\nval.insert(*pre ^ x);\npf = 1;\n}\nif(pf &amp;&amp; nf)\nval.erase(val.find(*pre ^ *ne));\n\nnum.insert(x);\n}\nelse if(op == 2)\n{\nscanf(\"%d\", &amp;x);\npre = ne = num.find(x);\nbool pf = 0, nf = 0;\nif(pre != num.begin())\n{\npf = 1;\npre--;\nval.erase(val.find(*pre ^ x));\n}\nne++;\nif(ne != num.end())\n{\nval.erase(val.find(x ^ *ne));\nnf = 1;\n}\nif(pf &amp;&amp; nf)\nval.insert(*pre ^ *ne);\nnum.erase(num.find(x));\n}\nelse\ncout &lt;&lt; *val.begin() &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/","title":"ABC309(A-F)","text":"<p>Denso Create Programming Contest 2023 (AtCoder Beginner Contest 309) - AtCoder</p> <p>G\u7684 <code>\u5bb9\u65a5</code> + <code>dp</code> \u4e0d\u4f1a\u634f\uff0c\u9e3d\u4e86...</p>"},{"location":"algorithm/AtCoder/abc309/#a-nine","title":"A - Nine","text":"<p>\u6709\u4e00\u4e2a \\(3 \\times 3\\) \u7684\u7f51\u683c\uff1a\\(\\begin{matrix} 1 &amp; 2 &amp; 3\\\\  4 &amp; 5 &amp; 6\\\\  7 &amp; 8 &amp; 9  \\end{matrix}\\) \uff0c\u7ed9\u4f60\u4e24\u4e2a\u6570\uff0c\u5224\u65ad\u8fd9\u4e24\u4e2a\u6570\u662f\u5426\u540c\u4e00\u884c\u4e14\u76f8\u90bb\u3002</p> <p>\u6c42\u51fa\u884c\u5217\u5373\u53ef...</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint a, b, ra, rb, ca, cb;\ncin &gt;&gt; a &gt;&gt; b;\na--, b--;\nra = a / 3, rb = b / 3;\nca = a % 3, cb = b % 3;\nif(ra == rb &amp;&amp; abs(ca-cb) &lt;= 1)\ncout &lt;&lt; \"Yes\" &lt;&lt; endl;\nelse\ncout &lt;&lt; \"No\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#b-rotate","title":"B - Rotate","text":"<p>\u7ed9\u4f60\u4e00\u4e2a \\(N \\times N\\) \u7684\u77e9\u9635\uff0c\u5c06\u77e9\u9635\u56db\u5468\u7684\u5143\u7d20\u987a\u65f6\u9488\u8f6c\u52a8\u4e00\u6b65\uff0c\u8f93\u51fa\u8f6c\u52a8\u540e\u7684\u77e9\u9635\u3002</p> <p>\u76f4\u63a5\u6a21\u62df\u5373\u53ef</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n;\nchar g[maxn][maxn];\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 0; i &lt; n; i++)\ncin &gt;&gt; g[i];\nint t = g[0][n-1];\nfor(int j = n-1; j; j--)\ng[0][j] = g[0][j-1];\nfor(int i = 0; i &lt; n-1; i++)\ng[i][0] = g[i+1][0];\nfor(int j = 0; j &lt; n-1; j++)\ng[n-1][j] = g[n-1][j+1];\nfor(int i = n; i; i--)\ng[i][n-1] = g[i-1][n-1];\ng[1][n-1] = t;\nfor(int i = 0; i &lt; n; i++)\ncout &lt;&lt; g[i] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#c-medicine","title":"C - Medicine","text":"<p>\u6709 \\(N\\) \u79cd\u836f\uff0c\u6bcf\u4e00\u79cd\u836f\u6709\u4e24\u4e2a\u5c5e\u6027 \\(a_i\\) \u548c \\(b_i\\) \uff0c\u8868\u793a\u4ece\u7b2c \\(1\\) \u5929\u5230\u7b2c \\(a_i\\) \u5929\u90fd\u9700\u8981\u670d\u7528 \\(b_i\\) \u7247\u8fd9\u79cd\u836f\u3002\u95ee\uff0c\u4ece\u54ea\u4e00\u5929\u5f00\u59cb\uff0c\u6bcf\u5929\u670d\u7528\u836f\u7684\u6570\u91cf\u5c0f\u4e8e\u7b49\u4e8e \\(K\\) \uff1f</p> <p>\u5148\u6c42\u51fa \\(sum = \\sum a_i\\) \u7136\u540e\u6309\u7167 \\(a_i\\) \u6392\u5e8f\u3002\u4ece\u5c0f\u5230\u5927\u626b\u4e00\u904d\uff0c\u540c\u4e00\u5929\u7ed3\u675f\u7684\u836f\u5c31\u540c\u65f6\u51cf\u6389\uff0c\u76f4\u5230 \\(sum \u2264 K\\)\uff0c\u8f93\u51fa\u7b54\u6848\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 3E5 + 10;\nLL sum, ans, k, n;\nstruct Node\n{\nLL a, b;\nbool operator &lt; (const Node &amp;y) const\n{return a &lt; y.a;}\n}m[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; k;\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%lld %lld\", &amp;m[i].a, &amp;m[i].b), sum += m[i].b;\nsort(m, m+n);\nint i = 0;\nwhile(i &lt; n &amp;&amp; sum &gt; k)\n{\nans = m[i].a;\nwhile(i &lt; n &amp;&amp; m[i].a == ans)\nsum -= m[i++].b;\n}\ncout &lt;&lt; ans + 1 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#d-add-one-edge","title":"D - Add One Edge","text":"<p>\u6709\u4e00\u4e2a \\(N_1 + N_2\\) \u4e2a\u70b9\uff0c\\(M\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8fd9\u4e2a\u56fe\u6709\u5982\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u8be5\u56fe\u7531\u5b50\u56fe \\(A\\) \u548c \u5b50\u56fe \\(B\\) \u7ec4\u6210\uff0c\u5b50\u56fe \\(A\\) \u4e2d\u70b9\u7684\u7f16\u53f7\u4e3a \\(1 \u2264 u \u2264 N_1\\)\uff0c \u5b50\u56fe \\(B\\) \u4e2d\u70b9\u7684\u7f16\u53f7\u4e3a \\(N_1 + 1 \u2264 v \u2264 N_1 + N_2\\)</li> <li>\u5b50\u56fe \\(A\\) \u662f\u4e00\u4e2a\u8054\u901a\u56fe\uff0c\u5b50\u56fe \\(B\\) \u4e5f\u662f\u4e00\u4e2a\u8054\u901a\u56fe\u3002</li> <li>\u5b50\u56fe \\(A\\) \u4e0e\u5b50\u56fe \\(B\\) \u4e0d\u8fde\u901a</li> </ul> <p>\u73b0\u5728\uff0c\u8bf7\u4f60\u5728\u5b50\u56fe \\(A\\) \u4e2d\u9009\u62e9\u4e00\u4e2a\u70b9 \\(u\\) \uff0c\u5728\u5b50\u56fe \\(B\\) \u4e2d\u9009\u62e9\u4e00\u4e2a\u70b9 \\(v\\) \uff0c\u7136\u540e\u6dfb\u52a0\u4e00\u6761\u8fb9 \\((u, v)\\) \uff0c\u4f7f\u5f97\u70b9 \\(1\\) \u5230 \u70b9 \\(N_1 + N_2\\) \u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5927\u5316\u3002</p> <p>\u5bf9\u70b9 \\(1\\) <code>bfs</code>\u4e00\u6b21\uff0c\u7136\u540e\u5bf9\u70b9 \\(N_1 + N2\\) <code>bfs</code> \u4e00\u6b21\uff0c \\(d\\) \u8868\u793a\u8ddd\u79bb\u6570\u7ec4\uff0c\u7b54\u6848\u5c31\u662f \\(max(d_1, d_2, \\ ...\\ d_{N_1}) + max(d_{N_1 + 1}, d_{N_1+2}, \\ ...\\ d_{N_1 + N_2}) + 1\\) </p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nconst int maxn = 3E5 + 10;\nconst int maxm = 6E5 + 10;\nconst int inf = 0x3f3f3f3f;\nint n1, n2, m;\nint head[maxn], ne[maxm], edge[maxm], idx = 1, dis[maxn];\nvoid add(int u, int v)\n{\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\nvoid bfs(int s)\n{\ndis[s] = 0;\nqueue&lt;int&gt; q;\nq.push(s);\nwhile(!q.empty())\n{\nint u = q.front();\nint d = dis[u];\nq.pop();\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nif(dis[v] == inf)\ndis[v] = d + 1, q.push(v);\n}\n}\n}\n\nint main()\n{\ncin &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; m;\nfor(int u, v; m--;)\nscanf(\"%d %d\", &amp;u, &amp;v), add(u, v), add(v, u);\nmemset(dis, 0x3f, sizeof dis);\nbfs(1);\nfor(int i = 1; i &lt;= n1; i++)\nm = max(m, dis[i]);\nint ans = m + 1;\nbfs(n1+n2);\nm = 0;\nfor(int i = n1+1; i &lt;= n1 + n2; i++)\nm = max(m, dis[i]);\nans += m;\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#e-family-and-insurance","title":"E - Family and Insurance","text":"<p>\u4e00\u4e2a\u5bb6\u65cf\u6709 \\(N\\) \u4e2a\u4eba\uff0c\u8fd9\u4e2a\u5bb6\u65cf\u7684\u5173\u7cfb\u53ef\u4ee5\u770b\u4f5c\u4e00\u68f5\u6811\uff0c\u6839\u7ed3\u70b9\u662f \\(1\\) \uff0c\u5bf9\u4e8e \\(i \u2265 2\\) \uff0c\\(i\\) \u7684\u7236\u4eb2\u662f \\(p_i\\) \u3002\u8fd9\u4e2a\u5bb6\u65cf\u4e70\u4e86 \\(M\\) \u4efd\u4fdd\u9669\uff0c\u6bcf\u4efd\u4fdd\u9669\u7684\u53c2\u6570\u662f \\(x_i\\) \u548c \\(y_i\\) \uff0c\u8868\u793a \\(x_i\\) \u7ed9\u4ed6\u81ea\u5df1\u4ee5\u53ca\u4ed6\u7684 \\(y_i\\) \u4ee3\u540e\u4ee3\u8d2d\u4e70\u4e86\u4fdd\u9669\u3002\u95ee\uff1a\u8fd9\u4e2a\u5bb6\u65cf\u4e2d\u6709\u591a\u5c11\u4eba\u6709\u4fdd\u9669\uff1f</p> <p>\u5047\u8bbe \\(x_i\\) \u7ed9\u4ed6\u81ea\u5df1\u4ee5\u53ca\u4ed6\u7684 \\(y_i\\) \u4ee3\u540e\u4ee3\u8d2d\u4e70\u4e86\u4fdd\u9669\uff0c\u76f8\u5f53\u4e8e \\(x_i\\) \u7684\u6240\u6709\u513f\u5b50\u90fd\u4e70\u4e86 \\(y_i-1\\) \u4fdd\u9669\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4 \\(g\\) \uff0c\\(g[u]\\) \u8868\u793a \\(u\\) \u8d2d\u4e70\u7684\u4fdd\u9669\u7684\u4ee3\u6570\uff0c\\(-1\\) \u8868\u793a\u6ca1\u6709\u8d2d\u4e70\u4fdd\u9669\uff0c\u591a\u4e2a\u4fdd\u9669\u51b2\u7a81\u65f6\uff0c\u80af\u5b9a\u662f\u4fdd\u7559\u4ee3\u6570\u8f83\u591a\u7684\u90a3\u4e00\u4efd\u3002</p> <p>\u8bfb\u53d6\u5b8c\u6570\u636e\u540e\uff0c\u4ece\u6839\u7ed3\u70b9\u5f00\u59cb <code>dfs</code>\uff0c\u5982\u679c \\(g[u] \u2265 0\\) \u5219\u5411\u4e0b\u4f20\u64ad\u65f6\u53ef\u4ee5\u628a \\(g[u]-1\\) \u4f20\u64ad\u7ed9\u513f\u5b50\u7ed3\u70b9\uff0c\u53ea\u9700\u4e00\u904d <code>dfs</code> \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nconst int maxn = 3E5 + 10;\nconst int inf = 0x3f3f3f3f;\nint n, m, ans;\nint head[maxn], ne[maxn], edge[maxn], idx = 1, g[maxn];\nvoid add(int u, int v)\n{\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\nvoid dfs(int u)\n{\nif(g[u] == -1)\n{\nfor(int i = head[u]; i; i = ne[i])\ndfs(edge[i]);\n}\nelse\n{\nans++;\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\ng[v] = max(g[v], g[u]-1);\ndfs(v);\n}\n}\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nmemset(g, -1, sizeof g);\nfor(int i = 2, p; i &lt;= n; ++i)\nscanf(\"%d\", &amp;p), add(p, i);\nfor(int x, y; m--; )\nscanf(\"%d %d\", &amp;x, &amp;y), g[x] = max(g[x], y);\ndfs(1);\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#f-box-in-box","title":"F - Box in Box","text":"<p>\u6709 \\(N\\) \u4e2a\u957f\u5bbd\u9ad8\u4e3a \\(x_i \\times y_i \\times z_i\\) \u7684\u7bb1\u5b50\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u8f6c\u52a8\u7bb1\u5b50\uff0c\u95ee\uff1a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u7bb1\u5b50\u4e25\u683c\u6bd4\u53e6\u4e00\u4e2a\u7bb1\u5b50\u5927\uff1f</p> <p>\u663e\u7136\uff0c\u6bcf\u4e2a\u7bb1\u5b50\u90fd\u8981\u8f6c\u6210 \\(x_i \u2264 y_i \u2264 z_i\\) \u7684\u5f62\u5f0f\u3002</p> <p>\u5148\u8003\u8651\u4e8c\u7ef4\u7684\u5f62\u5f0f\u600e\u4e48\u505a\uff0c\u7b49\u4ef7\u4e8e\uff0c\u5e73\u9762\u5185\u6bcf\u4e2a\u70b9 \\((x_i, y_i)\\) \u6ee1\u8db3  \\(x_i \u2264 y_i\\) \uff0c\u95ee\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u5728\u53e6\u4e00\u4e2a\u70b9\u7684\u53f3\u4e0a\u65b9\u3002</p> <p>\u5c06\u70b9\u6309 \\(x\\) \u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u65b0\u626b\u5230\u7684\u70b9\u7684 \\(x\\) \u5750\u6807\u4e00\u5b9a\u6bd4\u4e4b\u524d\u7684\u5927\uff0c\u540c\u65f6\u8bb0\u5f55\u4e4b\u524d\u626b\u8fc7\u7684 \\(y\\) \u7684\u6700\u5c0f\u503c \\(y_i\\)\uff0c\u76f4\u63a5\u6bd4\u8f83\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4fdd\u8bc1 \\(y\\) \u5750\u6807\u4e5f\u6bd4\u4ed6\u5927\uff0c\u8fb9\u626b\u8fb9\u66f4\u65b0 \\(y_i\\) \u5373\u53ef\u3002</p> <p>\u4f46\u8fd9\u6837\u8fd8\u9700\u8003\u8651 \\(x\\) \u5750\u6807\u76f8\u7b49\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8bf4 \\(x_i = x_j\\) \u4e14 \\(y_i &lt; y_j\\) \u7684\u60c5\u51b5\uff0c\u60c5\u51b5\u4e0b \\(y_i\\) \u4e0d\u80fd\u76f4\u63a5\u7528\u4e8e \\(y_j\\) \u7684\u6bd4\u8f83\u3002\u4f46\u5982\u679c\u6392\u5e8f\u7684\u65f6\u5019\u6211\u4eec\u5bf9\u4e8e\u76f8\u540c\u7684 \\(x\\) \u65f6\uff0c\u6309\u7167 \\(y\\) \u7684\u964d\u5e8f\u6765\u6392\uff0c\u90a3\u4e48\u8bbf\u95ee\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u4e0d\u4f1a\u6709 \\(x_i = x_j\\) \u4e14 \\(y_i &lt; y_j\\) \u7684\u60c5\u51b5\u53d1\u751f\u4e86\u3002</p> <p>\u4e8c\u7ef4\u672c\u8d28\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u201c\u6700\u53f3\u4e0b\u201d\u7684\u70b9\uff0c\u4e09\u7ef4\u540c\u7406\uff0c\u968f\u7740 \\(x\\) \u5750\u6807\u7684\u589e\u957f\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5de6\u4e0b\u7684\u51f8\u5305\u3002\u51f8\u5305\u5b9e\u9645\u662f\u70b9\u7684\u96c6\u5408\uff0c\u5728\u51f8\u5305\u4e2d\u540c\u6837\u7684 \\(y\\) \u5750\u6807\u6211\u4eec\u9009\u62e9 \\(z\\) \u8f83\u5c0f\u7684\u90a3\u4e2a\u70b9\uff0c\u5e76\u4e14\u7531\u4e8e\u662f\u5de6\u4e0b\u7684\u51f8\u5305\uff0c\u4e0d\u5b58\u5728 \\(y_i \u2264 y_j\\) \u4e14 \\(z_i \u2264 z_j\\) \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u9009\u524d\u4e00\u4e2a\u70b9\u66f4\u4f18\u3002 </p> <p>\u626b\u5230\u67d0\u4e2a\u70b9 \\(j\\) \u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u6211\u4eec\u5148\u6309 \\(x\\) \u6392\u5e8f\uff0c\u6240\u4ee5\u51f8\u5305\u4e2d\u7684\u70b9\u4e00\u5b9a\u6ee1\u8db3 \\(x_i &lt; x_j\\) \uff0c\u63a5\u4e0b\u6765\u5728\u51f8\u5305\u4e2d\u4e8c\u5206\u51fa\u7b2c\u4e00\u4e2a \\(y_i &lt; y_j\\) \uff0c\u6839\u636e\u51f8\u5305\u7684\u6027\u8d28\uff0c \\(y_i\\) \u5bf9\u5e94\u7684 \\(z_i\\) \u4e5f\u662f\u6700\u5c0f\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u6bd4\u8f83\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u7528 \\(y_j\\) \u548c \\(z_j\\) \u7684\u503c\u66f4\u65b0\u51f8\u5305\u5373\u53ef\u3002\u7528\u4e00\u4e2a <code>map&lt;int, int&gt;</code> \u7ef4\u62a4\u51f8\u5305\u5c31\u80fd\u5b9e\u73b0\u4ee5\u4e0a\u64cd\u4f5c\uff0c<code>key</code> \u5bf9\u5e94 \\(y\\) \u7684\u503c\uff0c<code>value</code> \u5bf9\u5e94 \\(z\\) \u7684\u503c\u3002 \u540c\u6837\u7684\uff0c\u4e3a\u4e86\u9632\u6b62\u76f8\u540c\u7684 \\(x\\) \u7684\u60c5\u51b5\uff0c\u5f53 \\(x\\) \u76f8\u540c\u65f6\u6309\u7167 \\(y\\) \u7684\u964d\u5e8f\u6765\u6392\u5373\u53ef\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u66f4\u65b0\u51f8\u5305\u65f6\uff0c\u5bf9\u540e\u7eed\u7684\u70b9\u4e5f\u8981\u68c0\u67e5\uff0c\u4fdd\u8bc1map\u6ee1\u8db3\u51f8\u5305\u7684\u6027\u8d28\uff0c\u7531\u4e8e\u6bcf\u4e2a\u70b9\u81f3\u591a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u6bcf\u6b21\u4e8c\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(logn)\\) \uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(nlogn)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;map&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nbool cmp(const vector&lt;int&gt; &amp;x, const vector&lt;int&gt; &amp;y)\n{\nif(x[0] != y[0])\nreturn x[0] &lt; y[0];\nreturn x[1] &gt; y[1];\n}\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\nvector&lt;vector&lt;int&gt;&gt; a(n, vector&lt;int&gt;(3));\nfor(int i = 0; i &lt; n; i++)\n{\nscanf(\"%d %d %d\", &amp;a[i][0], &amp;a[i][1], &amp;a[i][2]);\nsort(a[i].begin(), a[i].end());\n}\nsort(a.begin(), a.end(), cmp);\nbool f = 0;\nmap&lt;int, int&gt; h;\nh[0] = 1E9;\nh[1E9+1] = 0;\n\nfor(int i = 0; i &lt; n &amp;&amp; !f; i++)\n{\nint y = a[i][1], z = a[i][2];\nauto it = h.lower_bound(y), pre = it;\npre--;\nif(z &gt; pre -&gt; second)\n{\nf = 1;\nbreak;\n}\nelse if(z == pre -&gt; second)\ncontinue;\nelse if(it -&gt; first != y || it -&gt; second &gt; z)\n{\nh[y] = z;\npre++;\nit = pre;\nit++;\nwhile(it -&gt; second &gt;= z)\n{\npre = it;\nit++;\nh.erase(pre);\n}\n}\n}\nif(f)\ncout &lt;&lt; \"Yes\" &lt;&lt; endl;\nelse\ncout &lt;&lt; \"No\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/","title":"ABC310(A-F)","text":"<p>freee Programming Contest 2023\uff08AtCoder Beginner Contest 310\uff09 - AtCoder</p> <p>\u8fd9\u573a\u8d28\u91cf\u5f88\u9ad8\uff0c\u7136\u800c\u5b98\u65b9\u89e3\u7b54\u5f88\u591a\u5730\u65b9\u8bb2\u7684\u4e0d\u662f\u5f88\u6e05\u695a\u3002</p>"},{"location":"algorithm/AtCoder/abc310/#a-order-something-else","title":"A - Order Something Else","text":"<p>\u4e00\u79cd\u5546\u54c1\u6709\u4e24\u79cd\u8d2d\u4e70\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\u4ee5 \\(p\\) \u5143\u76f4\u63a5\u8d2d\u4e70\uff0c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\u5148\u5728\u7ed9\u5b9a\u7684 \\(n\\) \u79cd\u6346\u7ed1\u5546\u54c1\u4e2d\u4e70\u4e00\u4e2a\uff0c\u7136\u540e\u4ee5 \\(q\\) \u5143\u7684\u4f18\u60e0\u4ef7\u8d2d\u4e70\u3002\u8f93\u51fa\u8d2d\u4e70\u8be5\u5546\u54c1\u7684\u6700\u4f4e\u4ef7\u683c\u3002</p> <p>\u627e\u51fan\u4e2a\u6346\u7ed1\u5546\u54c1\u4e2d\u7684\u6700\u4f4e\u4ef7\uff0c\u7136\u540e\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint n, p, q, x, m = 1E9;\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; p &gt;&gt; q;\nwhile(n--)\n{\ncin &gt;&gt; x;\nm = min(m, x);\n}\ncout &lt;&lt; min(m + q, p);\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#b-strictly-superior","title":"B - Strictly Superior","text":"<p>\u6709 \\(N\\) \u79cd\u529f\u80fd\u996e\u6599\uff0c\u6bcf\u4e00\u79cd\u529f\u80fd\u996e\u6599\u7684\u552e\u4ef7\u662f \\(P_i\\) , \u6bcf\u4e00\u79cd\u996e\u6599\u90fd\u5177\u6709 \\(C_i\\) \u79cd\u529f\u80fd\uff0c\u996e\u6599\u7684\u529f\u80fd\u7528\u6570\u5b57\u8868\u793a\u3002</p> <p>\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u79f0\u996e\u6599 \\(i\\) \u4e25\u683c\u597d\u4e8e\u996e\u6599 \\(j\\) \u3002</p> <ul> <li> <p>\\(P_i \u2264 P_j\\)</p> </li> <li> <p>\u996e\u6599 \\(i\\) \u62e5\u6709\u996e\u6599 \\(j\\) \u7684\u6240\u6709\u529f\u80fd\u3002</p> </li> <li>\\(P_i &lt; P_j\\) \u6216 \u996e\u6599 \\(i\\) \u81f3\u5c11\u5b58\u5728\u4e00\u79cd\u996e\u6599 \\(j\\) \u6240\u4e0d\u5177\u6709\u7684\u529f\u80fd\u3002</li> </ul> <p>\u5224\u65ad\u662f\u5426\u5b58\u5728\u996e\u6599 \\(i\\) \u4e25\u683c\u597d\u4e8e\u996e\u6599 \\(j\\) \uff0c\u82e5\u5b58\u5728\u5219\u8f93\u51fa <code>Yes</code> \u5426\u5219\u8f93\u51fa <code>No</code> </p> <p>\u6570\u636e\u8303\u56f4\uff1a \\(C_i, N \u2264 100\\)\uff0c\u996e\u6599\u7684\u529f\u80fd\u90fd\u662f1-100\u95f4\u7684\u6574\u6570\u3002</p> <p>\u6bcf\u79cd\u996e\u6599\u7684\u529f\u80fd\u7528\u4e00\u4e2abitset\u8868\u793a\uff0c\u4f4d\u8fd0\u7b97\u8ba1\u7b97\u5305\u542b\u5173\u7cfb\u3002</p> <p>\u7531\u4e8e \\(N\\) \u6bd4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u4e24\u5c42\u5faa\u73af\u76f4\u63a5\u5224\u65ad\uff0c\u8fd9\u91cc\u6211\u662f\u6309\u7167\u4ef7\u683c\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u626b\u4e00\u8f6e\u7684\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n#include &lt;bitset&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n, m;\n\nstruct Node {\nint p;\nbitset&lt;110&gt; st;  bool operator &lt; (const Node &amp;y) const\n{return p &lt; y.p;}\nbool good(const Node &amp;y) const\n{\nif((st &amp; y.st) != y.st)\nreturn 0;\nif(p == y.p &amp;&amp; st == y.st)\nreturn 0;\nreturn 1;\n}\n}a[maxn];\n\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nint c, x;\nfor(int i = 0; i &lt; n; i++)\n{\ncin &gt;&gt; a[i].p &gt;&gt; c;\nwhile(c--)\n{\ncin &gt;&gt; x;\na[i].st[x] = 1;\n}\n}\nsort(a, a+n);\nbool flag = 0;\nfor(int i = 0; i &lt; n &amp;&amp; !flag; i++)\n{\nfor(int j = i + 1; j &lt; n; j++)\nif(a[i].good(a[j]))\n{\nflag = 1;\nbreak;\n}\n}\nif(flag)\ncout &lt;&lt; \"Yes\";\nelse\ncout &lt;&lt; \"No\";\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#c-reversible","title":"C - Reversible","text":"<p>\u6709 \\(N\\) \u4e2a\u5b57\u7b26\u4e32\uff0c\u7528 \\(R(S)\\) \u8868\u793a\u5b57\u7b26\u4e32 \\(S\\) \u7684\u53cd\u8f6c\u5b57\u7b26\u4e32\uff0c \u82e5\\(S_i == S_j\\) \u6216 \\(S_i == R(S_j)\\) \u5219\u79f0 \\(S_i\\) \u4e0e \\(S_j\\) \u662f\u672c\u8d28\u76f8\u540c\u7684\u3002</p> <p>\u6c42\u51fa \\(N\\) \u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\u4e32 \\(S_i\\)\uff0c\u53d6 \\(S_i\\) \u548c \\(R(S_i)\\) \u4e2d\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u4e00\u4e2a\u52a0\u5165\u54c8\u5e0c\u8868\u4e2d\uff0c\u6700\u7ec8\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u5c31\u662f\u7b54\u6848\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;unordered_set&gt;\n\nusing namespace std;\n\nint main()\n{\nint n;\nstring s, t;\nunordered_set&lt;string&gt; vis;\ncin &gt;&gt; n;\nwhile(n--)\n{\ncin &gt;&gt; s;\nt = s;\nreverse(t.begin(), t.end());\nvis.insert(s &lt; t ? s : t);\n}\ncout &lt;&lt; vis.size();\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#d-peaceful-teams","title":"D - Peaceful Teams","text":"<p>\u6709 \\(N\\) \u4e2a\u4eba\uff0c\u73b0\u5728\u9700\u8981\u5c06\u4ed6\u4eec\u5206\u6210 \\(T\\) \u7ec4\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u5c5e\u4e8e\u67d01\u7ec4\uff0c\u6bcf\u4e2a\u7ec4\u90fd\u81f3\u5c11\u8981\u67091\u4e2a\u4eba\u3002\u6b64\u5916\uff0c\u6709 \\(M\\) \u5bf9\u4eba\u7684\u5173\u7cfb\u662f\u4e0d\u597d\u7684\uff0c\u4e0d\u80fd\u5c06\u4e24\u4e2a\u5173\u7cfb\u4e0d\u597d\u7684\u4eba\u5206\u5230\u540c\u4e00\u7ec4\u4e2d\u3002</p> <p>\u95ee\uff1a\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u5206\u7ec4\u65b9\u5f0f\uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(T \u2264 N \u2264 10\\)</p> <p>\u9996\u5148\u8981\u660e\u767d\u5206\u7ec4\u65b9\u5f0f\u548c\u7ec4\u4e4b\u95f4\u6392\u5217\u7684\u987a\u5e8f\u662f\u65e0\u5173\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>{1, 4, 5}, {2, 3}</code> \u548c <code>{2, 3}, {1, 4, 5}</code> \u662f\u540c\u4e00\u79cd\u5206\u7ec4\u65b9\u5f0f\uff08\u56e0\u4e3a\u4ec5\u4ec5\u53ea\u6709\u7ec4\u4e4b\u95f4\u6392\u5217\u987a\u5e8f\u7684\u4e0d\u540c\uff09\u3002\u4e3a\u4e86\u786e\u5b9a\u987a\u5e8f\uff08\u5982\u540cC\u9898\u4e2d\u9009\u7528\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u4f5c\u4e3a\u4ee3\u8868\u4e00\u6837\uff09\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u6392\u5217\u987a\u5e8f\u4e5f\u9700\u8981\u786e\u5b9a\u4e00\u79cd\u4ee3\u8868\u987a\u5e8f\uff1a</p> <ul> <li>\u6bcf\u4e2a\u7ec4\u4e2d\u6700\u5c0f\u7684\u53f7\u7801\u4f5c\u4e3a\u8fd9\u4e2a\u7ec4\u7684\u4ee3\u8868\u53f7\u7801\uff0c\u4f8b\u5982{1, 4, 5}\u7684\u4ee3\u8868\u53f7\u7801\u662f1\uff0c{2, 3}\u7684\u4ee3\u8868\u53f7\u7801\u662f2</li> <li>\u4ee3\u8868\u53f7\u7801\u8d8a\u5c0f\u7684\u7ec4\uff0c\u987a\u5e8f\u8d8a\u9760\u524d</li> </ul> <p>\u4e0a\u8ff0\u89c4\u5219\u5c31\u80fd\u4fdd\u8bc1\u4e86\u4e0d\u540c\u7684\u6392\u5217\u987a\u5e8f\u5b9e\u9645\u5bf9\u5e94\u7684\u53ea\u6709\u4e00\u79cd\uff0c\u5728\u8ba1\u7b97\u5206\u7ec4\u65b9\u5f0f\u65f6\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e2a\u89c4\u5219\u5c31\u4e0d\u4f1a\u91cd\u590d\u3002</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u6c42\u89e3\u95ee\u9898\uff0c\u663e\u7136\uff0c\u7b2c1\u4e2a\u4eba\u4e00\u5b9a\u662f\u5728\u7b2c1\u7ec4\u7684\uff0c\u63a5\u4e0b\u6765\u4ece\u7b2c2\u4e2a\u4eba\u5f00\u59cb\uff1a\u8981\u4e48\u52a0\u5165\u4e4b\u524d\u5df2\u7ecf\u5efa\u7acb\u597d\u7684\u7ec4\uff0c\u8981\u4e48\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u7ec4\u3002\u82e5\u52a0\u5165\u67d0\u4e2a\u7ec4\u5fc5\u987b\u6ee1\u8db3\u7ec4\u5185\u76f8\u5bb9\uff0c\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff0c\u5373\uff1a\u5c06\u6bcf\u4e2a\u7ec4\u7684\u4eba\u5458\u5206\u5e03\u7528bit\u4e32\u8868\u793a\uff0c<code>group[i]</code>\u8868\u793a\u7b2c<code>i</code>\u4e2a\u7ec4\u6709\u54ea\u4e9b\u4eba\u7684bit\u4e32\u3002\u5f53\u524d\u7684\u4eba\u7528<code>cur</code>\u8868\u793a\uff0c<code>hate[cur]</code>\u8868\u793a\u4e0e\u7b2c<code>cur</code>\u4e2a\u4eba\u6709\u77db\u76fe\u7684\u4eba\u7684bit\u4e32\u3002\u82e5<code>(group[i] &amp; hate[cur])==0</code>\u8868\u793a<code>cur</code>\u53ef\u4ee5\u878d\u5165<code>group[i]</code>\u3002</p> <p>\u4e0a\u8ff0\u8fc7\u7a0bDFS\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(T*N!)\\)\uff0c\u7531\u4e8e\u6709\u526a\u679d\u4ee5\u53ca\u4f4d\u8fd0\u7b97\uff0c\u5b9e\u9645\u8fd9\u662f\u4e00\u4e2a\u5f88\u677e\u7684\u4e0a\u754c\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 11;\nint n, t, m, ans;\nint hate[maxn], group[maxn];\n\nvoid dfs(int cur, int g)\n{\nif(n - cur + g &lt; t)//\u5982\u679c\u5206\u7ec4\u51d1\u4e0d\u9f50t\u4e2a\uff0c\u53ca\u65f6\u526a\u6389\nreturn;\nif(cur == n)\n{\nans++;\nreturn;\n}\nfor(int i = 0; i &lt; g; i++)\nif((group[i] &amp; hate[cur]) == 0)\n{\ngroup[i] ^= 1 &lt;&lt; cur;\ndfs(cur+1, g);\ngroup[i] ^= 1 &lt;&lt; cur;\n}\nif(g &lt; t)\n{\ngroup[g] = 1 &lt;&lt; cur;\ndfs(cur+1, g+1);\n}\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; t &gt;&gt; m;\nfor(int u, v; m--;)\n{\ncin &gt;&gt; u &gt;&gt; v;\nu--, v--;\nhate[v] |= 1 &lt;&lt; u;//u &lt; v \u53ea\u9700\u8003\u8651v\u8ba8\u538cu\n}\ndfs(0, 0);\ncout &lt;&lt; ans;\nreturn 0;\n}\n</code></pre> <p>\u4e0a\u9762\u7684dfs\u89e3\u6cd5\uff0c\u662f\u5bf9\u6bcf\u4e00\u4e2a\u4eba\u8003\u8651\u5206\u914d\u5230\u54ea\u4e00\u4e2a\u7ec4\u3002\u4e0b\u9762\u4ecb\u7ecd\u53e6\u4e00\u79cddp\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u76f4\u63a5\u6309\u4e00\u4e2a\u7ec4\u6765\u8003\u8651\u7684</p> <p>\\(dp[s][k]\\) : \u5c06bit\u4e32\u4e3a<code>s</code>\u7684\u8fd9\u4e9b\u4eba\u5206\u6210<code>k</code>\u7ec4\uff0c\u4e14\u524d<code>k</code>\u7ec4\u5df2\u7ecf\u56fa\u5b9a\u4e0b\u6765\uff08\u5373\uff1a\u4e0d\u518d\u5411\u524d<code>k</code>\u7ec4\u4e2d\u52a0\u4eba\uff09\u6709\u591a\u5c11\u79cd\u5206\u914d\u65b9\u5f0f\u3002</p> <p>\u8fd9\u91cc\u89e3\u91ca\u56fa\u5b9a\u7684\u542b\u4e49\uff0c\u5bf9\u4e8e<code>dp[s][k]</code>\u6765\u8bf4\uff0c<code>s</code>\u4e2d\u76841\u8868\u793a\u5df2\u7ecf\u5206\u5728\u524d<code>k</code>\u7ec4\u4e2d\u7684\u4eba\uff0c0\u8868\u793a\u672a\u5206\u7ec4\u7684\u4eba\uff0c\u7531\u4e8e\u8fd9\u91cc\u662f\u4e00\u6b21\u6027\u7684\u6309\u7ec4\u8003\u8651\uff0c\u6240\u4ee5\u662f\u628a\u82e5\u5e72\u4e2a\u672a\u5206\u7ec4\u76840\u7ec4\u6210\u7b2c<code>k+1</code>\u7ec4\uff0c\u800c\u4e0d\u662f\u628a\u8fd9\u4e9b\u672a\u5206\u7ec4\u76840\u52a0\u5165\u5230\u524dk\u7ec4\u4e2d(\u56e0\u4e3a\u524d<code>k</code>\u7ec4\u5df2\u7ecf\u56fa\u5b9a\u4e0b\u6765\u4e86\uff0c\u4e5f\u5c31\u662f\u5df2\u7ecf\u5206\u597d\u4e86)\u3002</p> <p>\u7531\u4e8e\u662f\u5206\u7ec4\u8003\u8651\u7684\uff0c\u8fd8\u8981\u5148\u9884\u5904\u7406\u51fa\u6765<code>ok</code>\u6570\u7ec4\uff0c<code>ok[s]</code>\u8868\u793abit\u4e32\u4e3as\u7684\u8fd9\u4e9b\u4eba\u80fd\u4e0d\u80fd\u5728\u4e00\u4e2a\u7ec4\u5f53\u4e2d\u3002</p> <p>dp\u8f6c\u79fb\u4e3a \\(dp[ns][k+1] += dp[s][k]\\), \u5176\u4e2d<code>ns</code>\u662f\u5305\u542b<code>s</code>\u4e14\u6bd4<code>s</code>\u66f4\u5927\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u5373<code>ns</code>\u662f<code>s</code>\u4e2d\u7684\u67d0\u4e9b0\u53d8\u62101\u4e4b\u540e\u5f62\u6210\u7684\u3002</p> <p>dp\u7684\u65f6\u5019\u8fd8\u8981\u8003\u8651\u5206\u7ec4\u987a\u5e8f\u7684\u4e00\u81f4\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>s</code>\u7684\u6700\u53f3\u8fb9\u7684\u90a3\u4e2a0\u4e00\u5b9a\u8981\u5305\u542b\u5728<code>k+1</code>\u7ec4\u5f53\u4e2d\uff0c\u8fd9\u91cc\u7684<code>beg</code>\u5c31\u662f\u8fd9\u4e2a\u4f5c\u7528\u3002</p> <p>\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(T * 3^N)\\)\uff0c\u5173\u4e8e\u8fd9\u79cd\u679a\u4e3e\u65b9\u5f0f\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u89c1\u8fd9\u7bc7\u535a\u5ba2\u4e8c\u8fdb\u5236\u96c6\u5408\u64cd\u4f5c</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxl = 1024 + 10;\nconst int maxn = 11;\nint n, t, m, len;\nbool ok[maxl];\nint hate[maxn], dp[maxl][maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; t &gt;&gt; m;\nlen = 1 &lt;&lt; n;\nfor(int u, v; m--;)\n{\ncin &gt;&gt; u &gt;&gt; v;\nu--, v--;\nhate[v] |= 1 &lt;&lt; u;\n}\nfor(int s = 0; s &lt; len; s++)\n{\nint h = 0;\nfor(int i = 0; i &lt; n; i++)\nif(s &gt;&gt; i &amp; 1)\nh |= hate[i];\nif(!(s &amp; h))\nok[s] = 1;//ok[s]\u8868\u793a\u72b6\u6001\u4e3as\u7684\u961f\u4f0d\u80fd\u5426\u76f8\u5bb9\n}\ndp[0][0] = 1;\nfor(int s = 0; s &lt; len; s++)\n{\nint beg = s | (s + 1);\nfor(int ns = beg; ns &lt; len; ++ns |= beg)\nif(ok[s ^ ns])\n{\nfor(int i = 0; i &lt; t; i++)\ndp[ns][i+1] += dp[s][i];\n}\n}\ncout &lt;&lt; dp[len-1][t];\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#e-nand-repeatedly","title":"E - NAND repeatedly","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5e8f\u5217 \\(A = (A_0,\\ A_1,\\ ...\\ A_{N-1})\\) \uff0c\\(A_i\\)  \u7684\u503c\u4e3a<code>0</code>\u6216<code>1</code>\u3002\u5b9a\u4e49\u4e00\u79cd\u8fd0\u7b97\uff1a</p> \\[ f(i, j) = \\left\\{ \\begin{matrix} A_j&amp; \\quad (i=j) \\\\  f(i, j-1) \\ \\overline{\\land} \\ A_j &amp; \\quad (i &lt; j) \\end{matrix} \\right.\\] <p>\u5176\u4e2d \\(\\overline{\\land}\\) \u8868\u793a\u201c\u4e0e\u975e\u201d\u8fd0\u7b97\uff0c \u5373 \\(x \\overline{\\land} y = \\lnot(x \\land y)\\)\uff0c\\(0 \\overline{\\land} 0 = 1 \\quad 0 \\overline{\\land} 1 = 1 \\quad 1 \\overline{\\land} 0 = 1 \\quad 1 \\overline{\\land} 1 = 0\\)</p> <p>\u6c42\u51fa \\(\\sum\\limits_{i=0}^{N-1}\\sum\\limits_{j=i}^{N-1}f(i,j)\\)\u7684\u503c</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(N \u2264 10^6\\)</p> <p>\u4e0e\u975e\u8fd0\u7b97\u4e0d\u6ee1\u8db3\u7ed3\u5408\u7387\uff0c\u56e0\u6b64\u524d\u7f00\u548c\u4e4b\u7c7b\u7684\u65b9\u6cd5\u5931\u6548...\u66b4\u529b\u505a\u6cd5\u9700\u8981\\(O(N^2)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u8003\u8651 \\(dp[j]\\): \\(\\sum\\limits_{i=0}^{j}f(i,j)\\)\u7684\u503c\uff0c\u7531\u4e8e \\(f(i, j)\\) \u7684\u503c\u662f<code>0</code>\u6216<code>1</code>\uff0c\u56e0\u6b64\\(dp[j]\\) \u76f8\u5f53\u4e8e\u8bb0\u5f55\u4e86 \\(f(0, j)\\) \u5230 \\(f(j, j)\\) \u4e4b\u95f4<code>1</code>\u7684\u4e2a\u6570\uff0c\u5219 \\(j - dp[j]+1\\) \u76f8\u5f53\u4e8e0\u7684\u4e2a\u6570\u3002</p> <p>\u8003\u8651dp\u8f6c\u79fb\uff1a\u6839\u636e\u4e0e\u975e\u8fd0\u7b97\u7684\u6027\u8d28\uff0c</p> <ul> <li>\u82e5 \\(A_{j}\\) \u4e3a<code>0</code>\uff0c\u5219 \\(f(0, j-1)\\ \\overline{\\land} \\ A_{j}\\) \u5230 \\(f(j-1, j-1)\\ \\overline{\\land} \\ A_{j}\\) \u7684\u503c\u90fd\u662f<code>1</code></li> <li>\u82e5 \\(A_{j}\\) \u4e3a<code>1</code>\uff0c\u5219\u53ea\u6709\u524d<code>j-1</code>\u4e2a\u4e2d\u7684<code>0</code>\u624d\u80fd\u53d8\u6210<code>1</code>\uff0c\u6b64\u5916\u8fd8\u6709 \\(f(j,j)=A_{j}\\)\u672c\u8eab\u662f<code>1</code></li> </ul> <p>\u56e0\u6b64dp\u8f6c\u79fb\u5f0f\u4e3a\uff1a</p> \\[ dp[j] = \\left\\{\\begin{matrix}  j \\quad &amp;(A_j = 1)\\\\ j-dp[j-1]+1  \\quad &amp;(A_j = 1) \\end{matrix}\\right.  \\] <p>\u7531\u4e8e \\(dp[j+1]\\) \u53ea\u548c \\(dp[j]\\) \u6709\u5173\uff0c\u4e5f\u6ca1\u5fc5\u8981\u5f00\u6570\u7ec4\u4e86\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5373\u53ef\uff0c\u7b54\u6848\u5c31\u662f \\(\\sum dp[j]\\) \uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\ntypedef long long LL;\n\nint main()\n{\nint n;\nstring s;\ncin &gt;&gt; n &gt;&gt; s;\nint dpj = s[0] - '0';\nLL ans = dpj;\nfor(int j = 1; j &lt; n; j++)\n{\nif(s[j] - '0')\ndpj = j + 1 - dpj;\nelse\ndpj = j;\nans += dpj;\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#f-make-10-again","title":"F - Make 10 Again","text":"<p>\u6709 \\(N\\) \u4e2a\u9ab0\u5b50\uff0c\u6bcf\u4e2a\u9ab0\u5b50\u90fd\u53ef\u4ee5\u7b49\u6982\u7387\u7684\u6254\u51fa \\([1, A_i]\\)\u4e4b\u95f4\u7684\u5176\u4e2d\u4e00\u4e2a\u6574\u6570\uff0c\\(N\\) \u4e2a\u9ab0\u5b50\u540c\u65f6\u6295\u63b7\uff0c\u6c42\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6982\u7387\uff1a</p> <ul> <li>\u81f3\u5c11\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u4ece\u4e2d\u6311\u9009\u4e00\u4e9b\u9ab0\u5b50\u7684\u70b9\u6570\u4e4b\u548c\u7b49\u4e8e10\u3002</li> </ul> <p>\u6c42\u51fa\u8fd9\u4e2a\u6982\u7387 mod <code>998244353</code> \u7684\u503c\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a</p> <p>\\(N \u2264 100\\)</p> <p>\\(A_i \u2264 10^6\\)</p> <p>\u7ecf\u5178\u7684\u6982\u7387dp\u3002\u56e0\u4e3a\u53ea\u8981\u51d1\u51fa<code>10</code>\uff0c\u53ea\u8003\u8651<code>0-10</code>\u70b9\u80fd\u4e0d\u80fd\u51d1\u51fa\uff0c\u7c7b\u4f3c\u80cc\u5305dp+\u72b6\u538bdp\u7684\u601d\u8def\uff0c\u9996\u5148\u5f15\u5165\u4e00\u4e2a\u53ef\u4ee5\u201c\u51d1\u51fa\u6765\u201d\u7684\u96c6\u5408\u7684\u6982\u5ff5\uff0c\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a11\u7684bit\u4e32\u8868\u793a\u5f53\u524d\u6211\u4eec\u80fd\u51d1\u51fa\u54ea\u4e9b\u6570\u5b57\uff0c\u663e\u7136\uff0c\u5728\u6240\u6709\u9ab0\u5b50\u8fd8\u6ca1\u6254\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u80fd\u51d1\u51fa<code>0</code>,\u56e0\u6b64\u8fd9\u4e2abit\u4e32\u7684\u503c\u4e3a<code>1(00000000001)</code>\uff0c\u5047\u8bbe\u7b2c\u4e00\u4e2a\u9ab0\u5b50\u4e22\u51fa\u4e86<code>2</code>\uff0c\u6211\u4eec\u5c31\u80fd\u51d1\u51fa<code>2</code>\u548c<code>0</code>\u5f53\u524dbit\u4e32\u503c\u5c31\u4e3a<code>5(0000000101)</code>\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u8003\u8651 \\(dp[i][s]\\) \uff1a\u524d<code>i</code>\u4e2a\u9ab0\u5b50\u7684\u6295\u63b7\u5b8c\u6210\u540e\uff0c\u5f53\u524d\u80fd\u51d1\u51fa\u6765\u7684\u6570\u5b57bit\u4e32\u4e3a<code>s</code>\u7684\u6982\u7387\u3002</p> <p>\u521d\u59cb\u65f6\uff0c<code>dp[0][1] = 1</code>\uff0c\u5176\u4f59\u4e3a<code>0</code></p> <p>dp\u7684\u8f6c\u79fb\u5c31\u662f\u679a\u4e3e\u7b2c<code>i</code>\u679a\u9ab0\u5b50\u4e22\u51fa\u4e86\u591a\u5c11\uff0c\u7136\u540e\u7528\u4f4d\u8fd0\u7b97\u66f4\u65b0\u96c6\u5408\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(2^{11}*N)\\)</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 110;\nconst int len = 1 &lt;&lt; 11;\nconst int mask = len - 1;\nconst LL mod = 998244353;\n\nvoid exgcd(LL a, LL b, LL &amp;x, LL &amp;y)\n{\nif(!b)\nx = 1, y = 0;\nelse\nexgcd(b, a % b, y, x), y -= a / b * x;\n}\nLL getinv(LL a)\n{\nLL x, y;\nexgcd(a, mod, x, y);\nreturn (x + mod) % mod;\n}\n\nint n, x;\nLL p;\nLL dp[maxn][len];\n\nint main()\n{\ncin &gt;&gt; n;\ndp[0][1] = 1;\nfor(int i = 0; i &lt; n; i++)\n{\ncin &gt;&gt; x;\np = getinv(x);\nfor(int s = 1; s &lt; len; s++)\n{\nif(!dp[i][s])\ncontinue;\nfor(int k = 1; k &lt;= min(x, 10); k++)\n{\nint ns = s | (s &lt;&lt; k) &amp; mask;\ndp[i+1][ns] += dp[i][s] * p;\ndp[i+1][ns] %= mod;\n}\nif(x &gt; 10)\n{\ndp[i+1][s] += dp[i][s] * (p * (x - 10) % mod);\ndp[i+1][s] %= mod;\n}\n}\n}\nLL ans = 0;\nfor(int s = 1 &lt;&lt; 10; s &lt; len; s++)\nans = (ans + dp[n][s]) % mod;\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/","title":"ABC311(A-G)","text":"<p>Toyota Programming Contest 2023#4\uff08AtCoder Beginner Contest 311\uff09 - AtCoder</p> <p>\u6bd4\u8f83\u8f7b\u677e\u7684\u4e00\u573a\uff0c\u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b</p>"},{"location":"algorithm/AtCoder/abc311/#a-first-abc","title":"A - First ABC","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u53ea\u542b\u6709<code>A</code>\u3001<code>B</code>\u3001<code>C</code>\u7684\u5b57\u7b26\u4e32 \\(S\\) \uff0c\u6bcf\u79cd\u5b57\u7b26\u4f1a\u51fa\u73b0\u81f3\u5c11\u4e00\u6b21\u3002\u6c42\u51fa \\(S\\) \u5305\u542b\u6bcf\u79cd\u5b57\u7b26\u7684\u6700\u77ed\u524d\u7f00\uff0c\u8f93\u51fa\u524d\u7f00\u957f\u5ea6\u3002</p> <p>\u626b\u4e00\u8f6e\uff0c\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\u5c31\u53ef\u4ee5\u4e86</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n, cnt[3];\nchar s[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; s;\nfor(int i = 0; i &lt; n; i++)\n{\ncnt[s[i] - 'A']++;\nif(cnt[0] &amp;&amp; cnt[1] &amp;&amp; cnt[2])\n{\ncout &lt;&lt; i + 1 &lt;&lt; endl;\nbreak;\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#b-vacation-together","title":"B - Vacation Together","text":"<p>\u6709 \\(N\\) \u4e2a\u4eba\uff0c\u6bcf\u4eba\u90fd\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(D\\) \u7684\u5b57\u7b26\u4e32 \\(S_i\\) \u8868\u793a\u4ed6\u63a5\u4e0b\u6765 \\(D\\) \u5929\u662f\u5426\u6709\u7a7a\u3002\u82e5 \\(S_{i,j}\\) \u662f<code>x</code>\u8868\u793a\u7b2c \\(i\\) \u4e2a\u4eba\u7684\u7b2c \\(j\\) \u5929\u6ca1\u7a7a\uff0c<code>o</code>\u5219\u8868\u793a\u6709\u7a7a\u3002</p> <p>\u8fd9 \\(N\\) \u4e2a\u4eba\u6253\u7b97\u627e\u4e00\u6bb5\u8fde\u7eed\u7684\uff0c\u4e14\u5927\u5bb6\u90fd\u6709\u7a7a\u7684\u65f6\u95f4\u51fa\u6765\u73a9\uff0c\u6c42\u51fa\u6700\u957f\u7684\u65f6\u95f4\u3002</p> <p><code>o</code>\u76f8\u5f53\u4e8e<code>1</code>\uff0c<code>x</code>\u76f8\u5f53\u4e8e<code>0</code>\uff0c\u7528<code>&amp;</code>\u8fd0\u7b97\u5408\u5e76\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u6ed1\u52a8\u7a97\u53e3\u53d6\u6700\u957f\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n, d;\nchar now[maxn], s[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; d;\nfor(int i = 0; i &lt; d; i++)\nnow[i] = 'o';\nfor(int i = 0; i &lt; n; i++)\n{\ncin &gt;&gt; s;\nfor(int j = 0; j &lt; d; j++)\nif(s[j] == 'x')\nnow[j] = 'x';\n}\nint ans = 0;\nfor(int i = 0; i &lt; d; i++)\n{\nif(now[i] == 'x')\ncontinue;\nint j = i;\nwhile(j+1 &lt; d &amp;&amp; now[j+1] == 'o')\nj++;\nans = max(ans, j - i + 1);\ni = j+1;\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#c-find-it","title":"C - Find it!","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5177\u6709 \\(N\\) \u4e2a\u70b9\u3001\\(N\\) \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e14\u53ea\u6709\u4e00\u6761\u51fa\u8fb9\u3002\u540c\u65f6\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\)\u7684\u5e8f\u5217 \\(A\\)\uff0c\u7528 \\(A_i\\) \u8868\u793a\u6709\u4e00\u6761\u8fb9 \\((i, A_i)\\) \u4e14 \\(i \u2260 A_i\\)\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e\u56fe\u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u73af\uff0c\u627e\u51fa\u4efb\u610f\u4e00\u4e2a\u73af\uff0c\u9996\u5148\u8f93\u51fa\u73af\u7684\u957f\u5ea6\uff0c\u7136\u540e\u6309\u7167\u987a\u5e8f\u8f93\u51fa\u73af\u4e2d\u7684\u70b9\u3002</p> <p>\u73af\u5b58\u5728\u5176\u5b9e\u5f88\u597d\u8bc1\u660e\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u51fa\u8fb9\uff0c\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9\u5f00\u59cb\u4e00\u76f4\u8bbf\u95ee\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u70b9\u8bbf\u95ee\u6b21\u6570\u8d85\u8fc71\u6b21\u3002</p> <p>\u5047\u8bbe\u8bbf\u95ee\u987a\u5e8f\u4e3a \\(v_1v_2v_3...v_xv_{x+1}...v_{x+k}v_x\\) \uff0c\u5219 \\(v_xv_{x+1}...v_{x+k}v_x\\)\u5c31\u662f\u73af\u3002\u7528<code>ord</code>\u6570\u7ec4\u8bb0\u5f55\u8bbf\u95ee\u987a\u5e8f\uff0c<code>fir</code>\u6570\u7ec4\u8bb0\u5f55\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\u5373\u53ef\u5728 \\(O(n)\\) \u65f6\u95f4\u5b8c\u6210\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint n, A[maxn], ord[maxn], fir[maxn];\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;A[i]);\nint cur = 1, v = 1;\nwhile(!fir[v])\n{\nfir[v] = cur;\nord[cur++] = v;\nv = A[v];\n}\nprintf(\"%d\\n\", cur-fir[v]);\nfor(int i = fir[v]; i &lt; cur; i++)\nprintf(\"%d \", ord[i]);\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#d-grid-ice-floor","title":"D - Grid Ice Floor","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635\uff0c<code>#</code>\u8868\u793a\u5ca9\u77f3\uff0c<code>.</code>\u8868\u793a\u51b0\u5757\u3002\u77e9\u9635\u4e0b\u6807\u4ece \\((1, 1)\\) \u5f00\u59cb\uff0c\u5730\u56fe\u7684\u56db\u5468\u4e00\u5b9a\u662f\u5ca9\u77f3\uff0c\u5ca9\u77f3\u4e0d\u53ef\u901a\u884c\uff0c\u4f60\u7684\u4eba\u7269\u521d\u59cb\u505c\u7559\u5728 \\((2, 2)\\) \u3002\u4eba\u7269\u6bcf\u6b21\u79fb\u52a8\u65f6\uff0c\u4ece\u4e0a\u4e0b\u5de6\u53f3\u9009\u62e9\u4e00\u4e2a\u65b9\u5411\uff0c\u4e00\u8def\u6ed1\u884c\uff0c\u76f4\u5230\u78b0\u5230\u5ca9\u77f3\uff0c\u5e76\u5728\u5ca9\u77f3\u524d\u9762\u7684\u51b0\u5757\u505c\u7559\uff0c\u7136\u540e\u5f00\u59cb\u4e0b\u4e00\u6b21\u79fb\u52a8\u3002\u6c42\u51fa\u4eba\u7269\u80fd\u7ecf\u8fc7\u7684\u51b0\u5757\u6570\u91cf\uff08\u505c\u7559\u4e5f\u7b97\u7ecf\u8fc7\uff09\u3002</p> <p>\u5f88\u57fa\u7840\u7684dfs</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 200 + 10;\nint n, m;\nchar g[maxn][maxn];\nbool vis[maxn][maxn], col[maxn][maxn];\nint dr[] = {-1, 1, 0, 0};\nint dc[] = {0, 0, -1, 1};\n\nvoid dfs(int r, int c)\n{\nvis[r][c] = 1;\nfor(int i = 0; i &lt; 4; i++)\n{\nint nr = r, nc = c;\nwhile(g[nr+dr[i]][nc+dc[i]] == '.')\n{\nnr += dr[i], nc += dc[i];\ncol[nr][nc] = 1;\n}\nif(!vis[nr][nc])\ndfs(nr, nc);\n}\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%s\", g[i]);\ncol[1][1] = 1;\ndfs(1, 1);\nint ans = 0;\nfor(int i = 0; i &lt; n; i++)\nfor(int j = 0; j &lt; m; j++)\nans += col[i][j];\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#e-defect-free-squares","title":"E - Defect-free Squares","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(H \\times W\\) \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u6709 \\(N\\) \u4e2a\u4f4d\u7f6e\u662f\u6d1e\uff0c\u7528 \\((r_i, c_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u6d1e\u7684\u4f4d\u7f6e</p> <p>\u95ee\uff1a\u77e9\u9635\u4e2d\u6709\u591a\u5c11\u4e2a\u6ca1\u6709\u6d1e\u7684\u6b63\u65b9\u5f62\uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1 \u2264 H,W \u2264 3000\\)</p> <p>\u9884\u5904\u7406\u51fa\u524d\u7f00\u548c\uff0c\u6b63\u65b9\u5f62\u7684\u548c\u4e3a0\u76f8\u5f53\u4e8e\u6ca1\u6709\u6d1e\u3002\u7136\u540e\u679a\u4e3e\u5de6\u4e0a\u89d2\uff0c\u5bf9\u4e8e\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\uff0c\u4e8c\u5206\u4e00\u4e2a\u6700\u5927\u503c\u51fa\u6765\uff0c\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u5c31\u662f\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5de6\u4e0a\u89d2\u7684\u4e2a\u6570\u3002\\(O(n^2logn)\\)\uff0c\u5e38\u6570\u8f83\u5c0f\uff0c\u6211\u505a\u7684\u65f6\u5019\u5c31\u662f\u4e8c\u5206\u8fc7\u7684\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 3010;\ntypedef long long LL;\nint n, m, s[maxn][maxn], k, len[maxn][maxn];\nint getsum(int r1, int c1, int r2, int c2)\n{return s[r2][c2] - s[r2][c1-1] - s[r1-1][c2] + s[r1-1][c1-1];}\nint check(int r, int c, int n)\n{return !getsum(r, c, r+n-1, c+n-1);}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\nwhile(k--)\n{\nint r, c;\nscanf(\"%d %d\", &amp;r, &amp;c);\ns[r][c] = 1;\n}\nfor(int i = 1; i &lt;= n; i++)\nfor(int j = 1; j &lt;= m; j++)\ns[i][j] += s[i-1][j] + s[i][j-1] - s[i-1][j-1];\nint l, r;\nLL ans = 0;\nfor(int i = 1; i &lt;= n; i++)\nfor(int j = 1; j &lt;= m; j++)\n{\nif(getsum(i, j, i, j) == 1)\ncontinue;\nl = max(1, len[i-1][j-1]-1);\nr = min(n-i, m-j) + 1;\nwhile(l &lt; r)\n{\nint x = (l + r + 1) / 2;\nif(check(i, j, x))\nl = x;\nelse\nr = x - 1;\n}\nlen[i][j] = l;\nans += l;\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u8fd9\u91cc\u7528\u4e86<code>len</code>\u6570\u7ec4\uff0c<code>len[i][j]</code>\u8868\u793a\u4ee5<code>(i,j)</code>\u4e3a\u5de6\u4e0a\u89d2\u7684\u6ca1\u6709\u6d1e\u7684\u6b63\u65b9\u5f62\u7684\u6700\u5927\u8fb9\u957f\uff0c\u663e\u7136\uff0c<code>len[i][j]</code>\u4e0e<code>len[i-1][j-1]</code>\u662f\u6709\u5173\u7cfb\u7684\uff0c\u4e8c\u5206\u7684\u65f6\u5019\u7528<code>len</code>\u6570\u7ec4\u53ef\u4ee5\u66f4\u52a0\u7cbe\u51c6\u7684\u786e\u5b9a<code>l</code>\u7684\u4e0b\u754c\uff0c\u4f18\u5316\u4e86\u4e00\u70b9\u5e38\u6570\u3002</p> <p>\u4e0d\u8fc7\u65e2\u7136\u80fd\u60f3\u5230<code>len</code>\u4e4b\u95f4\u7684\u5173\u8054\uff0cdp\u51e0\u4e4e\u662f\u547c\u4e4b\u6b32\u51fa\u7684\uff0c\u53ea\u9700\u8981\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\\(dp[i][j]\\)\uff1a\u4ee5 \\((i, j)\\) \u4e3a\u53f3\u4e0b\u89d2\u7684\u6ca1\u6709\u6d1e\u7684\u6b63\u65b9\u5f62\u7684\u6700\u5927\u8fb9\u957f\u3002</p> <p>\u8f6c\u79fb\u4e5f\u6bd4\u8f83\u76f4\u89c2\uff0c\u5982\u56fe\uff0c<code>dp[i-1][j-1], dp[i-1][j], dp[i][j-1]</code>\u53e0\u52a0\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u5f97\u5230<code>dp[i][j]</code></p> <p></p> \\[ dp[i][j] = \\left\\{ \\begin{matrix} min(dp[i-1][j-1],\\ dp[i-1][j],\\ dp[i][j-1]) + 1 &amp; \\quad (hole[i][j] == 0) \\\\ 0 &amp; \\quad   (hole[i][j] == 1) \\end{matrix} \\right. \\] <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 3010;\ntypedef long long LL;\nint n, m, k, dp[maxn][maxn];\nbool hole[maxn][maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\nwhile(k--)\n{\nint r, c;\nscanf(\"%d %d\", &amp;r, &amp;c);\nhole[r][c] = 1;\n}\nLL ans = 0;\nfor(int i = 1; i &lt;= n; i++)\nfor(int j = 1; j &lt;= m; j++)\n{\ndp[i][j] = hole[i][j] ? 0 : min(dp[i-1][j-1], min(dp[i][j-1], dp[i-1][j])) + 1;\nans += dp[i][j];\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#f-yet-another-grid-task","title":"F - Yet Another Grid Task","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635\uff0c<code>#</code>\u8868\u793a\u9ed1\u8272\uff0c<code>.</code>\u8868\u793a\u767d\u8272\uff0c\u5982\u679c\u4e00\u4e2a\u77e9\u9635\u7684\u6240\u6709\u4f4d\u7f6e\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u79f0\u8fd9\u4e2a\u77e9\u9635\u662f\u7f8e\u4e3d\u7684\uff1a</p> <ul> <li>\u82e5 \\((i, j)\\) \u662f\u9ed1\u8272\uff0c\u4e14 \\((i+1, j)\\) \u5b58\u5728\uff0c\u5219 \\((i+1, j)\\) \u4e5f\u662f\u9ed1\u8272\u3002</li> <li>\u82e5 \\((i, j)\\) \u662f\u9ed1\u8272\uff0c\u4e14 \\((i+1, j+1)\\) \u5b58\u5728\uff0c\u5219 \\((i+1, j+1)\\) \u4e5f\u662f\u9ed1\u8272\u3002</li> </ul> <p>\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u5c06\u4efb\u610f\u591a\u4e2a\u767d\u8272\u67d3\u6210\u9ed1\u8272\uff0c\u6c42\u51fa\u80fd\u5c06\u56fe\u53d8\u6210\u7f8e\u4e3d\u7684\u67d3\u8272\u65b9\u6848\u6570\uff08mod <code>998244353</code>\uff09\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\u2264N,M\u22642000\\)</p> <p>\u501f\u9274\u4e86 \u8fd9\u4e2a\u9898\u89e3 \u7684\u505a\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u9ed1\u8272\u65b9\u5757\uff0c\u4f1a\u9650\u5236\u8fd9\u4e2a\u65b9\u5757\u53f3\u4e0b\u7684\u659c\u7ebf(\u4e5f\u5305\u62ec\u659c\u7ebf\u4ee5\u4e0b\u7684\u4f4d\u7f6e)\u90fd\u6d82\u6210\u9ed1\u8272\uff0c\u800c\u6709\u4e9b\u4f4d\u7f6e\u662f\u53d7\u5176\u4ed6\u9ed1\u8272\u5f71\u54cd\u5fc5\u987b\u6d82\u6210\u9ed1\u8272\uff0c\u6709\u7684\u4f4d\u7f6e\u662f\u81ea\u5df1\u624b\u52a8\u6d82\u9ed1\u7684(\u53ef\u9009)\u3002</p> <p>\u8003\u8651\u4ece\u5de6\u5f80\u53f3\u6d82\uff0c\u6bcf\u4e00\u5217\u53ea\u9700\u8981\u8003\u8651\u6700\u9ad8\uff08\u6ce8\uff1a\u884c\u53f7\u8d8a\u5c0f\u8d8a\u9ad8\uff0c\u5373\u7b2c0\u884c\u6700\u9ad8\uff09\u7684\u9ed1\u8272\u65b9\u5757\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6700\u9ad8\u7684\u9ed1\u8272\u65b9\u5757\u4e0b\u65b9\u7684\u65b9\u5757\u662f\u88ab\u5f3a\u5236\u6d82\u9ed1\u7684\u3002\u5047\u8bbe\u7b2c<code>c-1</code>\u5217\u6700\u9ad8\u7684\u9ed1\u8272\u65b9\u5757\u4f4d\u7f6e\u662f<code>r</code>\uff0c\u5219\uff08\u5728\u4e0d\u8003\u8651\u521d\u59cb\u7684\u9ed1\u8272\u65b9\u5757\u7684\u60c5\u51b5\u4e0b\uff09\u53ef\u4ee5\u5c06\u7b2c<code>c</code>\u5217\u7684\u6700\u9ad8\u9ed1\u8272\u65b9\u5757\u5b9a\u5728<code>0</code>\u5230<code>r+1</code>\u3002</p> <p>\u4e8e\u662f\u6709 \\(dp[c][r]\\) \uff1a\u524d \\(c\\) \u5217\u5df2\u7ecf\u6d82\u5b8c\uff0c\u4e14\u7b2c \\(c\\) \u5217\u6700\u9ad8\u7684\u9ed1\u8272\u65b9\u5757\u9ad8\u5ea6\u662f \\(r\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u8003\u8651 \\(dp[c][r]\\) \u53ef\u4ee5\u4ece\u54ea\u4e9b\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\uff0c\u82e5 $i+1 &lt; r $\uff0c\u6b64\u65f6 \\(dp[c-1][i]\\) \u662f\u4e0d\u80fd\u8f6c\u79fb\u5230 \\(dp[c][r]\\) \u7684\uff0c\u56e0\u4e3a \\((c-1, i)\\) \u662f\u9ed1\u8272\uff0c\u6240\u4ee5 \\((c, i+1)\\) \u4f1a\u88ab\u5f3a\u5236\u6d82\u6210\u9ed1\u8272\uff0c\u8fd9\u4e0e\u72b6\u6001\u7684\u5b9a\u4e49\u4e0d\u7b26\u3002\u82e5 \\(i + 1 \u2265 r\\) \uff0c\u6b64\u65f6\u7684 \\(dp[c-1][i]\\) \u53ef\u4ee5\u8f6c\u79fb\u5230 \\(dp[c][r]\\) \uff0c\u56e0\u4e3a\u53ef\u4ee5\u624b\u52a8\u5728 \u7b2c \\(c\\) \u5217 \u6d82\u8272\u4f7f\u5f97\u6700\u9ad8\u7684\u9ed1\u8272\u65b9\u5757\u9ad8\u5ea6\u662f \\(r\\)</p> <p>\u56e0\u6b64\u8f6c\u79fb\u4e3a \\(dp[c][r] = \\sum\\limits_{i=r-1}^{n}dp[c-1][i]\\)\uff0c\u5176\u4e2d \\(i = n\\) \u8868\u793a\u7b2c \\(c-1\\) \u5217\u5168\u662f\u767d\u8272\u7684\u60c5\u51b5\u3002</p> <p>\u5f53\u7136\uff0c\u4e0a\u9762\u7684\u8fd9\u4e2a\u8f6c\u79fb\u662f \\(O(n)\\) \u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f04\u4e2a\u524d\u7f00\u548c\uff0c\u4ece\u4e0b\u5f80\u4e0a\u679a\u4e3e\uff0c\u5c31\u80fd\u5728 \\(O(1)\\) \u7684\u65f6\u95f4\u8f6c\u79fb\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int mod = 998244353;\nconst int maxn = 2010;\nint n, m;\nchar g[maxn][maxn];\nint dp[maxn][maxn], h[maxn];\n\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%s\", g[i]);\nfor(int j = 0; j &lt; m; j++)\n{\nh[j] = n;\nfor(int i = 0; i &lt; n; i++)\nif(g[i][j] == '#')\n{\nh[j] = i;\ng[i+1][j+1] = '#';\nbreak;\n}\n}\nfor(int i = h[0]; ~i; i--)\ndp[0][i] = dp[0][i+1] + 1;\nfor(int c = 1; c &lt; m; c++)\nfor(int r = h[c]; ~r; r--)\ndp[c][r] = (dp[c][r+1] + dp[c-1][max(0, r-1)]) % mod;\ncout &lt;&lt; dp[m-1][0] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u6781\u81f4\u4f18\u5316\u7a7a\u95f4...</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nconst int mod = 998244353;\nint n, m;\n\nusing namespace std;\n\nint main()\n{\nios::sync_with_stdio(false);\n\ncin &gt;&gt; n &gt;&gt; m;\nvector&lt;int&gt; dp(n+2), h(m, n);\nstring s;\nfor(int i = 0; i &lt; n; i++)\n{\ncin &gt;&gt; s;\nfor(int j = 0; j &lt; m; j++)\nif(s[j] == '#')\nh[j] = min(h[j], i);\n}\nfor(int i = h[0]; ~i; i--)\ndp[i] = dp[i+1] + 1;\nfor(int c = 1; c &lt; m; c++)\n{\nfor(int r = n; r &gt; h[c]; r--)\ndp[r] = 0;\nfor(int r = h[c]; ~r; r--)\ndp[r] = (dp[r+1] + dp[max(0, r-1)]) % mod;\n}\ncout &lt;&lt; dp[0] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#g-one-more-grid-task","title":"G - One More Grid Task","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635 \\(A\\) \uff0c\\(A\\) \u7684\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u3002\u7528 \\(R\\) \u8868\u793a \\(A\\) \u7684\u5b50\u77e9\u9635\uff0c\\(sum(R)\\) \u8868\u793a\u5b50\u77e9\u9635\u6240\u6709\u6570\u5b57\u4e4b\u548c\uff0c\\(min(R)\\) \u8868\u793a\u5b50\u77e9\u9635\u4e2d\u6700\u5c0f\u7684\u6570\u5b57\u3002\u5b9a\u4e49 \\(f(R) = sum(R) \\times min(R)\\)\uff0c\u5bf9\u4e8e \\(A\\) \u7684\u6240\u6709\u5b50\u77e9\u9635\uff0c\u6c42\u51fa\u6700\u5927\u7684 \\(f(R)\\)\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\u2264N,M,A_{i,j}\u2264300\\)</p> <p>\u9996\u5148\u56fa\u5b9a\u5b50\u77e9\u9635\u7684\u5de6\u53f3\u4e24\u8fb9 \\(l\\) \u548c \\(r\\) \uff0c\u7136\u540e\u7528 \\(O(n)\\) \u65f6\u95f4\u5904\u7406\u51fa\u4e24\u4e2a\u6570\u7ec4\uff1a</p> <p>\\(c_{l,r}[i] = min(a[i][l],\\ a[i][l+1]\\ ...\\ a[i][r])\\)</p> <p>\\(d_{l,r}[i] = a[i][l]+a[i][l+1] +\\ ...\\  + a[i][r]\\)</p> <p>\u63a5\u4e0b\u6765\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 \\(c\\) \u548c \\(d\\) \u6c42\u51fa \\((x, y)\\) \u4f7f\u5f97 \\(f(x, y) = min(c[x]...c[y]) \\times (d[x]+\\ ...\\ + d[y])\\) \u6700\u5927</p> <p>\u5148\u5c06 \\(d\\) \u5904\u7406\u6210\u524d\u7f00\u548c\u5f62\u5f0f\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a \\(c[i]=min(c[x]...c[y])\\) \u7684\u60c5\u51b5\uff0c\u7531\u4e8e \\(d\\) \u4e2d\u7684\u503c\u975e\u8d1f\uff0c\u5728\u6700\u5c0f\u503c\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u80af\u5b9a\u8d8a\u5927\u8d8a\u597d\uff0c \u56e0\u6b64 \\(c[i]=min(c[x]...c[y])\\) \u8bf4\u660e \\(c[i] &gt; c[x-1]\\) \u4e14 \\(c[i] &gt; c[y+1]\\)\uff0c\u8fd9\u5c31\u8f6c\u5316\u6210\u627e\u51fa \\(c\\) \u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u4e0a\u4e00\u4e2a\u3001\u4e0b\u4e00\u4e2a\u6bd4\u4ed6\u5c0f\u7684\u5143\u7d20\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u5728 \\(O(n)\\) \u7684\u65f6\u95f4\u89e3\u51b3\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^3)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 310;\nint n, m, a[maxn][maxn], c[maxn], um[maxn], d[maxn];\nLL ds[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; i++)\nfor(int j = 1; j &lt;= m; j++)\nscanf(\"%d\", &amp;a[i][j]);\nLL ans = 0;\nfor(int l = 1; l &lt;= m; l++)\n{\nfor(int i = 1; i &lt;= n; i++)\nc[i] = 500, d[i] = 0;\nfor(int r = l; r &lt;= m; r++)\n{\nfor(int i = 1; i &lt;= n; i++)\nc[i] = min(c[i], a[i][r]), d[i] += a[i][r];\nfor(int i = 1; i &lt;= n; i++)\nds[i] = ds[i-1] + d[i];\nstack&lt;int&gt; st;\nfor(int i = n; i; i--)\n{\nwhile(!st.empty() &amp;&amp; c[i] &lt; c[st.top()])\num[st.top()] = i, st.pop();\nst.push(i);\n}\nwhile(!st.empty())\num[st.top()] = 0, st.pop();\nfor(int i = n; i; i--)\n{\nwhile(!st.empty() &amp;&amp; c[st.top()] &gt;= c[i])\nst.pop();\nint dm = st.empty() ? n : st.top() - 1;\nans = max(ans, (ds[dm]-ds[um[i]]) * c[i]);\nst.push(i);\n}\n}\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/","title":"ABC312(A-F)","text":""},{"location":"algorithm/AtCoder/abc312/#a-chord","title":"A - Chord","text":"<p>\u5224\u65ad\u5b57\u7b26\u4e32 \\(S\\) \u662f\u5426\u7b49\u4e8e <code>ACE</code>, <code>BDF</code>, <code>CEG</code>, <code>DFA</code>, <code>EGB</code>, <code>FAC</code>,  <code>GBD</code> \u4e4b\u4e00</p> <p>\u76f4\u63a5\u5224\u65ad</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nstring s;\ncin &gt;&gt; s;\nif(s == \"ACE\" || s == \"BDF\" || s == \"CEG\" || s == \"DFA\" || s == \"EGB\" || s == \"FAC\" || s == \"GBD\")\nputs(\"Yes\");\nelse\nputs(\"No\");\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#b-tak-code","title":"B - TaK Code","text":"<p>\u6709\u4e00\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u53ea\u6709 <code>#</code> \u6216 <code>.</code> \uff0c\u95ee\uff1a\u6709\u591a\u5c11\u4e2a\u5982\u4e0b\u5f62\u72b6\u7684 \\(9 \\times 9\\) \u5b50\u77e9\u9635</p> <pre><code>###.?????\n###.?????\n###.?????\n....?????\n?????????\n?????....\n?????.###\n?????.###\n?????.###\n</code></pre> <p>\u5176\u4e2d <code>?</code> \u53ef\u4ee5\u662f  <code>#</code> \u6216 <code>.</code></p> <p>\u76f4\u63a5\u679a\u4e3e\u5373\u53ef</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n, m;\nchar s[maxn][maxn];\nbool check1(int r, int c)\n{\nfor(int i = 0; i &lt; 3; i++)\nfor(int j = 0; j &lt; 3; j++)\nif(s[r][c] != '#')\nreturn 0;\nreturn 1;\n}\nbool check2(int r, int c)\n{\nfor(int i = 0; i &lt; 4; i++)\nif(s[r-i][c] != '.' || s[r][c-i] != '.')\nreturn 0;\nreturn 1;\n}\nbool check3(int r, int c)\n{\nfor(int i = 0; i &lt; 4; i++)\nif(s[r+i][c] != '.' || s[r][c+i] != '.')\nreturn 0;\nreturn 1;\n}\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%s\", s[i]+1);\nfor(int i = 1; i+8 &lt;= n; i++)\nfor(int j = 1; j+8 &lt;= m; j++)\nif(check1(i, j) &amp;&amp; check2(i+3, j+3) &amp;&amp; check3(i+5, j+5) &amp;&amp; check1(i+6, j+6))\nprintf(\"%d %d\\n\", i, j);\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#c-invisible-hand","title":"C - Invisible Hand","text":"<p>\u6709 \\(N\\) \u4e2a\u5356\u5bb6\u548c \\(M\\) \u4e2a\u4e70\u5bb6\uff0c\u6bcf\u4e2a\u5356\u5bb6\u90fd\u6709\u9884\u671f\u5356\u51fa\u4ef7\u683c \\(A_i\\) \uff0c\u5f53\u4ef7\u683c\u5927\u4e8e\u6216\u7b49\u4e8e \\(A_i\\) \u65f6\u5356\u5bb6\u624d\u613f\u610f\u5356\u51fa\u3002\u4e70\u4e2a\u4e70\u5bb6\u6709\u9884\u671f\u4e70\u5165\u4ef7\u683c \\(B_i\\) \uff0c\u5f53\u4ef7\u683c\u5c0f\u4e8e\u6216\u7b49\u4e8e \\(B_i\\) \u65f6\u4e70\u5bb6\u624d\u613f\u610f\u4e70\u5165\u3002\u627e\u51fa\u6700\u5c0f\u7684\u6570 \\(X\\) \uff0c\u4f7f\u5f97\u613f\u610f\u5356\u51fa\u7684\u4eba\u6570\u5927\u4e8e\u7b49\u4e8e\u613f\u610f\u4e70\u5165\u7684\u4eba\u6570\u3002</p> <p>\u4e8c\u5206\uff0c\u8bc1\u660e\u5355\u8c03\u6027\uff1a\u5982\u679c \\(X\\) \u7684\u503c\u8c03\u4f4e\uff0c\u5219\u5356\u5bb6\u4f1a\u53d8\u5c11\uff0c\u800c\u5356\u5bb6\u4f1a\u53d8\u591a\uff0c\u53cd\u4e4b\u540c\u7406\uff0c\u56e0\u6b64\u6ee1\u8db3\u5355\u8c03\u6027\u3002</p> <p>\u5bf9\u4e70\u5bb6\u548c\u5356\u5bb6\u7684\u4ef7\u683c\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\uff0ccheck\u7684\u65f6\u5019\u4e5f\u4e8c\u5206\u5c31\u80fd\u77e5\u9053\u6709\u591a\u5c11\u5356\u5bb6\u548c\u4e70\u5bb6\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint a[maxn], b[maxn], n, m;\n\nint check(int num)\n{\nreturn lower_bound(a, a+n, num+1) - a &gt;= b + m - lower_bound(b, b+m, num);\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%d\", &amp;a[i]);\nfor(int i = 0; i &lt; m; i++)\nscanf(\"%d\", &amp;b[i]);\nsort(a, a+n);\nsort(b, b+m);\nint l = min(a[0], b[0]) - 1, r = max(a[n-1], b[m-1]) + 1;\nwhile(l &lt; r)\n{\nint x = (l + r) / 2;\nif(check(x))\nr = x;\nelse\nl = x + 1;\n}\ncout &lt;&lt; l &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u5982\u679c\u63a8\u4e00\u4e0b\u4f1a\u53d1\u73b0\u7b54\u6848\u4e00\u5b9a\u662f \\(A_i\\) \u6216 \\(B_i + 1\\)\uff0c\u8fdb\u4e00\u6b65\u53ef\u4ee5\u53c2\u8003 \u8fd9\u4e2a\u9898\u89e3 \uff0c\u5c06 \\(A_i\\) \u548c \\(B_i + 1\\) \u5408\u5e76\u7136\u540e\u6392\u5e8f\u76f4\u63a5\u8f93\u51fa \\(M-1\\) \u5143\u7d20\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O((N+M)log(N+M))\\)</p> <pre><code>N, M = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nprint(sorted(A + list(map(lambda x: x + 1, B)))[M - 1])\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#d-count-bracket-sequences","title":"D - Count Bracket Sequences","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5b57\u7b26\u4e32 \\(S\\) \uff0c\\(S\\) \u7531 <code>(</code>\uff0c <code>)</code> \u548c <code>?</code> \u7ec4\u6210\uff0c\u4f60\u9700\u8981\u5c06 <code>?</code> \u66ff\u6362\u6210 <code>(</code> \u6216 <code>)</code>\uff0c\u95ee\uff1a\u6709\u591a\u5c11\u79cd\u65b9\u6848\u80fd\u591f\u5c06 \\(S\\) \u66ff\u6362\u6210\u62ec\u53f7\u5339\u914d\u7684\u5b57\u7b26\u4e32\u3002\u7b54\u6848 \\(\\bmod 998244353\\)</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(N \u2264 3000\\)</p> <p>\u7ecf\u5178\u62ec\u53f7\u5339\u914d\u9898\uff0c<code>(</code> \u770b\u6210 <code>1</code> \uff0c<code>)</code> \u770b\u6210 <code>-1</code> \uff0c\u5408\u6cd5\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u524d\u7f00\u548c\u5927\u4e8e\u7b49\u4e8e <code>0</code></p> <p>\u5b9a\u4e49 \\(dp[i][j]\\) \uff1a\u524d \\(i\\) \u4e2a\u6570\u5b57\u4f7f\u5f97\u524d\u7f00\u548c\u4e3a \\(j\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u8f6c\u79fb\uff1a</p> \\[ dp[i][j] = \\left\\{  \\begin{matrix} dp[i-1][j-1], &amp; s[i]\\ ==\\ ( \\\\ dp[i-1][j+1], &amp; s[i]\\ ==\\ ) \\\\ dp[i-1][j-1] + dp[i-1][j+1], &amp; s[i]\\ ==\\ ? \\\\ \\end{matrix} \\right. \\] <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N^2)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nconst int maxn = 3010;\nconst int mod = 998244353;\nint n;\nchar s[maxn];\nint dp[maxn][maxn];\n\nint main()\n{\nscanf(\"%s\", s+1);\nn = strlen(s+1);\ndp[0][0] = 1;\nfor(int i = 1; i &lt;= n; i++)\n{\nif(s[i] == '(')\n{\nfor(int j = 1; j &lt;= n; j++)\ndp[i][j] = (dp[i][j] + dp[i-1][j-1]) % mod;\n}\nelse if(s[i] == ')')\n{\nfor(int j = 0; j &lt; n; j++)\ndp[i][j] = (dp[i][j] + dp[i-1][j+1]) % mod;\n}\nelse\n{\nfor(int j = 1; j &lt;= n; j++)\ndp[i][j] = (dp[i][j] + dp[i-1][j-1]) % mod;\nfor(int j = 0; j &lt; n; j++)\ndp[i][j] = (dp[i][j] + dp[i-1][j+1]) % mod;\n}\n}\ncout &lt;&lt; dp[n][0] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#e-tangency-of-cuboids","title":"E - Tangency of Cuboids","text":"<p>\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u6709 \\(N\\) \u4e2a \u4e92\u4e0d\u76f8\u4ea4\u7684\u957f\u65b9\u4f53\uff0c\u5982\u679c\u4e24\u4e2a\u957f\u65b9\u4f53\u6709\u4e00\u9762\u76f8\u90bb\uff0c\u5219\u79f0\u8fd9\u4e24\u4e2a\u957f\u65b9\u4f53\u76f8\u90bb\u3002\u8f93\u51fa\u6bcf\u4e2a\u957f\u65b9\u4f53\u4e0e\u5176\u4ed6\u957f\u65b9\u4f53\u76f8\u90bb\u7684\u6570\u91cf\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a</p> <ul> <li> <p>\\(1 \u2264 N \u2264 10^5\\)</p> </li> <li> <p>\\(0 \u2264 X, Y, Z \u2264 100\\)</p> </li> </ul> <p>\u7a7a\u95f4\u53ea\u6709 <code>100</code>\uff0c\u5206\u6210\u591a\u4e2a \\(1\\times1\\times1\\) \u7684\u5c0f\u65b9\u5757\u3002\u7531\u4e8e\u957f\u65b9\u4f53\u4e92\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5\u4e00\u4e2a\u5c0f\u65b9\u5757\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u957f\u65b9\u4f53\uff0c\u5982\u679c\u4e24\u4e2a\u5c0f\u65b9\u5757\u76f8\u90bb\uff0c\u5219\u8bf4\u660e\u5bf9\u5e94\u7684\u957f\u65b9\u4f53\u662f\u76f8\u90bb\u7684\u3002\u7528\u4e00\u4e2a <code>id[100][100][100]</code> \u8bb0\u5f55\u5c0f\u65b9\u5757\u7684\u5f52\u5c5e\uff0c\u7136\u540e\u904d\u5386\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86\u3002\u4f7f\u7528\u54c8\u5e0c\u8868\u8bb0\u5f55\u6bcf\u4e2a\u957f\u65b9\u4f53\u548c\u8c01\u76f8\u90bb\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_set&gt;\n\nusing namespace std;\n\nconst int maxx = 110;\nconst int maxn = 1E5 + 10;\nunordered_set&lt;int&gt; face[maxn];\nint id[maxx][maxx][maxx];\nint n;\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 1, x1, y1, z1, x2, y2, z2; i &lt;= n; i++)\n{\ncin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; z1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; z2;\nfor(int x = x1; x &lt; x2; x++)\nfor(int y = y1; y &lt; y2; y++)\nfor(int z = z1; z &lt; z2; z++)\nid[x][y][z] = i;\n}\nfor(int x = 0; x &lt; 100; x++)\nfor(int y = 0; y &lt; 100; y++)\nfor(int z = 0; z &lt; 100; z++)\nif(id[x][y][z])\n{\nif(id[x+1][y][z] &amp;&amp; id[x+1][y][z] != id[x][y][z])\n{\nface[id[x+1][y][z]].insert(id[x][y][z]);\nface[id[x][y][z]].insert(id[x+1][y][z]);\n}\nif(id[x][y+1][z] &amp;&amp; id[x][y+1][z] != id[x][y][z])\n{\nface[id[x][y+1][z]].insert(id[x][y][z]);\nface[id[x][y][z]].insert(id[x][y+1][z]);\n}\nif(id[x][y][z+1] &amp;&amp; id[x][y][z+1] != id[x][y][z])\n{\nface[id[x][y][z+1]].insert(id[x][y][z]);\nface[id[x][y][z]].insert(id[x][y][z+1]);\n}\n}\nfor(int i = 1; i &lt;= n; i++)\ncout &lt;&lt; face[i].size() &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#f-cans-and-openers","title":"F - Cans and Openers","text":"<p>\u6709 \\(N\\) \u4e2a\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u90fd\u6709\u4e00\u4e2a \\(X_i\\) \u5c5e\u6027\uff0c\u7269\u54c1\u6709\u4e09\u79cd\u7c7b\u578b\uff0c</p> <ul> <li>\u6613\u62c9\u7f50\uff1a\u83b7\u5f97\u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00\uff0c\u6253\u5f00\u4e4b\u540e\u83b7\u5f97 \\(X_i\\) \u7684\u5206\u6570\u3002</li> <li>\u5bc6\u5c01\u7f50\uff1a\u9700\u8981\u4f7f\u7528\u5f00\u7f50\u5668\u624d\u80fd\u6253\u5f00\uff0c\u6253\u5f00\u4e4b\u540e\u83b7\u5f97 \\(X_i\\) \u7684\u5206\u6570\u3002</li> <li>\u5f00\u7f50\u5668\uff1a\u7528\u4e8e\u6253\u5f00\u5bc6\u5c01\u7f50\uff0c\u53ef\u4ee5\u4f7f\u7528 \\(X_i\\) \u6b21\u3002</li> </ul> <p>\u95ee\uff1a\u4ece\u4e2d\u9009\u62e9 \\(M\\) \u4e2a\u7269\u54c1\uff0c\u6700\u591a\u80fd\u83b7\u5f97\u591a\u5c11\u5206\u6570\uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1 \u2264 M \u2264 N \u2264 2 \\times 10^5\\)</p> <p>\u663e\u7136\uff0c\u5bf9\u4e8e\u4e09\u79cd\u7269\u54c1\uff0c\u5728\u80fd\u9009\u62e9\u7684\u60c5\u51b5\u4e0b\uff0c\u90fd\u662f\u9009\u62e9 \\(X_i\\) \u8d8a\u5927\u7684\u8d8a\u597d\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u56fa\u5b9a\u6613\u62c9\u7f50\u7684\u6570\u91cf\uff0c \u5047\u8bbe\u5df2\u7ecf\u9009\u62e9\u4e86 \\(i\\) \u4e2a\u5206\u6570\u6700\u9ad8\u7684\u6613\u62c9\u7f50\uff0c\u90a3\u4e48\u5269\u4e0b\u7684 \\(M-i\\)  \u4e2a\u7269\u54c1\u5c31\u662f\u5bc6\u5c01\u7f50\u548c\u5f00\u7f50\u5668\uff0c\u6309\u7167\u4f18\u5148\u7ea7\u4e00\u4e2a\u4e00\u4e2a\u9009\u5373\u53ef\u3002</p> <p>\u8fd9\u6837\u7684\u8bdd\uff0c\u7b2c\u4e00\u5c42\u679a\u4e3e \\(i\\) \u9700\u8981\u904d\u5386 \\(M\\) \u6b21\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u9009\u62e9\u5269\u4e0b\u7684 \\(M-i\\) \u4e2a\u7269\u54c1\u4e5f\u9700\u8981 \\(M\\) \u6b21\uff0c\u8fd9\u6837\u80af\u5b9a\u8d85\u65f6\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e\u7269\u54c1\u4e4b\u95f4\u7684\u4f18\u5148\u7ea7\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u4e1c\u897f\u52a0\u901f\uff1a\u5177\u4f53\u6765\u8bf4\uff0c\u5f00\u4e24\u4e2a\u6570\u7ec4 <code>sa[]</code> \u548c <code>sb[]</code> \uff0c<code>sa[i]</code> \u8868\u793a\u9009\u62e9 <code>i</code> \u4e2a\u6613\u62c9\u7f50\u80fd\u83b7\u5f97\u7684\u6700\u9ad8\u5206\u6570\uff0c\u7531\u4e8e\u5206\u6570\u8d8a\u9ad8\u8d8a\u597d\uff0c\u56e0\u6b64\u6784\u9020 <code>sa[]</code> \u53ea\u9700\u8981\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u4ece\u9ad8\u5230\u4f4e\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u3002 <code>sb[j]</code> \u8868\u793a\u9009\u62e9 <code>j</code> \u4e2a\u5176\u4f59\u7269\u54c1\u80fd\u83b7\u5f97\u6700\u9ad8\u7684\u5206\u6570\uff0c\u6784\u9020 <code>sb[]</code> \u7684\u8fc7\u7a0b\u4e5f\u5f88\u7b80\u5355\uff0c\u624b\u4e0a\u6ca1\u6709\u5f00\u7f50\u5668\u5c31\u52a0\u4e00\u4e2a\uff0c\u5982\u679c\u6709\u5f00\u7f50\u5668\uff0c\u4e5f\u662f\u4ece\u5bc6\u5c01\u7f50\u5f53\u4e2d\u9009\u4e00\u4e2a\u5206\u6570\u6700\u9ad8\u7684\u52a0\u8d77\u6765\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nint main()\n{\nint n, m;\ncin &gt;&gt; n &gt;&gt; m;\nvector&lt;LL&gt; a, b, c;\nvector&lt;LL&gt; sa(n+1), sb(n+1);\nfor(int i = 0, t, x; i &lt; n; i++)\n{\nscanf(\"%d %d\", &amp;t, &amp;x);\nif(t == 0)\na.push_back(x);\nelse if(t == 1)\nb.push_back(x);\nelse\nc.push_back(x);\n}\nsort(a.begin(), a.end(), greater&lt;LL&gt;());\nsort(b.begin(), b.end());\nsort(c.begin(), c.end());\nfor(int i = 0; i &lt; n; i++)\nif(i &lt; a.size())\nsa[i+1] = sa[i] + a[i];\nelse\nsa[i+1] = sa[i];\nfor(int r = 0, i = 0; i &lt; n; i++)\n{\nif(b.empty())\nsb[i+1] = sb[i];\nelse if(r == 0)\n{\nif(!c.empty())\n{\nr += c.back();\nc.pop_back();\n}\nsb[i+1] = sb[i];\n}\nelse\n{\nsb[i+1] = sb[i] + b.back();\nb.pop_back();\nr--;\n}\n}\nLL ans = 0;\nfor(int i = 0; i &lt;= m; i++)\nans = max(ans, sa[i] + sb[m-i]);\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#g-avoid-straight-line","title":"G - Avoid Straight Line","text":"<p>\u6709\u4e00\u68f5 \\(N\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6c42\u51fa\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u4e09\u5143\u7ec4 \\((i, j, k)\\) \u7684\u6570\u91cf\uff1a</p> <ul> <li>\\(1 \u2264 i &lt; j &lt; k \u2264 N\\)</li> <li>\u6811\u4e2d\u4e0d\u5b58\u5728\u5305\u542b \\(i\\) \uff0c\\(j\\) \uff0c\\(k\\) \u7684\u7b80\u5355\u8def\u5f84\u3002</li> </ul> <p>\u6570\u636e\u8303\u56f4\uff1a\\(N \u2264 2 \\times 10^5\\)</p> <p>\u53c2\u8003 \u8fd9\u4e2a\u9898\u89e3 \u7684\u601d\u8def</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nconst int maxm = 4E5 + 10;\nint n, sz[maxn];\nint head[maxn], ne[maxm], edge[maxm], idx = 1;\nvoid add(int u, int v)\n{\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\nvoid dfs(int u, int fa)\n{\nsz[u] = 1;\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nif(v == fa)\ncontinue;\ndfs(v, u);\nsz[u] += sz[v];\n}\n}\n\nLL ans;\n\nvoid dfs2(int u, int fa)\n{\nLL sum = 0;\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nsum += sz[v];\n}\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nsum -= sz[v];\nans -= sz[v] * sum;\n}\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nif(v == fa)\ncontinue;\nsz[u] -= sz[v];\nsz[v] += sz[u];\ndfs2(v, u);\nsz[v] -= sz[u];\nsz[u] += sz[v];\n}\n}\n\nint main()\n{\ncin &gt;&gt; n;\nans = n * (n - 1ll) * (n - 2) / 6;\nfor(int m = n-1, u, v; m--; )\n{\nscanf(\"%d %d\", &amp;u, &amp;v);\nadd(u, v);\nadd(v, u);\n}\ndfs(1, 0);\ndfs2(1, 0);\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc332/","title":"ABC332(A-G)","text":"<p>\u8fd9\u573a\u8d28\u91cf\u592a\u9ad8\u4e86\uff01</p>"},{"location":"algorithm/AtCoder/abc332/#a-online-shopping","title":"A - Online Shopping","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a\u7f51\u5e97\u7684\u6709 \\(N\\) \u4ef6\u7269\u54c1\uff0c\u7b2c \\(i\\) \u4ef6\u7269\u54c1\u7684\u5355\u4ef7\u662f \\(P_i\\)\uff0c\u4f60\u6253\u7b97\u4e70 \\(Q_i\\) \u4ef6\u3002\u603b\u4ef7\u8fbe\u5230 \\(S\\) \u53ef\u4ee5\u514d\u8fd0\u8d39\uff0c\u4f4e\u4e8e \\(S\\) \u9700\u8981\u652f\u4ed8 \\(K\\) \u7684\u8fd0\u8d39\u3002\u95ee\uff1a\u4f60\u9700\u8981\u652f\u4ed8\u591a\u5c11\u94b1\uff1f</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, s, k, sum = 0, p, q;\ncin &gt;&gt; n &gt;&gt; s &gt;&gt; k;\nwhile(n--)\n{\ncin &gt;&gt; p &gt;&gt; q;\nsum += p * q;\n}\nif(sum &lt; s)\nsum += k;\ncout &lt;&lt; sum &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint s = in.nextInt();\nint k = in.nextInt();\nint sum = 0, p, q;\nwhile (n-- &gt; 0) {\np = in.nextInt();\nq = in.nextInt();\nsum += p * q;\n}\nif (sum &lt; s)\nsum += k;\nSystem.out.println(sum);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc332/#b-glass-and-mug","title":"B - Glass and Mug","text":"\u9898\u76ee\u5927\u610f <p>\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(G\\) \u6beb\u5347\u7684\u73bb\u7483\u676f\uff0c\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(M(G &lt; M)\\) \u6beb\u5347\u7684\u9a6c\u514b\u676f\uff0c\u521d\u59cb\u7684\u65f6\u5019\u4e24\u4e2a\u676f\u5b50\u90fd\u6ca1\u6709\u6c34\uff0c\u6267\u884c \\(K\\) \u6b21\u4e0b\u5217\u7684\u64cd\u4f5c\uff1a</p> <ul> <li>\u5982\u679c\u73bb\u7483\u676f\u7684\u6c34\u662f\u6ee1\u7684\uff0c\u5c06\u73bb\u7483\u676f\u7684\u5168\u90e8\u5012\u6389\u3002</li> <li>\u5426\u5219\uff0c\u5982\u679c\u9a6c\u514b\u676f\u662f\u7a7a\u7684\uff0c\u5c06\u9a6c\u514b\u676f\u7684\u6c34\u8865\u5145\u5230\u6ee1\u3002</li> <li>\u5426\u5219\uff0c\u5c06\u9a6c\u514b\u676f\u7684\u6c34\u5012\u5411\u73bb\u7483\u676f\uff0c\u76f4\u5230\u73bb\u7483\u676f\u7684\u6c34\u6ee1\u6216\u8005\u9a6c\u514b\u676f\u7684\u6c34\u4e3a\u7a7a\u3002</li> </ul> <p>\u95ee\uff1a\\(K\\) \u6b21\u64cd\u4f5c\u4e4b\u540e\uff0c\u4e24\u4e2a\u676f\u5b50\u8fd8\u5269\u591a\u5c11\u6c34\uff1f</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint K, G, M, g = 0, m = 0;\ncin &gt;&gt; K &gt;&gt; G &gt;&gt; M;\nwhile(K--)\n{\nif(g == G)\ng = 0;\nelse if(m == 0)\nm = M;\nelse\n{\nint d = min(G-g, m);\ng += d;\nm -= d;\n}\n}\ncout &lt;&lt; g &lt;&lt; ' ' &lt;&lt; m;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint K, G, M, g = 0, m = 0;\nK = in.nextInt();\nG = in.nextInt();\nM = in.nextInt();\nwhile (K-- &gt; 0) {\nif (g == G)\ng = 0;\nelse if (m == 0)\nm = M;\nelse {\nint d = Math.min(G - g, m);\ng += d;\nm -= d;\n}\n}\nSystem.out.printf(\"%d %d\", g, m);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc332/#c-t-shirts","title":"C - T-shirts","text":"\u9898\u76ee\u5927\u610f <p>\u5728\u4f60\u5916\u51fa\u65f6\uff0c\u4f60\u4f1a\u7a7f\u4e00\u4ef6\u886c\u886b\uff0c\u886c\u886b\u5206\u4e3a\u6709 logo \u7684\u886c\u886b\u548c\u6ca1\u6709 logo \u7684\u886c\u886b\u3002\u7a7f\u8fc7\u7684\u886c\u886b\u4f1a\u53d8\u810f\uff0c\u810f\u7684\u886c\u886b\u5fc5\u987b\u6d17\u8fc7\u624d\u80fd\u91cd\u65b0\u7a7f\u3002\u4f60\u6709\u4e00\u4efd\u63a5\u4e0b\u6765 \\(N\\) \u5929\u7684\u884c\u7a0b\uff0c\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\uff0c\u5177\u4f53\u6765\u8bf4\uff1a</p> <ul> <li>\u5982\u679c <code>s[i] == '0'</code>\uff0c\u8868\u793a\u7b2c \\(i\\) \u5929\u4f60\u5728\u5bb6\u4f11\u606f\uff0c\u5728\u5bb6\u4f11\u606f\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u6d17\u6389\u6240\u6709\u7684\u810f\u886c\u886b\uff0c\u6d17\u8fc7\u7684\u886c\u886b\u4ece\u7b2c\u4e8c\u5929\u5f00\u59cb\u5c31\u53ef\u4ee5\u7a7f\u3002</li> <li>\u5982\u679c <code>s[i] == '1'</code>\uff0c\u8868\u793a\u7b2c \\(i\\) \u5929\u4f60\u6253\u7b97\u7a7f\u4efb\u610f\u4e00\u4ef6\uff08\u6709 logo \u6216\u8005\u6ca1\u6709 logo \u7684\uff09\u886c\u886b\u5916\u51fa\u3002</li> <li>\u5982\u679c <code>s[i] == '2'</code>\uff0c\u8868\u793a\u7b2c \\(i\\)\u200b\u200b \u5929\u4f60\u6253\u7b97\u7a7f\u4e00\u4ef6\u6709 logo \u7684\u886c\u886b\u5916\u51fa\u3002</li> </ul> <p>\u521d\u59cb\u7684\u65f6\u5019\u4f60\u62e5\u6709 \\(M\\) \u4ef6\u6ca1\u6709 logo \u7684\u886c\u886b\uff0c\u4f60\u53ef\u4ee5\u989d\u5916\u8d2d\u4e70\u4e00\u4e9b\u5e26\u6709 logo \u7684\u886c\u886b\uff0c\u5728\u7b2c \\(0\\) \u5929\u7684\u65f6\u5019\u6240\u6709\u4f60\u62e5\u6709\u7684\uff08\u5305\u62ec\u989d\u5916\u8d2d\u4e70\u7684\uff09\u886c\u886b\u90fd\u5df2\u7ecf\u6d17\u8fc7\u4e86\u3002\u95ee\uff1a\u4e3a\u4e86\u6ee1\u8db3\u51fa\u884c\u7684\u9700\u8981\uff0c\u6700\u5c11\u9700\u8981\u989d\u5916\u8d2d\u4e70\u591a\u5c11\u4ef6\u5e26\u6709 logo \u7684\u886c\u886b\uff1f</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 1000 + 10;\n\nint main()\n{\nint n, m, M = 0, x = 0, y = 0;\nchar s[maxn];\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; s;\nfor(int i = 0; i &lt;= n; i++)\n{\nif(i == n || s[i] == '0' )\n{\nif(x &gt; m)\ny += x - m;\nM = max(y, M);\nx = y = 0;\n}\nelse if(s[i] == '1')\nx++;\nelse\ny++;\n}\ncout &lt;&lt; M &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n, m, M = 0, x = 0, y = 0;\nString s;\nn = in.nextInt();\nm = in.nextInt();\ns = in.next();\nfor (int i = 0; i &lt;= n; i++) {\nif (i == n || s.charAt(i) == '0') {\nif (x &gt; m)\ny += x - m;\nM = Math.max(y, M);\nx = y = 0;\n} else if (s.charAt(i) == '1')\nx++;\nelse\ny++;\n}\nSystem.out.println(M);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc332/#d-swapping-puzzle","title":"D - Swapping Puzzle","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e24\u4e2a \\(H(H \\le 5)\\) \u884c \\(W(W \\le 5)\\) \u5217\u7684\u4e8c\u7ef4\u77e9\u9635 \\(A\\) \u548c \\(B\\)\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u4ea4\u6362\u77e9\u9635 \\(A\\) \u76f8\u90bb\u7684\u4e24\u884c\u6216\u8005\u76f8\u90bb\u7684\u4e24\u5217\u3002\u95ee\uff1a\u6700\u5c11\u9700\u8981\u591a\u5c11\u6b21\u4ea4\u6362\u624d\u80fd\u8ba9 \\(A\\) \u548c \\(B\\) \u5b8c\u5168\u76f8\u7b49\uff1f\u5982\u679c\u4e0d\u53ef\u80fd\u8ba9 \\(A\\) \u548c \\(B\\) \u5b8c\u5168\u76f8\u7b49\u8f93\u51fa <code>-1</code>\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6ce8\u610f\u5230\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u8981\u60f3\u679a\u4e3e\u6240\u6709\u7684\u4ea4\u6362\u65b9\u6848\u53ea\u9700\u8981\u679a\u4e3e\u884c\u548c\u5217\u7684\u5168\u6392\u5217\uff0c\u800c\u4ea4\u6362\u6b21\u6570\u7b49\u4e8e\u9006\u5e8f\u6570\uff0c\u76f4\u63a5\u641c\u7d22\u5373\u53ef\uff0c\u4e8b\u4ef6\u590d\u6742\u5ea6\u662f \\(O(H! \\times W!)\\)\u3002</p> <p>\u5982\u679c\u8981\u8fdb\u4e00\u6b65\u526a\u679d\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u679a\u4e3e\u6392\u5217\u7684\u65f6\u5019\u662f\u6309\u7167\u9006\u5e8f\u5bf9\u9012\u589e\u7684\u987a\u5e8f\u6765\u8fdb\u884c\u7684\u5373\u53ef\uff0c\u4e8b\u5b9e\u4e0a C++ STL \u7684 <code>next_permutation()</code> \u5c31\u662f\u6309\u7167\u8fd9\u6837\u7684\u987a\u5e8f\u679a\u4e3e\u7684\uff0c\u6240\u4ee5\u4e0b\u9762\u7684 C++ \u4ee3\u7801\u4f1a\u7b80\u5355\u4e00\u4e9b\u3002</p> <p>Java \u4ee3\u7801\u662f\u81ea\u5df1\u5b9e\u73b0\u7684 <code>next_permutation()</code>\uff0c\u6ce8\u610f\u5982\u679c\u662f\u7528 dfs \u641c\u7d22\u51fa\u6765\u7684\u6392\u5217\u5e76\u4e0d\u662f\u9006\u5e8f\u5bf9\u9012\u589e\u7684\u987a\u5e8f\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int maxn = 5 + 5;\n\nint A[maxn][maxn], B[maxn][maxn];\nint rm[] = {0, 1, 2, 3, 4};\nint cm[] = {0, 1, 2, 3, 4};\nint n, m, ans = 1E8;\n\nbool check()\n{\nfor (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; m; j++)\nif (A[rm[i]][cm[j]] != B[i][j])\nreturn 0;\nreturn 1;\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; m; j++)\ncin &gt;&gt; A[i][j];\nfor (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; m; j++)\ncin &gt;&gt; B[i][j];\nint x = 0;\ndo\n{\nx = 0;\nfor (int i = 1; i &lt; n; i++)\nfor (int j = 0; j &lt; i; j++)\nx += rm[i] &lt; rm[j];\nint y = 0;\ndo\n{\ny = 0;\nfor (int i = 1; i &lt; m; i++)\nfor (int j = 0; j &lt; i; j++)\ny += cm[i] &lt; cm[j];\nif (check()) {\nans = min(ans, x + y);\nfor(int i = 0; i &lt; m; i++)\ncm[i] = i;\n}\n} while (next_permutation(cm, cm + m) &amp;&amp; x + y &lt; ans);\n} while (next_permutation(rm, rm + n) &amp;&amp; x &lt; ans);\nif (ans == 1E8)\nans = -1;\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static int[][] A, B;\nprivate static int n, m;\nprivate static int rm[];\nprivate static int cm[];\nprivate static int ans = (int) 1E8;\n\nprivate static boolean check() {\nfor (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; m; j++)\nif (A[rm[i]][cm[j]] != B[i][j])\nreturn false;\nreturn true;\n}\n\nprivate static void reverse(int[] nums, int l, int r) {\nfor (int i = l, j = r, temp; i &lt; j; i++, j--) {\ntemp = nums[i];\nnums[i] = nums[j];\nnums[j] = temp;\n}\n}\n\npublic static boolean nextPermutation(int[] nums) {\nint n = nums.length, i = n - 2;\nwhile (i &gt;= 0 &amp;&amp; nums[i] &gt;= nums[i + 1])\ni--;\nif (i == -1) {\nreverse(nums, 0, n - 1);\nreturn false;\n}\nint j = n - 1;\nwhile (j &gt; i &amp;&amp; nums[j] &lt;= nums[i])\nj--;\nint temp = nums[i];\nnums[i] = nums[j];\nnums[j] = temp;\nreverse(nums, i + 1, n - 1);\nreturn true;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nn = in.nextInt();\nm = in.nextInt();\nA = new int[n][m];\nB = new int[n][m];\nrm = new int[n];\ncm = new int[m];\nfor (int i = 0; i &lt; n; i++)\nrm[i] = i;\nfor (int i = 0; i &lt; m; i++)\ncm[i] = i;\nfor (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; m; j++)\nA[i][j] = in.nextInt();\nfor (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; m; j++)\nB[i][j] = in.nextInt();\nint x = 0;\ndo {\nx = 0;\nfor (int i = 1; i &lt; n; i++)\nfor (int j = 0; j &lt; i; j++)\nx += rm[i] &lt; rm[j] ? 1 : 0;\nint y = 0;\ndo {\ny = 0;\nfor (int i = 1; i &lt; m; i++)\nfor (int j = 0; j &lt; i; j++)\ny += cm[i] &lt; cm[j] ? 1 : 0;\nif (check()) {\nans = Math.min(ans, x + y);\nfor (int i = 0; i &lt; m; i++)\ncm[i] = i;\n}\n} while (nextPermutation(cm) &amp;&amp; x + y &lt; ans);\n} while (nextPermutation(rm) &amp;&amp; x &lt; ans);\nif (ans == 1E8)\nans = -1;\nSystem.out.println(ans);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc332/#e-lucky-bag","title":"E - Lucky bag","text":"\u9898\u76ee\u5927\u610f <p>\u4f60\u6709 \\(N(N \\le 15)\\) \u4e2a\u7269\u54c1\uff0c\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u7684\u91cd\u91cf\u662f \\(W_i(W_i \\le 10^8)\\)\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e9b\u7269\u54c1\u5206\u6210 \\(D\\) \u7ec4\uff0c\u6bcf\u4e00\u7ec4\u7684\u91cd\u91cf\u4e3a\u6240\u6709\u7269\u54c1\u7684\u91cd\u91cf\u4e4b\u548c\uff0c\u6bcf\u4e2a\u7269\u54c1\u5fc5\u987b\u5c5e\u4e8e\u4e00\u4e2a\u7ec4\uff0c\u5141\u8bb8\u5b58\u5728\u7a7a\u7684\u7ec4\uff0c\u7a7a\u7ec4\u7684\u91cd\u91cf\u662f \\(0\\)\u3002\u8bb0\u6bcf\u4e2a\u7ec4\u7684\u7269\u54c1\u91cd\u91cf\u4e4b\u548c\u4e3a \\(x_1, x_2, \\cdots x_D\\)\uff0c\u627e\u5230\u4e00\u79cd\u6700\u5c0f\u5316 \\(x_i\\) \u7684\u65b9\u5dee\u7684\u5206\u7ec4\u65b9\u6848\u3002\u6362\u8a00\u4e4b\uff0c\u4f60\u9700\u8981\u6700\u5c0f\u5316 \\(V = \\frac{1}{D}\\sum\\limits_{i = 1}^D(x_i - \\overline{x})^2\\)\uff0c\u5176\u4e2d \\(\\overline{x} = \\frac{1}{D}\\sum\\limits_{i = 1}^Dx_i\\)</p> \u89e3\u9898\u601d\u8def <p>\u8003\u8651\u5316\u7b80\u76ee\u6807\u5f0f\u5b50\uff1a</p> \\[ \\begin{align*} V   &amp; = \\frac{1}{D}\\sum_{i = 1}^D(x_i - \\overline{x})^2\\\\     &amp; = \\frac{1}{D}(\\sum_{i = 1}^Dx_i^2 + D\\overline{x}^2 - 2\\overline{x}\\sum_{i = 1}^Dx_i)\\\\     &amp; = \\frac{1}{D}(\\sum_{i = 1}^Dx_i^2 + D\\overline{x}^2 - 2D\\overline{x})\\\\     &amp; = \\frac{1}{D}\\sum_{i = 1}^Dx_i^2 - \\overline{x}^2 \\end{align*} \\] <p>\u6ce8\u610f\u5230 \\(\\overline{x} = \\frac{1}{D}\\sum\\limits_{i = 1}^Dx_i = \\frac{1}{D}\\sum\\limits_{i = 1}^NW_i\\)\uff0c\u56e0\u6b64 \\(\\overline{x}\\) \u5b9e\u9645\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5219\u5728 \\(V = \\frac{1}{D}\\sum_{i = 1}^Dx_i^2 - \\overline{x}^2\\\\\\) \u4e2d\uff0c\u53ea\u9700\u8981\u6700\u5c0f\u5316 \\(\\sum\\limits_{i = 1}^Dx_i^2\\) \u7684\u503c\u3002\u6ce8\u610f\u5230 \\(N \\le 15\\)\uff0c\u53ef\u4ee5\u7528 \u72b6\u538bdp \u6c42\u89e3\u3002</p> <p>\u5b9a\u4e49 \\(dp[s][j]\\)\uff1a\u5c06\u96c6\u5408 \\(s\\) \u7684\u7269\u54c1\u5206\u6210 \\(j\\) \u4e2a\u7ec4\uff0c\u6240\u5f97\u5230\u7684\u6bcf\u4e2a\u7ec4\u7684\u91cd\u91cf\u5e73\u65b9\u548c\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u663e\u7136\uff0c\u8f6c\u79fb\u65f6\u53ea\u9700\u8981\u679a\u4e3e\u4e00\u4e2a\u5b50\u96c6\u4f5c\u4e3a\u4e0a\u4e00\u4e2a\u5206\u7ec4\uff0c\u8bbe \\(ss\\) \u662f \\(s\\) \u7684\u5b50\u96c6\uff0c \u5219\u6709\uff1a $$ dp[s][j] = \\min_{ss \\sub s}{dp[s \\backslash ss][j-1]+(\\sum_{i \\in ss}W_i)^2} $$ \u5176\u4e2d \\(s \\backslash ss\\) \u8868\u793a \\(s\\) \u53bb\u6389\u5b50\u96c6 \\(ss\\) \u4e4b\u540e\u5269\u4f59\u7684\u96c6\u5408\uff0c\u53ea\u9700\u8981\u7528\u5f02\u6216\u8fd0\u7b97\u5373\u53ef\u3002\\((\\sum_{i \\in ss}W_i)^2\\) \u8868\u793a\u5c06 \\(ss\\) \u96c6\u5408\u4e2d\u6240\u6709\u7684\u7269\u54c1\u5206\u6210\u4e00\u7ec4\u4ea7\u751f\u7684\u91cd\u91cf\u4e4b\u548c\u7684\u5e73\u65b9\uff0c\u53ef\u4ee5\u5728 \\(O(N\\times2^N)\\) \u7684\u65f6\u95f4\u5185\u9884\u5904\u7406\u51fa\u6765\u3002</p> <p>\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u8fd8\u9700\u8981\u679a\u4e3e \\(s\\) \u7684\u6240\u6709\u5b50\u96c6 \\(ss\\)\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528 \u4f4d\u8fd0\u7b97\u6280\u5de7 \u91cc\u9762\u7684\u65b9\u6cd5\u679a\u4e3e\u51fa\u6765\uff0c\u53ef\u4ee5\u8bc1\u660e\u679a\u4e3e\u6240\u6709\u96c6\u5408\u7684\u5b50\u96c6\u9700\u8981\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(3^N)\\)\uff0c\u56e0\u6b64 dp \u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(N\\times 3^N)\\)\u3002</p> <p>\u53e6\u5916\uff0c\u672c\u9898\u7684\u6570\u636e\u975e\u5e38\u6bd2\u7624\uff0cdp \u7b97\u51fa\u6765\u7684\u7ed3\u679c\u662f <code>long long</code>\uff0c\u8f6c\u6210 <code>long double</code> \u4e4b\u540e\u8981\u5f88\u5bb9\u6613\u5728\u9664\u7684\u65f6\u5019\u4e22\u5931\u7cbe\u5ea6\uff0c\u9700\u8981\u51cf\u5c11\u9664\u6cd5\u7684\u6b21\u6570\u3002\u8bbe dp \u7684\u7ed3\u679c\u4e3a \\(X_{\\min}\\)\uff0c\u6240\u6709\u7269\u54c1\u7684\u91cd\u91cf\u4e4b\u548c\u4e3a \\(W_s\\) \u5219\u6709\uff1a</p> \\[ \\begin{align*} V   &amp; = \\frac{1}{D}\\sum_{i = 1}^Dx_i^2 - \\overline{x}^2 \\\\     &amp; = \\frac{1}{D}X_{\\min} - \\frac{1}{D^2}W_s^2 \\\\     &amp; = \\frac{DX_{\\min} - W_s^2}{D^2} \\end{align*} \\] <p>\u8fd9\u6837\u5c31\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21 <code>long double</code> \u7684\u9664\u6cd5\uff0c\u786e\u4fdd\u5c0f\u6570\u4e0d\u4f1a\u4e22\u5931\u3002</p> <p>\u53e6\u5916\uff0c\u672c\u9898\u8fd8\u5b58\u5728\u4e00\u79cd\u968f\u673a\u5316\u7684\u505a\u6cd5\uff0c\u53ea\u9700\u8981\u968f\u673a\u6253\u4e71\u7269\u54c1\u7684\u987a\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u5c06\u7269\u54c1\u52a0\u5165\u5230\u91cd\u91cf\u6700\u5c0f\u7684\u5206\u7ec4\u4e2d\u5373\u53ef\uff08\u5f88\u76f4\u89c2\u7684\u505a\u6cd5\u5bf9\u5427\uff09\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;climits&gt;\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\nconst int maxn = 15 + 10;\nconst int maxs = (1 &lt;&lt; 15) + 10;\n\nint n, d, w[maxn];\nLL sum[maxs], dp[maxs][maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; d;\nfor(int i = 0; i &lt; n; i++)\ncin &gt;&gt; w[i];\nint mask = (1 &lt;&lt; n) - 1;\nfor(int s = 0; s &lt;= mask; s++) {\nfor(int i = 0; i &lt; n; i++)\nif(s &gt;&gt; i &amp; 1)\nsum[s] += w[i];\nsum[s] *= sum[s];\n}\nfor(int s = 0; s &lt;= mask; s++)\n{\ndp[s][1] = sum[s];\nfor(int j = 2; j &lt;= d; j++)\n{\ndp[s][j] = LLONG_MAX;\nint ss = s;\ndo {\nint ls = s ^ ss;\ndp[s][j] = min(dp[s][j], dp[ls][j-1]+sum[ss]);\nss = (ss - 1) &amp; s;\n}while(ss != s);\n}\n}\nLL temp = dp[mask][d] * d - sum[mask];\nLD ans = (LD)temp / (d * d);\nprintf(\"%.8Lf\", ans);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\n\nint n = in.nextInt();\nint d = in.nextInt();\nint[] w = new int[n];\nint len = 1 &lt;&lt; n, mask = len - 1;\nlong[] sum = new long[len];\nlong[][] dp = new long[len][d + 1];\nfor (int i = 0; i &lt; n; i++)\nw[i] = in.nextInt();\nfor (int s = 0; s &lt;= mask; s++) {\nfor (int i = 0; i &lt; n; i++)\nif ((s &gt;&gt; i &amp; 1) == 1)\nsum[s] += w[i];\nsum[s] *= sum[s];\n}\nfor (int s = 0; s &lt;= mask; s++) {\ndp[s][1] = sum[s];\nfor (int j = 2; j &lt;= d; j++) {\ndp[s][j] = Long.MAX_VALUE;\nint ss = s;\ndo {\nint ls = s ^ ss;\ndp[s][j] = Math.min(dp[s][j], dp[ls][j - 1] + sum[ss]);\nss = (ss - 1) &amp; s;\n} while (ss != s);\n}\n}\nlong temp = dp[mask][d] * d - sum[mask];\ndouble ans = (double) temp / (d * d);\nSystem.out.printf(\"%.8f\", ans);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc332/#f-random-update-query","title":"F - Random Update Query","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N\\) \u4e2a\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u662f \\(A_i\\)\uff0c\u6267\u884c \\(M\\) \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6709 \\(L_i \\ R_i \\ X_i\\) \u4e09\u4e2a\u6570\uff0c\u8868\u793a\uff1a</p> <ul> <li>\u5728\u533a\u95f4 \\([L_i, R_i]\\) \u4e2d\u968f\u673a\u7b49\u6982\u7387\u7684\u9009\u62e9\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u66ff\u6362\u6210 \\(X_i\\)\u3002</li> </ul> <p>\u6c42\u51fa\u7ecf\u8fc7 \\(M\\) \u6b21\u64cd\u4f5c\u540e\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u7684\u6570\u5b66\u671f\u671b\uff0c\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5047\u8bbe\u67d0\u6b21\u64cd\u4f5c\u4e3a \\(L_i \\ R_i \\ X_i\\)\uff0c\u8bbe \\(p_i = \\frac{1}{R_i - L_i + 1}\\)\uff0c\u533a\u95f4 \\([L_i, R_i]\\) \u67d0\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u4e3a \\(a\\)\uff0c\u5219\u64cd\u4f5c\u540e\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u671f\u671b\u4e3a \\(E_1(X) = (1-p_i)a + p_iX_i\\)\u3002</p> <p>\u8003\u8651\u540e\u4e00\u4e2a\u64cd\u4f5c \\(L_j \\ R_j \\ X_j\\)\uff0c\u8bbe \\(p_j = \\frac{1}{R_j - L_j + 1}\\)\uff0c\u7ecf\u8fc7\u4e24\u6b21\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u6709\u4e09\u79cd\u53ef\u80fd\uff1a</p> \u6570\u5b57 \u6982\u7387 \\(a\\) \\((1-p_i)(1-p_j)\\) \\(X_i\\) \\(p_i(1-p_j)\\) \\(X_j\\) \\(p_j\\) <p>\u8fd9\u79cd\u60c5\u51b5\u7684\u6570\u5b66\u671f\u671b\u4e3a\uff1a</p> \\[ \\begin{align*} E_2(X)  &amp; = a(1-p_i)(1-p_j) + X_ip_i(1-p_j) + X_jp_j \\\\         &amp; = ((1-p_i)a + p_iX_i)(1-p_j) + X_jp_j \\\\         &amp; = E_1(X)\\times (1-p_j) + X_jp_j \\end{align*} \\] <p>\u4ee4 \\(k_j = 1-p_j\\)\uff0c\\(b_j = X_jp_j\\)\uff0c\u663e\u7136\uff0c\\(k_j\\) \u548c \\(b_j\\) \u90fd\u662f\u5bb9\u6613\u8ba1\u7b97\u7684\u3002</p> <p>\u8fd9\u8868\u660e \\(E_i(X)\\) \u5b9e\u9645\u662f \\(k_iE_{i-1}(X) + b_i\\) \u7684\u7ebf\u6027\u7ed3\u6784\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5728\u591a\u6b21\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u6bcf\u6b21\u7b97\u51fa \\(k_i\\) \u548c \\(b_i\\) \u7136\u540e\u53e0\u52a0\u8ba1\u7b97\u5373\u53ef\u3002\u7531\u4e8e\u6d89\u53ca\u5230\u533a\u95f4\u4fee\u6539\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u61d2\u6807\u8bb0\u7684\u7ebf\u6bb5\u6811\uff0c\u4fee\u6539\u5b8c\u6240\u6709\u64cd\u4f5c\u4e4b\u540e\u518d\u4e00\u4e2a\u4e2a\u5355\u70b9\u67e5\u8be2\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nconst int mod = 998244353;\n\nvoid exgcd(LL a, LL b, LL &amp;x, LL &amp;y)\n{\nif(b == 0)\n{\nx = 1, y = 0;\nreturn;\n}\nexgcd(b, a % b, y, x);\ny -= a / b * x;\n}\n\nLL inv(LL a, LL p)\n{\nLL x, y;\nexgcd(a, p, x, y);\nif(x &lt; 0)\nx += p;\nreturn x;\n}\n\nint n, m; LL a[maxn];\n\nstruct Node {\nLL mul, add;\nNode() : mul(1), add(0) {}\n}t[maxn * 4];\n\nvoid pushdown(int p)\n{\nLL m = t[p].mul, a = t[p].add;\nif(m == 1 &amp;&amp; a == 0)\nreturn;\nint lch = p * 2, rch = p * 2 + 1;\nt[lch].add = (m * t[lch].add + a) % mod;\nt[lch].mul = m * t[lch].mul % mod;\nt[rch].add = (m * t[rch].add + a) % mod;\nt[rch].mul = m * t[rch].mul % mod;\nt[p].mul = 1, t[p].add = 0;\n}\n\nvoid modify(int p, int beg, int end, int l, int r, LL m, LL a)\n{\nif(end &lt; l || beg &gt; r)\nreturn;\nif(beg &gt;= l &amp;&amp; end &lt;= r)\n{\nt[p].mul = (t[p].mul * m) % mod;\nt[p].add = (t[p].add * m + a) % mod;\nreturn;\n}\npushdown(p);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nmodify(lch, beg, mid, l, r, m, a);\nmodify(rch, mid+1, end, l, r, m, a);\n}\n\nLL query(int p, int beg, int end, int pos)\n{\nif(beg == end)\nreturn (a[beg] * t[p].mul + t[p].add) % mod;\npushdown(p);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn pos &lt;= mid ? query(lch, beg, mid, pos) : query(rch, mid+1, end, pos);\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;a[i]);\nwhile(m--)\n{\nint l, r;\nLL x;\nscanf(\"%d %d %lld\", &amp;l, &amp;r, &amp;x);\nLL a = inv(r - l + 1, mod), m = (r - l) * a % mod;\na = a * x % mod;\nmodify(1, 1, n, l, r, m, a);\n}\nfor(int i = 1; i &lt;= n; i++)\nprintf(\"%lld \", query(1, 1, n, i));\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\nclass Node {\npublic long mul, add;\n\npublic Node() {\nmul = 1;\nadd = 0;\n}\n}\n\npublic class Main {\nprivate static final int mod = 998244353;\n\nprivate static long[] exgcd(long a, long b) {\nif (b == 0)\nreturn new long[] { 1, 0 };\nlong[] xy = exgcd(b, a % b);\nlong x = xy[0], y = xy[1];\nxy[0] = y;\nxy[1] = x - a / b * y;\nreturn xy;\n}\n\nprivate static long inv(long a, long p) {\nlong x = exgcd(a, p)[0];\nif (x &lt; 0)\nx += p;\nreturn x;\n}\n\nprivate static Node[] t;\nprivate static long[] a;\n\nprivate static void build(int p, int beg, int end) {\nt[p] = new Node();\nif (beg == end)\nreturn;\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid + 1, end);\n}\n\nprivate static void pushdown(int p) {\nlong m = t[p].mul, a = t[p].add;\nif (m == 1 &amp;&amp; a == 0)\nreturn;\nint lch = p * 2, rch = p * 2 + 1;\nt[lch].add = (m * t[lch].add + a) % mod;\nt[lch].mul = m * t[lch].mul % mod;\nt[rch].add = (m * t[rch].add + a) % mod;\nt[rch].mul = m * t[rch].mul % mod;\nt[p].mul = 1;\nt[p].add = 0;\n}\n\nprivate static void modify(int p, int beg, int end, int l, int r, long m, long a) {\nif (end &lt; l || beg &gt; r)\nreturn;\nif (beg &gt;= l &amp;&amp; end &lt;= r) {\nt[p].mul = (t[p].mul * m) % mod;\nt[p].add = (t[p].add * m + a) % mod;\nreturn;\n}\npushdown(p);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nmodify(lch, beg, mid, l, r, m, a);\nmodify(rch, mid + 1, end, l, r, m, a);\n}\n\nprivate static long query(int p, int beg, int end, int pos) {\nif (beg == end)\nreturn (a[beg] * t[p].mul + t[p].add) % mod;\npushdown(p);\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn pos &lt;= mid ? query(lch, beg, mid, pos) : query(rch, mid + 1, end, pos);\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint M = in.nextInt();\nt = new Node[4 * n + 4];\na = new long[n + 1];\nbuild(1, 1, n);\nfor (int i = 1; i &lt;= n; i++)\na[i] = in.nextInt();\nwhile (M-- &gt; 0) {\nint l = in.nextInt();\nint r = in.nextInt();\nlong x = in.nextLong();\nlong a = inv(r - l + 1, mod), m = (r - l) * a % mod;\na = a * x % mod;\nmodify(1, 1, n, l, r, m, a);\n}\nfor (int i = 1; i &lt;= n; i++)\nSystem.out.printf(\"%d \", query(1, 1, n, i));\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc332/#g-not-too-many-balls","title":"G - Not Too Many Balls","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N(N \\le 500)\\) \u79cd\u989c\u8272\u7684\u7403\uff0c\u989c\u8272\u7684\u503c\u4e3a \\(1\\) \u5230 \\(N\\)\uff0c\u989c\u8272\u4e3a \\(i\\) \u7684\u7403\u6709 \\(A_i\\) \u4e2a\uff0c\u6709 \\(M(M \\le 5 \\times 10^5)\\) \u4e2a\u76d2\u5b50\uff0c\u7b2c \\(j\\) \u4e2a\u76d2\u5b50\u6700\u591a\u53ef\u4ee5\u653e \\(B_j\\) \u4e2a\u7403\u3002\u6b64\u5916\uff0c\u989c\u8272\u4e3a \\(i\\) \u7684\u7403\u5728\u7b2c \\(j\\) \u4e2a\u76d2\u5b50\u4e2d\u6700\u591a\u80fd\u653e \\(i \\times j\\) \u4e2a\u3002\u95ee\uff1a\u6700\u591a\u53ef\u4ee5\u5c06\u591a\u5c11\u4e2a\u7403\u653e\u5728\u76d2\u5b50\u4e2d\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u53ef\u4ee5\u4f7f\u7528\u7f51\u7edc\u6d41\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5efa\u7acb\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5176\u4e2d\u8d85\u7ea7\u6e90\u70b9\u8bb0\u4e3a \\(S\\)\uff0c\u8d85\u7ea7\u6c47\u70b9\u8bb0\u4e3a \\(T\\)\uff0c\u7403\u4f5c\u4e3a\u4e8c\u5206\u56fe\u7684\u5de6\u90e8 \\(X = (x_1, x_2, \\cdots, x_n)\\)\uff0c\u76d2\u5b50\u4f5c\u4e3a\u4e8c\u5206\u56fe\u7684\u53f3\u90e8 \\(Y = (y_1, y_2, \\cdots, y_m)\\)\u3002\u5219\u56fe\u4e2d\u6709\u4e09\u79cd\u8fb9\uff1a</p> <ol> <li>\\(S\\) \u4e0e \\(x_i\\) \u7684\u8fde\u8fb9\uff0c\u6d41\u503c\u4e3a \\(A_i\\)\u3002</li> <li>\\(x_i\\) \u4e0e \\(y_j\\) \u7684\u8fde\u8fb9\uff0c\u6d41\u503c\u4e3a \\(i \\times j\\)\u3002</li> <li>\\(y_j\\) \u4e0e \\(T\\) \u7684\u8fde\u8fb9\uff0c\u6d41\u503c\u4e3a \\(B_j\\)\u3002</li> </ol> <p>\u76f4\u63a5\u8dd1\u6700\u5927\u6d41\u5c31\u662f\u7b54\u6848\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u4e0d\u8fc7\u770b\u770b\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u7b2c\u4e8c\u79cd\u8fb9\u6709 \\(NM\\) \u6761\uff0c\u8fd9\u6837\u80af\u5b9a\u662f\u5b58\u4e0d\u4e0b\u7684\u3002</p> <p>\u8003\u8651\u8f6c\u5316\u6210\u6700\u5c0f\u5272\u7684\u95ee\u9898\uff0c\u5047\u8bbe\u6700\u5c0f\u5272 \\(S\\) \u53ef\u8fbe\u7684\u96c6\u5408\u4e3a \\(P \\cup Q\\)\uff0c\u5176\u4e2d \\(P \\sub X\\)\uff0c\\(Q \\sub Y\\)\uff0c\u5219\u6700\u5c0f\u5272\u7684\u7ec4\u6210\u4e3a\uff1a</p> \\[ \\begin{align*} \\min_{P\\sub X}\\min_{Q\\sub Y} \\{ \\sum_{x_i \\in X\\backslash P}A_i  + \\sum_{x_i \\in X}i\\sum_{y_j \\in Y \\backslash Q}j + \\sum_{y_j \\in Y}B_j \\} \\end{align*} \\] <p>\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u516c\u5f0f\u7684\u7ec4\u6210\uff1a</p> <ul> <li>\\(\\sum\\limits_{x_i \\in X\\backslash P}A_i\\)\uff1a\u5bf9\u4e8e \\(X\\backslash P\\) \u96c6\u5408\u4e2d\u7684\u70b9\uff0c\\(S\\) \u4e0d\u53ef\u8fbe\uff0c\u8bbe \\(x_i \\in X \\backslash P\\)\uff0c\u5219 \\((S, x_i)\\) \u5bf9\u5e94\u7b2c\u4e00\u79cd\u8fb9\uff0c\u8fd9\u4e9b\u8fb9\u4e00\u5b9a\u4f1a\u88ab\u5272\u6389\uff08\u5426\u5219\u5c31\u5b58\u5728 \\(S \\rightarrow x_i\\)\uff09\u3002</li> <li>\\(\\sum\\limits_{x_i \\in X}i\\sum\\limits_{y_j \\in Y \\backslash Q}j\\)\uff1a\u5bf9\u4e8e \\(X\\) \u96c6\u5408\u4e2d\u7684\u70b9\uff0c\\(S\\) \u53ef\u8fbe\uff0c\u5bf9\u4e8e \\(Y \\backslash Q\\) \u96c6\u5408\u4e2d\u7684\u70b9\uff0c\\(S\\) \u4e0d\u53ef\u8fbe\uff0c\u8bbe \\(x_i \\in X\\)\uff0c\\(y_j \\in Y \\backslash Q\\)\uff0c\u5219\u8fb9 \\((x_i, y_j)\\) \u5bf9\u5e94\u7b2c\u4e8c\u79cd\u8fb9\uff0c\u8fd9\u4e9b\u8fb9\u4e00\u5b9a\u4f1a\u88ab\u5272\u6389\uff08\u5426\u5219\u5c31\u5b58\u5728 \\(S \\rightarrow x_i \\rightarrow y_j\\) \uff09\u3002</li> <li>\\(\\sum\\limits_{y_j \\in Y}B_j\\)\uff1a\u5bf9\u4e8e \\(Y\\) \u96c6\u5408\u4e2d\u7684\u70b9\uff0c\\(S\\) \u4e0d\u53ef\u8fbe\uff0c\u8bbe \\(y_j \\in Y\\)\uff0c\\((y_j, T)\\) \u5bf9\u5e94\u7b2c\u4e09\u79cd\u8fb9\uff0c\u8fd9\u4e9b\u70b9\u4e00\u5b9a\u4f1a\u88ab\u5272\u6389\uff08\u5426\u5219\u5c31\u5b58\u5728 \\(S \\rightarrow \\cdots \\rightarrow y_j \\rightarrow T\\) \uff09\u3002</li> </ul> <p>\u5982\u4f55\u7b97\u51fa\u6700\u5c0f\u5272\uff1f\u80af\u5b9a\u4e0d\u80fd\u679a\u4e3e\u4e24\u4e2a\u5b50\u96c6\u3002\u5b98\u65b9\u9898\u89e3\u7ed9\u51fa\u4e86\u4e00\u79cd\u975e\u5e38\u5de7\u5999\u7684\u65b9\u6cd5\u7ed5\u5f00\u4e86\u5b50\u96c6\u7684\u679a\u4e3e\uff0c\u6ce8\u610f\u5230 \\(N \\le 500\\)\uff08\u800c\u4e14\u9898\u76ee\u7684\u540d\u5b57\u4e5f\u5728\u63d0\u793a\u7403\u5e76\u4e0d\u591a\uff09\uff0c\u4ee4 \\(k = \\sum\\limits_{x_i \\in X}i\\)\uff0c\u7531\u4e8e \\(i\\) \u7684\u53d6\u503c\u662f \\(1\\) \u5230 \\(N\\)\uff0c\u5219 \\(k\\) \u7684\u53d6\u503c\u5c31\u662f \\(0\\) \u5230 \\(\\frac{N(N+1)}{2}\\)\uff08\u5176\u4e2d \\(0\\) \u4ec5\u5f53 \\(X\\) \u4e3a\u7a7a\u96c6\u7684\u65f6\u5019\u53d6\u5f97\uff09\uff0c\u4e8e\u662f\u8003\u8651\u679a\u4e3e \\(k\\) \u7684\u503c\uff0c\u5219\u6709\uff1a</p> \\[ \\begin{align*}     &amp; \\min_{P\\sub X}\\min_{Q\\sub Y} \\{ \\sum_{x_i \\in X\\backslash P}A_i  + \\sum_{x_i \\in X}i\\sum_{y_j \\in Y \\backslash Q}j + \\sum_{y_j \\in Y}B_j \\} \\\\ =   &amp; \\min_{k = 0}^{\\frac{N(N+1)}{2}}\\{\\min_{P\\sub X}\\{ \\sum_{x_i \\in X\\backslash P}A_i\\} + \\min_{Q\\sub Y}\\{ \\sum_{y_j \\in Y \\backslash Q}kj + \\sum_{y_j \\in Y}B_j \\}\\} \\\\ \\end{align*} \\] <p>\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff1f\\(\\sum\\limits_{x_i \\in X}i\\sum\\limits_{y_j \\in Y \\backslash Q}j\\) \u8fd9\u4e2a\u5f0f\u5b50\u8026\u5408\u4e86\u4e24\u4e2a\u96c6\u5408\uff0c\u8fd9\u6837\u4e0d\u65b9\u4fbf\u5904\u7406\uff0c\u800c\u56fa\u5b9a\u524d\u8005\u4e4b\u540e\u5c31\u53ea\u5269\u4e0b\u4e00\u4e2a\u96c6\u5408\uff0c\u8fdb\u4e00\u6b65\u5c31\u80fd\u62c6\u6210\u4e24\u90e8\u5206\u3002</p> <p>\u8003\u8651\u5982\u4f55\u7b97\u51fa \\(\\min\\limits_{k = 0}^{\\frac{N(N+1)}{2}}\\min\\limits_{P\\sub X}\\{ \\sum\\limits_{x_i \\in X\\backslash P}A_i\\}\\) \uff0c\\(k\\) \u5b9e\u9645\u9650\u5236\u4e86\u96c6\u5408\u4e2d\u6bcf\u4e2a\u7403\u989c\u8272\u503c\u7684\u548c\uff0c\u800c\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u4f7f\u7528 dp \u9884\u5904\u7406\u51fa\u6765\uff0c\u5b9a\u4e49 \\(dp[k]\\)\uff1a\u989c\u8272\u503c\u4e4b\u548c\u4e3a \\(k\\) \u7684\u7403\u7684\u96c6\u5408\u5bf9\u5e94\u7684 \\(\\sum A_i\\) \u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u662f\u4e00\u4e2a\u80cc\u5305\u95ee\u9898\uff0c\u53ef\u4ee5\u5728 \\(O(N^2\\times N) = O(N^3)\\) \u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002\u9884\u5904\u7406\u51fa\u6240\u6709\u7b2c \\(dp[k]\\) \u503c\u4e4b\u540e\uff0c\u5bf9\u4e8e\u7279\u5b9a\u7684 \\(k\\) \u503c\uff0c  \\(\\min\\limits_{P\\sub X}\\{ \\sum\\limits_{x_i \\in X\\backslash P}A_i\\} = dp[\\frac{N(N+1)}{2}-k]\\)</p> <p>\u8003\u8651\u5982\u4f55\u7b97\u51fa \\(\\min\\limits_{k = 0}^{\\frac{N(N+1)}{2}}\\min\\limits_{Q\\sub Y}\\{\\sum\\limits_{y_j \\in Y \\backslash Q}kj + \\sum\\limits_{y_j \\in Y}B_j\\}\\)\uff0c\\(k\\) \u5bf9 \\(\\sum\\limits_{y_j \\in Y}B_j\\) \u7684\u503c\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u5b50\u96c6 \\(Q \\sub Y\\)\uff0c\u5982\u679c \\(Q\\) \u7684\u67d0\u4e2a\u5143\u7d20 \\(y_j\\) \u6709 \\(kj &lt; B_j\\)\uff0c\u5219\u5c06 \\(y_j\\) \u653e\u5728 \\(Y \\backslash Q\\) \u4f1a\u66f4\u5c0f\u3002\u8fdb\u4e00\u6b65\u53ef\u4ee5\u53d1\u73b0\uff0c\\(\\min\\limits_{Q\\sub Y}\\{ \\sum\\limits_{y_j \\in Y \\backslash Q}kj + \\sum\\limits_{y_j \\in Y}B_j\\} = \\sum\\limits_{j = 1}^m\\min(kj, B_j)\\)\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u679a\u4e3e\u5b50\u96c6 \\(Q\\) \u4e86\u3002\u5982\u4f55\u8ba1\u7b97 \\(\\min\\limits_{k = 0}^{\\frac{N(N+1)}{2}}\\{\\sum\\limits_{j = 1}^m\\min(kj, B_j) \\} \\\\\\)\uff1f\u8fd9\u4e2a\u5f0f\u5b50\u662f \\(O(N^2M)\\) \u7684\uff0c\u8fd8\u662f\u4f1a\u8d85\u65f6\u3002\\(\\min(kj, B_j)\\) \u5b9e\u9645\u662f\u4e00\u4e2a\u5206\u6bb5\u51fd\u6570\uff0c\u524d\u534a\u6bb5\u662f \\(kj\\)\uff0c\u540e\u534a\u6bb5\u662f \\(B_j\\)\uff0c\u4e24\u8005\u90fd\u662f\u76f4\u7ebf\uff0c\u8fd9\u6837\u4ece \\(k\\) \u5230 \\(k+1\\) \u81ea\u589e\u53d8\u5316\u65f6\uff0c\\(\\sum\\limits_{j = 1}^m\\min(kj, B_j)\\)  \u7684\u589e\u957f\u4e5f\u662f\u6709\u89c4\u5f8b\u7684\uff0c\u4f7f\u7528\u4e00\u9636\u5dee\u5206\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u52a0\u540c\u4e00\u4e2a\u6570\uff0c\u4f7f\u7528 \u4e8c\u9636\u5dee\u5206 \u53ef\u4ee5\u5b9e\u73b0\u533a\u95f4\u52a0\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff08\u4e5f\u5c31\u662f\u4e00\u6761\u76f4\u7ebf\uff09\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u9488\u5bf9\u6240\u6709\u7684\u5206\u6bb5\u51fd\u6570\u4f5c\u51fa\u4e8c\u9636\u5dee\u5206\uff0c\u5c31\u53ef\u4ee5\u5728 \\(O(1)\\) \u7684\u65f6\u95f4\u5185\u7b97\u51fa\u6bcf\u4e2a \\(\\sum\\limits_{j = 1}^m\\min(kj, B_j)\\)\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 500 + 10;\nconst int maxl = maxn * maxn / 2;\nconst int maxm = 5E5 + 10;\n\nint n, m, l;\nLL A[maxn], B[maxm], dp[maxl], c[maxl];\n\nvoid add(int l, int r, LL a, LL d)\n{\nLL e = a + d * (r - l);\nc[l] += a;\nc[l+1] += d - a;\nc[r+1] -= e + d;\nc[r+2] += e;\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;A[i]);\nl = n * (n + 1) / 2;\nmemset(dp, 0x3f, sizeof dp);\ndp[0] = 0;\nfor(int i = 1; i &lt;= n; i++)\nfor(int j = l; j &gt;= i; j--)\ndp[j] = min(dp[j], dp[j-i]+A[i]);\nfor(int j = 1; j &lt;= m; j++) {\nscanf(\"%lld\", &amp;B[j]);\nLL K = B[j] / j;\nadd(0, min(K, (LL)l), 0, j);\nif(K+1 &lt;= l)\nadd(K+1, l, B[j], 0);\n}\nfor(int k = 1; k &lt;= l; k++)\nc[k] += c[k-1];\nfor(int k = 1; k &lt;= l; k++)\nc[k] += c[k-1];\nLL ans = dp[l];\nfor(int k = 1; k &lt;= l; k++) ans = min(ans, dp[l-k]+c[k]);\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\nprivate static int n, m, l;\nprivate static long[] A, B, dp, c;\n\nprivate static void add(int l, int r, long a, long d) {\nlong e = a + d * (r - l);\nc[l] += a;\nc[l + 1] += d - a;\nc[r + 1] -= e + d;\nc[r + 2] += e;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nn = in.nextInt();\nm = in.nextInt();\nl = n * (n + 1) / 2;\nA = new long[n + 1];\nB = new long[m + 1];\ndp = new long[l + 1];\nc = new long[l + 3];\nfor (int i = 1; i &lt;= n; i++)\nA[i] = in.nextLong();\nArrays.fill(dp, (long) 1E18);\ndp[0] = 0;\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = l; j &gt;= i; j--)\ndp[j] = Math.min(dp[j], dp[j - i] + A[i]);\nfor (int j = 1; j &lt;= m; j++) {\nB[j] = in.nextLong();\nlong K = B[j] / j;\nadd(0, (int) Math.min(K, (long) l), 0, j);\nif (K + 1 &lt;= l)\nadd((int) K + 1, l, B[j], 0);\n}\nfor (int k = 1; k &lt;= l; k++)\nc[k] += c[k - 1];\nfor (int k = 1; k &lt;= l; k++)\nc[k] += c[k - 1];\nlong ans = dp[l];\nfor (int k = 1; k &lt;= l; k++)\nans = Math.min(ans, dp[l - k] + c[k]);\nSystem.out.println(ans);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc333/","title":"ABC333(A-F)","text":""},{"location":"algorithm/AtCoder/abc333/#a-three-threes","title":"A - Three Threes","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 \\(N(1 \\le N \\le 9)\\)\uff0c\u5c06 \\(N\\) \u91cd\u590d\u6253\u5370 \\(N\\) \u6b21\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\nfor(int i = 0; i &lt; n; i++)\ncout &lt;&lt; n;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nfor (int i = 0; i &lt; n; i++)\nSystem.out.print(n);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc333/#b-pentagon","title":"B - Pentagon","text":"\u9898\u76ee\u5927\u610f <p>  \u5982\u56fe\u6240\u793a\u662f\u4e00\u4e2a\u6b63\u4e94\u8fb9\u5f62\uff0c\u56fe\u4e2d\u6709 \\(5\\) \u4e2a\u70b9\uff0c\u4ee5\u8fd9\u4e9b\u70b9\u4e3a\u7aef\u70b9\u6784\u9020\u4e24\u6761\u7ebf\uff0c\u95ee\u8fd9\u4e24\u6761\u7ebf\u7684\u957f\u5ea6\u662f\u5426\u76f8\u7b49\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6839\u636e\u5bf9\u79f0\u6027\u53ef\u4ee5\u5bf9\u7ebf\u7684\u7aef\u70b9\u8fdb\u884c\u540c\u65f6\u79fb\u52a8\uff0c\u5c06\u4e24\u6761\u7ebf\u7684\u4e00\u7aef\u90fd\u79fb\u52a8\u5230\u70b9 \\(A\\)\uff0c\u7136\u540e\u5224\u65ad\u53e6\u4e00\u7aef\u662f\u5426\u76f8\u540c\u6216\u8005\u5bf9\u79f0\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nint main()\n{\nchar s[5];\nint line[2][2];\nfor (int i = 0; i &lt; 2; i++)\n{\ncin &gt;&gt; s;\nline[i][0] = s[0] - 'A';\nline[i][1] = s[1] - 'A';\nwhile (line[i][0])\n{\nline[i][0] = (line[i][0] + 1) % 5;\nline[i][1] = (line[i][1] + 1) % 5;\n}\n}\nif (line[0][1] == line[1][1] || line[0][1] + line[1][1] == 5)\nputs(\"Yes\");\nelse\nputs(\"No\");\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint[][] line = new int[2][2];\nfor (int i = 0; i &lt; 2; i++) {\nString s = in.next();\nline[i][0] = s.charAt(0) - 'A';\nline[i][1] = s.charAt(1) - 'A';\nwhile (line[i][0] &gt; 0) {\nline[i][0] = (line[i][0] + 1) % 5;\nline[i][1] = (line[i][1] + 1) % 5;\n}\n}\nif (line[0][1] == line[1][1] || line[0][1] + line[1][1] == 5)\nSystem.out.println(\"Yes\");\nelse\nSystem.out.println(\"No\");\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc333/#c-repunit-trio","title":"C - Repunit Trio","text":"\u9898\u76ee\u5927\u610f <p>\u6211\u4eec\u79f0 \\(1, 11, 111, 1111, \\cdots\\) \u4e3a repunit\u6570\u5217\uff0c\u9009\u62e9\u4e09\u4e2a repunit \u6570\u5217\u7684\u6570\uff08\u5141\u8bb8\u91cd\u590d\u9009\u62e9\uff09\uff0c\u5c06\u4e09\u4e2a\u6570\u5b57\u76f8\u52a0\u5f97\u5230\u7684\u6570\u79f0\u4e3a 3-repunit \u6570\u3002\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 \\(N(1 \\le N \\le 333)\\)\uff0c\u95ee\uff0c\u7b2c \\(N\\) \u5c0f\u7684 3-repunit \u6570\u662f\u591a\u5c11\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u6837\u4f8b\u4e2d\u7ed9\u51fa\u4e86 \\(N = 333\\) \u7684\u65f6\u5019\u7b54\u6848\u662f \\(112222222233\\)\uff0c\u8fd9\u6837\u5728 dfs \u641c\u7d22\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u6570\u5b57\u6700\u5927\u4e0d\u4f1a\u8d85\u8fc7 \\(111111111111\\) \uff08\\(12\\) \u4e2a \\(1\\)\uff09\uff0c\u679a\u4e3e\u91cf\u4e0d\u4f1a\u8d85\u8fc7 \\(12 ^3\\)\u3002\u8fdb\u4e00\u6b65\u7684\uff0c\u7ed9\u51fa\u4e00\u79cd\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u679a\u4e3e\u65b9\u6cd5\uff0c\u5728 dfs \u679a\u4e3e\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5bf9\u4e0b\u4e00\u5c42\u7684\u6570\u5b57\u7684\u4e0a\u754c\u8fdb\u884c\u9650\u5236\uff0c\u4f8b\u5982\uff1a</p> <pre><code>1       1       1       3\n11      1       1       13\n11      11      1       23\n11      11      11      33\n111     1       1       113\n111     11      1       123\n111     11      11      133\n111     111     11      233\n111     111     111     333\n1111    1       1       1113\n</code></pre> <p>\u6309\u7167\u8fd9\u79cd\u987a\u5e8f\u8fdb\u884c\u679a\u4e3e\uff0c\u5f97\u5230\u7684\u6570\u5b57\u4e00\u5b9a\u4e5f\u662f\u6309\u987a\u5e8f\u7684\u3002\u8bbe\u4e09\u4e2a\u6570\u5b57\u4e3a \\(x,y,z\\)\uff0c\u5f53 \\(x\\) \u786e\u5b9a\u540e\uff0c\u5176 \\(x+y+z\\) \u7684\u4e0a\u754c\u4e3a \\(3x\\)\uff0c\u5f53 \\(x\\) \u548c \\(y\\) \u786e\u5b9a\u540e\uff0c\u6709 \\(x+y+z\\) \u7684\u4e0a\u754c\u4e3a \\(x + 2y\\)\u3002\u800c \\(x\\) \u7684\u6269\u5927\u662f\u4ece \\(x\\) \u53d8\u6210 \\(10x+1\\)\uff0c\u663e\u7136\u6709 \\(10x+1 &gt; 3x\\)\uff0c\u56e0\u6b64\uff0c\u5e94\u8be5\u9996\u5148\u8ba9 \\(x\\) \u53d8\u5927\uff0c\u5e76\u4f5c\u4e3a\u4e0a\u754c\u5bf9\u540e\u9762\u7684\u6570\u5b57\u8fdb\u884c\u9650\u5236\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u679a\u4e3e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\uff0c\u5e76\u4e14\u8fd9\u4e2a\u89c4\u5f8b\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6269\u5c55\uff0c\u5373\u8df3\u8fc7\u679a\u4e3e\u7684\u8fc7\u7a0b\uff0c\u76f4\u63a5\u679a\u4e3e\u51fa\u7b2c \\(N\\) \u4e2a\u6570\u5b57\u6240\u9700\u8981\u7684 \\(x, y, z\\)\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nint cnt, n;\nvoid dfs(int cur, LL sum, LL last)\n{\nif(cur == 3)\n{\nif(++cnt == n)\ncout &lt;&lt; sum &lt;&lt; endl;\nreturn;\n}\nfor(LL x = 1; x &lt;= last &amp;&amp; cnt &lt; n; x = 10 * x + 1)\ndfs(cur+1, sum+x, x);\n}\n\nint main()\n{\ncin &gt;&gt; n;\ndfs(0, 0, 111111111111);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static int cnt, n;\n\nprivate static void dfs(int cur, long sum, long last) {\nif (cur == 3) {\nif (++cnt == n)\nSystem.out.println(sum);\nreturn;\n}\nfor (long x = 1; x &lt;= last &amp;&amp; cnt &lt; n; x = 10 * x + 1)\ndfs(cur + 1, sum + x, x);\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nn = in.nextInt();\ndfs(0, 0, 111111111111l);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc333/#d-erase-leaves","title":"D - Erase Leaves","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u68f5 \\(N\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4e00\u79cd\u64cd\u4f5c\uff1a\u5220\u9664\u4e00\u4e2a\u6811\u4e2d\u5ea6\u6570\u4e3a \\(1\\) \u7684\u8282\u70b9\u4ee5\u53ca\u8fd9\u4e2a\u70b9\u7684\u8fde\u8fb9\u3002\u95ee\uff1a\u6700\u5c11\u6267\u884c\u591a\u5c11\u6b21\u64cd\u4f5c\u624d\u80fd\u5c06\u70b9 \\(1\\) \u5220\u9664\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u4ee5\u70b9 \\(1\\) \u4e3a\u6839\u8282\u70b9 dfs \u4e00\u6b21\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u3002\u6700\u540e\u679a\u4e3e\u70b9 \\(1\\) \u6240\u6709\u7684\u5b69\u5b50\uff0c\u7559\u4e0b\u6700\u5927\u7684\u90a3\u9897\u5b50\u6811\uff0c\u5176\u4f59\u7684\u5c31\u662f\u9700\u8981\u5220\u9664\u7684\u70b9\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nconst int maxn = 3E5 + 10;\nconst int maxm = 2 * maxn;\nint n;\nint head[maxn], edge[maxm], ne[maxm], idx = 1;\nvoid add(int u, int v)\n{\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\nint son[maxn];\nvoid dfs(int u, int f)\n{\nson[u] = 1;\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nif(v == f)\ncontinue;\ndfs(v, u);\nson[u] += son[v];\n}\n}\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 1; i &lt; n; i++)\n{\nint u, v;\nscanf(\"%d %d\", &amp;u, &amp;v);\nadd(u, v);\nadd(v, u);\n}\ndfs(1, 0);\nvector&lt;int&gt; d;\nfor(int i = head[1]; i; i = ne[i])\n{\nint v = edge[i];\nd.push_back(son[v]);\n}\nsort(d.begin(), d.end());\ncout &lt;&lt; son[1] - d.back();\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\nprivate static int[] head, edge, ne;\nprivate static int idx = 1;\nprivate static int[] son;\n\nprivate static void graph_init(int n, int m) {\nhead = new int[n];\nedge = new int[m];\nne = new int[m];\n}\n\nprivate static void add(int u, int v) {\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\nprivate static void dfs(int u, int f) {\nson[u] = 1;\nfor (int i = head[u]; i &gt; 0; i = ne[i]) {\nint v = edge[i];\nif (v == f)\ncontinue;\ndfs(v, u);\nson[u] += son[v];\n}\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\n\nint n = in.nextInt();\ngraph_init(n + 1, 2 * n);\nson = new int[n + 1];\n\nfor (int i = 1; i &lt; n; i++) {\nint u, v;\nu = in.nextInt();\nv = in.nextInt();\nadd(u, v);\nadd(v, u);\n}\ndfs(1, 0);\nArrayList&lt;Integer&gt; d = new ArrayList&lt;&gt;();\nfor (int i = head[1]; i &gt; 0; i = ne[i]) {\nint v = edge[i];\nd.add(son[v]);\n}\nd.sort(null);\nSystem.out.println(son[1] - d.get(d.size() - 1));\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc333/#e-takahashi-quest","title":"E - Takahashi Quest","text":"\u9898\u76ee\u5927\u610f <p>\u4f60\u6b63\u5728\u8fdb\u884c\u4e00\u573a\u5192\u9669\uff0c\u5728\u8fd9\u4e2a\u5192\u9669\u4e2d\u6709 \\(N\\) \u4e2a\u4e8b\u4ef6\uff0c\u4e8b\u4ef6\u6709\u4e24\u79cd\uff0c<code>1 x</code> \u8868\u793a\u4f60\u9047\u5230\u4e86\u4e00\u74f6\u7c7b\u578b\u4e3a \\(x\\) \u9b54\u6cd5\u836f\u6c34\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u62fe\u53d6\u8fd9\u4e2a\u836f\u6c34\uff0c\u8fd9\u4f1a\u5360\u7528\u4f60\u80cc\u5305\u7684 \\(1\\) \u5355\u4f4d\u4f53\u79ef\u3002<code>2 x</code> \u8868\u793a\u4f60\u9047\u5230\u4e86\u4e00\u76f4\u602a\u7269\uff0c\u9700\u8981\u4f7f\u7528\u4e00\u74f6\u7c7b\u578b\u4e3a \\(x\\) \u9b54\u6cd5\u836f\u6c34\u624d\u80fd\u6218\u80dc\u5b83\u3002\u4e00\u74f6\u9b54\u6cd5\u836f\u6c34\u74f6\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u7528\u8fc7\u4e4b\u540e\u53ef\u4ee5\u4e22\u5f03\uff0c\u4e0d\u518d\u5360\u7528\u80cc\u5305\u7684\u4f53\u79ef\u3002\u540c\u79cd\u7c7b\u578b\u7684\u9b54\u6cd5\u836f\u6c34\u53ef\u4ee5\u62fe\u53d6\u591a\u74f6\u3002\u95ee\uff1a\u4e3a\u4e86\u6218\u80dc\u6240\u6709\u7684\u602a\u7269\uff0c\u6700\u5c11\u9700\u8981\u591a\u5927\u5bb9\u91cf\u7684\u80cc\u5305\uff1f\u5982\u679c\u65e0\u6cd5\u6218\u80dc\u6240\u6709\u7684\u602a\u7269\uff0c\u8f93\u51fa \\(-1\\)\u3002\u5982\u679c\u53ef\u4ee5\u6218\u80dc\u6240\u6709\u7684\u602a\u7269\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u6700\u5c0f\u7684\u80cc\u5305\u5bb9\u91cf\uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa\u9047\u5230\u6bcf\u4e2a\u836f\u6c34\u7684\u65f6\u5019\u662f\u5426\u62fe\u53d6\uff08<code>1</code> \u8868\u793a\u62fe\u53d6\uff0c<code>0</code> \u8868\u793a\u4e0d\u62fe\u53d6\uff09\u3002</p> \u89e3\u9898\u601d\u8def <p>\u4e4b\u524d\u505a\u8fc7\u4e00\u9053 Expedition - POJ 2431\uff0c\u672c\u9898\u91c7\u7528\u7c7b\u4f3c\u7684\u601d\u8def\u3002\u5c06\u9047\u5230\u7684\u836f\u6c34\u5b58\u50a8\u8d77\u6765\uff08\u800c\u4e0d\u662f\u7acb\u5373\u6361\u8d77\uff09\uff0c\u5728\u540e\u9762\u9700\u8981\u7684\u65f6\u5019\u518d\u53d6\u51fa\u6765\u4f7f\u7528\u3002\u5b58\u50a8\u836f\u6c34\u7684\u65f6\u5019\u53ef\u4ee5\u5f00\u591a\u4e2a\u6808\uff0c\u6bcf\u4e2a\u6808\u5b58\u50a8\u540c\u79cd\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u9700\u8981\u7528\u836f\u6c34\u7684\u65f6\u5019\u4ece\u6808\u4e2d\u5f39\u51fa\uff0c\u8fd9\u610f\u5473\u7740\u53d6\u51fa\u7684\u4e00\u5b9a\u662f\u6700\u9760\u53f3\u7684\u836f\u6c34\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u505a\u4e00\u5b9a\u80fd\u8ba9\u80cc\u5305\u7684\u5bb9\u91cf\u6700\u5c0f\u3002\u53d6\u51fa\u836f\u6c34\u4e4b\u540e\uff0c\u5728\u4f7f\u7528\u5b83\u4e4b\u524d\u90fd\u4e00\u76f4\u5360\u7528\u4f53\u79ef\uff0c\u7528\u5dee\u5206\u6570\u7ec4\u6765\u5b9e\u73b0\u533a\u95f4\u52a0\u3002\u6700\u540e\u8fd8\u539f\u51fa\u6bcf\u4e2a\u65f6\u95f4\u70b9\u7684\u80cc\u5305\u5bb9\u91cf\u5c31\u662f\u7b54\u6848\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\n\nint n, b[maxn], t[maxn], x[maxn];\nstack&lt;int&gt; st[maxn];\nbool take[maxn];\n\nint main()\n{\ncin &gt;&gt; n;\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%d %d\", &amp;t[i], &amp;x[i]);\nfor (int i = 1; i &lt;= n; i++)\n{\nif (t[i] == 1)\nst[x[i]].push(i);\nelse\n{\nif (st[x[i]].empty())\n{\nputs(\"-1\");\nreturn 0;\n}\nint p = st[x[i]].top();\nst[x[i]].pop();\ntake[p] = 1;\nb[p]++;\nb[i]--;\n}\n}\nint M = -1;\nfor (int i = 1; i &lt;= n; i++)\n{\nb[i] += b[i - 1];\nM = max(M, b[i]);\n}\ncout &lt;&lt; M &lt;&lt; endl;\nfor (int i = 1; i &lt;= n; i++)\nif(t[i] == 1)\nprintf(\"%d \", (int)take[i]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint[] b = new int[n + 1];\nint[] t = new int[n + 1];\nint[] x = new int[n + 1];\nboolean[] take = new boolean[n + 1];\nHashMap&lt;Integer, Stack&lt;Integer&gt;&gt; st = new HashMap&lt;&gt;();\nfor (int i = 1; i &lt;= n; i++) {\nt[i] = in.nextInt();\nx[i] = in.nextInt();\n}\nfor (int i = 1; i &lt;= n; i++) {\nif (t[i] == 1) {\nif (!st.containsKey(x[i]))\nst.put(x[i], new Stack&lt;&gt;());\nst.get(x[i]).add(i);\n} else {\nif (!st.containsKey(x[i])) {\nSystem.out.println(-1);\nreturn;\n}\nint p = st.get(x[i]).pop();\nif (st.get(x[i]).isEmpty())\nst.remove(x[i]);\ntake[p] = true;\nb[p]++;\nb[i]--;\n}\n}\nint M = -1;\nfor (int i = 1; i &lt;= n; i++) {\nb[i] += b[i - 1];\nM = Math.max(M, b[i]);\n}\nSystem.out.println(M);\nfor (int i = 1; i &lt;= n; i++)\nif (t[i] == 1)\nSystem.out.printf(\"%d \", take[i] ? 1 : 0);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc333/#f-bomb-game-2","title":"F - Bomb Game 2","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N(1 \\le N \\le 3000)\\) \u4e2a\u4eba\u6392\u6210\u4e00\u4e2a\u961f\u5217\u73a9\u6e38\u620f\uff0c\u91cd\u590d\u4e00\u79cd\u64cd\u4f5c\uff1a\u961f\u9996\u7684\u4eba\u6709 \\(\\frac{1}{2}\\) \u7684\u6982\u7387\u51fa\u5c40\uff0c\u6216\u8005\u6709 \\(\\frac{1}{2}\\) \u7684\u6982\u7387\u4ece\u961f\u9996\u79fb\u52a8\u5230\u961f\u5c3e\u3002\u5269\u4e00\u4e2a\u4eba\u65f6\u6e38\u620f\u7ed3\u675f\uff0c\u6700\u540e\u4e00\u4e2a\u4eba\u83b7\u80dc\u3002\u6c42\u51fa\u6bcf\u4e2a\u4eba\u83b7\u80dc\u7684\u6570\u5b66\u671f\u671b\uff0c\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5148\u770b\u770b\u6837\u4f8b\u7684 \\(N = 2\\) \u662f\u600e\u4e48\u7b97\u7684\uff0c\u4e0d\u59a8\u8bbe A \u548c B \u7559\u4e0b\u7684\u6982\u7387\u662f \\(x\\) \u548c \\(y\\)\uff0c\u8003\u8651\u7b2c\u4e00\u6b21\u64cd\u4f5c\u7684\u7ed3\u679c\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u64cd\u4f5c\u662f A \u51fa\u5c40\uff0c\u5219 B \u83b7\u80dc\uff0c\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u6982\u7387\u662f \\(\\frac{1}{2}\\)\u3002\u5982\u679c\u7b2c\u4e00\u6b21 A \u6ca1\u6709\u51fa\u5c40\uff0c\u5219\u961f\u4f0d\u53d8\u6210\u4e59\u5728\u961f\u5934\uff0c\u7532\u5728\u961f\u5c3e\u3002\u8fd9\u662f\u4e00\u79cd\u7c7b\u4f3c\u7684\u60c5\u5f62\uff0c\u53ea\u4e0d\u8fc7\u4f4d\u7f6e\u66ff\u6362\uff0c\u501f\u52a9\u9012\u5f52\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\uff1a</p> \\[ \\left\\{  \\begin{matrix} x &amp; = &amp; \\frac{1}{2}y \\\\ y &amp; = &amp; \\frac{1}{2} + \\frac{1}{2}x \\end{matrix} \\right.  \\Longrightarrow  \\left\\{  \\begin{matrix} x &amp; = &amp; \\frac{1}{3} \\\\ y &amp; = &amp; \\frac{2}{3} \\end{matrix} \\right. \\] <p>\u63a5\u4e0b\u6765\u8003\u8651\u7528 dp \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b9a\u4e49 \\(dp[i][j]\\)\uff1a\\(i\\) \u4e2a\u4eba\u7684\u6e38\u620f\u4e2d\uff0c\u7b2c \\(j\\) \u4e2a\u4eba\u80fd\u83b7\u80dc\u7684\u6982\u7387\u3002</p> <p>\u53ea\u9700\u8981\u8003\u8651\u7b2c\u4e00\u6b21\u64cd\u4f5c\u7684\u7ed3\u679c\u662f\u5426\u51fa\u5c40\uff0c\u53ef\u5f97\uff1a</p> \\[ dp[i][j] = \\left\\{  \\begin{matrix} \\frac{1}{2}dp[i][i], &amp; j = 1\\\\ \\frac{1}{2}dp[i][j-1] + \\frac{1}{2} * dp[i-1][j-1], &amp; j &gt; 1 \\end{matrix} \\right. \\] <p>\u8fd9\u4e2a\u8f6c\u79fb\u5f0f\u6709\u4e2a\u95ee\u9898\uff0c\u7b97\u51fa \\(dp[i][1]\\) \u9700\u8981\u5f15\u7528 \\(dp[i][i]\\)\uff0c\u800c\u7b97\u51fa \\(dp[i][2]\\) \u9700\u8981\u5f15\u7528 \\(dp[i][1]\\)\uff0c\\(\\cdots \\cdots\\) \uff0c\u8fd9\u662f\u4e00\u79cd\u5faa\u73af\u5f15\u7528\u7684\u5173\u7cfb\uff0c\u4e0d\u80fd\u76f4\u63a5\u9012\u63a8\u3002</p> <p>\u4eff\u7167\u89e3\u65b9\u7a0b\u7684\u65b9\u6cd5\uff0c\u8bbe \\(dp[i][1], dp[i][2], \\cdots, dp[i][i]\\) \u4e3a \\(x_1, x_2, \\cdots, x_i\\)\uff0c\u6839\u636e\u8f6c\u79fb\u5f0f\uff0c\u6709 \\(i\\) \u4e2a\u65b9\u7a0b\uff0c\\(i\\) \u4e2a\u53d8\u91cf\uff0c\u89e3\u65b9\u7a0b\u7684\u8bdd\u662f\u80af\u5b9a\u53ef\u4ee5\u89e3\u51fa\u6765\u7684\u3002\u4f46\u662f\u4f7f\u7528\u9ad8\u65af\u6d88\u5143\u89e3\u65b9\u7a0b\u7684\u590d\u6742\u5ea6\u8fbe\u5230 \\(O(n^3)\\)\uff0c\u5fc5\u5b9a\u8d85\u65f6\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u65b9\u7a0b\u662f\u5f88\u7b80\u5355\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f18\u5316\u3002</p> <p>\u89c2\u5bdf dp\u8f6c\u79fb\u5f0f\uff0c\u5f53 \\(j &gt; 1\\) \u65f6\uff0c\\(\\frac{1}{2} * dp[i-1][j-1]\\) \u7684\u90e8\u5206\u5b9e\u9645\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e0a\u4e00\u5c42\u5c31\u5df2\u7ecf\u7b97\u51fa\u6765\u4e86\u3002\u800c \\(\\frac{1}{2}dp[i][j-1]\\) \u662f\u4e0a\u4e00\u4e2a\u53d8\u91cf\u7684\u7ebf\u6027\u500d\uff0c\u5373\uff1a\\(x_i = ax_{i-1} + b\\)\uff0c\u8fd9\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u7b80\u4fbf\u7684\u65b9\u6cd5\u6765\u89e3\u65b9\u7a0b\u3002</p> <p>\u4f8b\u5982 \\(N = 3\\) \u7684\u65f6\u5019\uff1a</p> \\[ \\left\\{  \\begin{matrix} x_2 &amp;=&amp; \\frac{1}{2}x_1 + \\frac{1}{6} \\\\ x_3 &amp;=&amp; \\frac{1}{2}x_2 + \\frac{1}{3} &amp;=&amp; \\frac{1}{4}x_1 + \\frac{5}{12} \\\\ \\end{matrix} \\right. \\] <p>\u53c8\u56e0\u4e3a\uff1a</p> \\[ x_1 = \\frac{1}{2}x_3 = \\frac{1}{8}x_1 + \\frac{5}{24} \\\\ \\] <p>\u6700\u7ec8\u89e3\u5f97\uff1a</p> \\[ x_1 = \\frac{5}{21} \\] <p>\u7136\u540e\u56de\u4ee3\u5373\u53ef\u5f97\u5230 \\(x_2\\) \u548c \\(x_3\\)\u3002</p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7684\u6838\u5fc3\u5c31\u662f\u56e0\u4e3a \\(x_i = ax_{i-1} + b\\) \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53ea\u7ef4\u62a4 \\(a\\) \u548c \\(b\\) \u7684\u7cfb\u6570\u503c\uff0c\u7136\u540e\u89e3\u51fa \\(x_1\\)\uff0c\u8fd9\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff0c\u663e\u7136\uff0c\u65e0\u8bba\u662f\u6c42\u89e3 \\(x_1\\) \u8fd8\u662f\u56de\u4ee3\u7684\u8fc7\u7a0b\u90fd\u662f \\(O(n)\\) \u7684\uff0c\u8fd9\u6837\u603b\u7684\u590d\u6742\u5ea6\u5c31\u662f \\(O(n^2)\\)\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 3000 + 10;\nconst LL mod = 998244353;\n\nvoid exgcd(LL a, LL b, LL &amp;x, LL &amp;y)\n{\nif(!b)\n{\nx = 1, y = 0;\nreturn;\n}\nexgcd(b, a%b, y, x);\ny -= a / b * x;\n}\n\nLL inv(LL a)\n{\nLL x, y;\nexgcd(a, mod, x, y);\nif(x &lt; 0)\nx += mod;\nreturn x;\n}\n\nLL mul(LL a, LL b)\n{\na *= b;\na %= mod;\nreturn a;\n}\n\nint n;\nLL dp[maxn][maxn];\n\n// dp[i][j] = 1/2 * dp[i][j-1] + 1/2 * dp[i-1][j-1]\n// dp[i][1] = 1/2 * dp[i][i]\n\nint main()\n{\ncin &gt;&gt; n;\nLL p = inv(2);\ndp[1][1] = 1;\nfor(int i = 2; i &lt;= n; i++)\n{\nLL a = 1, b = 0;\nfor(int j = 2; j &lt;= i; j++)\n{\nb += dp[i-1][j-1];\nb %= mod;\na = mul(a, p);\nb = mul(b, p);\n}\na = mul(a, p);\nb = mul(b, p);\ndp[i][1] = mul(b, inv((1 - a + mod) % mod));\nfor(int j = 2; j &lt;= i; j++)\ndp[i][j] = mul(p, dp[i][j-1]+dp[i-1][j-1]);\n}\nfor(int i = 1; i &lt;= n; i++)\nprintf(\"%lld \", dp[n][i]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nfinal private static long mod = 998244353;\n\nprivate static long[] exgcd(long a, long b) {\nif (b == 0)\nreturn new long[] { 1, 0 };\nlong[] xy = exgcd(b, a % b);\nlong x2 = xy[0], y2 = xy[1];\nxy[0] = y2;\nxy[1] = x2 - a / b * y2;\nreturn xy;\n}\n\nprivate static long inv(long a) {\nlong x = exgcd(a, mod)[0];\nif (x &lt; 0)\nx += mod;\nreturn x;\n}\n\nprivate static long mul(long a, long b) {\na *= b;\na %= mod;\nreturn a;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nlong[][] dp = new long[n + 1][n + 1];\nlong p = inv(2);\ndp[1][1] = 1;\nfor (int i = 2; i &lt;= n; i++) {\nlong a = 1, b = 0;\nfor (int j = 2; j &lt;= i; j++) {\nb += dp[i - 1][j - 1];\nb %= mod;\na = mul(a, p);\nb = mul(b, p);\n}\na = mul(a, p);\nb = mul(b, p);\ndp[i][1] = mul(b, inv((1 - a + mod) % mod));\nfor (int j = 2; j &lt;= i; j++)\ndp[i][j] = mul(p, dp[i][j - 1] + dp[i - 1][j - 1]);\n}\nfor (int i = 1; i &lt;= n; i++)\nSystem.out.println(dp[n][i]);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc333/#g-nearest-fraction","title":"G - Nearest Fraction","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u5b9e\u6570 \\(r(0 &lt; r &lt; 1)\\) \u548c\u4e00\u4e2a\u6574\u6570 \\(N(1 \\le 10^{10})\\)\uff0c\u6784\u9020\u4e00\u4e2a\u6700\u63a5\u8fd1\u7684 \\(r\\) \u7684\u6700\u7b80\u5206\u6570 \\(\\frac{p}{q}\\)\uff0c\u5176\u4e2d \\(0 \\le p \\le q \\le N\\) \u3002\u6362\u8a00\u4e4b\uff0c\u6784\u9020\u4e00\u4e2a \\(|r - \\frac{p}{q}|\\) \u6700\u5c0f\u7684 \\(\\frac{p}{q}\\)\uff0c\u8f93\u51fa \\(p\\) \u548c \\(q\\) \u7684\u503c\uff0c\u5982\u679c\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u8f93\u51fa \\(\\frac{p}{q}\\) \u8f83\u5c0f\u7684\u90a3\u4e2a\u3002</p> <p>ps\uff1a\u4e0d\u4f1a\u505a\uff0c\u6539\u5929\u8865\u4e00\u4e0b\u8fd9\u9053\u9898......</p>"},{"location":"algorithm/AtCoder/abc334/","title":"ABC334(A-G)","text":""},{"location":"algorithm/AtCoder/abc334/#a-christmas-present","title":"A - Christmas Present","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e24\u79cd\u5546\u54c1 <code>Bat</code> \u548c <code>Glove</code>\uff0c\u524d\u8005\u7684\u4ef7\u683c\u662f \\(B\\)\uff0c\u540e\u8005\u7684\u4ef7\u683c\u662f \\(G(B \\neq G)\\)\uff0c\u8f93\u51fa\u4ef7\u683c\u8f83\u9ad8\u7684\u5546\u54c1\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint a, b;\ncin &gt;&gt; a &gt;&gt; b;\ncout &lt;&lt; (a &gt; b ? \"Bat\" : \"Glove\");\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint b = in.nextInt(), g = in.nextInt();\nSystem.out.println(b &gt; g ? \"Bat\" : \"Glove\");\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc334/#b-christmas-trees","title":"B - Christmas Trees","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u6761\u65e0\u9650\u957f\u5ea6\u7684\u6570\u8f74\uff0c\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 \\(A(-10^{18} \\le A \\le 10^{18})\\) \u548c\u4e00\u4e2a\u6b63\u6574\u6570 \\(M(1 \\le M \\le 10^9)\\)\uff0c\u8868\u793a\u5728\u6240\u6709\u5f62\u5982 \\(A+kM\\) \u7684\u4f4d\u7f6e\u4e0a\u90fd\u6709\u4e00\u68f5\u6811\uff0c\\(k\\) \u53ef\u53d6\u4efb\u610f\u6574\u6570\u3002\u95ee\uff1a\u5728\u95ed\u533a\u95f4 \\([L, R]\\) \u6709\u591a\u5c11\u68f5\u6811\uff1f</p> \u89e3\u9898\u601d\u8def <p>\\(A+kM\\) \u548c \\(A+M+k'M\\) \u7b49\u4ef7\uff0c\u6240\u4ee5\u5148\u5c06\u5176\u53d8\u6210 \\(0 \\le A &lt; M\\) \u7684\u5f62\u5f0f\uff0c\u540c\u7406\u5bf9 \\(L\\) \u548c \\(R\\) \u4e5f\u505a\u7c7b\u4f3c\u7684\u5904\u7406\uff0c\\(L\\) \u53d8\u6210\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7684\u6811\uff0c\\(R\\) \u53d8\u6210\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u7684\u6811\uff0c\u7136\u540e \\(k\\) \u503c\u76f8\u51cf\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\ntypedef long long LL;\n\nint main()\n{\nLL a, m, l, r;\ncin &gt;&gt; a &gt;&gt; m &gt;&gt; l &gt;&gt; r;\na %= m;\nif(a &lt; 0)\na += m;\nLL k1 = l / m, r1 = l % m;\nif(r1 &lt; 0)\n{\nr1 += m;\nk1--;\n}\nif(r1 &gt; a)\nk1++;\nLL k2 = r / m, r2 = r % m;\nif(r2 &lt; 0)\n{\nr2 += m;\nk2--;\n}\nif(r2 &lt; a)\nk2--;\ncout &lt;&lt; k2 - k1 + 1 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nlong a = in.nextLong(), m = in.nextLong(), l = in.nextLong(), r = in.nextLong();\na %= m;\nif (a &lt; 0)\na += m;\nlong k1 = l / m, r1 = l % m;\nif (r1 &lt; 0) {\nr1 += m;\nk1--;\n}\nif (r1 &gt; a)\nk1++;\nlong k2 = r / m, r2 = r % m;\nif (r2 &lt; 0) {\nr2 += m;\nk2--;\n}\nif (r2 &lt; a)\nk2--;\nSystem.out.println(k2 - k1 + 1);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc334/#c-socks-2","title":"C - Socks 2","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N\\) \u53cc\u889c\u5b50\uff0c\u7b2c \\(i\\) \u53cc\u889c\u5b50\u7684\u989c\u8272\u503c\u662f \\(i\\)\uff0c\u73b0\u5728\u6709 \\(K\\) \u53ea\u889c\u5b50\u4e0d\u89c1\u4e86\uff0c\u4e0d\u89c1\u7684\u889c\u5b50\u662f \\(A_1, A_2, \\cdots, A_K(1 \\le A_1 &lt; A_2 &lt; \\cdots &lt; A_K \\le N)\\)\uff0c \u5982\u679c\u5c06\u989c\u8272\u4e3a \\(i\\) \u7684\u889c\u5b50\u548c\u989c\u8272\u4e3a \\(j\\) \u7684\u889c\u5b50\u7ec4\u5408\u6210\u4e00\u53cc\u889c\u5b50\uff0c\u5219\u4f1a\u4ea7\u751f \\(|i-j|\\) \u7684\u5947\u5f02\u503c\u3002\u5728 \\(K\\) \u53cc\u889c\u5b50\u4e22\u5931\u4e4b\u540e\uff0c\u5c06\u5269\u4f59\u7684\u889c\u5b50\u4e24\u4e24\u914d\u5bf9\uff08\u5982\u679c\u889c\u5b50\u7684\u6570\u91cf\u662f\u5947\u6570\u5219\u53ef\u4ee5\u4e22\u5f03\u4efb\u610f\u4e00\u53ea\u889c\u5b50\uff09\uff0c\u8f93\u51fa\u6700\u5c0f\u7684\u5947\u5f02\u503c\u4e4b\u548c\u3002</p> \u89e3\u9898\u601d\u8def <p>\u9996\u5148\u5c06\u5269\u4f59\u7684\u889c\u5b50\u6309\u989c\u8272\u5927\u5c0f\u6392\u5e8f\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u5269\u4f59\u889c\u5b50\u662f\u5076\u6570\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u6309\u76f8\u90bb\u7684\u987a\u5e8f\u914d\u5bf9\u7b54\u6848\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\u3002</p> <p>\u8003\u8651\u5947\u6570\u5982\u4f55\u5904\u7406\u3002\u663e\u7136\uff0c\u4e22\u5f03\u7684\u889c\u5b50\u4e00\u5b9a\u662f\u7b2c\u5947\u6570\u4e2a\u889c\u5b50\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f04\u4e00\u4e2a\u524d\u7f00\u548c <code>pre[i]</code> \u8868\u793a\u5c06 \\(i\\) \uff08\\(i\\) \u662f\u7b2c\u5947\u6570\u4e2a\u889c\u5b50\uff09\u4e4b\u524d\u7684\u889c\u5b50\u4e24\u4e24\u914d\u5bf9\u4ea7\u751f\u7684\u5947\u5f02\u503c\u7684\u524d\u7f00\u548c\uff0c\u540c\u7406\u518d\u5f04\u4e00\u4e2a\u540e\u7f00\u548c <code>suf[i]</code>\u3002\u6700\u540e\u679a\u4e3e\u4e22\u5f03\u7684\u889c\u5b50\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u672c\u9898\u8fd8\u6709\u4e00\u4e2a\u5c0f\u7ed3\u8bba\uff0c\u6ce8\u610f\u5230\u6240\u6709\u88ab\u4e22\u5f03\u7684\u889c\u5b50\u90fd\u662f\u4e00\u53ea\u4e00\u53ea\u7684\u4e22\u5f03\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u5b8c\u6574\u7684\u889c\u5b50\u4e0d\u7528\u52a8\uff0c\u76f4\u63a5\u4fdd\u6301\u914d\u5bf9\u5173\u7cfb\uff0c\u5c06\u5269\u4e0b\u7684\u889c\u5b50\u914d\u5bf9\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53 \\(a &lt; b &lt; c\\) \u65f6\uff0c\u6709\u7b49\u5f0f \\(|a - b| + |c - b| = |a - c|\\)\u3002\uff08ps\uff1a\u8fd9\u4e2a\u7ed3\u8bba\u653e\u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\u4e5f\u5f88\u663e\u7136\uff09\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint a[maxn], pre[maxn], suf[maxn];\n\nint main()\n{\nint n, k;\ncin &gt;&gt; n &gt;&gt; k;\nfor(int i = 0; i &lt; k; i++)\nscanf(\"%d\", &amp;a[i]);\nfor(int i = 2; i &lt; k; i += 2)\npre[i] = pre[i-2] + a[i-1] - a[i-2];\nif(k &amp; 1)\n{\nfor(int i = k - 3; i &gt;= 0; i -= 2)\nsuf[i] = suf[i+2] + a[i+2] - a[i+1];\nint m = 2E9;\nfor(int i = 0; i &lt; k; i += 2)\nm = min(m, suf[i] + pre[i]);\ncout &lt;&lt; m;\n}\nelse\ncout &lt;&lt; pre[k-2] + a[k-1] - a[k-2];\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint k = in.nextInt();\nint[] a = new int[k];\nint[] pre = new int[k];\nint[] suf = new int[k];\nfor (int i = 0; i &lt; k; i++)\na[i] = in.nextInt();\nfor (int i = 2; i &lt; k; i += 2)\npre[i] = pre[i - 2] + a[i - 1] - a[i - 2];\nif (k % 2 == 0)\nSystem.out.println(pre[k - 2] + a[k - 1] - a[k - 2]);\nelse {\nfor (int i = k - 3; i &gt;= 0; i -= 2)\nsuf[i] = suf[i + 2] + a[i + 2] - a[i + 1];\nint m = (int) 2E9;\nfor (int i = 0; i &lt; k; i += 2)\nm = Math.min(m, pre[i] + suf[i]);\nSystem.out.println(m);\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc334/#d-reindeer-and-sleigh","title":"D - Reindeer and Sleigh","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N\\) \u4e2a\u96ea\u6a47\uff0c\u7b2c \\(i\\) \u4e2a\u96ea\u6a47\u9700\u8981 \\(R_i\\) \u53ea\u9a6f\u9e7f\u624d\u80fd\u62c9\u5f97\u52a8\u3002\u6709 \\(Q\\) \u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u7ed9\u4f60\u4e00\u4e2a\u6570\u5b57 \\(X\\) \u4ee3\u8868\u9a6f\u9e7f\u7684\u6570\u91cf\uff0c\u4f60\u9700\u8981\u56de\u7b54\u51fa\u5728\u62e5\u6709 \\(X\\) \u53ea\u9a6f\u9e7f\u7684\u6761\u4ef6\u4e0b\u6700\u591a\u80fd\u62c9\u52a8\u591a\u5c11\u4e2a\u96ea\u6a47\u3002</p> \u89e3\u9898\u601d\u8def <p>\u628a \\(R_i\\) \u6392\u5e8f\uff0c\u5728\u524d\u7f00\u548c\u4e0a\u4e8c\u5206\u5c31\u597d\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint n, q;\nLL a[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; q;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;a[i]);\nsort(a+1, a+1+n);\nfor(int i = 2; i &lt;= n; i++)\na[i] += a[i-1];\nLL x;\nint l, r, mid;\nwhile(q--)\n{\nscanf(\"%lld\", &amp;x);\nl = 0, r = n;\nwhile(l &lt; r) {\nmid = (l + r + 1) / 2;\nif(x &gt;= a[mid])\nl = mid;\nelse\nr = mid - 1;\n}\nprintf(\"%d\\n\", l);\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\n\nint n = in.nextInt();\nint q = in.nextInt();\nlong[] a = new long[n + 1];\nfor (int i = 1; i &lt;= n; i++)\na[i] = in.nextLong();\nArrays.sort(a);\nfor (int i = 2; i &lt;= n; i++)\na[i] += a[i - 1];\nlong x;\nint l, r, mid;\nfor (; q &gt; 0; q--) {\nx = in.nextLong();\nl = 0;\nr = n;\nwhile (l &lt; r) {\nmid = (l + r + 1) / 2;\nif (x &gt;= a[mid])\nl = mid;\nelse\nr = mid - 1;\n}\nSystem.out.println(l);\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc334/#e-christmas-color-grid-1","title":"E - Christmas Color Grid 1","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a \\(H \\times W(1 \\le H, W \\le 1000)\\) \u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u7f51\u683c\u53ef\u80fd\u662f\u7ea2\u8272\u6216\u7eff\u8272\uff0c\u7ea2\u8272\u7528 <code>.</code> \u8868\u793a\uff0c\u7eff\u8272\u7528 <code>#</code> \u8868\u793a\u3002\u6bcf\u4e2a\u7f51\u683c\u548c\u4e0a\u4e0b\u5de6\u53f3\u662f\u76f8\u90bb\u7684\u3002\u76f8\u90bb\u7684\u7eff\u8272\u7f51\u683c\u7ec4\u6210\u4e00\u4e2a\u7eff\u8272\u8fde\u901a\u5206\u91cf\u3002\u73b0\u5728\uff0c\u6240\u6709\u7684\u7ea2\u8272\u7f51\u683c\u4f1a\u88ab\u968f\u673a\u7b49\u6982\u7387\u7684\u6311\u9009\u51fa\u4e00\u4e2a\uff0c\u7136\u540e\u67d3\u6210\u7eff\u8272\uff0c\u95ee\uff1a\u5728\u4e00\u4e2a\u7ea2\u8272\u88ab\u67d3\u6210\u7eff\u8272\u4e4b\u540e\uff0c\u7eff\u8272\u8fde\u901a\u5206\u91cf\u6570\u91cf\u7684\u6570\u5b66\u671f\u671b\u662f\u591a\u5c11\uff1f\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5148\u7edf\u8ba1\u7ea2\u8272\u7684\u4e2a\u6570\u4ee5\u53ca\u7eff\u8272\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\uff0c\u5728\u7edf\u8ba1\u7684\u7eff\u8272\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\u7684\u65f6\u5019\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u8fdb\u884c\u7f16\u53f7\u3002\u63a5\u4e0b\u6765\u904d\u5386\u6240\u6709\u7684\u7ea2\u8272\u7f51\u683c\uff0c\u7ea2\u8272\u7f51\u683c\u67d3\u8272\u4e4b\u540e\u53ef\u80fd\u4f1a\u8fde\u63a5\u4e0a\u4e0b\u5de6\u53f3\u7684\u7eff\u8272\u8fde\u901a\u5206\u91cf\uff0c\u7528\u7eff\u8272\u8fde\u901a\u5206\u91cf\u7684\u7f16\u53f7\u6765\u5224\u522b\u662f\u5426\u8fde\u901a\u5206\u91cf\u5408\u5e76\u7684\u60c5\u51b5\u3002</p> \u53c2\u8003\u4ee3\u7801 <p>\u559c\u62a5\uff1a\u672c\u9898 Java \u4ee3\u7801\u8d85\u65f6</p> C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 1000 + 10;\nconst int mod = 998244353;\nchar g[maxn][maxn];\nint n, m, p[maxn][maxn];\n\nconst int dr[] = {-1, 1, 0, 0};\nconst int dc[] = {0, 0, -1, 1};\n\nbool inlim(int r, int c)\n{return r &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; c &gt;= 0 &amp;&amp; c &lt; m;}\n\nvoid dfs(int r, int c, int f)\n{\np[r][c] = f;\nfor(int i = 0; i &lt; 4; i++)\n{\nint nr = r + dr[i], nc = c + dc[i];\nif(inlim(nr, nc) &amp;&amp; g[nr][nc] == '#' &amp;&amp; p[nr][nc] == -1)\ndfs(nr, nc, f);\n}\n}\n\nvoid exgcd(int a, int b, int &amp;x, int &amp;y)\n{\nif(b == 0)\n{\nx = 1;\ny = 0;\nreturn;\n}\nexgcd(b, a % b, y, x);\ny -= a / b * x;\n}\n\nint inv(int a, int p)\n{\nint x, y;\nexgcd(a, p, x, y);\nif(x &lt; p)\nx += p;\nreturn x;\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%s\", g[i]);\nmemset(p, -1, sizeof p);\nint a = 0, b = 0;\nfor(int i = 0; i &lt; n; i++)\nfor(int j = 0; j &lt; m; j++)\nif(g[i][j] == '.')\nb++;\nelse if(p[i][j] == -1)\ndfs(i, j, a++);\nb = inv(b, mod);\nLL ans = 0;\nfor(int r = 0; r &lt; n; r++)\nfor(int c = 0; c &lt; m; c++)\nif(g[r][c] == '.')\n{\nset&lt;int&gt; ng;\nfor(int i = 0; i &lt; 4; i++)\n{\nint nr = r + dr[i], nc = c + dc[i];\nif(inlim(nr, nc) &amp;&amp; g[nr][nc] == '#')\nng.insert(p[nr][nc]);\n}\nans += (a + 1 - ng.size()) * b % mod;\nans %= mod;\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc334/#f-christmas-present-2","title":"F - Christmas Present 2","text":"\u9898\u76ee\u5927\u610f <p>\u5723\u8bde\u8001\u4eba\u6253\u7b97\u7ed9 \\(N\\) \u4e2a\u5c0f\u5b69\u9001\u793c\u7269\uff0c\u5176\u4e2d\u5723\u8bde\u8001\u4eba\u7684\u5bb6\u5728 \\((S_X, S_Y)\\)\uff0c\u7b2c \\(i\\) \u4e2a\u5c0f\u5b69\u7684\u5bb6\u5728 \\((X_i, Y_i)\\)\u3002\u5723\u8bde\u8001\u4eba\u6253\u7b97\u6309\u7167 \\(1, 2, \\cdots, N\\) \u7684\u987a\u5e8f\u7ed9\u6bcf\u4e2a\u5c0f\u5b69\u90fd\u9001\u4e00\u4e2a\u793c\u7269\u3002\u5723\u8bde\u8001\u4eba\u4e00\u6b21\u53ea\u80fd\u6301\u6709\u6700\u591a \\(K\\) \u4e2a\u793c\u7269\uff0c\u5982\u679c\u624b\u4e0a\u6ca1\u6709\u793c\u7269\uff0c\u5c31\u5fc5\u987b\u56de\u5bb6\u8865\u5145\u3002\u95ee\uff1a\u5723\u8bde\u8001\u4eba\u4ece\u5bb6\u91cc\u51fa\u53d1\uff0c\u7ed9\u6240\u6709\u5c0f\u5b69\u90fd\u9001\u4e00\u4e2a\u793c\u7269\uff0c\u7136\u540e\u8fd4\u56de\u5bb6\u4e2d\uff0c\u6700\u77ed\u7684\u8def\u7a0b\u662f\u591a\u5c11\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u7531\u4e8e\u987a\u5e8f\u662f\u4e00\u5b9a\u7684\uff0c\u9700\u8981\u8003\u8651\u7684\u5c31\u662f\u5728\u54ea\u4e00\u6bb5\u4e2d\u95f4\u56de\u5bb6\u8865\u5145\u793c\u7269\u3002</p> <p>\u5b9a\u4e49 \\(dp[i]\\)\uff1a\u524d \\(i\\) \u4e2a\u623f\u5b50\u90fd\u5df2\u7ecf\u9001\u5b8c\uff0c\u7136\u540e\u56de\u5bb6\u8865\u5145\u793c\u7269\u6240\u9700\u8981\u7684\u6700\u77ed\u8ddd\u79bb</p> <p>\u8f6c\u79fb\u65f6\uff0c\u8003\u8651\u679a\u4e3e\u4e0a\u4e00\u6b21\u56de\u5bb6\u8865\u5145\u793c\u7269\u7684\u4f4d\u7f6e\uff0c\u53ef\u5f97\uff1a</p> \\[ dp[i] = \\min_{i - j \\le k}^{i-1}\\{dp[j] + dist(j+1) + w(j+1, i) + dist(i)\\} \\] <p>\u4e0a\u5f0f\u4e2d\uff0c\\(dist(i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u623f\u5b50\u5230\u5723\u8bde\u8001\u4eba\u7684\u5bb6\u7684\u8ddd\u79bb\uff0c\\(w(j+1, i)\\) \u8868\u793a\u6309\u987a\u5e8f\u4ece\u7b2c \\(j+1\\) \u4e2a\u623f\u5b50\u4e00\u76f4\u8d70\u5230\u7b2c \\(i\\) \u4e2a\u623f\u5b50\u7684\u8def\u7a0b\u4e4b\u548c\u3002</p> <p>\\(dist(i)\\) \u53ef\u4ee5\u9884\u5148\u5904\u7406\u51fa\u6765\uff0c\u7528 \\(d[i]\\) \u8868\u793a\u3002\\(w(j+1, i)\\) \u53ef\u4ee5\u5148\u5904\u7406\u51fa\u524d\u7f00\u548c\uff0c\\(s[i]\\) \u8868\u793a\u6309\u987a\u5e8f\u4ece\u5723\u8bde\u8001\u4eba\u7684\u5bb6\u4e00\u76f4\u8d70\u5230\u7b2c \\(i\\) \u4e2a\u623f\u5b50\u7684\u8def\u7a0b\u4e4b\u548c\uff0c\u5219\u6709 \\(w(j+1, i) = s[i] - s[j+1]\\)\uff0c\u4e8e\u662f\uff1a</p> \\[ \\begin{matrix} dp[i]   &amp; = &amp; \\min_{i - j \\le k}^{i-1}\\{dp[j] + d[j+1] + s[i] - s[j+1] + d[i]\\} \\\\         &amp; = &amp; \\min_{i - j \\le k}^{i-1}\\{dp[j] + d[j+1] - s[j+1]\\} + s[i] + d[i] \\end{matrix} \\] <p>\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\u53ea\u5305\u542b\u53d8\u91cf \\(j\\)\uff0c\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cmath&gt;\n#include &lt;deque&gt;\n\nusing namespace std;\n\n// i - j &lt;= k\n// dp[i] = min{ dp[j] + d[j+1] + s[i] - s[j+1] + d[i] }\n// dp[i] = min{ dp[j] + d[j+1] - s[j+1] } + s[i] + d[i]\nconst int maxn = 2E5 + 10;\nint n, k;\ndouble x[maxn], y[maxn], d[maxn], s[maxn], dp[maxn];\n\ndouble dist(double x1, double y1, double x2, double y2)\n{\ndouble dx = x2 - x1, dy = y2 - y1;\nreturn sqrt(dx*dx + dy*dy);\n}\n\ndouble val(int j)\n{return dp[j] + d[j+1] - s[j+1];}\n\ndouble cal(int i, int j)\n{return val(j) + s[i] + d[i];}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; k &gt;&gt; x[0] &gt;&gt; y[0];\nfor(int i = 1; i &lt;= n; i++)\n{\nscanf(\"%lf %lf\", &amp;x[i], &amp;y[i]);\nd[i] = dist(x[0], y[0], x[i], y[i]);\ns[i] = s[i-1] + dist(x[i-1], y[i-1], x[i], y[i]);\n}\ndeque&lt;int&gt; dq;\ndq.push_back(0);\nfor(int i = 1; i &lt;= n; i++)\n{\nint j = dq.front();\ndp[i] = cal(i, j);\nif(i - j == k)\ndq.pop_front();\nwhile(!dq.empty() &amp;&amp; val(dq.back()) &gt;= val(i))\ndq.pop_back();\ndq.push_back(i);\n}\nprintf(\"%lf\\n\", dp[n]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.ArrayDeque;\nimport java.util.Deque;\nimport java.util.Scanner;\n\npublic class Main {\nprivate static double[] x, y, d, s, dp;\n\nprivate static double dist(double x1, double y1, double x2, double y2) {\ndouble dx = x2 - x1, dy = y2 - y1;\nreturn Math.sqrt(dx * dx + dy * dy);\n}\n\nprivate static double val(int j) {\nreturn dp[j] + d[j + 1] - s[j + 1];\n}\n\nprivate static double cal(int i, int j) {\nreturn val(j) + s[i] + d[i];\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint k = in.nextInt();\nx = new double[n + 2];\ny = new double[n + 2];\nd = new double[n + 2];\ns = new double[n + 2];\ndp = new double[n + 2];\nx[0] = in.nextInt();\ny[0] = in.nextInt();\nfor (int i = 1; i &lt;= n; i++) {\nx[i] = in.nextInt();\ny[i] = in.nextInt();\nd[i] = dist(x[0], y[0], x[i], y[i]);\ns[i] = s[i - 1] + dist(x[i - 1], y[i - 1], x[i], y[i]);\n}\nDeque&lt;Integer&gt; dq = new ArrayDeque&lt;&gt;();\ndq.addLast(0);\nfor (int i = 1; i &lt;= n; i++) {\nint j = dq.getFirst();\ndp[i] = cal(i, j);\nif (i - j == k)\ndq.removeFirst();\nwhile (!dq.isEmpty() &amp;&amp; val(dq.getLast()) &gt;= val(i))\ndq.removeLast();\ndq.addLast(i);\n}\nSystem.out.printf(\"%.8f\", dp[n]);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc334/#g-christmas-color-grid-2","title":"G - Christmas Color Grid 2","text":"\u9898\u76ee\u5927\u610f <p>\u540c E \u9898\uff0c\u4f46\u662f\u672c\u9898\u95ee\u7684\u662f\u5c06\u4e00\u4e2a \u7eff\u8272 \u53d8\u6210 \u7ea2\u8272 \u4e4b\u540e\u7eff\u8272\u7684\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\u7684\u6570\u5b66\u671f\u671b\u3002</p> \u89e3\u9898\u601d\u8def <p>\u7eff\u8272\u662f\u56fe\u4e2d\u7684\u539f\u6709\u7684\u70b9\uff0c\u6d82\u6210\u7ea2\u8272\u76f8\u5f53\u4e8e\u5220\u53bb\u8fd9\u4e2a\u70b9\u3002\u663e\u7136\u5c31\u662f\u8981\u627e\u56fe\u4e2d\u7684\u5272\u70b9\uff0c\u7528 tarjan \u7b97\u6cd5\u627e\u5272\u70b9\u7684\u65f6\u5019\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u70b9 \\(u\\) \u662f dfs\u6811 \u7684\u6839\u8282\u70b9\uff0c\u5219\u8bb0\u5f55\u5176\u5728 dfs\u6811 \u4e2d\u5b69\u5b50\u7684\u4e2a\u6570 \\(son\\)\uff0c\u5982\u679c \\(son \\ge 2\\)\uff0c\u5219\u70b9 \\(u\\) \u5c31\u662f\u5272\u70b9\u3002\u6b64\u65f6\u5272\u70b9 \\(u\\) \u540e\u8fde\u901a\u5206\u91cf\u6570\u589e\u52a0 \\(son-1\\) \u4e2a\u3002</li> <li>\u70b9 \\(u\\) \u4e0d\u662f dfs\u6811 \u7684\u6839\u8282\u70b9\uff0c\u5219\u8003\u5bdf\u70b9 \\(u\\) \u5728 dfs\u6811 \u4e2d\u7684\u5b69\u5b50 \\(v\\)\uff0c\u82e5 \\(low[v] \\ge dfn[u]\\)\uff0c\u5219\u70b9 \\(u\\) \u662f\u5272\u70b9\u3002\u5728\u8ba1\u7b97\u5272\u53bb\u8fd9\u4e2a\u70b9\u6240\u589e\u52a0\u7684\u8fde\u901a\u5206\u91cf\u65f6\uff0c\u6bcf\u5f53\u6709\u4e00\u4e2a\u5b69\u5b50 \\(v\\) \u6ee1\u8db3\uff0c\u5219\u5272\u53bb\u70b9 \\(u\\) \u540e\u8fde\u901a\u5206\u91cf\u6570\u5c31\u4f1a\u52a0\u4e00\u3002</li> </ul> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 1000 + 10;\nconst int mod = 998244353;\nchar g[maxn][maxn];\nint n, m, p[maxn][maxn];\n\nconst int dr[] = {-1, 1, 0, 0};\nconst int dc[] = {0, 0, -1, 1};\n\nbool inlim(int r, int c)\n{return r &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; c &gt;= 0 &amp;&amp; c &lt; m;}\n\nvoid dfs(int r, int c, int f)\n{\np[r][c] = f;\nfor(int i = 0; i &lt; 4; i++)\n{\nint nr = r + dr[i], nc = c + dc[i];\nif(inlim(nr, nc) &amp;&amp; g[nr][nc] == '#' &amp;&amp; p[nr][nc] == -1)\ndfs(nr, nc, f);\n}\n}\n\nvoid exgcd(int a, int b, int &amp;x, int &amp;y)\n{\nif(b == 0)\n{\nx = 1;\ny = 0;\nreturn;\n}\nexgcd(b, a % b, y, x);\ny -= a / b * x;\n}\n\nint inv(int a, int p)\n{\nint x, y;\nexgcd(a, p, x, y);\nif(x &lt; p)\nx += p;\nreturn x;\n}\n\nint dfn[maxn][maxn], low[maxn][maxn], ti = 1, cnt[maxn][maxn];\nvoid tarjan(int r, int c, int R, int C)\n{\ndfn[r][c] = low[r][c] = ti++;\nif(r == R &amp;&amp; c == C)\n{\nint son = 0;\nfor(int i = 0; i &lt; 4; i++)\n{\nint nr = r + dr[i], nc = c + dc[i];\nif(!inlim(nr, nc) || g[nr][nc] == '.')\ncontinue;\nif(!dfn[nr][nc])\n{\nson++;\ntarjan(nr, nc, R, C);\n}\n}\ncnt[r][c] = son - 1;\n}\nelse\n{\nfor(int i = 0; i &lt; 4; i++)\n{\nint nr = r + dr[i], nc = c + dc[i];\nif(!inlim(nr, nc) || g[nr][nc] == '.')\ncontinue;\nif(!dfn[nr][nc])\n{\ntarjan(nr, nc, R, C);\nlow[r][c] = min(low[r][c], low[nr][nc]);\nif(low[nr][nc] &gt;= dfn[r][c])\ncnt[r][c]++;\n}\nelse\nlow[r][c] = min(low[r][c], dfn[nr][nc]);\n}\n}\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%s\", g[i]);\nmemset(p, -1, sizeof p);\nLL a = 0, b = 0;\nfor(int i = 0; i &lt; n; i++)\nfor(int j = 0; j &lt; m; j++)\nif(g[i][j] == '#')\n{\nb++;\nif(p[i][j] == -1)\ndfs(i, j, a++);\n}\nb = inv(b, mod);\nLL ans = 0;\nfor(int r = 0; r &lt; n; r++)\nfor(int c = 0; c &lt; m; c++)\nif(g[r][c] == '#')\n{\nif(!dfn[r][c])\ntarjan(r, c, r, c);\nans += (a + cnt[r][c]) * b % mod;\nans %= mod;\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc335/","title":"ABC335(A-F)","text":""},{"location":"algorithm/AtCoder/abc335/#a-2023","title":"A - 2023","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6362\u6210 <code>4</code>\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nstring s;\ncin &gt;&gt; s;\ns[s.length() - 1] = '4';\ncout &lt;&lt; s &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nString s = in.nextLine();\nSystem.out.print(s.substring(0, s.length() - 1));\nSystem.out.println(\"4\");\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc335/#b-tetrahedral-number","title":"B - Tetrahedral Number","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570 \\(N\\)\uff0c\u8f93\u51fa\u6240\u6709\u6ee1\u8db3 \\(x + y + z \\le N\\) \u7684\u975e\u8d1f\u4e09\u5143\u7ec4 \\((x, y, z)\\)\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\nfor(int i = 0; i &lt;= n; i++)\nfor(int j = 0; i + j &lt;= n; j++)\nfor(int k = 0; i + j + k &lt;= n; k++)\nprintf(\"%d %d %d\\n\", i, j, k);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nfor (int i = 0; i &lt;= n; i++)\nfor (int j = 0; i + j &lt;= n; j++)\nfor (int k = 0; i + j + k &lt;= n; k++)\nSystem.out.printf(\"%d %d %d\\n\", i, j, k);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc335/#c-loong-tracking","title":"C - Loong Tracking","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u6761\u9f99\u53ef\u4ee5\u5206\u6210 \\(N(N \\le 10^6)\\) \u4e2a\u90e8\u5206\uff0c\u7b2c \\(1\\) \u4e2a\u90e8\u5206\u4e3a\u9f99\u5934\uff0c\u7b2c \\(N\\) \u4e2a\u90e8\u5206\u4e3a\u9f99\u5c3e\u3002\u9f99\u7684\u6bcf\u4e2a\u90e8\u5206\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u5750\u6807\u6765\u63cf\u8ff0\uff0c\u521d\u59cb\u7684\u65f6\u5019\uff0c\u9f99\u5934\u5728 \\((1, 0)\\) \uff0c\u7b2c \\(2\\) \u4e2a\u90e8\u5206\u5728 \\((2, 0)\\)\uff0c\u7b2c \\(3\\) \u4e2a\u90e8\u5206\u5728 \\((3, 0)\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6709 \\(Q(Q \\le 2 \\times 10^5)\\) \u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li><code>1 C</code>\uff1a\u8868\u793a\u5c06\u9f99\u8fdb\u884c\u79fb\u52a8\uff0c<code>C</code>\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u53ef\u80fd\u662f <code>U</code>\u3001<code>D</code> \u3001<code>L</code>\u3001<code>R</code>\u4e4b\u4e00\uff0c\u8868\u793a\u5bf9\u9f99\u8fdb\u884c\u4e0a\u4e0b\u5de6\u53f3\u7684\u79fb\u52a8\u3002\u9f99\u79fb\u52a8\u7684\u89c4\u5219\u662f\uff0c\u9996\u5148\u5c06\u9f99\u5934\u8fdb\u884c\u79fb\u52a8\uff0c\u63a5\u4e0b\u6765\uff0c\u7b2c \\(2\\)  \u4e2a\u90e8\u5206\u79fb\u52a8\u5230\u539f\u5148\u9f99\u5934\u7684\u4f4d\u7f6e\uff0c\u7b2c \\(3\\) \u4e2a\u90e8\u5206\u79fb\u52a8\u5230\u539f\u5148\u7b2c \\(2\\) \u4e2a\u90e8\u5206\u7684\u4f4d\u7f6e\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</li> <li><code>2 p</code>\uff1a\u8868\u793a\u67e5\u8be2\u5f53\u524d\u9f99\u7684\u7b2c \\(p\\) \u4e2a\u90e8\u5206\u7684\u5750\u6807\u3002 </li> </ul> \u89e3\u9898\u601d\u8def <p>\u5f00\u4e00\u4e2a\u6570\u7ec4\u9006\u5e8f\u5b58\u50a8\u4f4d\u7f6e\uff0c\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u5728\u6570\u7ec4\u7684\u672b\u5c3e\u52a0\u5165\u65b0\u5750\u6807\uff0c\u540c\u65f6\u6570\u7ec4\u7684\u8fb9\u754c\u6ed1\u52a8 \\(1\\) \u683c\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 1E6 +  2E5 + 10;\nint x[maxn], y[maxn];\n\nint main()\n{\nint N, Q;\ncin &gt;&gt; N &gt;&gt; Q;\nint idx = N;\nfor(int i = 1; i &lt;= N; i++)\nx[idx-i] = i;\nint op, p;\nchar C[5];\nwhile(Q--)\n{\nscanf(\"%d\", &amp;op);\nif(op == 1)\n{\nscanf(\"%s\", C);\nx[idx] = x[idx-1];\ny[idx] = y[idx-1];\nif(C[0] == 'U')\ny[idx]++;\nelse if(C[0] == 'D')\ny[idx]--;\nelse if(C[0] == 'L')\nx[idx]--;\nelse\nx[idx]++;\nidx++;\n}\nelse\n{\nscanf(\"%d\", &amp;p);\nprintf(\"%d %d\\n\", x[idx-p], y[idx-p]);\n}\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint q = in.nextInt();\nint[] x = new int[n + q + 1], y = new int[n + q + 1];\nint idx = n, op, p;\nfor (int i = 1; i &lt;= n; i++)\nx[idx - i] = i;\nString c;\nfor (; q &gt; 0; q--) {\nop = in.nextInt();\nif (op == 1) {\nc = in.next();\nx[idx] = x[idx - 1];\ny[idx] = y[idx - 1];\nif (c.equals(\"U\"))\ny[idx]++;\nelse if (c.equals(\"D\"))\ny[idx]--;\nelse if (c.equals(\"L\"))\nx[idx]--;\nelse\nx[idx]++;\nidx++;\n} else {\np = in.nextInt();\nSystem.out.printf(\"%d %d\\n\", x[idx - p], y[idx - p]);\n}\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc335/#d-loong-and-takahashi","title":"D - Loong and Takahashi","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a \\(N \\times N(N \\le 45)\\) \u7684\u7f51\u683c\uff0c\u8f93\u51fa\u4e00\u4e2a\u81ea\u5916\u5411\u5185\u7684\u6570\u5b57\u9012\u589e\u7684\u201c\u56de\u201d\u5b57\u5f62\uff0c\u7279\u522b\u7684\uff0c\u4e2d\u95f4\u4f4d\u7f6e\uff08\u4fdd\u8bc1 \\(N\\) \u662f\u4e00\u4e2a\u5947\u6570\uff09\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26 <code>T</code>\uff08\u89c1\u8f93\u51fa\u6837\u4f8b\uff09\u3002</p> \u8f93\u5165\u8f93\u51fa\u6837\u4f8b <p>\u6837\u4f8b\u8f93\u5165</p> <pre><code>5\n</code></pre> <p>\u6837\u4f8b\u8f93\u51fa</p> <pre><code>1 2 3 4 5\n16 17 18 19 6\n15 24 T 20 7\n14 23 22 21 8\n13 12 11 10 9\n</code></pre> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 45 + 5;\nint n;\nint s[maxn][maxn];\n\nint main()\n{\ncin &gt;&gt; n;\nint r = 0, c = 0, t = n / 2, num = 1;\nwhile(r != t || c != t)\n{\ns[r][c] = num++;\nwhile(c + 1 &lt; n &amp;&amp; !s[r][c+1])\ns[r][++c] = num++;\nwhile(r + 1 &lt; n &amp;&amp; !s[r+1][c])\ns[++r][c] = num++;\nwhile(c - 1 &gt;= 0 &amp;&amp; !s[r][c-1])\ns[r][--c] = num++;\nwhile(!s[r-1][c])\ns[--r][c] = num++;\nc++;\n}\nfor(int i = 0; i &lt; t; i++, puts(\"\"))\nfor(int j = 0; j &lt; n; j++)\nprintf(\"%d \", s[i][j]);\nfor(int j = 0; j &lt; t; j++)\nprintf(\"%d \", s[t][j]);\ncout &lt;&lt; \"T \";\nfor(int j = t + 1; j &lt; n; j++)\nprintf(\"%d \", s[t][j]);\nputs(\"\");\nfor(int i = t+1; i &lt; n; i++, puts(\"\"))\nfor(int j = 0; j &lt; n; j++)\nprintf(\"%d \", s[i][j]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint r = 0, c = 0, t = n / 2, num = 1;\nint[][] s = new int[n][n];\nwhile (r != t || c != t) {\ns[r][c] = num++;\nwhile (c + 1 &lt; n &amp;&amp; s[r][c + 1] == 0)\ns[r][++c] = num++;\nwhile (r + 1 &lt; n &amp;&amp; s[r + 1][c] == 0)\ns[++r][c] = num++;\nwhile (c - 1 &gt;= 0 &amp;&amp; s[r][c - 1] == 0)\ns[r][--c] = num++;\nwhile (s[r - 1][c] == 0)\ns[--r][c] = num++;\nc++;\n}\nfor (int i = 0; i &lt; t; i++, System.out.println())\nfor (int j = 0; j &lt; n; j++)\nSystem.out.printf(\"%d \", s[i][j]);\nfor (int j = 0; j &lt; t; j++)\nSystem.out.printf(\"%d \", s[t][j]);\nSystem.out.print(\"T \");\nfor (int j = t + 1; j &lt; n; j++)\nSystem.out.printf(\"%d \", s[t][j]);\nSystem.out.println();\nfor (int i = t + 1; i &lt; n; i++, System.out.println())\nfor (int j = 0; j &lt; n; j++)\nSystem.out.printf(\"%d \", s[i][j]);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc335/#e-non-decreasing-colorful-path","title":"E - Non-Decreasing Colorful Path","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a \\(N(N \\le 2 \\times 10^5)\\) \u4e2a\u70b9 \\(M(N-1 \\le M \\le 2 \\times 10^5)\\) \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\u3002\u7b2c \\(i\\) \u4e2a\u70b9\u7684\u70b9\u6743\u503c\u4e3a \\(A_i\\)\u3002\u5bf9\u4e8e\u4e00\u6761\u4ee5\u70b9 \\(1\\) \u4e3a\u8d77\u70b9\uff0c\u4ee5\u70b9 \\(N\\) \u4e3a\u7ec8\u70b9\u7684\u8def\u5f84 \\(P_1 \\cdots P_N\\)\uff0c\u5bf9\u5e94\u4e00\u4e2a\u6743\u503c\u5e8f\u5217 \\(A_1 \\cdots A_N\\)\uff0c\u5b9a\u4e49\u6743\u503c\u5e8f\u5217\u7684\u5206\u6570\u4e3a\uff1a</p> <ul> <li>\u5982\u679c\u6743\u503c\u5e8f\u5217\u662f\uff08\u975e\u4e25\u683c\uff09\u5355\u8c03\u9012\u589e\u7684\uff0c\u5219\u5e8f\u5217\u4e2d\u4e0d\u540c\u6570\u5b57\u7684\u4e2a\u6570\u5c31\u662f\u5e8f\u5217\u7684\u5206\u6570\u3002</li> <li>\u5426\u5219\uff0c\u8fd9\u4e2a\u5e8f\u5217\u7684\u5206\u6570\u662f \\(0\\)\u3002</li> </ul> <p>\u8bf7\u627e\u51fa\u6240\u6709\u4ee5\u70b9 \\(1\\) \u4e3a\u8d77\u70b9\uff0c\u4ee5\u70b9 \\(N\\) \u4e3a\u7ec8\u70b9\u7684\u8def\u5f84\u4e2d\uff0c\u5206\u6570\u6700\u5927\u7684\u6743\u503c\u5e8f\u5217\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5c06\u539f\u56fe\u4e2d\u7684\u65e0\u5411\u8fb9\u6539\u4e3a\u6709\u5411\uff08\u4ece\u6743\u503c\u5c0f\u7684\u70b9\u8fde\u5411\u6743\u503c\u5927\u7684\u70b9\uff09\uff0c\u7136\u540e\u6c42\u51fa\u4ece\u70b9 \\(1\\) \u51fa\u53d1\u7684\u6700\u957f\u8def\u5373\u53ef\uff0c\u53ef\u7528\u62d3\u6251\u6392\u5e8f\u3002</p> <p>\u4f46\u662f\u62d3\u6251\u6392\u5e8f\u53ea\u652f\u6301 DAG\uff0c\u800c\u4e0a\u8ff0\u5efa\u56fe\u7684\u65b9\u5f0f\u53ef\u80fd\u5b58\u5728\u4e24\u4e2a\u70b9\u7684\u6743\u503c\u76f8\u540c\uff0c\u5bfc\u81f4\u4e92\u76f8\u53ef\u8fbe\u3002\u7531\u4e8e\u5e8f\u5217\u7684\u5206\u6570\u53d6\u51b3\u4e8e\u5e8f\u5217\u4e2d\u4e0d\u540c\u6570\u5b57\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u5c06\u76f8\u540c\u6743\u503c\u7684\u70b9\u7f29\u6210\u4e00\u4e2a\u70b9\u3002\u5728\u7f29\u70b9\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528 <code>tarjan</code> \u7b97\u6cd5\u6765\u7f29\u70b9\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u9898\u7684\u73af\u90fd\u662f\u7c7b\u4f3c\u91cd\u8fb9\u7684\u73af\uff0c\u7528\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u4e86\u3002\u7f29\u70b9\u4e4b\u540e\u65e2\u80fd\u4fdd\u8bc1\u6700\u957f\u8def\u7684\u70b9\u6570\u5bf9\u5e94\u5e8f\u5217\u7684\u5206\u6570\uff08\u56e0\u4e3a\u6ca1\u6709\u6743\u503c\u76f8\u540c\u7684\u70b9\u4e86\uff09\uff0c\u4e5f\u80fd\u4fdd\u8bc1\u56fe\u662f DAG\uff0c\u53ef\u4ee5\u62d3\u6251\u6392\u5e8f\u3002</p> <p>\u62d3\u6251\u6392\u5e8f\u662f\u4ece\u5165\u5ea6\u4e3a \\(0\\) \u7684\u70b9\u5f00\u59cb\u7684\uff0c\u53ea\u9700\u8981\u5c06\u70b9 \\(1\\) \u7684\u503c\u4ece \\(1\\) \u5f00\u59cb\u8ba1\u7b97\uff0c\u5176\u4ed6\u70b9\u7684\u503c\u8bbe\u7f6e\u4e3a \\(-\\infty\\)\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u7b54\u6848\u4e00\u5b9a\u662f\u4ece\u70b9 \\(1\\) \u66f4\u65b0\u5f97\u5230\u7684\u3002 </p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nconst int maxm = 2E5 + 10;\n\nint n, m, a[maxn];\nint head[maxn], edge[maxm], ne[maxm], idx = 1;\nvoid add(int u, int v)\n{\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx;\nidx++;\n}\n\nint p[maxn];\nint find(int u)\n{return p[u] == u ? u : p[u] = find(p[u]);}\nvoid merge(int u, int v)\n{\nu = find(u), v = find(v);\np[u] = v;\n}\n\nstruct Edge {\nint u, v;\n}e[maxm];\n\nint ind[maxn], dis[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]), p[i] = i;\nfor(int i = 0; i &lt; m; i++)\n{\nscanf(\"%d %d\", &amp;e[i].u, &amp;e[i].v);\nif(a[e[i].u] == a[e[i].v])\nmerge(e[i].u, e[i].v);\n}\nfor(int i = 0, u, v; i &lt; m; i++)\n{\nu = find(e[i].u);\nv = find(e[i].v);\nif(u == v)\ncontinue;\nif(a[u] &gt; a[v])\nswap(u, v);\nind[v]++;\nadd(u, v);\n}\nqueue&lt;int&gt; q;\nfor(int u = 1; u &lt;= n; u++) {\ndis[u] = -1E6;\nif(p[u] == u &amp;&amp; ind[u] == 0)\nq.push(u);\n}\ndis[find(1)] = 1;\nwhile(!q.empty())\n{\nint u = q.front();\nq.pop();\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\ndis[v] = max(dis[v], dis[u] + 1);\nind[v]--;\nif(!ind[v])\nq.push(v);\n}\n}\ncout &lt;&lt; max(dis[find(n)], 0) &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.ArrayDeque;\nimport java.util.Queue;\nimport java.util.Scanner;\n\npublic class Main {\nprivate static int[] p;\n\nprivate static int find(int u) {\nreturn u == p[u] ? u : (p[u] = find(p[u]));\n}\n\nprivate static void merge(int u, int v) {\nu = find(u);\nv = find(v);\np[u] = v;\n}\n\nprivate static int[] head, edge, ne;\nprivate static int idx = 1;\n\nprivate static void graph_init(int n, int m) {\nhead = new int[n];\nedge = new int[m];\nne = new int[m];\n}\n\nprivate static void add(int u, int v) {\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt(), m = in.nextInt();\nint[] a = new int[n + 1];\np = new int[n + 1];\nfor (int i = 1; i &lt;= n; i++) {\na[i] = in.nextInt();\np[i] = i;\n}\nint[] eu = new int[m], ev = new int[m];\nfor (int i = 0; i &lt; m; i++) {\neu[i] = in.nextInt();\nev[i] = in.nextInt();\nif (a[eu[i]] == a[ev[i]])\nmerge(eu[i], ev[i]);\n}\ngraph_init(n + 1, m + 1);\nint[] ind = new int[n + 1];\nfor (int i = 0; i &lt; m; i++) {\nif (a[eu[i]] != a[ev[i]]) {\nint u = find(eu[i]);\nint v = find(ev[i]);\nif (a[u] &gt; a[v]) {\nint t = u;\nu = v;\nv = t;\n}\nind[v]++;\nadd(u, v);\n}\n}\nint[] dp = new int[n + 1];\nQueue&lt;Integer&gt; q = new ArrayDeque&lt;&gt;();\nfor (int i = 1; i &lt;= n; i++) {\nif (i != find(i))\ncontinue;\ndp[find(i)] = (int) -1E6;\nif (ind[find(i)] == 0)\nq.add(i);\n}\ndp[find(1)] = 1;\nwhile (!q.isEmpty()) {\nint u = q.remove();\nfor (int i = head[u]; i &gt; 0; i = ne[i]) {\nint v = edge[i];\ndp[v] = Math.max(dp[u] + 1, dp[v]);\nind[v]--;\nif (ind[v] == 0)\nq.add(v);\n}\n}\nSystem.out.println(Math.max(dp[find(n)], 0));\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc335/#f-hop-sugoroku","title":"F - Hop Sugoroku","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N(N \\le 2 \\times 10^5)\\) \u4e2a\u7f51\u683c\u6392\u6210\u4e00\u884c\uff0c\u6bcf\u4e2a\u7f51\u683c\u7684\u90fd\u6709\u4e00\u4e2a\u6570\u5b57 \\(A_i(A_i \\le 2 \\times 10^5)\\)\u3002\u521d\u59cb\u7684\u65f6\u5019\uff0c\u4f60\u5728\u7b2c \\(1\\) \u4e2a\u7f51\u683c\u3002\u63a5\u4e0b\u6765\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u6b21\u6570\u7684\u79fb\u52a8\uff0c\u79fb\u52a8\u7684\u89c4\u5219\u4e3a\uff1a\u5047\u8bbe\u4f60\u5f53\u524d\u5728\u7b2c \\(i\\) \u4e2a\u7f51\u683c\uff0c\u5728\u79fb\u52a8\u524d\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u6b63\u6574\u6570 \\(x\\)\uff0c\u7136\u540e\u79fb\u52a8\u5230\u7b2c \\(i + A_i \\times x\\) \u4e2a\u7f51\u683c\u3002\u6bcf\u4e00\u6b21\u79fb\u52a8\u540e\uff0c\u5c06\u811a\u4e0b\u7684\u7f51\u683c\u67d3\u9ed1\u3002\u521d\u59cb\u7684\u65f6\u5019\uff0c\u7b2c \\(1\\) \u4e2a\u7f51\u683c\u5df2\u7ecf\u88ab\u67d3\u9ed1\u3002\u4f60\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u6b21\u79fb\u52a8\uff08\u5305\u62ec\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u5728\u7b2c \\(1\\) \u4e2a\u7f51\u683c\u5c31\u505c\u4e0b\u6765\u4e5f\u662f\u4e00\u79cd\u65b9\u6848\uff09\uff0c\u5728\u4f60\u505c\u4e0b\u4e4b\u540e\uff0c\u88ab\u67d3\u9ed1\u7684\u7f51\u683c\u7684\u4e0b\u6807\u8bb0\u4e3a\u4e00\u79cd\u65b9\u6848\u3002\u95ee\uff1a\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u67d3\u9ed1\u65b9\u6848\uff1f</p> \u521d\u6b65\u601d\u8def <p>\u4e0d\u96be\u53d1\u73b0\u4e00\u79cd\u79fb\u52a8\u8def\u7ebf\u5bf9\u5e94\u4e00\u79cd\u67d3\u9ed1\u65b9\u6848\uff0c\u770b\u7740\u50cf dp\uff0c\u5b9a\u4e49 \\(dp[i]\\)\uff1a\u4ee5 \\(i\\) \u4e3a\u7ec8\u70b9\u7684\u6240\u6709\u8def\u5f84\u6570\u91cf\u4e4b\u548c\u3002\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u6240\u6709\u7684 \\(dp[i]\\) \u4e4b\u548c\u3002\u5148\u8003\u8651\u66b4\u529b\u7684\u540e\u5411\u8f6c\u79fb\uff1a</p> <pre><code>for(int i = 0; i &lt; n; i++)\nfor(int j = i + a[i]; j &lt; n; j += a[i])\ndp[j] = (dp[j] + dp[i]) % mod;\n</code></pre> <p>\u663e\u7136\uff0c\u5982\u679c \\(A_i\\) \u5168\u4e3a \\(1\\)\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u590d\u6742\u5ea6\u8fbe\u5230 \\(O(n^2)\\)\uff0c\u9700\u8981\u4f18\u5316\u3002</p> <p>\u770b\u6837\u4f8b\u8f93\u5165\uff1a</p> <pre><code>5\n1 2 3 1 1\n</code></pre> <p>\u5f53 \\(i = 1\\) \u7684\u65f6\u5019\uff0c\u7531\u4e8e \\(A_1 = 1\\)\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u5c31\u6709 \\(1 \\rightarrow 2\\)\uff0c\\(1 \\rightarrow 3\\)\uff0c\\(1 \\rightarrow 4\\)\uff0c\\(1 \\rightarrow 5\\)\uff0c\\(1 \\rightarrow 6\\)\uff0c\\(\\cdots\\)\uff0c\\(1 \\rightarrow N\\)</p> <p>\u5f53 \\(i = 4\\) \u7684\u65f6\u5019\uff0c\u7531\u4e8e \\(A_4 = 1\\)\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u5c31\u6709 \\(? \\rightarrow 4 \\rightarrow 5\\)\uff0c\\(? \\rightarrow 4 \\rightarrow 6\\)\uff0c\\(\\cdots\\)\uff0c\\(? \\rightarrow 4 \\rightarrow N\\)</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\\(A_4\\) \u5f00\u59cb\u7684\u8def\u5f84\u53ef\u4ee5\u5b8c\u5168\u590d\u7528\u5728 \\(A_1\\) \u4ece \\(1 \\rightarrow 4\\) \u4e4b\u540e\u7684\u8def\u5f84\u4e2d\uff0c\u53ea\u9700\u8981\u8fdb\u884c\u7b80\u5355\u7684\u62fc\u63a5\u5373\u53ef\u3002\u4f8b\u5982\uff0c\u7531\u4e8e\u6709 \\(? \\rightarrow 4 \\rightarrow 6\\)\uff0c\u5c31\u6709 \\(1 \\rightarrow 6\\)\uff0c\u8fd9\u662f\u56e0\u4e3a \\(A_1 = A_4 = 1\\)\uff0c\u6b65\u957f\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06 \\(A_1\\) \u7684\u8ba1\u7b97\u4ea4\u7ed9 \\(A_4\\) \u6267\u884c\uff0c\u95f4\u63a5\u5408\u5e76\u3002</p> <p>\u521d\u6b65\u60f3\u6cd5\u662f\u6bcf\u4e2a\u70b9\u5728\u5411\u540e\u66f4\u65b0\u65f6\u53ea\u66f4\u65b0\u4e0b\u4e00\u8df3\uff0c\u5e76\u4e14\u5c06\u6b65\u957f\u4f20\u64ad\u7ed9\u4e0b\u4e00\u8df3\uff0c\u8ba9\u4e0b\u4e00\u8df3\u4ee3\u4e3a\u4f20\u64ad\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\uff0c\u5982\u679c\u4e0b\u4e00\u8df3\u4e5f\u6709\u540c\u6837\u7684\u6b65\u957f\uff0c\u5c31\u80fd\u5c06\u76f8\u540c\u7684\u6b65\u957f\u5408\u5e76\uff0c\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002\u4e0b\u4e00\u8df3\u5f00\u59cb\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u9700\u8981\u5c06\u4e4b\u524d\u6240\u6709\u4ea4\u7ed9\u81ea\u5df1\u7684\u6b65\u957f\u90fd\u4f20\u64ad\u51fa\u53bb\u3002</p> <p>\u56e0\u6b64\u6211\u5f00\u4e86\u4e00\u4e2a <code>map</code> \u6765\u5b58\u653e\u70b9\u7684\u6b65\u957f\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nconst int mod = 998244353;\n\nint main()\n{\nint n, ans;\ncin &gt;&gt; n;\nvector&lt;map&lt;int, int&gt;&gt; A(n + 1);\nvector&lt;int&gt; dp(n + 1);\ndp[1] = 1;\nfor (int i = 1, a; i &lt;= n; i++)\n{\nans += dp[i];\nif (ans &gt;= mod)\nans -= mod;\nscanf(\"%d\", &amp;a);\nif (A[i].count(a))\n{\nA[i][a] += dp[i];\nif (A[i][a] &gt;= mod)\nA[i][a] -= mod;\n}\nelse\nA[i][a] = dp[i];\nfor (auto [p, c] : A[i])\nif (i + p &lt;= n)\n{\ndp[i + p] += c;\nif (dp[i + p] &gt;= mod)\ndp[i + p] -= mod;\nif (A[i + p].count(p))\n{\nA[i + p][p] += c;\nif (A[i + p][p] &gt;= mod)\nA[i + p][p] -= mod;\n}\nelse\nA[i + p][p] = c;\n}\nelse\nbreak;\nA[i].clear();\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u8fd9\u4e2a\u4ee3\u7801\u6211\u591a\u6b21\u4f18\u5316\u5e38\u6570\uff0c\u6700\u7ec8\u4f18\u5316\u5230 2.7s\uff08\u672c\u9898\u8981\u6c42 2.5s\uff09\uff0c\u5927\u6982\u6709 10 \u4e2a\u6d4b\u8bd5\u70b9\u8d85\u65f6\u3002\u6211\u8ba4\u4e3a\u65f6\u95f4\u6027\u80fd\u7684\u74f6\u9888\u5728\u4e8e\u5f00\u4e86\u591a\u4e2a <code>map</code>\uff0c\u5728\u589e\u5220\u6539\u67e5\u7684\u65f6\u5019\u8017\u8d39\u4e0d\u5c11\u65f6\u95f4\u3002</p> \u6b63\u786e\u601d\u8def <p>\u8fdb\u4e00\u6b65\u53d1\u73b0\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5b9e\u8d28\u901a\u8fc7\u5408\u5e76\u76f8\u540c\u7684\u6b65\u957f\u6765\u51cf\u5c11\u5faa\u73af\u6b21\u6570\uff0c\u800c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u6709\u76f8\u540c\u7684 \\(A_i\\) \u503c\u53ef\u4ee5\u5408\u5e76\uff0c\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u7528 <code>map</code> \u5b58\u50a8\u6240\u6709\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u7684\u6b65\u957f\uff0c\u53ea\u9700\u8981\u5b58\u50a8\u76f8\u540c\u7684\u6b65\u957f\u6709\u591a\u5c11\u3002</p> <p>\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u4ecd\u7136\u8ba9\u70b9 \\(i\\) \u4e0d\u65ad\u7684\u5411\u540e\u4f20\u64ad\uff0c\u76f4\u5230\u78b0\u5230\u548c \\(A_i\\) \u76f8\u540c\u7684 \\(A_j\\)\uff0c\u6b64\u65f6\u4e2d\u6b62 \\(i\\) \u7684\u4f20\u64ad\uff0c\u540e\u7eed\u7531 \\(j\\) \u4ee3\u4e3a\u4f20\u64ad\u3002</p> <p>\u6700\u7ec8 AC \u4ee3\u7801\u51fa\u4e4e\u610f\u6599\u7684\u7b80\u5355\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nconst int mod  = 998244353;\nint dp[maxn], x[maxn], n, a[maxn], ans;\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%d\", &amp;a[i]);\ndp[0] = 1;\nfor(int i = 0; i &lt; n; i++)\n{\nans = (ans + dp[i]) % mod;\nint y = (dp[i] + x[i]) % mod;\nfor(int j = i + a[i]; j &lt; n; j += a[i])\n{\ndp[j] = (dp[j] + y) % mod;\nif(a[i] == a[j]) {\nx[j] = (x[j] + y) % mod;\nbreak;\n}\n}\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static final int mod = 998244353;\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint[] a = new int[n], dp = new int[n], x = new int[n];\nfor (int i = 0; i &lt; n; i++)\na[i] = in.nextInt();\ndp[0] = 1;\nint ans = 0;\nfor (int i = 0; i &lt; n; i++) {\nans += dp[i];\nans %= mod;\nint t = (x[i] + dp[i]) % mod;\nfor (int j = i + a[i]; j &lt; n; j += a[i]) {\ndp[j] += t;\ndp[j] %= mod;\nif (a[i] == a[j]) {\nx[j] += t;\nbreak;\n}\n}\n}\nSystem.out.println(ans);\nin.close();\n}\n}\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e <p>\u6700\u574f\u7684\u60c5\u51b5\u662f\u6ca1\u6709\u53d1\u751f\u5408\u5e76\uff0c\u5bf9\u5e94\u7684\u5e8f\u5217\u662f \\(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, \\cdots\\)\uff0c\u8fd9\u4e2a\u5e8f\u5217\u4e0d\u4f1a\u53d1\u751f\u5408\u5e76\u3002</p> <p>\u5bf9\u5e94\u7684\u8ba1\u7b97\u6b21\u6570\u662f \\(n + 2 \\times \\frac{n}{2} + 3 \\times \\frac{n}{3} + \\cdots\\)\uff0c\u5bf9\u4e8e\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217\uff0c\u6700\u5927\u7684\u6570\u5b57\u4e0d\u4f1a\u8d85\u8fc7 \\(\\sqrt{n}\\)\uff08\u5c06\u6570\u5b57\u5806\u6210\u4e0b\u4e09\u89d2\u5f62\u5373\u53ef\uff09\uff0c\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(n\\sqrt{n}\\)\u3002</p>"},{"location":"algorithm/AtCoder/abc340/","title":"ABC340(A-F)","text":""},{"location":"algorithm/AtCoder/abc340/#a-arithmetic-progression","title":"A - Arithmetic Progression","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a\u9996\u9879\u4e3a \\(A\\)\uff0c\u672b\u9879\u4e3a \\(B\\)\uff0c\u516c\u5dee\u4e3a \\(D\\) \u7684\u7b49\u5dee\u6570\u5217\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6570\u5217\u7684\u6240\u6709\u9879\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint a, b, d;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; d;\ndo {\ncout &lt;&lt; a &lt;&lt; ' ';\na += d;\n}while(a &lt;= b);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint a = in.nextInt();\nint b = in.nextInt();\nint d = in.nextInt();\ndo {\nSystem.out.printf(\"%d \", a);\na += d;\n} while (a &lt;= b);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc340/#b-append","title":"B - Append","text":"\u9898\u76ee\u5927\u610f <p>\u7ef4\u62a4\u4e00\u4e2a\u6570\u5217\uff0c\u6709 \\(Q\\) \u4e2a\u8be2\u95ee\uff0c\u8be2\u95ee\u6709\u4e24\u79cd\u7c7b\u578b\uff1a</p> <p><code>1 x</code>\uff1a\u5728\u6570\u5217\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u6570\u5b57 \\(x\\)\u3002</p> <p><code>2 k</code>\uff1a\u8f93\u51fa\u672b\u5c3e\u5012\u6570\u7b2c \\(k\\) \u4e2a\u6570\u5b57\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\nint q, op, x;\ncin &gt;&gt; q;\nvector&lt;int&gt; a;\nwhile(q--)\n{\ncin &gt;&gt; op &gt;&gt; x;\nif(op == 1)\na.push_back(x);\nelse\ncout &lt;&lt; a[a.size() - x] &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint q, op, x;\nq = in.nextInt();\nArrayList&lt;Integer&gt; a = new ArrayList&lt;&gt;();\nwhile (q-- &gt; 0) {\nop = in.nextInt();\nx = in.nextInt();\nif (op == 1)\na.add(x);\nelse\nSystem.out.println(a.get(a.size() - x));\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc340/#c-divide-and-divide","title":"C - Divide and Divide","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 \\(N(2 \\le N \\le 10^{17})\\)\uff0c\u521d\u59cb\u65f6\u53ea\u6709 \\(N\\) \u4e00\u4e2a\u6570\u5b57\uff0c\u4e00\u76f4\u91cd\u590d\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u9009\u62e9\u4e00\u4e2a\u4e0d\u5c0f\u4e8e \\(2\\) \u7684\u6570\u5b57\uff0c\u5047\u8bbe\u9009\u5b9a\u7684\u6570\u5b57\u662f \\(x\\)\uff0c\u7136\u540e\u82b1\u8d39 \\(x\\) \u5143\u5c06\u8fd9\u4e2a\u6570\u5b57\u5206\u88c2\u6210 \\(\\lfloor\\frac{x}{2}\\rfloor\\) \u548c \\(\\lceil\\frac{x}{2}\\rceil\\)</li> </ul> <p>\u95ee\uff1a\u4e00\u76f4\u6267\u884c\u64cd\u4f5c\uff0c\u76f4\u5230\u65e0\u6cd5\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u9700\u8981\u82b1\u8d39\u591a\u5c11\u5143\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u5b9a\u4e49 \\(dp[i]\\) \u8868\u793a\u9009\u4e2d\u6570\u5b57 \\(i\\)\uff0c\u540c\u65f6\u5c06 \\(i\\) \u540e\u7eed\u5206\u88c2\u7684\u6240\u6709\u6570\u5b57\u90fd\u9012\u5f52\u6267\u884c\u64cd\u4f5c\uff0c\u76f4\u5230\u65e0\u6cd5\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u6240\u9700\u8981\u7684\u82b1\u8d39\u3002</p> <p>\u5219\u6709\uff1a</p> \\[ dp[i] = \\left\\{ \\begin{matrix} 0, &amp; i = 1\\\\ i + dp[\\frac{i}{2}] + dp[\\frac{i+1}{2}], &amp; i \\ge 2 \\end{matrix} \\right. \\] <p>\u8003\u8651\u5230 \\(N \\le 10^{17}\\) \u663e\u7136\u4e0d\u80fd\u4ece\u524d\u5f80\u540e\u7b97\uff0c\u6ce8\u610f\u5230\u8ba1\u7b97\u67d0\u4e2a \\(dp[i]\\) \u7684\u503c\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u904d\u5386\u6240\u6709\u70b9\uff0c\u6240\u4ee5\u8bb0\u5fc6\u5316\u641c\u7d22\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nunordered_map&lt;LL, LL&gt; dp;\nLL DP(LL x)\n{\nif(dp.count(x))\nreturn dp[x];\nLL ans = DP(x/2) + DP((x+1)/2) + x;\ndp[x] = ans;\nreturn ans;\n}\n\nint main()\n{\nLL n;\ncin &gt;&gt; n;\ndp[1] = 0;\ncout &lt;&lt; DP(n);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\nprivate static HashMap&lt;Long, Long&gt; dp = new HashMap&lt;&gt;();\n\nprivate static long DP(long x) {\nif (dp.containsKey(x))\nreturn dp.get(x);\nlong ans = DP(x / 2) + DP((x + 1) / 2) + x;\ndp.put(x, ans);\nreturn ans;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nlong n = in.nextLong();\ndp.put(1l, 0l);\nSystem.out.println(DP(n));\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc340/#d-super-takahashi-bros","title":"D - Super Takahashi Bros.","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N(1 \\le N \\le 2 \\times 10 ^ 5)\\) \u4e2a\u70b9\uff0c\u521d\u59cb\u7684\u65f6\u5019\u4f60\u5728\u70b9 \\(1\\)\u3002\u5f53\u4f60\u5728\u70b9 \\(i(1 \\le i &lt; N)\\) \u65f6\uff0c\u53ef\u4ee5\u82b1\u8d39 \\(A_i(1 \\le A_i \\le 10^9)\\) \u5143\u79fb\u52a8\u5230\u70b9 \\(i+1\\)\uff0c\u4e5f\u53ef\u4ee5\u82b1\u8d39 \\(B_i(1 \\le B_i \\le 10^9)\\) \u79fb\u52a8\u5230\u70b9 \\(X_i(1 \\le X_i \\le N)\\)\u3002\u95ee\uff1a\u4ece\u70b9 \\(1\\) \u79fb\u52a8\u5230\u70b9 \\(N\\) \u6700\u5c11\u8981\u82b1\u8d39\u591a\u5c11\u5143\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u6700\u77ed\u8def\u6a21\u677f\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nconst int maxm = 2 * maxn;\nint head[maxn], edge[maxm], ne[maxm], cost[maxm], idx = 1;\nvoid add(int u, int v, int w)\n{\nedge[idx] = v;\nne[idx] = head[u];\ncost[idx] = w;\nhead[u] = idx++;\n}\n\nstruct Node {\nint u;\nLL d;\nNode(int _u, LL _d) : u(_u), d(_d) {}\nbool operator &gt; (const Node &amp;y) const\n{return d &gt; y.d;}\n};\n\nint n;\n\nLL dijkstra()\n{\nLL dis[maxn];\nmemset(dis, 0x3f, sizeof dis);\ndis[1] = 0;\npriority_queue&lt;Node, vector&lt;Node&gt;, greater&lt;Node&gt;&gt; heap;\nheap.push(Node(1, 0));\nwhile(!heap.empty())\n{\nNode p = heap.top();\nheap.pop();\nint u = p.u;\nLL d = p.d;\nif(d &gt; dis[u])\ncontinue;\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nLL nd = d + cost[i];\nif(nd &lt; dis[v])\n{\ndis[v] = nd;\nheap.push(Node(v, nd));\n}\n}\n}\nreturn dis[n];\n} int main()\n{\ncin &gt;&gt; n;\nfor(int i = 1, a, b, x; i &lt; n; i++)\n{\nscanf(\"%d %d %d\", &amp;a, &amp;b, &amp;x);\nadd(i, i+1, a);\nadd(i, x, b);\n}\ncout &lt;&lt; dijkstra() &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Arrays;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Node {\nint u;\nlong d;\n\npublic Node(int _u, long _d) {\nu = _u;\nd = _d;\n}\n}\n\npublic class Main {\nprivate static int n;\nprivate static int[] head, edge, ne, cost;\nprivate static long[] dis;\nprivate static int idx;\n\nprivate static void graph_init(int n, int m) {\nidx = 1;\nhead = new int[n];\ndis = new long[n];\nedge = new int[m];\nne = new int[m];\ncost = new int[m];\n}\n\nprivate static void add(int u, int v, int w) {\nedge[idx] = v;\ncost[idx] = w;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\nprivate static long dijkstra() {\nArrays.fill(dis, 0x3f3f3f3f3f3f3f3fl);\ndis[1] = 0;\nPriorityQueue&lt;Node&gt; heap = new PriorityQueue&lt;&gt;((x, y) -&gt; Long.compare(x.d, y.d));\nheap.add(new Node(1, 0));\nwhile (!heap.isEmpty()) {\nNode p = heap.remove();\nint u = p.u;\nlong d = p.d;\nif (d &gt; dis[u])\ncontinue;\nfor (int i = head[u]; i &gt; 0; i = ne[i]) {\nint v = edge[i];\nlong nd = d + cost[i];\nif (nd &lt; dis[v]) {\ndis[v] = nd;\nheap.add(new Node(v, nd));\n}\n}\n}\nreturn dis[n];\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nn = in.nextInt();\ngraph_init(n + 1, 2 * n);\nfor (int i = 1, a, b, x; i &lt; n; i++) {\na = in.nextInt();\nb = in.nextInt();\nx = in.nextInt();\nadd(i, i + 1, a);\nadd(i, x, b);\n}\nSystem.out.println(dijkstra());\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc340/#e-mancala-2","title":"E - Mancala 2","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N(1 \\le N \\le 2 \\times 10^5)\\) \u4e2a\u76d2\u5b50\uff0c\u521d\u59cb\u7684\u65f6\u5019\u7b2c \\(i\\) \u4e2a\u76d2\u5b50\u6709 \\(A_i(0 \\le A_i \\le 10^9)\\) \u4e2a\u7403\uff0c\\(N\\) \u4e2a\u76d2\u5b50\u7684\u7f16\u53f7\u4e3a \\(0\\) \u5230 \\(N-1\\)\uff0c\u7b2c \\(i\\) \u4e2a\u76d2\u5b50\u7684\u4e0b\u4e00\u4e2a\u76d2\u5b50\u662f \\((i+1) \\bmod N\\)\uff0c\u4f60\u9700\u8981\u6267\u884c \\(M(1 \\le M \\le 2 \\times 10^5)\\) \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 \\(B_i\\)\uff0c\u6d41\u7a0b\u4e3a\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u5c06\u7f16\u53f7\u4e3a \\(B_i\\) \u7684\u76d2\u5b50\u7684\u6240\u6709\u7403\u62ff\u5728\u624b\u4e2d\u3002</li> <li>\u7136\u540e\uff0c\u4ece \\(B_i\\) \u7684\u4e0b\u4e00\u4e2a\u76d2\u5b50\u5f00\u59cb\uff0c\u4f9d\u6b21\u7ed9\u8fd9\u4e9b\u76d2\u5b50\u653e\u5165\u4e00\u4e2a\u5c0f\u7403\uff0c\u76f4\u5230\u624b\u4e2d\u6ca1\u6709\u5c0f\u7403\u3002</li> </ul> <p>\u95ee\uff1a\u5728 \\(M\\) \u6b21\u64cd\u4f5c\u4e4b\u540e\uff0c\u6bcf\u4e2a\u76d2\u5b50\u6709\u591a\u5c11\u5c0f\u7403\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u5bf9\u4e8e\u4e00\u6b21\u64cd\u4f5c\uff0c\u5047\u8bbe \\(B_i\\) \u76d2\u5b50\u6709 \\(X\\) \u4e2a\u7403\uff0c\u9996\u5148\u5c06 \\(B_i\\) \u76d2\u5b50\u7f6e \\(0\\)\uff0c\u7136\u540e\u4ee4 \\(k = \\lfloor\\frac{X}{N}\\rfloor\\)\uff0c\\(r = X \\bmod N\\)\uff0c\u5219\u76f8\u5f53\u4e8e\u7ed9= \\([0, N-1]\\) \u4e0a\u7684\u70b9\u90fd\u52a0\u4e0a \\(k\\)\uff0c\u5269\u4e0b \\(r\\) \u4e2a\u7403\uff0c\u62c6\u6210 \\([x, N-1]\\) \u548c \\([0, y]\\) \u4e24\u4e2a\u533a\u95f4\u52a0 \\(1\\) \u7684\u64cd\u4f5c\u5373\u53ef\u3002\u6d89\u53ca\u5230\u5355\u70b9\u67e5\uff0c\u533a\u95f4\u6539\uff0c\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u90fd\u53ef\u4ee5\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint n, m, a[maxn];\nLL t[maxn];\n\nint lowbit(int x)\n{return x &amp; -x;}\n\nvoid update(int x, LL k)\n{\nfor(; x &lt;= n; x += lowbit(x))\nt[x] += k;\n}\n\nvoid add(int l, int r, LL k)\n{\n++l, ++r;\nupdate(l, k);\nupdate(r+1, -k);\n}\n\nLL ask(int x)\n{\nLL sum = 0;\nfor(; x; x -= lowbit(x))\nsum += t[x];\nreturn sum;\n}\n\nLL query(int x)\n{\n++x;\nreturn ask(x) + a[x];\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]);\nint x;\nwhile(m--)\n{\nscanf(\"%d\", &amp;x);\nLL y = query(x);\nif(!y)\ncontinue;\nadd(x, x, -y);\nif(x + 1 &lt; n)\n{\nint r = min(n-1ll, x + y);\ny -= r - x;\nadd(x+1, r, 1);\n}\nif(!y)\ncontinue;\nadd(0, n-1, y/n);\ny %= n;\nif(!y)\ncontinue;\nadd(0, y-1, 1);\n}\nfor(int i = 0; i &lt; n; i++)\nprintf(\"%lld \", query(i));\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static int n, m;\nprivate static int[] a;\nprivate static long[] t;\n\nprivate static int lowbit(int x) {\nreturn x &amp; -x;\n}\n\nprivate static void update(int x, long k) {\nfor (; x &lt;= n; x += lowbit(x))\nt[x] += k;\n}\n\nprivate static void add(int l, int r, long k) {\nl++;\nr++;\nupdate(l, k);\nupdate(r + 1, -k);\n}\n\nprivate static long ask(int x) {\nlong sum = 0;\nfor (; x &gt; 0; x -= lowbit(x))\nsum += t[x];\nreturn sum;\n}\n\nprivate static long query(int x) {\n++x;\nreturn ask(x) + a[x];\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nn = in.nextInt();\nm = in.nextInt();\na = new int[n + 1];\nt = new long[n + 1];\nfor (int i = 1; i &lt;= n; i++)\na[i] = in.nextInt();\nint x;\nwhile (m-- &gt; 0) {\nx = in.nextInt();\nlong y = query(x);\nif (y == 0)\ncontinue;\nadd(x, x, -y);\nif (x + 1 &lt; n) {\nint r = (int) Math.min(n - 1l, x + y);\ny -= r - x;\nadd(x + 1, r, 1);\n}\nif (y == 0)\ncontinue;\nadd(0, n - 1, y / n);\ny %= n;\nif (y == 0)\ncontinue;\nadd(0, (int) y - 1, 1l);\n}\nfor (int i = 0; i &lt; n; i++)\nSystem.out.printf(\"%d \", query(i));\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc340/#f-s-1","title":"F - S = 1","text":"\u9898\u76ee\u5927\u610f <p>\u5728\u5e73\u9762\u4e0a\u7ed9\u4f60\u4e00\u4e2a\u70b9 \\((X, Y)\\)\uff0c\u5176\u4e2d \\((X, Y) \\neq (0, 0)\\)\uff0c\u95ee\uff1a\u662f\u5426\u5b58\u5728\u53e6\u4e00\u4e2a\u70b9 \\((A, B)\\) \u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\\(-10^{18} \\le A, B \\le 10^{18}\\)\u200b</li> <li>\\((0, 0)\\)\uff0c\\((X, Y)\\) \u548c \\((A, B)\\) \u4e09\u4e2a\u70b9\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u4e3a \\(1\\)\u3002</li> </ul> <p>\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u70b9\uff0c\u8f93\u51fa\u8fd9\u4e2a\u70b9\u7684\u5750\u6807\uff0c\u5426\u5219\u8f93\u51fa <code>-1</code>\u3002</p> \u89e3\u9898\u601d\u8def <p>\u539f\u70b9\u5230\u70b9 \\((X, Y)\\) \u7684\u76f4\u7ebf\u4e3a \\(Yx - Xy = 0\\)\uff0c\u8bbe \\((A, B)\\) \u5230\u8fd9\u6761\u76f4\u7ebf\u7684\u8ddd\u79bb\u4e3a \\(d\\)\uff0c\u5219\u6709\uff1a</p> \\[ d = \\frac{|YA-XB|}{\\sqrt{X^2+Y^2}} \\] <p>\u53c8\u56e0\u4e3a \\(\\sqrt{X^2+Y^2}\\) \u8868\u793a\u539f\u70b9\u5230 \\((X, Y)\\) \u7684\u8ddd\u79bb\uff0c\u5373 \\(d\\sqrt{X^2+Y^2} = 2\\)\u3002</p> <p>\u95ee\u9898\u8f6c\u5316\u4e3a \\(|YA-XB|=2\\) \u5728 \\(-10^{18} \\le A, B \\le 10^{18}\\) \u4e0a\u662f\u5426\u6709\u89e3\u3002</p> <p>\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u8003\u8651 \\(YA-XB=2\\) \u662f\u5426\u6709\u89e3\uff0c\u4ee4 \\(P = |Y|\\)\uff0c\\(Q = |-X|\\)\uff0c\u5373\u6c42\u4e0d\u5b9a\u65b9\u7a0b \\(Pa+Qb = 2\\) \u662f\u5426\u6709\u89e3\u3002</p> <p>\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u53ef\u4ee5\u6c42\u51fa\u5f62\u5982\u8fd9\u6837\u7684 \\(Pa+Qb = \\gcd(P, Q)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u663e\u7136\uff0c\u672c\u9898\u7684\u6761\u4ef6\u4e0b\u9996\u5148\u9700\u8981\u6ee1\u8db3 \\(\\gcd(P, Q)\\) \u7b49\u4e8e \\(1\\) \u6216\u8005 \\(2\\)\uff0c\u5426\u5219\u65e0\u89e3\u3002</p> <p>\u4f7f\u7528\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u51fa\u4e00\u7ec4\u89e3\uff08\u5982\u679c \\(\\gcd(P, Q) = 1\\)\uff0c\u8fd8\u9700\u8981\u5c06\u5f97\u5230\u7684\u89e3\u4e58 \\(2\\) \uff09\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3 \\(-10^{18} \\le A, B \\le 10^{18}\\)\uff0c\u7136\u540e\u518d\u5c06\u6b63\u8d1f\u5173\u7cfb\u6620\u5c04\u56de\u53bb\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nLL exgcd(LL a, LL b, LL &amp;x, LL &amp;y)\n{\nif(!b)\n{\nx = 1;\ny = 0;\nreturn a;\n}\nLL g = exgcd(b, a % b, y, x);\ny -= a / b * x;\nreturn g;\n}\n\nint main()\n{\nLL a, b, x, y;\ncin &gt;&gt; a &gt;&gt; b;\nLL g = exgcd(abs(b), abs(a), x, y);\nif(g &gt; 2)\nputs(\"-1\");\nelse\n{\nif(g == 1)\nx *= 2, y *= 2;\nif(abs(x) &gt; 1E17 || abs(y) &gt; 1E17)\nputs(\"-1\");\nif(b &lt; 0)\nx *= -1;\nif(a &gt; 0)\ny *= -1;\nprintf(\"%lld %lld\", x, y);\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static long[] exgcd(long a, long b) {\nif (b == 0) {\nreturn new long[] { 1, 0, a };\n}\nlong[] xy = exgcd(b, a % b);\nlong x = xy[0], y = xy[1];\nxy[0] = y;\nxy[1] = x - a / b * y;\nreturn xy;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\n\nlong a, b;\na = in.nextLong();\nb = in.nextLong();\nlong[] res = exgcd(Math.abs(b), Math.abs(a));\nlong x = res[0], y = res[1], g = res[2];\nif (g &gt; 2)\nSystem.out.println(-1);\nelse {\nif (g == 1) {\nx *= 2;\ny *= 2;\n}\nif (Math.abs(x) &gt; 1E17 || Math.abs(y) &gt; 1E17)\nSystem.out.println(-1);\nif (b &lt; 0)\nx *= -1;\nif (a &gt; 0)\ny *= -1;\nSystem.out.printf(\"%d %d\", x, y);\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc341/","title":"ABC341(A-G)","text":""},{"location":"algorithm/AtCoder/abc341/#a-print-341","title":"A - Print 341","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 \\(N\\)\uff0c\u4ea4\u66ff\u6253\u5370 \\(N\\) \u4e2a <code>0</code> \u548c \\(N+1\\) \u4e2a <code>1</code>\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\ncout &lt;&lt; 1;\nwhile(n--)\ncout &lt;&lt; \"01\";\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nSystem.out.print(\"1\");\nwhile (n-- &gt; 0)\nSystem.out.print(\"01\");\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc341/#b-foreign-exchange","title":"B - Foreign Exchange","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N\\) \u4e2a\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u662f \\(A_i\\)\uff0c\u5bf9\u4e8e \\(1 \\le i \\le N-1\\) \u7684\u6570\u5b57 \\(A_i\\)\uff0c\u5982\u679c \\(A_i \\ge S_i\\)\uff0c\u4f60\u53ef\u4ee5\u8ba9 \\(A_i\\) \u51cf\u5c11 \\(S_i\\)\uff0c\u7136\u540e\u8ba9 \\(A_{i+1}\\) \u52a0\u4e0a \\(T_i\\)\u3002\u95ee\uff1a\\(A_N\\) \u7684\u6700\u5927\u503c\u662f\u591a\u5c11\uff1f</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint n;\nLL a[maxn];\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;a[i]);\nfor(int i = 1, s, t; i &lt; n; i++)\n{\nscanf(\"%d %d\", &amp;s, &amp;t);\nLL k = a[i] / s;\na[i+1] += k * t;\n}\ncout &lt;&lt; a[n] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\n\nint n = in.nextInt();\nlong[] a = new long[n + 1];\n\nfor (int i = 1; i &lt;= n; i++)\na[i] = in.nextLong();\nfor (int i = 1, s, t; i &lt; n; i++) {\ns = in.nextInt();\nt = in.nextInt();\nlong k = a[i] / s;\na[i + 1] += k * t;\n}\nSystem.out.println(a[n]);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc341/#c-takahashi-gets-lost","title":"C - Takahashi Gets Lost","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a \\(H \\times W(1 \\le H, W \\le 500)\\) \u7684\u7f51\u683c\uff0c<code>#</code> \u4e0d\u80fd\u8d70\uff0c<code>.</code> \u53ef\u4ee5\u8d70\u3002\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N(1 \\le N \\le 500)\\) \u7684\u79fb\u52a8\u5e8f\u5217\uff0c\u5e8f\u5217\u53ea\u53ef\u80fd\u662f <code>LRUD</code> \u4e4b\u4e00\u3002\u95ee\uff1a\u6709\u54ea\u4e9b\u4f4d\u7f6e\u53ef\u4ee5\u6210\u4e3a\u8fd9\u4e2a\u79fb\u52a8\u5e8f\u5217\u7684\u8d77\u70b9\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u679a\u4e3e\u6240\u6709\u7684\u8d77\u70b9\u8fdb\u884c\u79fb\u52a8\u5c31\u597d\uff0c\u590d\u6742\u5ea6 \\(O(HWN)\\)</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 500 + 10;\nint n, m, k;\nchar g[maxn][maxn], t[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\nscanf(\"%s\", t);\nfor(int i = 0; i &lt; n; i++)\nscanf(\"%s\", g[i]);\nint ans = 0;\nfor(int x = 1; x &lt; n-1; x++)\nfor(int y = 1; y &lt; m-1; y++)\n{\nint r = x, c = y, i = 0;\nwhile(i &lt; k &amp;&amp; g[r][c] != '#')\n{\nif(t[i] == 'L')\nc--;\nelse if(t[i] == 'R')\nc++;\nelse if(t[i] == 'U')\nr--;\nelse\nr++;\ni++;\n}\nans += g[r][c] == '.';\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n, m, k;\nn = in.nextInt();\nm = in.nextInt();\nk = in.nextInt();\nchar[][] g = new char[n][];\nchar[] t = in.next().toCharArray();\nfor (int i = 0; i &lt; n; i++)\ng[i] = in.next().toCharArray();\nint ans = 0;\nfor (int x = 1; x &lt; n - 1; x++)\nfor (int y = 1; y &lt; m - 1; y++) {\nint r = x, c = y, i = 0;\nwhile (i &lt; k &amp;&amp; g[r][c] != '#') {\nif (t[i] == 'L')\nc--;\nelse if (t[i] == 'R')\nc++;\nelse if (t[i] == 'U')\nr--;\nelse\nr++;\ni++;\n}\nans += (g[r][c] == '.' ? 1 : 0);\n}\nSystem.out.println(ans);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc341/#d-only-one-of-two","title":"D - Only one of two","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e09\u4e2a\u6570 \\(N\\)\uff0c \\(M(1 \\le N, M \\le 10^8)\\) \u548c \\(K(1 \\le K \\le 10^{10})\\)\uff0c\u5176\u4e2d \\(N \\neq M\\)\u3002\u8f93\u51fa\u7b2c \\(K\\) \u4e2a\u53ea\u80fd\u80fd\u6574\u9664 \\(N\\) \u6216 \\(M\\) \u5176\u4e2d\u4e4b\u4e00\u7684\u6570\u3002</p> \u89e3\u9898\u601d\u8def <p>\u8bbe \\(g = \\gcd(N, M)\\)\uff0c\\(N = gn\\)\uff0c\\(M = gm\\)\uff0c\\(L = gnm\\)\uff0c\u5219\u5728 \\([1, L]\\) \u533a\u95f4\u5185\uff0c\u6700\u591a\u6709 \\(\\frac{L}{N} = m\\) \u4e2a\u53ef\u4ee5\u6574\u9664 \\(N\\) \u7684\u6570\uff0c\u4f46\u8981\u53bb\u6389\u80fd\u540c\u65f6\u6574\u9664 \\(N\\) \u548c \\(M\\) \u7684\u6570\uff0c\u8fd9\u6837\u7684\u6570\u53ea\u6709 \\(L\\)\uff08\u56e0\u4e3a \\(L\\) \u662f\u4e24\u8005\u7684\u6700\u5c0f\u516c\u500d\u6570\uff09\uff0c\u6240\u4ee5\u6709 \\(m-1\\) \u4e2a\u53ea\u80fd\u6574\u9664 \\(N\\) \u7684\u6570\uff0c\u540c\u7406\u6709 \\(n-1\\) \u4e2a\u53ea\u80fd\u6574\u9664 \\(M\\) \u7684\u6570\uff0c\u4e24\u79cd\u6570\u5b57\u52a0\u8d77\u6765\uff0c\u5c31\u662f \\(n+m-2\\) \u4e2a\uff0c\u5373 \\([1, L]\\) \u533a\u95f4\u5185\u6709 \\(n+m-2\\) \u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u3002\u540c\u6837\u7684\uff0c\\([L+1, 2L]\\) \u4e5f\u6709 \\(n+m-2\\) \u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u3002\u56e0\u6b64\u53ef\u4ee5\u5feb\u901f\u7b97\u51fa \\(K\\) \u5728\u7b2c\u51e0\u4e2a\u533a\u95f4\uff0c\u5047\u8bbe \\(K\\) \u5728 \\([(a-1)L+1, aL]\\)\uff0c\u53ea\u9700\u8981\u5728\u4e0a\u9762\u4e8c\u5206\u51fa\u6570\u5b57\u5373\u53ef\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u4e8c\u5206\u7684\u6570\u5b57\u662f \\(x\\)\uff0c\u5219\u53ea\u9700\u8981\u7b97\u51fa \\(\\frac{x}{N} + \\frac{x}{M} - 2\\lfloor\\frac{x}{L}\\rfloor\\) \u5c31\u80fd\u77e5\u9053 \\(x\\) \u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u3002\u4e8c\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(log_2L) = O(log_2NM)\\)\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nLL gcd(LL a, LL b)\n{return b ? gcd(b, a % b) : a;}\n\nint main()\n{\nLL N, M, K;\ncin &gt;&gt; N &gt;&gt; M &gt;&gt; K;\nLL g = gcd(N, M), n = N / g, m = M / g;\nLL r = (K + n + m - 3) / (n + m - 2), l = r - 1;\nl *= g * n * m;\nr *= g * n * m;\nwhile(l &lt; r)\n{\nLL mid = (l + r) / 2;\nif(mid / N + mid / M - mid / (g * n * m) * 2 &gt;= K)\nr = mid;\nelse\nl = mid + 1;\n}\ncout &lt;&lt; l &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static long gcd(long a, long b) {\nreturn b &gt; 0 ? gcd(b, a % b) : a;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nlong N = in.nextLong();\nlong M = in.nextLong();\nlong K = in.nextLong();\nlong g = gcd(N, M), n = N / g, m = M / g;\nlong r = (K + n + m - 3) / (n + m - 2), l = r - 1;\nl *= g * n * m;\nr *= g * n * m;\nwhile (l &lt; r) {\nlong mid = (l + r) / 2;\nif (mid / N + mid / M - mid / (g * n * m) * 2 &gt;= K)\nr = mid;\nelse\nl = mid + 1;\n}\nSystem.out.println(l);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc341/#e-alternating-string","title":"E - Alternating String","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N(N \\le 5 \\times 10^5)\\) \u7684\u5b57\u7b26\u4e32 \\(S\\) \uff0c\u5b57\u7b26\u4e32\u7531 <code>0</code> \u548c <code>1</code> \u7ec4\u6210\u3002\u540c\u65f6\u7ed9\u4f60 \\(Q(Q \\le 5 \\times 10^5)\\) \u4e2a\u64cd\u4f5c\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\uff1a</p> <ul> <li><code>1 L R</code>\uff1a\u8868\u793a\u5c06 \\(S\\) \u7684 \\([L, R]\\) \u53cd\u8f6c\u3002</li> <li><code>2 L R</code>\uff1a\u8be2\u95ee \\(S\\) \u7684 \\([L, R]\\) \u662f\u5426 <code>0</code> \u548c <code>1</code> \u4ea4\u66ff\u51fa\u73b0\uff0c\u5982\u679c\u662f\u8f93\u51fa <code>Yes</code>\uff0c\u5426\u5219\u8f93\u51fa <code>No</code>\u3002</li> </ul> \u89e3\u9898\u601d\u8def <p>\u5b9a\u4e49 \\(b\\) \u6570\u7ec4\uff1a</p> \\[ b[i] = \\left\\{ \\begin{matrix} 0, &amp; i &lt; n \\land s[i] = s[i+1] \\\\ 1, &amp; i = n \\lor s[i] \\neq s[i+1] \\end{matrix} \\right. \\] <p>\u8003\u8651 <code>2 L R</code> \u64cd\u4f5c\u5982\u4f55\u5904\u7406\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1 \\(b\\) \u6570\u7ec4 \\([L, R-1]\\) \u7684\u90e8\u5206\u5168\u4e3a \\(1\\) \u5373\u53ef\uff0c\u6240\u4ee5\u9700\u8981\u5904\u7406\u51fa\u524d\u7f00\u548c\u3002</p> <p>\u8003\u8651 <code>1 L R</code> \u64cd\u4f5c\u600e\u4e48\u505a\uff0c\u53cd\u8f6c \\([L, R]\\) \u4e0d\u4f1a\u6539\u53d8 \\([L, R-1]\\) \u90e8\u5206\u7684\u503c\uff0c\u53ea\u4f1a\u5f71\u54cd \\(b[L-1]\\) \u548c \\(b[R]\\) \u7684\u503c\u3002</p> <p>\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u9700\u8981\u628a \\(i = 0\\) \u8fd9\u4e2a\u70b9\u52a0\u4e0a\uff0c\u56e0\u4e3a\u4fee\u6539\u7684\u65f6\u5019\u4f1a\u5f71\u54cd\u5230 \\(b[0]\\)\uff0c\u4f46\u662f\u67e5\u8be2\u7684\u65f6\u5019\u4e0d\u4f1a\u67e5\u5230 \\(b[0]\\) \u7684\u503c\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 5E5 + 10;\nint n, q, t[maxn * 4];\nchar s[maxn];\n\nvoid build(int p, int beg, int end)\n{\nif(beg == end)\n{\nt[p] = s[beg] != s[beg+1];\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid+1, end);\nt[p] = t[lch] + t[rch];\n}\n\nvoid update(int p, int beg, int end, int pos)\n{\nif(beg == end)\n{\nt[p] ^= 1;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\npos &lt;= mid ? update(lch, beg, mid, pos) : update(rch, mid+1, end, pos);\nt[p] = t[lch] + t[rch];\n}\n\nint ask(int p, int beg, int end, int l, int r)\n{\nif(end &lt; l || beg &gt; r)\nreturn 0;\nif(beg &gt;= l &amp;&amp; end &lt;= r)\nreturn t[p];\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn ask(lch, beg, mid, l, r) + ask(rch, mid+1, end, l, r);\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; q;\nscanf(\"%s\", s+1);\nint op, l, r;\nbuild(1, 0, n);\nwhile(q--)\n{\nscanf(\"%d %d %d\", &amp;op, &amp;l, &amp;r);\nif(op == 1) {\nupdate(1, 0, n, l-1);\nupdate(1, 0, n, r);\n}\nelse\nputs(ask(1, 0, n, l, r-1) == r-l ? \"Yes\" : \"No\");\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static int[] t;\nprivate static char[] s;\n\nprivate static void build(int p, int beg, int end) {\nif (beg == end) {\nt[p] = s[beg] != s[beg + 1] ? 1 : 0;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid + 1, end);\nt[p] = t[lch] + t[rch];\n}\n\nprivate static void update(int p, int beg, int end, int pos) {\nif (beg == end) {\nt[p] ^= 1;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nif (pos &lt;= mid)\nupdate(lch, beg, mid, pos);\nelse\nupdate(rch, mid + 1, end, pos);\nt[p] = t[lch] + t[rch];\n}\n\nprivate static int ask(int p, int beg, int end, int l, int r) {\nif (end &lt; l || beg &gt; r)\nreturn 0;\nif (beg &gt;= l &amp;&amp; end &lt;= r)\nreturn t[p];\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn ask(lch, beg, mid, l, r) + ask(rch, mid + 1, end, l, r);\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint q = in.nextInt();\nt = new int[n * 4];\ns = new char[n + 2];\nin.next().getChars(0, n, s, 1);\n\nint op, l, r;\nbuild(1, 0, n);\nwhile (q-- &gt; 0) {\nop = in.nextInt();\nl = in.nextInt();\nr = in.nextInt();\nif (op == 1) {\nupdate(1, 0, n, l - 1);\nupdate(1, 0, n, r);\n} else\nSystem.out.println(ask(1, 0, n, l, r - 1) == r - l ? \"Yes\" : \"No\");\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc341/#f-breakdown","title":"F - Breakdown","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a \\(N(1 \\le N \\le 5000)\\) \u4e2a\u70b9\u548c \\(M(1 \\le M \\le \\min(\\frac{N(N-1)}{2}, 5000))\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u6743\u503c \\(W_i(1 \\le W_i \\le 5000)\\) \u548c \\(A_i(1 \\le A_i \\le 10^9)\\) \u4e2a\u788e\u7247\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4e0b\u5217\u64cd\u4f5c\u4efb\u610f\u6b21\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u9009\u62e9\u56fe\u4e2d\u4e00\u4e2a\u6743\u503c\u5927\u4e8e \\(0\\) \u7684\u70b9\uff0c\u5047\u8bbe\u4f60\u9009\u62e9\u4e86\u70b9 \\(x\\)\u3002\u7136\u540e\uff0c\u70b9 \\(x\\) \u51cf\u5c11\u4e00\u4e2a\u788e\u7247\u3002</li> <li>\u7136\u540e\uff0c\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u4e0e\u70b9 \\(u\\) \u90bb\u63a5\u7684\u70b9\u96c6 \\(S\\)\uff08\u53ef\u4ee5\u4e3a\u7a7a\u96c6\uff09\uff0c\u8fd9\u4e2a\u96c6\u5408\u9700\u8981\u6ee1\u8db3 \u3002\u7136\u540e\uff0c\u96c6\u5408 \\(S\\) \u4e2d\u7684\u6bcf\u4e2a\u70b9\u7684\u90fd\u5c06\u589e\u52a0\u4e00\u4e2a\u788e\u7247\u3002</li> </ul> <p>\u53ef\u4ee5\u8bc1\u660e\u5728\u65e0\u9650\u6b21\u64cd\u4f5c\u4e4b\u540e\uff0c\u56fe\u6240\u6709\u7684\u70b9\u90fd\u5c06\u6ca1\u6709\u788e\u7247\u3002</p> <p>\u95ee\uff1a\u6700\u591a\u80fd\u6267\u884c\u591a\u5c11\u6b21\u64cd\u4f5c\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u8003\u8651\u7528 dp \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5148\u5b9a\u4e49 \\(dp[u]\\) \u8868\u793a\u5982\u679c\u70b9 \\(u\\) \u4e0a\u6709\u4e00\u4e2a\u788e\u7247\uff0c\u8fd9\u4e2a\u788e\u7247\uff08\u4ee5\u53ca\u9009\u62e9\u5b50\u96c6\u4e4b\u540e\u5206\u6563\u4e4b\u540e\u7684\u6240\u6709\u788e\u7247\uff09\u6700\u591a\u80fd\u64cd\u4f5c\u51e0\u6b21\uff0c\u7531\u4e8e\u788e\u7247\u53ea\u80fd\u6d41\u5411\u6743\u503c\u66f4\u5c0f\u7684\u70b9\uff0c\u5219\u81f3\u5c11\u8981\u77e5\u9053\u6240\u6709 \\(W_v &lt; W_u\\) \u7684 \\(dp[v]\\) \u503c\u3002</p> <p>\u5f88\u660e\u663e\u5e94\u8be5\u4ece\u6743\u503c\u5c0f\u7684\u70b9\u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u5c06\u56fe\u4ece\u65e0\u5411\u56fe\u6539\u4e3a\u6709\u5411\u56fe\uff0c\u82e5 \\(W_u &lt; W_v\\)\uff0c\u5219\u8fde\u4e00\u6761 \\(u \\rightarrow v\\) \u7684\u8fb9\uff0c\u8868\u793a\u53ef\u4ee5\u4ece\u70b9 \\(u\\) \u66f4\u65b0 \\(v\\) \u7684\u503c\uff0c\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a DAG\uff0c \u521d\u59cb\u7684\u503c\u4e3a \\(dp[u] = 1\\)\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u5982\u4f55\u8ba1\u7b97 \\(dp[v]\\)\uff0c\u5047\u8bbe\u6240\u6709 \\(W_u &lt; W_v\\) \u7684 \\(dp[u]\\) \u90fd\u5df2\u7ecf\u8ba1\u7b97\u5b8c\u6bd5\uff0c\u5219\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u5b50\u96c6 \\(S\\)\uff0c\u6ee1\u8db3 \\(\\sum\\limits_{y \\in S}W_y &lt; W_x\\)\uff0c\u540c\u65f6\u6700\u5927\u5316\u53ef\u64cd\u4f5c\u7684\u6b21\u6570\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u80cc\u5305\u95ee\u9898\uff0c\u6240\u4ee5\u5230\u8fd9\u91cc\u5c06\u6269\u5c55\u6210\u4e8c\u7ef4\u7684 \\(dp[u][j]\\) \u8868\u793a\u5982\u679c\u70b9 \\(u\\) \u4e0a\u6709\u4e00\u4e2a\u788e\u7247\uff0c\u8fd9\u4e2a\u788e\u7247\uff08\u4ee5\u53ca\u9009\u62e9\u4e00\u4e2a\u6743\u503c\u4e4b\u548c\u4e3a \\(j\\) \u7684\u5b50\u96c6\u4e4b\u540e\u5206\u6563\u4e4b\u540e\u7684\u6240\u6709\u788e\u7247\uff09\u6700\u591a\u80fd\u64cd\u4f5c\u51e0\u6b21\uff0c\u66f4\u65b0\u7684\u64cd\u4f5c\u548c\u666e\u901a\u7684\u80cc\u5305\u7c7b\u4f3c\u3002\u6ce8\u610f\u5230 \\(W_i \\le 5000\\)\uff0c\u800c\u4e14\u8fb9\u7684\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7 \\(5000\\)\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(MW)\\)\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 5000 + 10;\nconst int maxm = 5000 + 10;\nconst int maxw = 5000 + 10;\nint head[maxn], edge[maxm], ne[maxm], idx = 1, ind[maxn];\nvoid add(int u, int v)\n{\nind[v]++;\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\nint n, m, eu[maxm], ev[maxm], w[maxn], a[maxn];\nLL dp[maxn][maxw];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 0; i &lt; m; i++)\nscanf(\"%d %d\", &amp;eu[i], &amp;ev[i]);\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;w[i]);\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]);\nfor(int i = 0; i &lt; m; i++)\nif(w[eu[i]] &lt; w[ev[i]])\nadd(eu[i], ev[i]);\nelse if(w[eu[i]] &gt; w[ev[i]])\nadd(ev[i], eu[i]);\nqueue&lt;int&gt; q;\nfor(int u = 1; u &lt;= n; u++) if(!ind[u])\nq.push(u);\nwhile(!q.empty())\n{\nint u = q.front();\nq.pop();\nint val = dp[u][w[u]-1]+1;\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nfor(int j = w[v]-1; j-w[u] &gt;= 0; j--)\ndp[v][j] = max(dp[v][j], dp[v][j-w[u]]+val);\nif(--ind[v] == 0)\nq.push(v);\n}\n}\nLL ans = 0;\nfor(int u = 1; u &lt;= n; u++)\nans += (dp[u][w[u]-1]+1) * a[u];\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.ArrayDeque;\nimport java.util.Queue;\nimport java.util.Scanner;\n\npublic class Main {\nprivate static int[] head, edge, ne, ind;\nprivate static int idx;\n\nprivate static void graph_init(int n, int m) {\nidx = 1;\nhead = new int[n];\nind = new int[n];\nedge = new int[m];\nne = new int[m];\n}\n\nprivate static void add(int u, int v) {\nind[v]++;\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint m = in.nextInt();\nint[] eu = new int[m];\nint[] ev = new int[m];\nint[] w = new int[n + 1];\nint[] a = new int[n + 1];\n\nfor (int i = 0; i &lt; m; i++) {\neu[i] = in.nextInt();\nev[i] = in.nextInt();\n}\nint mw = 0;\nfor (int i = 1; i &lt;= n; i++) {\nw[i] = in.nextInt();\nmw = Math.max(mw, w[i]);\n}\nfor (int i = 1; i &lt;= n; i++)\na[i] = in.nextInt();\nlong[][] dp = new long[n + 1][mw + 1];\ngraph_init(n + 1, m + 1);\nfor (int i = 0; i &lt; m; i++)\nif (w[eu[i]] &lt; w[ev[i]])\nadd(eu[i], ev[i]);\nelse if (w[eu[i]] &gt; w[ev[i]])\nadd(ev[i], eu[i]);\nQueue&lt;Integer&gt; q = new ArrayDeque&lt;&gt;();\nfor (int u = 1; u &lt;= n; u++)\nif (ind[u] == 0)\nq.add(u);\nwhile (!q.isEmpty()) {\nint u = q.remove();\nlong val = dp[u][w[u] - 1] + 1;\nfor (int i = head[u]; i &gt; 0; i = ne[i]) {\nint v = edge[i];\nfor (int j = w[v] - 1; j - w[u] &gt;= 0; j--)\ndp[v][j] = Math.max(dp[v][j], dp[v][j - w[u]] + val);\nif (--ind[v] == 0)\nq.add(v);\n}\n}\nlong ans = 0;\nfor (int u = 1; u &lt;= n; u++)\nans += (dp[u][w[u] - 1] + 1) * a[u];\nSystem.out.println(ans);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc341/#g-highest-ratio","title":"G - Highest Ratio","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N(1 \\le N \\le 2 \\times 10^5)\\) \u4e2a\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u662f \\(A_i(1 \\le A_i \\le 10^6)\\)\uff0c\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e \\(1 \\le l \\le n\\)\uff0c\u6c42\u51fa \\(\\max\\limits_{l \\le r \\le n}\\frac{A_i}{r-l+1}\\)</p> \u89e3\u9898\u601d\u8def <p>\u5728\u5f88\u591a\u5730\u65b9\u770b\u5230\u8fd9\u9053\u9898\u7684\u9898\u89e3\uff08\u5305\u62ec\u5b98\u89e3\u548c\u6d1b\u8c37\uff09\u90fd\u662f\u7528\u7684\u659c\u7387\u4f18\u5316\uff0c\u4f46\u5176\u5b9e\u8fd9\u9053\u9898\u6709\u975e\u5e38\u7b80\u5355\u7684\u505a\u6cd5\u3002</p> <p>\u9996\u9009\u5bf9\u5e73\u5747\u503c\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u7684\u5e94\u7528\uff0c\u5047\u8bbe\u6709\u4e00\u5806\u6570\u5b57\u5e73\u5747\u503c\u662f \\(x\\)\uff0c\u53e6\u4e00\u5806\u6570\u5b57\u7684\u5e73\u5747\u503c\u662f \\(y\\)\uff0c\u4e14 \\(x \\le y\\) \u5219\u5c06\u8fd9\u4e24\u5806\u6570\u5b57\u5408\u5e76\u8d77\u6765\uff0c\u5f97\u5230\u7684\u5e73\u5747\u503c\u4e00\u5b9a\u662f\u5728 \\([x, y]\\) \u533a\u95f4\u5185\u7684\uff0c\u6362\u8a00\u4e4b\uff0c\u7b2c\u4e8c\u5806\u6570\u5b57\u52a0\u5165\u4e4b\u540e\u62c9\u9ad8\u4e86\u7b2c\u4e00\u5806\u6570\u5b57\u7684\u5e73\u5747\u503c\u3002\u867d\u7136\u662f\u5f88\u76f4\u89c2\uff0c\u4f46\u7b14\u8005\u8fd8\u662f\u8bc1\u660e\u4e00\u4e0b\u3002</p> <p>\u5df2\u77e5 \\(\\frac{a}{b} &lt; \\frac{c}{d}(a &gt; 0, b &gt; 0, c &gt; 0, d &gt; 0)\\)\uff0c \u6c42\u8bc1 \\(\\frac{a}{b} &lt; \\frac{a+c}{b+d}\\)  \uff0c\u8bc1\u660e\u5982\u4e0b\uff1a</p> \\[ \\begin{matrix} \u8981\u8bc1 &amp; \\frac{a}{b} &lt; \\frac{a+c}{b+d} \\\\ \u53ea\u8981\u8bc1 &amp; ab+ad &lt; ab + bc \\\\  \u53ea\u8981\u8bc1 &amp; ad &lt; bc \\\\  \u53ea\u8981\u8bc1 &amp; \\frac{a}{b} &lt; \\frac{c}{d}\\\\  \\end{matrix} \\] <p>\u8fd9\u5c31\u5b8c\u6210\u4e86\u8bc1\u660e\u3002</p> <p>\u5e94\u7528\u4e0a\u8ff0\u5b9a\u7406\u53ef\u4ee5\u5f97\u5230\u672c\u9898\u7684\u8d2a\u5fc3\u89e3\u6cd5\uff0c\u9996\u5148\u6211\u4eec\u4ece\u53f3\u5f80\u5de6\u8ba1\u7b97\uff0c\u5047\u8bbe \\(avg[i]\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\uff0c\u521d\u59cb\u503c\u5c31\u662f \\(avg[n] = A[n]\\)\uff0c\u5728\u4ece\u53f3\u5f80\u5de6\u904d\u5386\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u6808\u4e2d\u5b58\u653e\u7740\u53f3\u4fa7\u7684 \\(avg\\) \u503c\uff0c\u5728\u8ba1\u7b97 \\(avg[i]\\) \u7684\u503c\u65f6\uff0c\u4e00\u5f00\u59cb\u5148\u5047\u5b9a \\(avg[i] = A[i]\\) \uff0c\u63a5\u4e0b\u6765\u5f00\u59cb\u5224\u65ad\uff0c\u5982\u679c\u6808\u9876\u7684\u503c\u5927\u4e8e \\(avg[i]\\)\uff0c\u8868\u793a\u78b0\u5230\u4e86\u5747\u503c\u66f4\u5927\u7684\u4e00\u5806\u6570\uff0c\u6b64\u65f6\u5c06\u4e24\u5806\u5408\u5e76\uff0c\u5f97\u5230\u7684\u5747\u503c\u4e00\u5b9a\u66f4\u5927\uff0c\u76f4\u5230\u6808\u4e3a\u7a7a\u6216\u8005\u6808\u9876\u7684\u503c\u5c0f\u4e8e \\(avg[i]\\)\uff0c\u6b64\u65f6\u5c31\u627e\u5230\u4e86\u7b54\u6848\uff0c\u5c06 \\(avg[i]\\) \u7684\u503c\u5165\u6808\uff08\u4e5f\u5c31\u662f\u5c06\u5408\u5e76\u540e\u7684\u5806\u5165\u6808\uff09\u3002</p> <p>\u663e\u7136\uff0c\u8fd9\u4e2a\u6808\u7684\u662f\u5355\u8c03\u9012\u51cf\u7684\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u6700\u591a\u5165\u6808\u4e00\u6b21\u3001\u51fa\u6808\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n)\\) \u7684\uff0c\u867d\u7136\u548c\u659c\u7387\u4f18\u5316\u590d\u6742\u5ea6\u4e00\u6837\uff0c\u4f46\u4ee3\u7801\u8981\u7b80\u5355\u7684\u591a\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint n, a[maxn];\ndouble avg[maxn];\n\nstruct Node {\ndouble avg;\nint cnt;\n};\n\nstack&lt;Node&gt; st;\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]);\navg[n] = a[n];\nst.push(Node{avg[n], 1});\nfor(int i = n - 1; i; i--)\n{\navg[i] = a[i];\nint cnt = 1;\nwhile(!st.empty() &amp;&amp; avg[i] &lt;= st.top().avg)\n{\nNode p = st.top();\nst.pop();\navg[i] = (avg[i] * cnt + p.avg * p.cnt) / (cnt + p.cnt);\ncnt += p.cnt;\n}\nst.push(Node{avg[i], cnt});\n}\nfor(int i = 1; i &lt;= n; i++)\nprintf(\"%.8lf\\n\", avg[i]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\nimport java.util.Stack;\n\nclass Node {\npublic double avg;\npublic int cnt;\n\npublic Node(double a, int c) {\navg = a;\ncnt = c;\n}\n}\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint[] a = new int[n + 1];\ndouble[] avg = new double[n + 1];\nStack&lt;Node&gt; st = new Stack&lt;&gt;();\nfor (int i = 1; i &lt;= n; i++)\na[i] = in.nextInt();\navg[n] = a[n];\nst.push(new Node(avg[n], 1));\nfor (int i = n - 1; i &gt; 0; i--) {\navg[i] = a[i];\nint cnt = 1;\nwhile (!st.empty() &amp;&amp; avg[i] &lt;= st.peek().avg) {\nNode p = st.pop();\navg[i] = (avg[i] * cnt + p.avg * p.cnt) / (cnt + p.cnt);\ncnt += p.cnt;\n}\nst.push(new Node(avg[i], cnt));\n}\nfor (int i = 1; i &lt;= n; i++)\nSystem.out.printf(\"%.8f\\n\", avg[i]);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc342/","title":"ABC342(A-G)","text":""},{"location":"algorithm/AtCoder/abc342/#a-yay","title":"A - Yay!","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(S(3 \\le |S| \\le 100)\\)\uff0c\u9664\u4e86\u6709\u4e00\u4e2a\u5b57\u7b26\u4e0d\u540c\u4ee5\u5916\uff0c\u5176\u4ed6\u5b57\u7b26\u90fd\u76f8\u540c\u3002\u627e\u51fa\u90a3\u4e2a\u4e0e\u4e0d\u540c\u7684\u5b57\u7b26\u7684\u4f4d\u7f6e\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nstring s;\ncin &gt;&gt; s;\nint n = s.length();\nif(s[0] == s[1]) {\nfor(int i = 2; i &lt; n; i++)\nif(s[i] != s[0])\n{\ncout &lt;&lt; i + 1;\nbreak;\n}\n}\nelse\ncout &lt;&lt; (s[0] == s[2] ? 2 : 1);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nString s = in.next();\nint n = s.length();\nif (s.charAt(0) == s.charAt(1)) {\nfor (int i = 2; i &lt; n; i++)\nif (s.charAt(i) != s.charAt(0)) {\nSystem.out.println(i + 1);\nbreak;\n}\n} else\nSystem.out.println(s.charAt(0) == s.charAt(2) ? 2 : 1);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc342/#b-which-is-ahead","title":"B - Which is ahead?","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N\\) \u4e2a\u4eba\u7ad9\u6210\u4e00\u6392\uff0c\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u662f\u7f16\u53f7\u4e3a \\(A_i\\) \u7684\u4eba\u3002\u6709 \\(Q\\) \u4e2a\u8be2\u95ee\uff0c\u8be2\u95ee\u7ed9\u4f60\u4e24\u4e2a\u7f16\u53f7 \\(A_i\\) \u548c \\(B_i\\)\uff0c\u56de\u7b54\u54ea\u4e2a\u4eba\u66f4\u9760\u5de6\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 100 + 10;\nint n, p[maxn];\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 1, x; i &lt;= n; i++)\ncin &gt;&gt; x, p[x] = i;\nint q, a, b;\ncin &gt;&gt; q;\nwhile(q--)\n{\ncin &gt;&gt; a &gt;&gt; b;\ncout &lt;&lt; (p[a] &lt; p[b] ? a : b) &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint[] p = new int[n + 1];\nfor (int i = 1, x; i &lt;= n; i++) {\nx = in.nextInt();\np[x] = i;\n}\nint q, a, b;\nq = in.nextInt();\nwhile (q-- &gt; 0) {\na = in.nextInt();\nb = in.nextInt();\nSystem.out.println(p[a] &lt; p[b] ? a : b);\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc342/#c-many-replacement","title":"C - Many Replacement","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a \\(N(N \\le 2 \\times 10^5)\\) \u7684\u5b57\u7b26\u4e32 \\(S\\)\uff0c \\(S\\) \u4e2d\u53ea\u6709\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002\u540c\u65f6\u6267\u884c \\(Q(Q \\le 2 \\times 10^5)\\) \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5305\u62ec\u4e24\u4e2a\u5b57\u7b26 \\(c_i\\) \u548c \\(d_i\\) \u8868\u793a\u5c06\u5b57\u7b26\u4e32 \\(S\\) \u7684\u6240\u6709\u5b57\u7b26 \\(c_i\\) \u66ff\u6362\u6210 \\(d_i\\)\u3002\u8f93\u51fa\u6240\u6709\u64cd\u4f5c\u7ed3\u675f\u4e4b\u540e\u7684\u5b57\u7b26\u4e32 \\(S\\)\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5f00\u4e00\u4e2a\u6570\u7ec4\u6765\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u7684\u6620\u5c04\u5173\u7cfb\uff0c<code>p[c] == d</code> \u8868\u793a\u5b57\u7b26 \\(c\\) \u6620\u5c04\u6210\u5b57\u7b26 \\(d\\)\uff0c\u4fee\u6539\u7684\u65f6\u5019\u5c06\u6240\u6709 <code>p[i] == c</code> \u7684\u4f4d\u7f6e\u6539\u6210 <code>d</code> \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(26 \\times(N+Q))\\)\u3002</p> <p>\u60f3\u4e86\u4e00\u4e0b\u5e94\u8be5\u6ca1\u6709 \\(O(N+Q)\\) \u7684\u505a\u6cd5......</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint n, q, p[30];\nchar s[maxn];\n\nint main()\n{\nfor(int i = 0; i &lt; 26; i++)\np[i] = i;\ncin &gt;&gt; n;\nscanf(\"%s\", s);\ncin &gt;&gt; q;\nwhile(q--) {\nchar c[2], d[2];\nscanf(\"%s %s\", c, d);\nfor(int i = 0; i &lt; 26; i++)\nif(p[i] == c[0]-'a')\np[i] = d[0] - 'a';\n}\nfor(int i = 0; i &lt; n; i++)\nprintf(\"%c\", p[s[i]-'a']+'a');\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n, q;\nint[] p = new int[26];\nString s;\nfor (int i = 0; i &lt; 26; i++)\np[i] = i;\nn = in.nextInt();\ns = in.next();\nq = in.nextInt();\nwhile (q-- &gt; 0) {\nString c, d;\nc = in.next();\nd = in.next();\nfor (int i = 0; i &lt; 26; i++)\nif (p[i] == c.charAt(0) - 'a')\np[i] = d.charAt(0) - 'a';\n}\nfor (int i = 0; i &lt; n; i++)\nSystem.out.printf(\"%c\", p[s.charAt(i) - 'a'] + 'a');\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc342/#d-square-pair","title":"D - Square Pair","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N(N \\le 2 \\times 10^5)\\) \u4e2a\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u662f \\(A_i(0 \\le A_i \\le 2 \\times 10^5)\\)\uff0c\u6c42\u51fa\u6ee1\u8db3\u4e0b\u5217\u8981\u6c42\u7684\u6570\u5bf9 \\((i, j)\\) \u7684\u4e2a\u6570\uff1a</p> <ul> <li>\\(1 \\le i &lt; j \\le N\\)</li> <li>\\(A_iA_j\\) \u662f\u5b8c\u5168\u5e73\u65b9\u6570\u3002</li> </ul> \u89e3\u9898\u601d\u8def <p>\u5bf9\u6bcf\u4e2a\u6570\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u7559\u4e0b\u6307\u6570\u4e3a\u5947\u6570\u7684\u90e8\u5206\uff0c\u5b58\u5165\u54c8\u5e0c\u8868\u5373\u53ef\u3002\u7279\u522b\u7684\u8981\u6ce8\u610f \\(A_i = 0\\) \u7684\u60c5\u5f62\uff0c\u9700\u8981\u76f4\u63a5\u52a0\u3002 </p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;unordered_map&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nint divide(int x)\n{\nint ans = 1;\nfor(int i = 2; i * i &lt;= x; i++)\n{\nif(x % i == 0)\n{\nint c = 0;\nwhile(x % i == 0)\n{\nx /= i;\nc ^= 1;\n}\nif(c)\nans *= i;\n}\n}\nif(x != 1)\nans *= x;\nreturn ans;\n}\n\nint main()\n{\nunordered_map&lt;int, int&gt; cnt;\nint n, z = 0;\ncin &gt;&gt; n;\nLL ans = 0;\nfor(int i = 0, x; i &lt; n; i++)\n{\nscanf(\"%d\", &amp;x);\nif(x == 0)\n{\nz++;\nans += n - z;\ncontinue;\n}\nx = divide(x);\nif(cnt.count(x))\n{\nans += cnt[x];\ncnt[x]++;\n}\nelse\ncnt[x] = 1;\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\nprivate static int divide(int x) {\nint ans = 1;\nfor (int i = 2; i * i &lt;= x; i++) {\nif (x % i == 0) {\nint c = 0;\nwhile (x % i == 0) {\nx /= i;\nc ^= 1;\n}\nif (c == 1)\nans *= i;\n}\n}\nif (x != 1)\nans *= x;\nreturn ans;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nHashMap&lt;Integer, Integer&gt; cnt = new HashMap&lt;&gt;();\nint n, z = 0;\nn = in.nextInt();\nlong ans = 0;\nfor (int i = 0, x; i &lt; n; i++) {\nx = in.nextInt();\nif (x == 0) {\nz++;\nans += n - z;\ncontinue;\n}\nx = divide(x);\nint k = cnt.getOrDefault(x, 0);\nans += k;\ncnt.put(x, k + 1);\n}\nSystem.out.println(ans);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc342/#e-last-train","title":"E - Last Train","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N\\) \u4e2a\u57ce\u5e02\uff0c\u6bcf\u4e2a\u57ce\u5e02\u90fd\u6709\u4e00\u4e2a\u706b\u8f66\u7ad9\u3002\u7ed9\u4f60 \\(M(M \\le 2 \\times 10^5)\\) \u73ed\u706b\u8f66\u7684\u4fe1\u606f\uff0c\u6bcf\u6761\u4fe1\u606f\u53ef\u7528\u516d\u5143\u7ec4 \\((l_i, d_i, k_i, c_i, A_i, B_i)\\) \u6765\u8868\u793a\uff0c\u5176\u542b\u4e49\u662f\uff1a\u5728 \\(l_i, l_i+d_i, l_i+2d_i, ...,l_i+(k_i-1)*d_i\\) \u8fd9\u4e9b\u65f6\u95f4\u70b9\u4f1a\u6709\u4e00\u8f86\u4ece \\(A_i\\) \u5f00\u5f80 \\(B_i\\) \u7684\u706b\u8f66\uff0c\u8017\u65f6 \\(c_i\\)\u3002</p> <p>\u7b2c \\(N\\) \u4e2a\u57ce\u5e02\u662f\u6700\u91cd\u8981\u7684\u57ce\u5e02\uff0c\u6240\u6709\u4eba\u90fd\u60f3\u53bb\u7b2c \\(N\\) \u4e2a\u57ce\u5e02\uff0c\u4f46\u662f\u5927\u5bb6\u90fd\u4e0d\u60f3\u5c3d\u65e9\u51fa\u53d1\u3002\u4f60\u9700\u8981\u56de\u7b54 \\(N-1\\) \u4e2a\u6570\u5b57\uff0c\u8868\u793a\u5bf9\u4e8e \\(1 \\le i \\le N-1\\) \u57ce\u5e02\u7684\u4eba\u6765\u8bf4\uff0c\u6700\u665a\u4ec0\u4e48\u65f6\u5019\u4ece\u706b\u8f66\u7ad9\u51fa\u53d1\uff0c\u4ecd\u7136\u53ef\u4ee5\u5230\u8fbe\u7b2c \\(N\\) \u4e2a\u57ce\u5e02\u3002\u5982\u679c\u7b2c \\(i\\) \u4e2a\u57ce\u5e02\u7684\u4eba\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u80fd\u5230\u8fbe\u7b2c \\(N\\)\u200b\u200b \u4e2a\u57ce\u5e02\uff0c\u8f93\u51fa <code>Unreachable</code>\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a</p> <ul> <li>\\(2 \\le N \\le 2 \\times 10^5\\)</li> <li>\\(1 \\le M \\le 2 \\times 10^5\\)</li> <li>\\(1 \\le l_i, d_i, k_i, c_i \\le 10^9(1 \\le i \\le M)\\)</li> <li>\\(1 \\le A_i, B_i \\le N(1 \\le i \\le M)\\)</li> <li>\\(A_i \\neq B_i (1 \\le i \\le M)\\)</li> <li>\u6240\u6709\u8f93\u5165\u90fd\u662f\u6574\u6570</li> </ul> \u89e3\u9898\u601d\u8def <p>\u4e0d\u59a8\u8bbe\u7b54\u6848\u6570\u7ec4\u4e3a \\(dis[i]\\)\uff0c\u5373\u7b2c \\(i\\) \u4e2a\u57ce\u5e02\u7684\u4eba\u6700\u665a\u5728 \\(dis[i]\\) \u7684\u65f6\u523b\u51fa\u53d1\u4ecd\u7136\u53ef\u4ee5\u5230\u8fbe\u7b2c \\(N\\) \u4e2a\u57ce\u5e02\u3002\u521d\u59cb\u7684\u65f6\u5019\u6709 \\(dis[N] = \\infty\\)\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5728\u7b2c \\(N\\) \u4e2a\u70b9\u4e86\u3002\u5176\u4ed6\u70b9\u7684\u521d\u59cb\u503c\u8bbe\u7f6e\u4e3a \\(0\\)\u200b\u3002</p> <p>\u76ee\u6807\u5c31\u662f\u6700\u5927\u5316 \\(dis[i]\\) \u7684\u503c\uff0c\u8003\u8651\u5982\u4f55\u66f4\u65b0\uff0c\u5047\u8bbe\u6709\u8fb9 \\(u \\rightarrow N\\)\uff0c\u5219\u53ea\u9700\u8981\u5728\u8fd9\u6761\u8fb9\u7684\u672b\u73ed\u8f66\u5230\u8fbe\u70b9 \\(u\\) \u5373\u53ef\u3002\u540c\u6837\u7684\uff0c\u5047\u8bbe \\(dis[v]\\) \u7684\u503c\u5df2\u7ecf\u786e\u5b9a\uff0c\u4e14\u5b58\u5728\u8fb9 \\(u \\rightarrow v\\)\uff0c\u4e0d\u59a8\u8bbe\u8fd9\u6761\u8fb9\u7684\u8017\u65f6\u4e3a \\(c\\)\uff0c\u53ea\u9700\u8981\u5728\u5750\u4e0a \\(dis[v]-c\\) \u4e4b\u524d\u7684\u6700\u540e\u4e00\u73ed\u8f66\u5c31\u80fd\u5230\u8fbe \\(N\\)\u3002\u4e8e\u662f\u4e0d\u96be\u60f3\u5230\u4ece N \u5f00\u59cb\u5012\u7740\u62d3\u6251\u6392\u5e8f\u3002</p> <p>\u4e0d\u8fc7\u672c\u9898\u4e0d\u4e00\u5b9a\u662f DAG\uff0c\u6240\u4ee5\u4e0d\u80fd\u62d3\u6251\u3002\u4e0d\u8fc7\u8fdb\u4e00\u6b65\u53d1\u73b0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u66f4\u65b0\u7684\u8fb9\u4e00\u5b9a\u662f\u8d1f\u6743\u8fb9\uff0c\u8fd9\u662f\u56e0\u4e3a \\(c &gt; 0\\)\uff0c\u5e76\u4e14\u6211\u4eec\u8981\u6c42\u7684\u5b9e\u9645\u662f\u6700\u957f\u8def\uff0c\u6240\u4ee5\u5b9e\u9645\u8fd9\u5c31\u662f\u4e00\u4e2a dijkstra\uff0c\u4e0d\u540c\u7684\u5c31\u662f\u6211\u4eec\u91c7\u7528\u5927\u9876\u5806\uff0c\u53ef\u4ee5\u8bc1\u660e\u4ece\u5927\u9876\u5806\u4e2d\u53d6\u51fa\u6765\u7684\u70b9\u4e00\u5b9a\u662f\u5df2\u7ecf\u786e\u5b9a\u7684\uff0c\u4e0d\u4f1a\u518d\u88ab\u66f4\u65b0\u7684\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nconst LL inf = 0x3f3f3f3f3f3f3f3f;\nint head[maxn], edge[maxn], ne[maxn], cost[maxn], interval[maxn], ft[maxn], cnt[maxn], idx = 1;\nvoid add(int u, int v, int w, int l, int d, int k)\n{\nedge[idx] = v;\nne[idx] = head[u];\ncost[idx] = w;\nft[idx] = l;\ninterval[idx] = d;\ncnt[idx] = k;\nhead[u] = idx++;\n}\n\nint n, m;\nLL dis[maxn];\n\nstruct Node {\nint u;\nLL dis;\nNode(int _u, LL _d) : u(_u), dis(_d) {}\nbool operator &lt; (const Node &amp;y) const\n{return dis &lt; y.dis;}\n};\n\nvoid dijkstra()\n{\ndis[n] = inf;\npriority_queue&lt;Node&gt; heap;\nheap.push(Node(n, inf));\nwhile(!heap.empty()) {\nNode p = heap.top();\nheap.pop();\nint u = p.u;\nif(p.dis != dis[u])\ncontinue;\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nLL k = dis[u] - cost[i] - ft[i];\nif(k &lt; 0)\ncontinue;\nk = min(k/interval[i], (LL)cnt[i]-1);\nLL nd = ft[i] + k * interval[i];\nif(nd &gt; dis[v])\n{\ndis[v] = nd;\nheap.push(Node(v, nd));\n}\n}\n}\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nwhile(m--)\n{\nint l, d, k, w, v, u;\nscanf(\"%d %d %d %d %d %d\", &amp;l, &amp;d, &amp;k, &amp;w, &amp;v, &amp;u);\nadd(u, v, w, l, d, k);\n}\ndijkstra();\nfor(int i = 1; i &lt; n; i++)\nif(!dis[i])\nputs(\"Unreachable\");\nelse\nprintf(\"%lld\\n\", dis[i]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Collections;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Node implements Comparable&lt;Node&gt; {\npublic int u;\npublic long dis;\n\npublic Node(int _u, long _d) {\nu = _u;\ndis = _d;\n}\n\npublic int compareTo(Node o) {\nreturn Long.compare(dis, o.dis);\n}\n}\n\npublic class Main {\nprivate static final long inf = 0x3f3f3f3f3f3f3f3fl;\nprivate static int[] head, edge, ne, cost, interval, ft, cnt;\nprivate static long[] dis;\nprivate static int idx, n, m;\n\nprivate static void dijkstra() {\ndis[n] = inf;\nPriorityQueue&lt;Node&gt; heap = new PriorityQueue&lt;&gt;(Collections.reverseOrder());\nheap.add(new Node(n, inf));\nwhile (!heap.isEmpty()) {\nNode p = heap.remove();\nint u = p.u;\nif (p.dis != dis[u])\ncontinue;\nfor (int i = head[u]; i &gt; 0; i = ne[i]) {\nint v = edge[i];\nlong k = dis[u] - cost[i] - ft[i];\nif (k &lt; 0)\ncontinue;\nk = Math.min(k / interval[i], (long) cnt[i] - 1);\nlong nd = ft[i] + k * interval[i];\nif (nd &gt; dis[v]) {\ndis[v] = nd;\nheap.add(new Node(v, nd));\n}\n}\n}\n}\n\nprivate static void graph_init(int n, int m) {\nidx = 1;\nhead = new int[n];\ndis = new long[n];\nedge = new int[m];\nne = new int[m];\ninterval = new int[m];\nft = new int[m];\ncnt = new int[m];\ncost = new int[m];\n}\n\nprivate static void add(int u, int v, int w, int l, int d, int k) {\nedge[idx] = v;\nne[idx] = head[u];\ncost[idx] = w;\nft[idx] = l;\ninterval[idx] = d;\ncnt[idx] = k;\nhead[u] = idx++;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nn = in.nextInt();\nm = in.nextInt();\ngraph_init(n + 1, m + 1);\nwhile (m-- &gt; 0) {\nint l, d, k, w, v, u;\nl = in.nextInt();\nd = in.nextInt();\nk = in.nextInt();\nw = in.nextInt();\nv = in.nextInt();\nu = in.nextInt();\nadd(u, v, w, l, d, k);\n}\ndijkstra();\nfor (int i = 1; i &lt; n; i++)\nif (dis[i] == 0)\nSystem.out.println(\"Unreachable\");\nelse\nSystem.out.println(dis[i]);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc342/#f-black-jack","title":"F - Black Jack","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a \\(D\\) \u4e2a\u9762\u7684\u9ab0\u5b50\uff0c\u6bcf\u4e2a\u9762\u90fd\u662f\u7b49\u6982\u7387\u7684\u3002\u4f60\u6b63\u5728\u548c\u5e84\u5bb6\u73a9\u4e00\u4e2a\u6e38\u620f\uff0c\u6e38\u620f\u7684\u6d41\u7a0b\u4e3a\uff1a</p> <ul> <li>\u4f60\u53ef\u4ee5\u4e22\u4efb\u610f\u6b21\u9ab0\u5b50\uff0c\u4f60\u7684\u6743\u503c\u5c31\u662f\u4f60\u7684\u6240\u6709\u7ed3\u679c\u7684\u548c\uff0c\u4f60\u7684\u6743\u503c\u7528 \\(x\\) \u8868\u793a\u3002</li> <li>\u5728\u4f60\u7ed3\u675f\u6295\u63b7\u4e4b\u540e\uff0c\u5e84\u5bb6\u5f00\u59cb\u6295\u63b7\uff0c\u5e84\u5bb6\u7684\u6743\u503c\u5c31\u662f\u4ed6\u6295\u63b7\u7ed3\u679c\u7684\u548c\uff0c\u5e84\u5bb6\u7684\u6743\u503c\u7528 \\(y\\) \u8868\u793a\u3002\u5e84\u5bb6\u7684\u6295\u63b7\u89c4\u5219\u662f\uff1a\u5f53 \\(y &lt; L\\) \u65f6\uff0c\u7ee7\u7eed\u6295\u63b7\u3002\u5f53 \\(y \\ge L\\) \u65f6\uff0c\u505c\u6b62\u6295\u63b7\u3002</li> </ul> <p>\u4f60\u7684\u83b7\u80dc\u65b9\u5f0f\u4e3a\uff1a</p> <ol> <li>\\(x \\le N\\) \u4e14 \\(x &gt; y\\)</li> <li>\\(x \\le N\\) \u4e14 \\(y &gt; N\\)</li> </ol> <p>\u95ee\uff1a\u5982\u679c\u4f60\u4f7f\u7528\u6700\u4f73\u7b56\u7565\uff0c\u83b7\u80dc\u7684\u6982\u7387\u6709\u591a\u5c11\uff1f</p> <p>\u6570\u636e\u8303\u56f4</p> <ul> <li> <p>\\(1 \\le L \\le N \\le 2 \\times 10^5\\)</p> </li> <li> <p>\\(1 \\le D \\le N\\)</p> </li> </ul> \u89e3\u9898\u601d\u8def <p>\u8981\u6ce8\u610f\u5e84\u5bb6\u4f1a\u5728 \\(y &gt; L\\) \u7684\u65f6\u5019\u5c31\u505c\u6b62\u6295\u63b7\uff0c\u6240\u4ee5\u5e84\u5bb6\u7684\u6d41\u7a0b\u662f\u56fa\u5b9a\u7684\uff0c\u662f\u6ca1\u6709\u4efb\u4f55\u7b56\u7565\u7684\u3002\u56e0\u6b64\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e2a\u6570\u7ec4 \\(fy[i]\\) \u8868\u793a\u5e84\u5bb6\u6295\u63b7\u51fa \\(y = i\\) \u7684\u6982\u7387\u3002\u53ef\u4ee5\u7528 dp \u7684\u540e\u5411\u66f4\u65b0\u6c42\u51fa\u6765\uff1a\u521d\u59cb\u7684\u65f6\u5019\u6709 \\(f[0] = 1\\)\uff0c\u5219\u8f6c\u79fb\u5f0f\u4e3a\uff1a\\(fy[i+j] += fy[i] * \\frac{1}{D}, 1 \\le j \\le D\\)\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u5f0f\u5b50\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(LD)\\) \u7684\uff0c\u4f1a\u8d85\u65f6\u3002\u8fdb\u4e00\u6b65\u4f1a\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u52a0\uff0c\u5dee\u5206\u4e00\u4e0b\u5c31\u597d\u4e86\u3002</p> <p>\u5dee\u5206\u4e4b\u540e\u628a\u524d\u7f00\u548c\u5904\u7406\u51fa\u6765\uff0c\u540e\u9762\u6709\u7528\u3002</p> <pre><code>p = 1.0 / D;\nfy[1] = p;\nfy[D+1] = -p;\nfor(int i = 1; i &lt; L; i++) // [1, L) \u7684\u533a\u95f4\u5fc5\u987b\u6295\u63b7\uff0c\u6240\u4ee5\u8981\u5e26\u4e0a fy[i] \u7684\u6982\u7387\n{\nfy[i] += fy[i-1];\nfy[i+1] += fy[i] * p;\nfy[i+D+1] -= fy[i] * p;\n}\nfor(int i = L; i &lt;= N + D; i++) // [L, N+D] \u533a\u95f4\u4e0d\u80fd\u6295\u63b7\uff0c\u53ea\u5904\u7406\u5dee\u5206\u5c31\u597d\nfy[i] += fy[i-1];\nfor(int i = L; i &lt;= N + D; i++) // \u524d\u7f00\u548c\nfy[i] += fy[i-1];\n</code></pre> <p>\u63a5\u4e0b\u6765\u8003\u8651\u6211\u4eec\u7684\u7b56\u7565\u95ee\u9898\uff0c\u4e0d\u59a8\u8bbe \\(dp[i]\\) \u4e3a\u5f53\u524d \\(x = i(i \\le N)\\) \u7684\u65f6\u5019\u6211\u4eec\u83b7\u80dc\u7684\u6982\u7387\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u6709\u4e24\u79cd\u51b3\u7b56\uff1a\u6295\u63b7\u6216\u505c\u6b62\u3002\u5148\u8003\u8651\u505c\u6b62\uff0c\u8bbe \\(getsum(l, r)\\) \u8868\u793a \\(fy\\) \u6570\u7ec4\u7684\u533a\u95f4\u548c\uff0c\\(cal(i)\\) \u4e3a \\(x = i\\) \u65f6\u505c\u6b62\u6211\u4eec\u80fd\u83b7\u80dc\u7684\u6982\u7387\uff0c\u5219\u6709\uff1a</p> \\[ cal(i) = \\left\\{ \\begin{matrix} getsum(N+1, N+D), &amp; i &lt; L \\\\ 1 - getsum(x, N), &amp; i \\ge L \\end{matrix} \\right. \\] <p>\u8fd9\u4e2a\u5f0f\u5b50\u662f\u5f88\u76f4\u89c2\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u5728 \\(i &lt; L\\) \u7684\u65f6\u5019\u505c\u6b62\uff0c\u53ea\u80fd\u5e0c\u671b\u5e84\u5bb6\u7684\u503c\u8d85\u8fc7 \\(N\\)\uff0c\u8fd9\u6837\u624d\u80fd\u83b7\u80dc\uff0c\u800c\u5982\u679c \\(i \\ge L\\)\uff0c\u53ea\u8981\u5e84\u5bb6\u7684\u503c\u4e0d\u662f \\([x, N]\\)\uff0c\u6211\u4eec\u90fd\u80fd\u83b7\u80dc\u3002</p> <p>\u8fdb\u4e00\u6b65\u8003\u8651\u53e6\u4e00\u79cd\u51b3\u7b56\uff1a\u6295\u63b7\u3002\u5219\u6295\u63b7\u4e4b\u540e\u7684\u503c\u53ef\u80fd\u662f \\(i+1, i+2, ...,i+D\\)\uff0c\u8fd9\u4e9b\u60c5\u51b5\u83b7\u80dc\u7684\u6982\u7387\u90fd\u8981\u52a0\u8d77\u6765\uff0c\u4e5f\u5c31\u662f \\(\\frac{1}{D}\\sum\\limits_{j= 1}^D dp[i+j]\\)\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u662f\u6700\u4f73\u7b56\u7565\uff0c\u6240\u4ee5\u4e24\u8005\u53d6\u8f83\u5927\u503c\uff0c\u5373\uff1a</p> \\[ dp[i] = \\max\\{\\frac{1}{D}\\sum\\limits_{j= 1}^D dp[i+j], cal(i)\\} \\] <p>\u5728\u5904\u7406\u51fa \\(fy\\) \u7684\u524d\u7f00\u548c\u4e4b\u540e\uff0c \\(cal(i)\\) \u7684\u8ba1\u7b97\u662f \\(O(1)\\) \u7684\u3002\u800c \\(\\frac{1}{D}\\sum\\limits_{j= 1}^D dp[i+j]\\) \u53ef\u4ee5\u4ece\u540e\u5f80\u524d\u8ba1\u7b97\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\uff0c\u540c\u6837\u662f \\(O(1)\\) \u7684\u3002</p> <p>\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(N+D)\\) \u7684\u3002\u8ba1\u7b97\u5b8c\u6210\u540e \\(dp[0]\\) \u5c31\u662f\u7b54\u6848\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 4E5 + 10;\ndouble dp[maxn], p, fy[maxn];\nint N, L, D;\n\ndouble getsum(int l, int r)\n{return fy[r] - fy[l-1];}\n\ndouble cal(int x)\n{\nif(x &lt; L)\nreturn getsum(N+1, N+D);\nreturn 1 - getsum(x, N);\n}\n\nint main()\n{\ncin &gt;&gt; N &gt;&gt; L &gt;&gt; D;\np = 1.0 / D;\nfy[1] = p;\nfy[D+1] = -p;\nfor(int i = 1; i &lt; L; i++)\n{\nfy[i] += fy[i-1];\nfy[i+1] += fy[i] * p;\nfy[i+D+1] -= fy[i] * p;\n}\nfor(int i = L; i &lt;= N + D; i++)\nfy[i] += fy[i-1];\nfor(int i = L; i &lt;= N + D; i++)\nfy[i] += fy[i-1];\ndouble sum = 0;\nfor(int i = N, r = i + D; i &gt;= 0; sum += dp[i--] - dp[r--])\ndp[i] = max(sum*p, cal(i));\nprintf(\"%.8lf\", dp[0]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static double[] fy;\nprivate static int N, L, D;\n\nprivate static double getsum(int l, int r) {\nreturn fy[r] - fy[l - 1];\n}\n\nprivate static double cal(int x) {\nif (x &lt; L)\nreturn getsum(N + 1, N + D);\nreturn 1 - getsum(x, N);\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nN = in.nextInt();\nL = in.nextInt();\nD = in.nextInt();\nfy = new double[N + D + 1];\ndouble[] dp = new double[N + D + 1];\ndouble p = 1.0 / D;\nfy[1] = p;\nfy[D + 1] = -p;\nfor (int i = 1; i &lt; L; i++) {\nfy[i] += fy[i - 1];\nfy[i + 1] += fy[i] * p;\nfy[i + D + 1] -= fy[i] * p;\n}\nfor (int i = L; i &lt;= N + D; i++)\nfy[i] += fy[i - 1];\nfor (int i = L; i &lt;= N + D; i++)\nfy[i] += fy[i - 1];\ndouble sum = 0;\nfor (int i = N, r = i + D; i &gt;= 0; sum += dp[i--] - dp[r--])\ndp[i] = Math.max(sum * p, cal(i));\nSystem.out.printf(\"%.8f\\n\", dp[0]);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc342/#g-retroactive-range-chmax","title":"G - Retroactive Range Chmax","text":"\u9898\u76ee\u5927\u610f <p>\u7ef4\u62a4\u4e00\u4e2a \\(N(N \\le 2 \\times 10^5)\\) \u4e2a\u6570\u7684\u6570\u5217\uff0c\u521d\u59cb\u7684\u65f6\u5019\u6570\u5217\u7684\u7b2c \\(i\\) \u4e2a\u6570\u662f \\(A_i\\)\uff0c\u6709 \\(Q(Q \\le 2 \\times 10^5)\\) \u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li>\\(1 \\ l_i, r_i, x_i\\)\uff1a\u8868\u793a\u5c06\u533a\u95f4 \\([l_i, r_i]\\) \u4e2d\u7684\u6bcf\u4e2a \\(A_i\\) \u66ff\u6362\u4e3a \\(\\max(A_i, x)\\)\u3002</li> <li>\\(2 \\ i\\)\uff1a\u8868\u793a\u64a4\u9500\u7b2c \\(i\\) \u4e2a\u64cd\u4f5c\u3002\u4fdd\u8bc1\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u7684\u7c7b\u578b\u662f \\(1\\)\uff0c\u4e14\u672a\u88ab\u64a4\u9500\u3002</li> <li>\\(3 \\ i\\)\uff1a\u67e5\u8be2 \\(A_i\\) \u7684\u503c\u3002</li> </ul> \u89e3\u9898\u601d\u8def <p>\u533a\u95f4\u6539\uff0c\u80af\u5b9a\u8981\u7528\u61d2\u6807\u8bb0\u7684\u7ebf\u6bb5\u6811\uff0c\u53ea\u4e0d\u8fc7\u7531\u4e8e\u6d89\u53ca\u5230\u64a4\u9500\u64cd\u4f5c\uff0c\u6240\u4ee5\u61d2\u6807\u8bb0\u4e0d\u80fd\u53ea\u5b58\u4e00\u4e2a\u3002</p> <p>\u7528 <code>multiset</code> \u5b58\u50a8\u6240\u6709\u8fd9\u4e2a\u533a\u95f4\u6d89\u53ca\u5230\u7684\u61d2\u6807\u8bb0\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u67e5\u7684\u5c31\u662f <code>multiset</code> \u91cc\u9762\u7684\u6700\u5927\u503c\uff0c\u9700\u8981\u5e26\u4e0a\u533a\u95f4\u7684\u61d2\u6807\u8bb0\u4e00\u8d77\u8f93\u51fa\uff0c\u5220\u9664\u7684\u65f6\u5019\u4e5f\u662f\u4e00\u8d77\u5220\u9664\u3002</p> <p>\u7531\u4e8e\u7528\u4e86\u61d2\u6807\u8bb0\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6700\u591a\u589e\u52a0 \\(logN\\) \u4e2a\u70b9\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u662f \\(O(QlogN)\\)\uff0c\u5355\u6b21\u67e5\u8be2\u9664\u4e86\u5728\u7ebf\u6bb5\u6811\u91cc\u9762\u627e\uff0c\u8fd8\u9700\u8981\u5728\u7ea2\u9ed1\u6811\u91cc\u9762\u627e\u6700\u5927\uff0c\u6240\u4ee5\u5355\u8bcd\u67e5\u8be2\u9700\u8981\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(log^2N)\\)</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint n, m, a[maxn];\nmultiset&lt;int&gt; t[maxn * 4];\n\nstruct Query {\nint l, r, x;\n}q[maxn];\n\nvoid build(int p, int beg, int end)\n{\nif(beg == end)\n{\nt[p].insert(a[beg]);\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid+1, end);\n}\n\nvoid update(int p, int beg, int end, int l, int r, int x)\n{\nif(end &lt; l || beg &gt; r)\nreturn;\nif(beg &gt;= l &amp;&amp; end &lt;= r)\n{\nt[p].insert(x);\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nupdate(lch, beg, mid, l, r, x);\nupdate(rch, mid+1, end, l, r, x);\n}\n\nint ask(int p, int beg, int end, int pos)\n{\nif(end &lt; pos || beg &gt; pos)\nreturn 0;\nif(beg == end)\nreturn *t[p].rbegin();\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nint ans = t[p].empty() ? 0 : *t[p].rbegin();\nreturn max(ans, pos &lt;= mid ? ask(lch, beg, mid, pos) : ask(rch, mid+1, end, pos));\n}\n\nvoid del(int p, int beg, int end, int l, int r, int x)\n{\nif(end &lt; l || beg &gt; r)\nreturn;\nif(beg &gt;= l &amp;&amp; end &lt;= r)\n{\nt[p].erase(t[p].find(x));\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\ndel(lch, beg, mid, l, r, x);\ndel(rch, mid+1, end, l, r, x);\n}\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]);\nbuild(1, 1, n);\ncin &gt;&gt; m;\nfor(int i = 1; i &lt;= m; i++)\n{\nint op, x, j;\nscanf(\"%d\", &amp;op);\nif(op == 1)\n{\nscanf(\"%d %d %d\", &amp;q[i].l, &amp;q[i].r, &amp;q[i].x);\nupdate(1, 1, n, q[i].l, q[i].r, q[i].x);\n}\nelse if(op == 2)\n{\nscanf(\"%d\", &amp;j);\ndel(1, 1, n, q[j].l, q[j].r, q[j].x);\n}\nelse {\nscanf(\"%d\", &amp;x);\nprintf(\"%d\\n\", ask(1, 1, n, x));\n}\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\n\npublic class Main {\nstatic FastReader in = new FastReader();\nstatic PrintWriter out = new PrintWriter(System.out);\nprivate static TreeMap&lt;Integer, Integer&gt;[] t;\nprivate static int[] a;\n\nprivate static void build(int p, int beg, int end) {\nt[p] = new TreeMap&lt;&gt;();\nif (beg == end) {\nt[p].put(a[beg], 1);\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid + 1, end);\n}\n\nprivate static void update(int p, int beg, int end, int l, int r, int x) {\nif (end &lt; l || beg &gt; r)\nreturn;\nif (beg &gt;= l &amp;&amp; end &lt;= r) {\nt[p].put(x, t[p].getOrDefault(x, 0) + 1);\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nupdate(lch, beg, mid, l, r, x);\nupdate(rch, mid + 1, end, l, r, x);\n}\n\nprivate static int ask(int p, int beg, int end, int pos) {\nif (end &lt; pos || beg &gt; pos)\nreturn 0;\nif (beg == end)\nreturn t[p].lastKey();\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nint ans = t[p].isEmpty() ? 0 : t[p].lastKey();\nreturn Math.max(ans, pos &lt;= mid ? ask(lch, beg, mid, pos) : ask(rch, mid + 1, end, pos));\n}\n\nprivate static void del(int p, int beg, int end, int l, int r, int x) {\nif (end &lt; l || beg &gt; r)\nreturn;\nif (beg &gt;= l &amp;&amp; end &lt;= r) {\nint z = t[p].get(x);\nif (z == 1)\nt[p].remove(x);\nelse\nt[p].put(x, z - 1);\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\ndel(lch, beg, mid, l, r, x);\ndel(rch, mid + 1, end, l, r, x);\n}\n\n@SuppressWarnings(\"unchecked\")\npublic static void main(String[] args) {\nint n = in.nextInt();\na = new int[n + 1];\nt = new TreeMap[4 * n];\nfor (int i = 1; i &lt;= n; i++)\na[i] = in.nextInt();\nbuild(1, 1, n);\nint m = in.nextInt();\nint[] l = new int[m + 1];\nint[] r = new int[m + 1];\nint[] x = new int[m + 1];\nfor (int i = 1; i &lt;= m; i++) {\nint op, id;\nop = in.nextInt();\nif (op == 1) {\nl[i] = in.nextInt();\nr[i] = in.nextInt();\nx[i] = in.nextInt();\nupdate(1, 1, n, l[i], r[i], x[i]);\n} else if (op == 2) {\nid = in.nextInt();\ndel(1, 1, n, l[id], r[id], x[id]);\n} else {\nid = in.nextInt();\nout.println(ask(1, 1, n, id));\n}\n}\nout.flush();\n}\n}\n\nclass FastReader {\nStringTokenizer st;\nBufferedReader br;\n\npublic FastReader() {\nbr = new BufferedReader(new InputStreamReader(System.in));\n}\n\nString next() {\nwhile (st == null || !st.hasMoreElements()) {\ntry {\nst = new StringTokenizer(br.readLine());\n} catch (IOException e) {\ne.printStackTrace();\n}\n}\nreturn st.nextToken();\n}\n\nint nextInt() {\nreturn Integer.parseInt(next());\n}\n\nlong nextLong() {\nreturn Long.parseLong(next());\n}\n\ndouble nextDouble() {\nreturn Double.parseDouble(next());\n}\n\nString nextLine() {\nString str = \"\";\ntry {\nstr = br.readLine();\n} catch (IOException e) {\ne.printStackTrace();\n}\nreturn str;\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc343/","title":"ABC343(A-G)","text":""},{"location":"algorithm/AtCoder/abc343/#a-wrong-answer","title":"A - Wrong Answer","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e24\u4e2a\u6570 \\(A\\) \u548c \\(B\\)\uff0c\u5728 \\(0\\) \u5230 \\(9\\) \u4e2d\u4efb\u610f\u8f93\u51fa\u4e00\u4e2a\u4e0d\u7b49\u4e8e \\(A + B\\) \u7684\u6570\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint a, b;\ncin &gt;&gt; a &gt;&gt; b;\nint x = 0;\nif(x == a + b)\nx++;\ncout &lt;&lt; x &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint a = in.nextInt();\nint b = in.nextInt();\nint x = 0;\nif (x == a + b)\nx++;\nSystem.out.println(x);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc343/#b-adjacency-matrix","title":"B - Adjacency Matrix","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u8f93\u51fa\u6bcf\u4e2a\u70b9\u7684\u90bb\u5c45\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 100 + 10;\nint n, g[maxn][maxn];\n\nint main()\n{\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; i++)\nfor(int j = 1; j &lt;= n; j++)\ncin &gt;&gt; g[i][j];\nfor(int i = 1; i &lt;= n; i++, puts(\"\")) for(int j = 1; j &lt;= n; j++)\nif(g[i][j])\nprintf(\"%d \", j);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint[][] g = new int[n + 1][n + 1];\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= n; j++)\ng[i][j] = in.nextInt();\nfor (int i = 1; i &lt;= n; i++, System.out.println())\nfor (int j = 1; j &lt;= n; j++)\nif (g[i][j] &gt; 0)\nSystem.out.printf(\"%d \", j);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc343/#c-343","title":"C - 343","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570 \\(N(N \\le 10^{18})\\)\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e \\(N\\) \u7684\u5b8c\u5168\u7acb\u65b9\u6570 \\(K\\)\uff0c\u4f7f\u5f97 \\(K\\) \u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002</p> \u89e3\u9898\u601d\u8def <p>\u76f4\u63a5\u679a\u4e3e\u5224\u65ad\u5c31\u597d\uff0c\u552f\u4e00\u8981\u6ce8\u610f\u7684\u5c31\u662f <code>pow(1, 1/3.0)</code> \u8f6c\u5316\u6210\u6574\u6570\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u6709\u4e22\u5931\u7cbe\u5ea6\uff0c\u9700\u8981\u8865\u4e00\u4e2a <code>eps</code>\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nint s[20];\n\nbool check(LL x)\n{\nint idx = 0;\nwhile(x)\n{\nint t = x % 10;\ns[idx++] = t;\nx /= 10;\n}\nfor(int i = 0, j = idx - 1; i &lt; j; i++, j--)\nif(s[i] != s[j])\nreturn 0;\nreturn 1;\n}\n\nint main()\n{\nLL n;\ncin &gt;&gt; n;\nLL x = floor(pow(n, 1/3.0)+1E-8);\nwhile(!check(x*x*x))\nx--;\ncout &lt;&lt; x*x*x &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static int[] s = new int[20];\n\nprivate static boolean check(long x) {\nint idx = 0;\nwhile (x &gt; 0) {\nint t = (int) (x % 10);\ns[idx++] = t;\nx /= 10;\n}\nfor (int i = 0, j = idx - 1; i &lt; j; i++, j--)\nif (s[i] != s[j])\nreturn false;\nreturn true;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nlong n = in.nextLong();\nlong x = (long) (Math.pow(n, 1 / 3.0) + 1E-8);\nwhile (!check(x * x * x))\nx--;\nSystem.out.println(x * x * x);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc343/#d-diversity-of-scores","title":"D - Diversity of Scores","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u573a\u6bd4\u8d5b\u6709 \\(N(N \\le 2 \\times 10^5)\\) \u4e2a\u961f\u4f0d\uff0c\u521d\u59cb\u7684\u65f6\u5019\u6bcf\u4e2a\u961f\u4f0d\u5f97\u5206\u90fd\u662f \\(0\\)\u3002\u5728\u63a5\u4e0b\u6765\u7684 \\(T\\) \u79d2\u5185\uff0c\u6bcf\u4e00\u79d2\u90fd\u6709\u4e00\u4e2a\u961f\u4f0d\u589e\u52a0\u4e00\u5b9a\u7684\u5206\u6570\uff0c\u7528 \\(A_i\\ B_i\\) \u8868\u793a\u7b2c \\(i\\) \u79d2\u7684\u65f6\u5019\u7b2c \\(A_i\\) \u4e2a\u961f\u4f0d\u7684\u5206\u6570\u589e\u52a0\u4e86 \\(B_i\\)\u3002\u5728\u6bcf\u4e00\u79d2\u6709\u961f\u4f0d\u7684\u5206\u6570\u589e\u52a0\u4e4b\u540e\uff0c\u56de\u7b54\u573a\u4e0a\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u5206\u6570\u503c\u3002</p> \u89e3\u9898\u601d\u8def <p>\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u961f\u4f0d\u7684\u5206\u6570\uff0c\u54c8\u5e0c\u8868\u7ef4\u62a4\u6bcf\u4e2a\u5206\u6570\u6709\u591a\u5c11\u53ea\u961f\u4f0d\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;unordered_map&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint n, T;\nunordered_map&lt;LL, int&gt; cnt;\nLL A[maxn];\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; T;\ncnt[0] = n;\nwhile(T--)\n{\nint i, x;\nscanf(\"%d %d\", &amp;i, &amp;x);\nif(--cnt[A[i]] == 0)\ncnt.erase(A[i]);\nA[i] += x;\nif(cnt.count(A[i]) == 0)\ncnt[A[i]] = 1;\nelse\ncnt[A[i]]++;\nprintf(\"%ld\\n\", cnt.size());\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint T = in.nextInt();\nHashMap&lt;Long, Integer&gt; cnt = new HashMap&lt;&gt;();\nlong[] A = new long[n + 1];\ncnt.put(0l, n);\nwhile (T-- &gt; 0) {\nint i = in.nextInt();\nint x = in.nextInt();\ncnt.put(A[i], cnt.get(A[i]) - 1);\nif (cnt.get(A[i]) == 0)\ncnt.remove(A[i]);\nA[i] += x;\ncnt.put(A[i], cnt.getOrDefault(A[i], 0) + 1);\nSystem.out.println(cnt.size());\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc343/#e-7x7x7","title":"E - 7x7x7","text":"\u9898\u76ee\u5927\u610f <p>\u4f60\u6709\u4e09\u4e2a\u8fb9\u957f\u4e3a \\(7\\) \u7684\u6b63\u65b9\u4f53\uff0c\u4f60\u53ef\u4ee5\u5c06\u4ed6\u4eec\u653e\u5728\u5750\u6807\u7edd\u5bf9\u503c \\(100\\) \u4ee5\u5185\u7684\u7a7a\u95f4\u4e2d\uff0c\u5047\u8bbe\u4e00\u4e2a\u6b63\u65b9\u4f53\u5360\u636e\u7684\u7a7a\u95f4\u662f \\((a \\le x \\le a+7) \\land \uff08b \\le y \\le b+7) \\land \uff08c \\le z \\le c+7)\\)\uff0c\u5219\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e09\u5143\u7ec4 \\((a, b, c)\\) \u6765\u8868\u793a\u8fd9\u4e2a\u6b63\u65b9\u4f53\u7684\u4f4d\u7f6e\u3002</p> <p>\u7ed9\u4f60\u4e09\u4e2a\u6574\u6570 \\(V_1 \\ V_2 \\ V_3\\)\uff0c\u542b\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>\\(V_1\\) \u8868\u793a\u4e09\u4e2a\u6b63\u65b9\u4f53\u4e92\u4e0d\u76f8\u4ea4\u7684\u4f53\u79ef\u3002</li> <li>\\(V_2\\) \u8868\u793a\u6070\u597d\u6709\u4e24\u4e2a\u6b63\u65b9\u4f53\u76f8\u4ea4\u7684\u4f53\u79ef\u3002</li> <li>\\(V_3\\) \u8868\u793a\u6070\u597d\u6709\u4e09\u4e2a\u6b63\u65b9\u4f53\u76f8\u4ea4\u7684\u4f53\u79ef\u3002</li> </ul> <p>\u95ee\uff1a\u662f\u5426\u5b58\u5728\u4e00\u79cd\u6446\u653e\u65b9\u6cd5\uff0c\u6ee1\u8db3\u4e0a\u8ff0\u7684\u4e09\u4e2a\u6570\u5b57\uff1f\u5982\u679c\u5b58\u5728\u9996\u5148\u8f93\u51fa <code>Yes</code>\uff0c\u7136\u540e\u8f93\u51fa\u4e09\u4e2a\u6b63\u65b9\u4f53\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8f93\u51fa <code>No</code>\u3002 </p> \u89e3\u9898\u601d\u8def <p>\u975e\u5e38\u6076\u5fc3\u7684\u9898\u76ee\uff0c\u7406\u89e3\u539f\u6587\u7684\u9898\u610f+\u5bf9\u7167\u6837\u4f8b\u5c31\u82b1\u4e86\u6211\u5f88\u957f\u65f6\u95f4\u3002</p> <p>\u9996\u5148\u8003\u8651\u5230\u8fb9\u957f\u53ea\u6709 \\(7\\)\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u6b63\u65b9\u4f53\u56fa\u5b9a\u5728 \\((0, 0, 0)\\)\uff0c\u5219\u5269\u4e0b\u7684\u4e24\u4e2a\u6b63\u65b9\u4f53\u53ea\u9700\u8981\u8003\u8651 \\([-7, 7]\\) \u8fd9\u4e2a\u5750\u6807\u8303\u56f4\u7684\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u51fa \\(14^6 \\approx 7 \\times 10^6\\) \u7684\u6240\u6709\u60c5\u51b5\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u5982\u4f55\u9a8c\u8bc1\u662f\u5426\u7b26\u5408\u6761\u4ef6\uff0c\u9996\u5148\u7b97\u51fa \\(V_3\\)\uff0c\u56e0\u4e3a\u4e09\u4e2a\u7269\u4f53\u90fd\u662f\u6b63\u65b9\u4f53\uff0c\u5219\u76f8\u4ea4\u7684\u7269\u4f53\u4e00\u5b9a\u662f\u957f\u65b9\u4f53\uff0c\u5176\u8fb9\u7684\u53d6\u503c\u8303\u56f4\u5c31\u662f\u5bf9\u5e94\u8fb9\u7684\u5e76\u96c6\u3002\u4f8b\u5982 \\((0 \\le x \\le 7) \\land (2 \\le x \\le 9) \\land (4 \\le x \\le 11) = 4 \\le x \\le 7\\)\uff0c\u6240\u4ee5 \\(V_3\\) \u662f\u5f88\u5bb9\u6613\u7b97\u51fa\u6765\u7684\u3002</p> <p>\u81f3\u4e8e \\(V_2\\)\uff0c\u4e24\u4e24\u679a\u4e3e\u5e76\u8ba1\u7b97\u5408\u5e76\u540e\u7684\u957f\u65b9\u4f53\uff0c\u5f97\u5230\u7684\u4f53\u79ef\u9700\u8981\u51cf\u53bb \\(V_3\\)\u3002</p> <p>\\(V_1\\) \u7684\u8ba1\u7b97\uff0c\u4e0d\u59a8\u8bbe\u4e24\u4e24\u76f8\u4ea4\u7684\u4f53\u79ef\u4e3a \\(V_{1-2}\\)\uff0c\\(V_{1-3}\\) \u548c \\(V_{2-3}\\)\uff0c\u5219\u6b63\u65b9\u4f53\u72ec\u5360\u7684\u4f53\u79ef\u4e3a:</p> \\[ V_{1'} = 7^3 - V_{1-2} - V_{1-3} - V_3 \\\\ V_{2'} = 7^3 - V_{1-2} - V_{2-3} - V_3 \\\\ V_{3'} = 7^3 - V_{1-3} - V_{2-3} - V_3 \\\\ \\] <p>\u4e09\u8005\u76f8\u52a0\u53ef\u5f97 \\(V_1 = 7^3 \\times3 - 2V_2-3V_3\\)</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nint v[4];\nstruct Line {\nint l, r;\nLine() : l(0), r(7) {}\nLine(int x) : l(x), r(x + 7) {}\nLine(int x, int y) : l(x), r(y) {}\nint length() const {return r - l;}\n};\nLine merge(const Line &amp;x, const Line &amp;y)\n{\nif(x.l &gt; y.l)\nreturn merge(y, x);\nreturn Line(min(x.r, y.l), min(x.r, y.r));\n}\n\nstruct Cube {\nLine x, y, z;\nCube() : x(), y(), z() {}\nCube(int _x, int _y, int _z) : x(_x), y(_y), z(_z) {}\nCube(const Line &amp;a,const Line &amp;b, const Line &amp;c) : x(a), y(b), z(c) {}\nint volume() const {return x.length() * y.length() * z.length();}\n};\n\nCube merge(const Cube &amp;a, const Cube &amp;b)\n{return Cube(merge(a.x, b.x), merge(a.y, b.y), merge(a.z, b.z));}\n\nCube c[4];\n\nint main()\n{\ncin &gt;&gt; v[1] &gt;&gt; v[2] &gt;&gt; v[3];\nfor(int x2 = -7; x2 &lt;= 7; x2++)\nfor(int y2 = -7; y2 &lt;= 7; y2++)\nfor(int z2 = -7; z2 &lt;= 7; z2++)\n{\nc[2] = Cube(x2, y2, z2);\nCube m12 = merge(c[1], c[2]);\nfor(int x3 = -7; x3 &lt;= 7; x3++)\nfor(int y3 = -7; y3 &lt;= 7; y3++)\nfor(int z3 = -7; z3 &lt;= 7; z3++)\n{\nc[3] = Cube(x3, y3, z3);\nCube m123 = merge(m12, c[3]);\nif(m123.volume() != v[3])\ncontinue;\nCube m13 = merge(c[1], c[3]);\nCube m23 = merge(c[2], c[3]);\nif(m12.volume() + m13.volume() + m23.volume() - 3 * v[3] != v[2])\ncontinue;\nif(7*7*7*3 - 2*v[2] - 3*v[3] == v[1])\n{\nprintf(\"Yes\\n0 0 0 %d %d %d %d %d %d\\n\", x2, y2, z2, x3, y3, z3);\nreturn 0;\n}\n}\n}\nputs(\"No\");\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\nclass Line {\npublic int l, r;\n\npublic Line() {\nl = 0;\nr = 7;\n}\n\npublic Line(int x) {\nl = x;\nr = x + 7;\n}\n\npublic Line(int x, int y) {\nl = x;\nr = y;\n}\n\npublic int length() {\nreturn r - l;\n}\n\n}\n\nclass Cube {\npublic Line x, y, z;\n\npublic Cube() {\nx = new Line();\ny = new Line();\nz = new Line();\n}\n\npublic Cube(int _x, int _y, int _z) {\nx = new Line(_x);\ny = new Line(_y);\nz = new Line(_z);\n}\n\npublic Cube(Line a, Line b, Line c) {\nx = a;\ny = b;\nz = c;\n}\n\npublic int volume() {\nreturn x.length() * y.length() * z.length();\n}\n\n}\n\npublic class Main {\nprivate static Line merge(Line x, Line y) {\nif (x.l &gt; y.l)\nreturn merge(y, x);\nreturn new Line(Math.min(x.r, y.l), Math.min(x.r, y.r));\n}\n\nprivate static Cube merge(Cube a, Cube b) {\nreturn new Cube(merge(a.x, b.x), merge(a.y, b.y), merge(a.z, b.z));\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint[] v = new int[4];\nCube[] c = new Cube[4];\nc[1] = new Cube();\nfor (int i = 1; i &lt;= 3; i++)\nv[i] = in.nextInt();\nfor (int x2 = -7; x2 &lt;= 7; x2++)\nfor (int y2 = -7; y2 &lt;= 7; y2++)\nfor (int z2 = -7; z2 &lt;= 7; z2++) {\nc[2] = new Cube(x2, y2, z2);\nCube m12 = merge(c[1], c[2]);\nfor (int x3 = -7; x3 &lt;= 7; x3++)\nfor (int y3 = -7; y3 &lt;= 7; y3++)\nfor (int z3 = -7; z3 &lt;= 7; z3++) {\nc[3] = new Cube(x3, y3, z3);\nCube m123 = merge(m12, c[3]);\nif (m123.volume() != v[3])\ncontinue;\nCube m13 = merge(c[1], c[3]);\nCube m23 = merge(c[2], c[3]);\nif (m12.volume() + m13.volume() + m23.volume() - 3 * v[3] != v[2])\ncontinue;\nif (7 * 7 * 7 * 3 - 2 * v[2] - 3 * v[3] == v[1]) {\nSystem.out.printf(\"Yes\\n0 0 0 %d %d %d %d %d %d\\n\", x2, y2, z2, x3, y3, z3);\nreturn;\n}\n}\n}\nSystem.out.println(\"No\");\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc343/#f-second-largest-query","title":"F - Second Largest Query","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N(N \\le 2 \\times 10^5)\\) \u4e2a\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u662f \\(A_i\\)\uff0c\u6709 \\(Q(Q \\le 2 \\times 10^5)\\) \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6709\u4e24\u79cd\uff0c\u7b2c\u4e00\u79cd\u64cd\u4f5c\u662f\u5355\u70b9\u4fee\u6539\uff0c\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u662f\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u5185\u7b2c\u4e8c\u5927\u7684\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5982\u679c\u4f1a\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6b21\u5927\u503c\u7684\u8bdd\uff0c\u8fd9\u9053\u9898\u53ea\u9700\u8981\u518d\u52a0\u4e0a\u51fa\u73b0\u6b21\u6570\u5c31\u597d\u3002\uff08\u5b9e\u9645\u5c31\u662f\u6a21\u677f\u63d0\uff0c\u79c1\u4ee5\u4e3a\u8fd9\u9053\u9898\u6bd4\u4e0a\u4e00\u9898\u7b80\u5355\u3002\uff09</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint n, a[maxn];\n\nstruct Node {\nint num[2], cnt[2];\nNode() {num[0] = num[1] = cnt[0] = cnt[1] = 0;}\n}t[maxn * 4];\n\nNode pushup(const Node &amp;x, const Node &amp;y)\n{\nmap&lt;int, int&gt; mp;\nmp[x.num[0]] += x.cnt[0];\nmp[x.num[1]] += x.cnt[1];\nmp[y.num[0]] += y.cnt[0];\nmp[y.num[1]] += y.cnt[1];\nauto it = mp.rbegin();\nNode res;\nres.num[0] = it -&gt; first;\nres.cnt[0] = it -&gt; second;\nit++;\nres.num[1] = it -&gt; first;\nres.cnt[1] = it -&gt; second;\nreturn res;\n}\n\nvoid build(int p, int beg, int end)\n{\nif(beg == end)\n{\nt[p].num[0] = a[beg];\nt[p].cnt[0] = 1;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = 2 * p + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid+1, end);\nt[p] = pushup(t[lch], t[rch]);\n}\n\nvoid update(int p, int beg, int end, int pos, int k)\n{\nif(beg == end)\n{\nt[p].num[0] = k;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = 2 * p + 1;\npos &lt;= mid ? update(lch, beg, mid, pos, k) : update(rch, mid+1, end, pos, k);\nt[p] = pushup(t[lch], t[rch]);\n}\n\nNode ask(int p, int beg, int end, int l, int r)\n{\nif(end &lt; l || beg &gt; r)\nreturn Node();\nif(beg &gt;= l &amp;&amp; end &lt;= r)\nreturn t[p];\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = 2 * p + 1;\nreturn pushup(ask(lch, beg, mid, l, r), ask(rch, mid+1, end, l, r));\n}\n\nint main()\n{\nint t;\ncin &gt;&gt; n &gt;&gt; t;\nfor(int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]);\nbuild(1, 1, n);\nwhile(t--)\n{\nint op, p, x, l, r;\nscanf(\"%d\", &amp;op);\nif(op == 1)\n{\nscanf(\"%d %d\", &amp;p, &amp;x);\nupdate(1, 1, n, p, x);\n}\nelse\n{\nscanf(\"%d %d\", &amp;l, &amp;r);\nprintf(\"%d\\n\", ask(1, 1, n, l, r).cnt[1]);\n}\n}\nreturn 0;\n}\n</code></pre> <pre><code>import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\n\nclass Node {\npublic int[] num, cnt;\n\nNode() {\nnum = new int[2];\ncnt = new int[2];\n}\n}\n\npublic class Main {\nstatic FastReader in = new FastReader();\nstatic PrintWriter out = new PrintWriter(System.out);\n\nprivate static Node[] t;\nprivate static int[] a;\n\nprivate static Node pushup(Node x, Node y) {\nTreeMap&lt;Integer, Integer&gt; mp = new TreeMap&lt;&gt;(Collections.reverseOrder());\nmp.put(x.num[0], mp.getOrDefault(x.num[0], 0) + x.cnt[0]);\nmp.put(x.num[1], mp.getOrDefault(x.num[1], 0) + x.cnt[1]);\nmp.put(y.num[0], mp.getOrDefault(y.num[0], 0) + y.cnt[0]);\nmp.put(y.num[1], mp.getOrDefault(y.num[1], 0) + y.cnt[1]);\nvar it = mp.entrySet().iterator();\nNode res = new Node();\nvar entry = it.next();\nres.num[0] = entry.getKey();\nres.cnt[0] = entry.getValue();\nentry = it.next();\nres.num[1] = entry.getKey();\nres.cnt[1] = entry.getValue();\nreturn res;\n}\n\nprivate static void build(int p, int beg, int end) {\nt[p] = new Node();\nif (beg == end) {\nt[p].num[0] = a[beg];\nt[p].cnt[0] = 1;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = 2 * p + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid + 1, end);\nt[p] = pushup(t[lch], t[rch]);\n}\n\nprivate static void update(int p, int beg, int end, int pos, int k) {\nif (beg == end) {\nt[p].num[0] = k;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = 2 * p + 1;\nif (pos &lt;= mid)\nupdate(lch, beg, mid, pos, k);\nelse\nupdate(rch, mid + 1, end, pos, k);\nt[p] = pushup(t[lch], t[rch]);\n}\n\nprivate static Node ask(int p, int beg, int end, int l, int r) {\nif (end &lt; l || beg &gt; r)\nreturn new Node();\nif (beg &gt;= l &amp;&amp; end &lt;= r)\nreturn t[p];\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = 2 * p + 1;\nreturn pushup(ask(lch, beg, mid, l, r), ask(rch, mid + 1, end, l, r));\n}\n\npublic static void main(String[] args) {\nint n = in.nextInt();\nint T = in.nextInt();\nt = new Node[4 * n];\na = new int[n + 1];\nfor (int i = 1; i &lt;= n; i++)\na[i] = in.nextInt();\nbuild(1, 1, n);\nwhile (T-- &gt; 0) {\nint op, p, x, l, r;\nop = in.nextInt();\nif (op == 1) {\np = in.nextInt();\nx = in.nextInt();\nupdate(1, 1, n, p, x);\n} else {\nl = in.nextInt();\nr = in.nextInt();\nout.printf(\"%d\\n\", ask(1, 1, n, l, r).cnt[1]);\n}\n}\n\nout.flush();\n}\n}\n\nclass FastReader {\nStringTokenizer st;\nBufferedReader br;\n\npublic FastReader() {\nbr = new BufferedReader(new InputStreamReader(System.in));\n}\n\nString next() {\nwhile (st == null || !st.hasMoreElements()) {\ntry {\nst = new StringTokenizer(br.readLine());\n} catch (IOException e) {\ne.printStackTrace();\n}\n}\nreturn st.nextToken();\n}\n\nint nextInt() {\nreturn Integer.parseInt(next());\n}\n\nlong nextLong() {\nreturn Long.parseLong(next());\n}\n\ndouble nextDouble() {\nreturn Double.parseDouble(next());\n}\n\nString nextLine() {\nString str = \"\";\ntry {\nstr = br.readLine();\n} catch (IOException e) {\ne.printStackTrace();\n}\nreturn str;\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc343/#g-compress-strings","title":"G - Compress Strings","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N(N \\le 20)\\) \u4e2a\u5b57\u7b26\u4e32\uff0c\u7b2c \\(i\\) \u4e2a\u5b57\u7b26\u4e32\u662f \\(S_i(\\sum |S_i| \\le 2 \\times 10^5)\\)\u3002\u6784\u9020\u4e00\u4e2a\u6700\u77ed\u7684\u5b57\u7b26\u4e32 \\(T\\) \uff0c\u4f7f\u5f97\u6240\u6709\u7684 \\(S_i\\) \u90fd\u662f \\(T\\) \u7684\u5b50\u4e32\u3002</p> \u89e3\u9898\u601d\u8def <p>\u5982\u679c \\(S_i\\) \u5305\u542b\u4e86 \\(S_j\\)\uff0c\u5219\u53ef\u4ee5\u4e0d\u8003\u8651 \\(S_j\\)\uff0c\u76f4\u63a5\u5c06\u5176\u5220\u9664\u3002</p> <p>\u5047\u8bbe\u6709\u5b57\u7b26\u4e32 \\(X\\) \u548c\u5b57\u7b26\u4e32 \\(Y\\)\uff0c\u8981\u5c06\u5176\u538b\u7f29\u6210\u4e00\u4e2a\u6700\u77ed\u7684\u5b57\u7b26\u4e32 \\(Z\\)\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528 kmp \u6216\u8005 \u5b57\u7b26\u4e32\u54c8\u5e0c \u5728 \\(O(|X|+|Y|)\\) \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u3002\u4ee5 kmp \u4e3a\u4f8b\uff1a\u5728\u6c42\u5b50\u4e32\u5339\u914d\u65f6\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u63a5\u6210 \\(Y\\#X\\)\uff0c\u7136\u540e\u4e0d\u65ad\u7b97\u51fa \u524d\u7f00\u51fd\u6570 \u7684\u503c\uff0c\u800c \u524d\u7f00\u51fd\u6570 \u7684\u5b9a\u4e49 \\(ne[i]\\) \u8868\u793a \\([0, i]\\) \u8fd9\u6bb5\u5b57\u7b26\u4e32\u4e2d\u771f\u524d\u7f00\u4e0e\u771f\u540e\u7f00\u76f8\u7b49\u7684\u6700\u5927\u957f\u5ea6\uff0c\u8fd9\u610f\u5473\u7740\u5339\u914d\u5230\u6700\u540e\u65f6\uff08\u5047\u8bbe\u6b64\u65f6\u7684\u524d\u7f00\u51fd\u6570\u503c\u4e3a \\(j\\)\uff0c\\(|X| = n\\)\uff0c\\(|Y| = m\\)\uff09\uff0c\u6b64\u65f6\u6709 \\(Y_0Y_1\\cdots Y_{j-1} = X_{n-j+1}X_{n-j+2}\\cdots{X_n}\\)\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u538b\u7f29\u6210 \\(X_0X_1 \\cdots X_{n-j+1}X_{n-j+2}\\cdots{X_n}Y_jY_{j+1} \\cdots Y_{m-1}\\)\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u77ed\u7684\u3002</p> <p>\u7531\u4e8e \\(N \\le 20\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u4e24\u4e24\u5904\u7406\u5b57\u7b26\u4e32\uff0c\u5904\u7406\u51fa\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 \\(cost[i][j]\\)\uff0c\u8868\u793a\u5c06\u7b2c \\(j\\) \u4e2a\u5b57\u7b26\u4e32\u62fc\u63a5\u5728\u7b2c \\(i\\) \u4e2a\u5b57\u7b26\u4e32\u540e\u6240\u589e\u52a0\u7684\u5b57\u7b26\u4e2a\u6570\uff0c\u8fd9\u4e2a\u503c\u5728 kmp \u7ed3\u675f\u65f6\u53ef\u4ee5\u7b97\u51fa\u662f \\(m-j\\)\u3002\u9884\u5904\u7406\u51fa\u6240\u6709\u7684 \\(cost[i][j]\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(N\\times \\sum|S_i|)\\)</p> <p>\u5982\u4f55\u6784\u9020\u51fa\u6700\u77ed\u7684\u7b54\u6848\uff1f\u8003\u8651 \u72b6\u538bdp\uff0c\u5b9a\u4e49 \\(dp[s][j]\\)\uff1a\u5df2\u7ecf\u6784\u9020\u51fa\u4e86\u96c6\u5408 \\(s\\) \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u4e14\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f \\(j\\) \u7684\u6240\u6709\u65b9\u6848\u4e2d\u7684\u6700\u77ed\u957f\u5ea6\uff0c\u8f6c\u79fb\u65f6\u53ea\u9700\u8981\u679a\u4e3e\u4e0a\u4e00\u6b65\u662f\u54ea\u4e2a\u5b57\u7b26\u4e32 \\(i\\)\uff0c\u5219\u6709\uff1a $$ dp[s][j] = \\min_{i \\in s}{dp[s\\backslash i][i]} $$ \u5176\u4e2d\uff0c\\(s\\backslash i\\) \u8868\u793a \\(s\\) \u53bb\u6389\u7b2c \\(i\\) \u4e2a\u5b57\u7b26\u4e32\u4e4b\u540e\u7684\u96c6\u5408\u3002\u8fd9\u4e2a dp \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(2^NN^2)\\) \u7684\u3002</p> <p>\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N\\sum|S_i|+N^22^N)\\)\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nconst int maxn = 20 + 5;\nconst int maxs = (1 &lt;&lt; 20) + 10;\nconst int inf  = 1E8;\n\nint n;\nvector&lt;int&gt; ne[maxn];\nstring str[maxn];\nbool del[maxn];\n\nint cost[maxn][maxn], dp[maxs][maxn];\n\nint DP(int s, int j)\n{\nif(dp[s][j] != -1)\nreturn dp[s][j];\ndp[s][j] = inf;\nint ls = s ^ 1 &lt;&lt; j;\nfor(int i = 0; i &lt; n; i++)\nif(ls &gt;&gt; i &amp; 1)\ndp[s][j] = min(dp[s][j], DP(ls, i)+cost[i][j]);\nreturn dp[s][j];\n}\n\nvoid getnext(const string &amp;s, vector&lt;int&gt; &amp;ne)\n{\nint m = s.size();\nfor(int i = 1, j = 0; i &lt; m; i++)\n{\nwhile(j &amp;&amp; s[i] != s[j])\nj = ne[j-1];\nif(s[i] == s[j])\nj++;\nne[i] = j;\n}\n}\n\nint kmp(const string &amp;p, const string &amp;t, const vector&lt;int&gt; &amp;ne)\n{\nint n = t.size(), m = p.size(), j = 0;\nfor(int i = 0; i &lt; n; i++)\n{\nwhile(j &amp;&amp; t[i] != p[j])\nj = ne[j-1];\nif(t[i] == p[j])\nif(++j == m)\nbreak;\n}\nreturn j;\n}\n\nint main()\n{\ncin &gt;&gt; n;   for(int i = 0; i &lt; n; i++)\n{\ncin &gt;&gt; str[i];\nne[i].resize(str[i].size());\ngetnext(str[i], ne[i]);\n}\nfor(int i = 0; i &lt; n; i++)\n{\nif(del[i])\ncontinue;\nfor(int j = 0; j &lt; n; j++)\n{\nif(i == j || del[j])\ncontinue;\ncost[i][j] = str[j].size() - kmp(str[j], str[i], ne[j]);\nif(!cost[i][j])\ndel[j] = 1;\n}\n}\nint ans = inf, mask = 0;\nmemset(dp, -1, sizeof dp);\nfor(int i = 0; i &lt; n; i++) if(!del[i])\n{\ndp[1 &lt;&lt; i][i] = str[i].size();\nmask |= 1 &lt;&lt; i;\n}\nfor(int i = 0; i &lt; n; i++)\nif(!del[i])\nans = min(ans, DP(mask, i));\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static final int inf = (int) 1E8;\n\nprivate static int n;\nprivate static int[][] ne, dp, cost;\nprivate static String[] str;\n\nprivate static int DP(int s, int j) {\nif (dp[s][j] != -1)\nreturn dp[s][j];\ndp[s][j] = inf;\nint ls = s ^ 1 &lt;&lt; j;\nfor (int i = 0; i &lt; n; i++)\nif ((ls &gt;&gt; i &amp; 1) &gt; 0)\ndp[s][j] = Math.min(dp[s][j], DP(ls, i) + cost[i][j]);\nreturn dp[s][j];\n}\n\nprivate static int[] getnext(String s) {\nint m = s.length();\nint[] ne = new int[m];\nfor (int i = 1, j = 0; i &lt; m; i++) {\nwhile (j &gt; 0 &amp;&amp; s.charAt(i) != s.charAt(j))\nj = ne[j - 1];\nif (s.charAt(i) == s.charAt(j))\nj++;\nne[i] = j;\n}\nreturn ne;\n}\n\nprivate static int kmp(String p, String t, int[] ne) {\nint n = t.length(), m = p.length(), j = 0;\nfor (int i = 0; i &lt; n; i++) {\nwhile (j &gt; 0 &amp;&amp; t.charAt(i) != p.charAt(j))\nj = ne[j - 1];\nif (t.charAt(i) == p.charAt(j))\nif (++j == m)\nbreak;\n}\nreturn j;\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nn = in.nextInt();\nne = new int[n][];\nstr = new String[n];\ndp = new int[1 &lt;&lt; n][n];\ncost = new int[n][n];\nfor (int i = 0; i &lt; n; i++) {\nstr[i] = in.next();\nne[i] = getnext(str[i]);\n}\nboolean[] del = new boolean[n];\nfor (int i = 0; i &lt; n; i++) {\nif (del[i])\ncontinue;\nfor (int j = 0; j &lt; n; j++) {\nif (i == j || del[j])\ncontinue;\ncost[i][j] = str[j].length() - kmp(str[j], str[i], ne[j]);\nif (cost[i][j] == 0)\ndel[j] = true;\n}\n}\nint ans = inf, mask = 0;\nfor (int i = 0; i &lt; (1 &lt;&lt; n); i++)\nfor (int j = 0; j &lt; n; j++)\ndp[i][j] = -1;\nfor (int i = 0; i &lt; n; i++)\nif (!del[i]) {\ndp[1 &lt;&lt; i][i] = str[i].length();\nmask |= 1 &lt;&lt; i;\n}\nfor (int i = 0; i &lt; n; i++)\nif (!del[i])\nans = Math.min(ans, DP(mask, i));\nSystem.out.println(ans);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc347/","title":"ABC347(A-E)","text":""},{"location":"algorithm/AtCoder/abc347/#a-divisible","title":"A - Divisible","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N\\) \u4e2a\u6574\u6570 \\(A = (A_1, A_2, \\cdots, A_N)\\) \u548c\u4e00\u4e2a\u6574\u6570 \\(K\\) \uff0c\u5982\u679c \\(A_i\\) \u662f \\(K\\) \u7684\u500d\u6570\uff0c\u8f93\u51fa \\(\\frac{A_i}{K}\\)\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, k, x;\ncin &gt;&gt; n &gt;&gt; k;\nwhile(n--)\n{\ncin &gt;&gt; x;\nif(x % k == 0)\ncout &lt;&lt; x / k &lt;&lt; ' ';\n} return 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint k = in.nextInt();\nwhile (n-- &gt; 0) {\nint x = in.nextInt();\nif (x % k == 0)\nSystem.out.printf(\"%d \", x / k);\n}\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc347/#b-substring","title":"B - Substring","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(S\\)\uff0c\u6c42\u51fa \\(S\\) \u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u5b50\u4e32\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_set&gt;\n\nusing namespace std;\n\nint main()\n{\nstring s;\ncin &gt;&gt; s;\nint n = s.size();\nunordered_set&lt;string&gt; vis;\nfor(int i = 0; i &lt; n; i++)\n{\nstring now;\nfor(int j = i; j &lt; n; j++)\n{\nnow += s[j];\nvis.insert(now);\n}\n}\ncout &lt;&lt; vis.size() &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.HashSet;\nimport java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nchar[] s = in.next().toCharArray();\nint n = s.length;\nHashSet&lt;String&gt; vis = new HashSet&lt;&gt;();\nfor (int i = 0; i &lt; n; i++) {\nString now = \"\";\nfor (int j = i; j &lt; n; j++) {\nnow += s[j];\nvis.add(now);\n}\n}\nSystem.out.println(vis.size());\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc347/#c-ideal-holidays","title":"C - Ideal Holidays","text":"\u9898\u76ee\u5927\u610f <p>\u5047\u8bbe\u4e00\u4e2a\u661f\u671f\u6709 \\(A+B\\) \u5929\uff0c\u5176\u4e2d\u524d \\(A(A \\le 10^9)\\) \u5929\u662f\u5047\u671f\uff0c\u63a5\u4e0b\u6765\u7684 \\(B(B \\le 10^9)\\) \u5929\u662f\u5de5\u4f5c\u65e5\u3002\u6709 \\(N(N \\le 2 \\times 10^5)\\) \u4e2a\u8ba1\u5212\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u4e2a\u8ba1\u5212\u662f\u5728 \\(D_i\\) \u5929\u540e\u3002\u4f60\u5fd8\u8bb0\u4e86\u4eca\u5929\u662f\u4e00\u661f\u671f\u4e2d\u54ea\u4e00\u5929\u3002\u95ee\uff1a\u662f\u5426\u5b58\u5728\u4e00\u79cd\u53ef\u80fd\uff0c\u4f7f\u5f97\u8fd9 \\(N\\) \u4e2a\u8ba1\u5212\u90fd\u80fd\u5728\u5047\u65e5\u5b8c\u6210\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u6bcf\u4e00\u5929\u6211\u4eec\u5b9e\u9645\u53ea\u5173\u5fc3\u662f\u4e00\u4e2a\u661f\u671f\u7684\u7b2c\u51e0\u5929\uff0c\u6240\u4ee5\u6211\u4eec\u8ba1\u7b97\u6240\u6709\u7684 \\(D_i \\bmod (A+B)\\) \uff0c\u7136\u540e\u5c06\u5f97\u5230\u7684\u7ed3\u679c\u53d6\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u4ee4 \\(l = \\min\\limits_{i = 1} ^ N\\{D_i \\bmod (A+B)\\}\\)\uff0c\\(r = \\max\\limits_{i = 1} ^ N\\{D_i \\bmod (A+B)\\}\\)\uff0c\u5219\u5982\u679c \\(r-l+1 \\le A\\) \u5373\u53ef\u3002\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5c06 \\(l\\) \u5bf9\u5e94\u7684\u90a3\u4e00\u5929\u89c6\u4e3a\u7b2c\u4e00\u5929\u5047\u671f\uff0c\u5219 \\(r\\) \u5bf9\u5e94\u7684\u90e8\u5206\u4e00\u5b9a\u4e0d\u4f1a\u8d85\u8fc7 \\(A\\)\u3002</p> <p>\u8fd9\u662f\u6211\u4e00\u5f00\u59cb\u7684\u505a\u6cd5\uff0c\u540e\u6765\u53d1\u73b0 WA \u4e86\u4e00\u4e2a\u70b9\uff0c\u8003\u8651\u4e0b\u9762\u8fd9\u4e2a\u6837\u4f8b\uff1a</p> <pre><code>4 4 5\n1 2 8 9\n</code></pre> <p>\u8fd9\u4e2a\u6837\u4f8b\u5e94\u8be5\u8f93\u51fa <code>Yes</code>\uff0c\u539f\u56e0\u662f\u53ef\u4ee5\u5c06 <code>1</code> \u5bf9\u5e94\u7b2c\u4e09\u5929\u5047\u671f\uff0c\u8fd9\u6837\uff0c\u5728\u65b0\u7684\u661f\u671f\u4e2d\uff0c<code>8</code> \u548c <code>9</code> \u5bf9\u5e94\u7684\u5c31\u662f\u5047\u671f\u7684\u7b2c\u4e00\u5929\u548c\u7b2c\u4e8c\u5929\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b2c\u4e00\u5929\u5047\u671f\u4e0d\u4e00\u5b9a\u662f \\(l\\) \u5bf9\u5e94\u7684\u90a3\u4e00\u5929\uff0c\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c06 \\(8\\) \u89c6\u4e3a\u5047\u671f\u7684\u7b2c\u4e00\u5929\uff0c\u6b64\u65f6\u5e8f\u5217\u76f8\u5f53\u4e8e <code>8 9 10 11</code>\uff0c\u6b64\u65f6\u5224\u65ad\u7684\u5c31\u662f <code>11</code> \u548c <code>8</code> \u7684\u957f\u5ea6\u3002</p> <p>\u56e0\u6b64\u5904\u7406\u51fa\u6240\u6709\u7684 \\(D_i \\bmod (A+B)\\) \uff0c\u7136\u540e\u6392\u5e8f\uff0c\u63a5\u7740\u679a\u4e3e\u54ea\u4e00\u5929\u5e94\u8be5\u6210\u4e3a\u5047\u671f\u7684\u7b2c\u4e00\u5929\uff0c\u5047\u8bbe\u679a\u4e3e\u5230 \\(i\\)\uff0c\u8fd9\u4e0a\u4e00\u5929\u5c31\u662f \\(i-1\\), \u5224\u65ad\u4e24\u8005\u7684\u957f\u5ea6\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u6ee1\u8db3\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, a, b, c;\ncin &gt;&gt; n &gt;&gt; a &gt;&gt; b;\nc = a + b;\nvector&lt;int&gt; d(n);\nfor(int i = 0; i &lt; n; i++)\n{\nscanf(\"%d\", &amp;d[i]);\nd[i] %= c;\n}\nsort(d.begin(), d.end());\nd.erase(unique(d.begin(), d.end()), d.end());\nn = d.size();\nif(d[n-1] - d[0] &lt; a)\n{\nputs(\"Yes\");\nreturn 0;\n}\nfor(int i = 0; i &lt; n - 1; i++)\n{\nif(d[i] + c - d[i+1] &lt; a)\n{\nputs(\"Yes\");\nreturn 0;\n}\n}\nputs(\"No\");\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint a = in.nextInt();\nint b = in.nextInt();\nint c = a + b;\nint[] d = new int[n];\nfor (int i = 0; i &lt; n; i++) {\nd[i] = in.nextInt();\nd[i] %= c;\n}\nArrays.sort(d);\nif (d[n - 1] - d[0] &lt; a) {\nSystem.out.println(\"Yes\");\nreturn;\n}\nfor (int i = 0; i &lt; n - 1; i++) {\nif (d[i] + c - d[i + 1] &lt; a) {\nSystem.out.println(\"Yes\");\nreturn;\n}\n}\nSystem.out.println(\"No\");\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc347/#d-popcount-and-xor","title":"D - Popcount and XOR","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e09\u4e2a\u6570\u5b57 \\(a(a \\le 60)\\)\uff0c\\(b(b \\le 60)\\) \u548c \\(C(C \\le 2^{60})\\)\uff0c\u95ee\uff1a\u662f\u5426\u5b58\u5728\u6570\u5bf9 \\((X, Y)\\) \u6ee1\u8db3\u4e0b\u5217\u6240\u6709\u6761\u4ef6\u3002</p> <ul> <li>\\(0 \\le X &lt; 2^{60}\\)</li> <li>\\(0 \\le Y &lt; 2^{60}\\)</li> <li>\\(X\\) \u7684\u4e8c\u8fdb\u5236\u4e2d\u6709 \\(a\\) \u4e2a \\(1\\)</li> <li>\\(Y\\) \u7684\u4e8c\u8fdb\u5236\u4e2d\u6709 \\(b\\) \u4e2a \\(1\\)</li> <li>\\(X \\oplus Y = C\\)</li> </ul> \u89e3\u9898\u601d\u8def <p>\u5148\u5c06 \\(C\\) \u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u7ec4\u5904\u7406\u51fa\u6765\uff0c\u7136\u540e\u5b9a\u4e49 \\(dp[i][x][y]\\) \u8868\u793a\u662f\u5426\u5b58\u5728\u6ee1\u8db3 \\(C\\) \u7684\u524d \\(i\\) \u4f4d\u7684\u524d\u63d0\u4e0b\uff0c\\(X\\) \u7528\u4e86 \\(x\\) \u4e2a \\(1\\)\uff0c\\(Y\\) \u7528\u4e86 \\(y\\) \u4e2a \\(1\\) \u7684\u65b9\u6848\u3002\u5219\u521d\u59cb\u65f6 \\(dp[0][0][0] = 1\\)\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u6839\u636e \\(C\\) \u7684\u6570\u4f4d\u5206\u7c7b\uff0c\u5982\u679c \\(C_i=1\\) \u5219 \\(X_iY_i = 10\\) \u6216\u8005 \\(X_iY_i = 01\\)\uff0c\u5982\u679c \\(C_i = 0\\) \u5219 \\(X_iY_i = 00\\) \u6216\u8005 \\(X_iY_i = 11\\)\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0d\u4e00\u5b9a\u8981\u6070\u597d\u7528\u5b8c\u6240\u6709\u7684 \\(1\\)\uff0c\u56e0\u4e3a \\(C\\) \u662f\u6709\u53ef\u80fd\u5b58\u5728\u524d\u5bfc \\(0\\) \u7684\uff0c\u800c\u524d\u5bfc \\(0\\) \u53ef\u4ee5\u7531\u4e24\u4e2a \\(1\\) \u5f02\u6216\u5f97\u5230\u3002</p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn =  64;\nLL a, b, C;\nint n, num[maxn];\nbool dp[maxn][maxn][maxn];\n\nint main()\n{\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; C;\nwhile(C)\n{\nnum[++n] = C &amp; 1;\nC &gt;&gt;= 1;\n}\ndp[0][0][0] = 1;\nfor(int i = 1; i &lt;= n; i++)\nif(num[i])\n{\nfor(int x = 0; x &lt;= a; x++)\nfor(int y = 0; y &lt;= b; y++)\ndp[i][x][y] = (x &amp;&amp; dp[i-1][x-1][y]) || (y &amp;&amp; dp[i-1][x][y-1]);\n}\nelse\n{\nfor(int x = 0; x &lt;= a; x++)\nfor(int y = 0; y &lt;= b; y++)\ndp[i][x][y] = dp[i-1][x][y] || (x &amp;&amp; y &amp;&amp; dp[i-1][x-1][y-1]);\n}\nint x, y, cnt = -1;\nfor(int i = 0; i &lt;= a; i++)\nfor(int j = 0; j &lt;= b; j++)\nif(dp[n][i][j] &amp;&amp; a-i == b-j &amp;&amp; a-i+n &lt;= 60)\n{\ncnt = a-i;\nx = i;\ny = j;\nbreak;\n}\nif(cnt == -1)\n{\nputs(\"-1\");\nreturn 0;\n}\nLL X = 0, Y = 0;\nfor(int i = n; i; i--)\nif(num[i])\n{\nif(x &amp;&amp; dp[i-1][x-1][y])\n{\nX |= 1ll &lt;&lt; (i-1);\nx--;\n}\nelse\n{\nY |= 1ll &lt;&lt; (i-1);\ny--;\n}\n}\nelse\n{\nif(x &amp;&amp; y &amp;&amp; dp[i-1][x-1][y-1])\n{\nX |= 1ll &lt;&lt; (i-1);\nY |= 1ll &lt;&lt; (i-1);\nx--;\ny--;\n}\n}\nfor(int i = 0; i &lt; cnt; i++)\n{\nX |= 1ll &lt;&lt; (n + i);\nY |= 1ll &lt;&lt; (n + i);\n}\ncout &lt;&lt; X &lt;&lt; ' ' &lt;&lt; Y;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint a = in.nextInt();\nint b = in.nextInt();\nlong C = in.nextLong();\nboolean[] num = new boolean[64];\nint n = 0;\nwhile (C &gt; 0) {\nnum[++n] = (C &amp; 1) &gt; 0 ? true : false;\nC &gt;&gt;= 1;\n}\nboolean[][][] dp = new boolean[n + 1][(int) a + 1][(int) b + 1];\ndp[0][0][0] = true;\nfor (int i = 1; i &lt;= n; i++)\nif (num[i]) {\nfor (int x = 0; x &lt;= a; x++)\nfor (int y = 0; y &lt;= b; y++)\ndp[i][x][y] = (x &gt; 0 &amp;&amp; dp[i - 1][x - 1][y]) || (y &gt; 0 &amp;&amp; dp[i - 1][x][y - 1]);\n} else {\nfor (int x = 0; x &lt;= a; x++)\nfor (int y = 0; y &lt;= b; y++)\ndp[i][x][y] = dp[i - 1][x][y] || (x &gt; 0 &amp;&amp; y &gt; 0 &amp;&amp; dp[i - 1][x - 1][y - 1]);\n}\nint x = 0, y = 0, cnt = -1;\nfor (int i = 0; i &lt;= a; i++)\nfor (int j = 0; j &lt;= b; j++)\nif (dp[n][i][j] &amp;&amp; a - i == b - j &amp;&amp; a - i + n &lt;= 60) {\ncnt = a - i;\nx = i;\ny = j;\nbreak;\n}\nif (cnt == -1) {\nSystem.out.println(-1);\nreturn;\n}\nlong X = 0, Y = 0;\nfor (int i = n; i &gt; 0; i--)\nif (num[i]) {\nif (x &gt; 0 &amp;&amp; dp[i - 1][x - 1][y]) {\nX |= 1l &lt;&lt; (i - 1);\nx--;\n} else {\nY |= 1l &lt;&lt; (i - 1);\ny--;\n}\n} else {\nif (x &gt; 0 &amp;&amp; y &gt; 0 &amp;&amp; dp[i - 1][x - 1][y - 1]) {\nX |= 1l &lt;&lt; (i - 1);\nY |= 1l &lt;&lt; (i - 1);\nx--;\ny--;\n}\n}\nfor (int i = 0; i &lt; cnt; i++) {\nX |= 1l &lt;&lt; (n + i);\nY |= 1l &lt;&lt; (n + i);\n}\nSystem.out.printf(\"%d %d\", X, Y);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc347/#e-set-add-query","title":"E - Set Add Query","text":"\u9898\u76ee\u5927\u610f <p>\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N(N \\le 2 \\times 10^5)\\) \u7684\u5e8f\u5217 \\(A = (A_1, A_2, \\cdots, A_N)\\) \u548c\u4e00\u4e2a\u96c6\u5408 \\(S\\) \u3002 \u521d\u59cb\u7684\u65f6\u5019\uff0c\\(A\\) \u4e2d\u7684\u6240\u6709\u6570\u5b57\u90fd\u662f \\(0\\)\uff0c\u96c6\u5408 \\(S\\) \u4e5f\u4e3a\u7a7a\u3002\u6709 \\(Q(Q \\le 2 \\times 10^5)\\) \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u7ed9\u4f60\u4e00\u4e2a\u6570\u5b57 \\(x_i(1 \\le x_i \\le N)\\)\uff0c\u7136\u540e\u6267\u884c\uff1a</p> <ol> <li> <ul> <li>\u5982\u679c \\(x_i\\) \u5728 \\(S\\) \u4e2d\uff0c\u5219\u5c06\u5176\u4ece \\(S\\) \u4e2d\u5220\u53bb\u3002</li> <li>\u5982\u679c \\(x_i\\) \u4e0d\u5728 \\(S\\) \u4e2d\uff0c\u5219\u5c06\u5176\u52a0\u5165\u5230 \\(S\\) \u4e2d\u3002</li> </ul> </li> <li>\u904d\u5386 \\(S\\) \u4e2d\u6240\u6709\u7684\u6570\u5b57 \\(x\\)\uff0c\u7136\u540e\u7ed9 \\(A_x\\) \u52a0\u4e0a\u96c6\u5408 \\(S\\) \u7684\u5927\u5c0f \\(|S|\\)\u3002</li> </ol> <p>\u95ee\uff1a\u5728 \\(Q\\) \u6b21\u64cd\u4f5c\u540e\uff0c\u5e8f\u5217 \\(A\\) \u7684\u5185\u5bb9\u662f\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u8003\u8651\u8ffd\u8e2a\u6bcf\u4e2a\u6570\u5b57\u5728\u96c6\u5408\u4e2d\u5b58\u6d3b\u7684\u65f6\u95f4\uff0c\u5f53\u6570\u5b57 \\(x\\) \u52a0\u5165\u96c6\u5408\uff0c\u4e00\u76f4\u5230\u8fd9\u4e2a\u6570\u5b57\u88ab\u5220\u53bb\uff0c\u4e2d\u95f4 \\(|S|\\) \u90fd\u4f1a\u5bf9 \\(A_x\\) \u4ea7\u751f\u5f71\u54cd\uff0c\u800c\u8fd9\u4e2a\u533a\u95f4\u662f\u8fde\u7eed\u7684\u3002\u663e\u7136\u8981\u7ef4\u62a4\u4e00\u4e2a \\(|S|\\) \u53d8\u5316\u7684\u524d\u7f00\u548c\uff0c\u7136\u540e\u8bb0\u5f55\u4e00\u4e0b\u6570\u5b57\u4e0a\u4e00\u6b21\u52a0\u5165\u7684\u65f6\u95f4\uff0c\u7528 <code>last[x]</code> \u8868\u793a <code>x</code> \u4e0a\u4e00\u6b21\u52a0\u5165\u96c6\u5408\u7684\u65f6\u95f4\uff0c\u5982\u679c <code>last[x] == 0</code> \u8868\u793a <code>x</code> \u4e0d\u5728\u96c6\u5408\u4e2d\u3002\u5f53\u5143\u7d20\u88ab\u5220\u53bb\u65f6\uff0c\u67e5\u627e\u51fa\u5bf9\u5e94\u7684\u524d\u7f00\u548c\uff0c\u4e00\u6b21\u6027\u52a0\u4e0a\u53bb\u5c31\u597d\u3002\u8fd9\u6837\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(1)\\) \u7684\u3002</p> <p>\\(Q\\) \u6b21\u64cd\u4f5c\u540e\uff0c\u8fd8\u9700\u8981\u5bf9\u96c6\u5408\u4e2d\u5269\u4e0b\u7684\u6240\u6709\u5143\u7d20\u518d\u52a0\u4e00\u904d\u3002 </p> \u53c2\u8003\u4ee3\u7801 C++Java <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint last[maxn];\nLL s[maxn], a[maxn];\n\nLL getsum(int l, int r)\n{return s[r] - s[l-1];}\n\nint main()\n{\nint n, q, x, now = 0;\ncin &gt;&gt; n &gt;&gt; q;\nfor(int i = 1; i &lt;= q; i++)\n{\nscanf(\"%d\", &amp;x);\nif(last[x])\n{\na[x] += getsum(last[x], i-1);\nlast[x] = 0;\nnow--;\n}\nelse\n{\nlast[x] = i;\nnow++;\n}\ns[i] = s[i-1] + now;\n}\nfor(int i = 1; i &lt;= n; i++)\nif(last[i])\na[i] += getsum(last[i], q);\nfor(int i = 1; i &lt;= n; i++)\nprintf(\"%lld \", a[i]);\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\nprivate static long[] s;\n\nprivate static long getsum(int l, int r) {\nreturn s[r] - s[l - 1];\n}\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nint n = in.nextInt();\nint q = in.nextInt();\nint[] last = new int[n + 1];\nlong[] a = new long[n + 1];\ns = new long[q + 1];\nint now = 0;\nfor (int i = 1; i &lt;= q; i++) {\nint x = in.nextInt();\nif (last[x] &gt; 0) {\na[x] += getsum(last[x], i - 1);\nlast[x] = 0;\nnow--;\n} else {\nlast[x] = i;\nnow++;\n}\ns[i] = s[i - 1] + now;\n}\nfor (int i = 1; i &lt;= n; i++)\nif (last[i] &gt; 0)\na[i] += getsum(last[i], q);\nfor (int i = 1; i &lt;= n; i++)\nSystem.out.printf(\"%d \", a[i]);\nin.close();\n}\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc351/","title":"ABC351(A-G)","text":"<p>\u5176\u5b9e\u524d\u51e0\u573a\u4e5f\u505a\u4e86\uff0c\u4f46\u662f\u56e0\u4e3a\u6700\u8fd1\u5b9e\u9a8c\u5ba4\u592a\u5fd9\uff0c\u5c31\u6ca1\u6709\u51fa\u9898\u89e3...\u4f46\u662f\u8fd9\u573a\u8d28\u91cf\u771f\u7684\u592a\u9ad8\u4e86\uff01\u62bd\u7a7a\u628a\u9898\u89e3\u5199\u4e86\u3002</p>"},{"location":"algorithm/AtCoder/abc351/#a-the-bottom-of-the-ninth","title":"A - The bottom of the ninth","text":"\u9898\u76ee\u5927\u610f <p>\u7b2c\u4e00\u884c\u8f93\u5165 \\(9\\) \u4e2a\u6570\uff0c\u7b2c\u4e8c\u884c\u8f93\u5165 \\(8\\) \u4e2a\u6570\uff0c\u5bf9\u4e24\u884c\u7684\u6570\u5b57\u6c42\u548c\uff0c\u95ee\uff1a\u7b2c\u4e8c\u884c\u7684\u6570\u5b57\u4e4b\u548c\u81f3\u5c11\u8981\u52a0\u591a\u5c11\u624d\u80fd\u6bd4\u7b2c\u4e00\u884c\u7684\u6570\u5b57\u4e4b\u548c\u5927\uff1f</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint a = 0, x;\nfor(int i = 0; i &lt; 9; i++) {\ncin &gt;&gt; x;\na += x;\n}\nfor(int i = 0; i &lt; 8; i++) {\ncin &gt;&gt; x;\na -= x;\n}\ncout &lt;&lt; max(a+1, 0);\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc351/#b-spot-the-difference","title":"B - Spot the Difference","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e24\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635 \\(A\\) \u548c \\(B\\)\uff0c\u8fd9\u4e24\u4e2a\u77e9\u9635\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\u4e0d\u76f8\u540c\uff0c\u627e\u51fa\u8fd9\u4e2a\u4f4d\u7f6e</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\nvector&lt;string&gt; a(n), b(n);\nfor(int i = 0; i &lt; n; i++)\ncin &gt;&gt; a[i];\nfor(int i = 0; i &lt; n; i++)\ncin &gt;&gt; b[i];\nfor(int i = 0; i &lt; n; i++)\nfor(int j = 0; j &lt; n; j++)\nif(a[i][j] != b[i][j])\n{\ncout &lt;&lt; i+1 &lt;&lt; ' ' &lt;&lt; j+1 &lt;&lt; endl;\nreturn 0;\n}\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc351/#c-merge-the-balls","title":"C - Merge the balls","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N(1 \\le N \\le 2 \\times 10^5)\\) \u4e2a\u7403\uff0c\u7b2c \\(i\\) \u4e2a\u7403\u7684\u5927\u5c0f\u662f \\(2^{A_i}(0 \\le A_i \\le 10^9)\\)\u3002\u4f60\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c \\(N\\) \u6b21\u3002</p> <p>\u5728\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u4e2d\uff0c\u9996\u5148\u4f60\u9700\u8981\u5c06\u7b2c \\(i\\) \u4e2a\u7403\u52a0\u5165\u5230\u5e8f\u5217\u7684\u6700\u53f3\u7aef\uff0c\u7136\u540e\u91cd\u590d\u4e0b\u5217\u6d41\u7a0b\uff1a</p> <ol> <li>\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u53ea\u5269\u4e0b \\(1\\) \u4e2a\u6216 \\(0\\) \u4e2a\u7403\uff0c\u7ed3\u675f\u672c\u6b21\u64cd\u4f5c\u3002</li> <li>\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u6700\u53f3\u7aef\u7684\u4e24\u4e2a\u7403\u7684\u5927\u5c0f\u4e0d\u540c\uff0c\u7ed3\u675f\u672c\u6b21\u64cd\u4f5c\u3002</li> <li>\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u6700\u53f3\u7aef\u7684\u4e24\u4e2a\u7403\u7684\u5927\u5c0f\u76f8\u540c\uff0c\u5c06\u8fd9\u4e24\u4e2a\u7403\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u5408\u5e76\u540e\u7684\u7403\u7684\u5927\u5c0f\u662f\u539f\u5148\u7684\u4e24\u4e2a\u7403\u7684\u5927\u5c0f\u4e4b\u548c\u3002\u7136\u540e\u91cd\u590d\u6267\u884c\u76f4\u5230\u6ee1\u8db3\u6761\u4ef6 1 \u6216\u6761\u4ef6 2\u3002</li> </ol> <p>\u8f93\u51fa \\(N\\) \u6b21\u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u5e8f\u5217\u4e2d\u7403\u7684\u4e2a\u6570\u3002</p> \u89e3\u9898\u601d\u8def <p>\u7528\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\u5373\u53ef\uff0c\u6808\u4e2d\u5b58 \\(A_i\\)\uff0c\u5408\u5e76\u65f6\u76f8\u5f53\u4e8e\u5bf9 \\(A_i\\) \u52a0 \\(1\\)\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, x;\ncin &gt;&gt; n;\nstack&lt;int&gt; st;\nwhile(n--)\n{\ncin &gt;&gt; x;\nwhile(!st.empty() &amp;&amp; x == st.top())\n{\nx++;\nst.pop();\n}\nst.push(x);\n}\ncout &lt;&lt; st.size() &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc351/#d-grid-and-magnet","title":"D - Grid and Magnet","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a \\(H \\times W(1 \\le H, W \\le 1000)\\)\u200b \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u6709\u4e00\u4e9b\u683c\u5b50\u662f <code>#</code> \u8868\u793a\u78c1\u94c1\uff0c<code>.</code> \u8868\u793a\u5730\u9762\u3002\u78c1\u94c1\u4e0d\u53ef\u901a\u884c\uff0c\u4e14\u5f53\u4f60\u5728\u78c1\u94c1\u4e0a\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u683c\u5b50\u4e2d\u65f6\uff0c\u78c1\u94c1\u4f1a\u628a\u4f60\u5438\u4f4f\uff0c\u6b64\u65f6\u4f60\u4e5f\u4e0d\u80fd\u8fdb\u884c\u79fb\u52a8\u3002</p> <p>\u4f60\u53ef\u4ee5\u9009\u5b9a\u4e00\u4e2a\u4efb\u610f\u7684\u8d77\u59cb\u4f4d\u7f6e\u51fa\u53d1\uff0c\u7136\u540e\u8fdb\u884c\u591a\u6b21\u7684\u79fb\u52a8\uff0c\u6bcf\u4e00\u6b65\u53ef\u4ee5\u79fb\u52a8\u5230\u4e0a\u4e0b\u5de6\u53f3\u7684\u76f8\u90bb\u683c\u5b50\u4e2d\uff0c\u5f53\u4f60\u88ab\u78c1\u94c1\u5438\u4f4f\u65f6\uff0c\u672c\u6b21\u79fb\u52a8\u7ed3\u675f\u3002\u4f60\u53ea\u80fd\u56de\u5230\u8d77\u59cb\u4f4d\u7f6e\u4ece\u65b0\u5f00\u59cb\u79fb\u52a8\u3002</p> <p>\u95ee\uff1a\u5982\u679c\u5141\u8bb8\u4f60\u4ece\u8d77\u59cb\u4f4d\u7f6e\u51fa\u53d1\u65e0\u9650\u6b21\uff0c\u6700\u591a\u80fd\u5230\u8fbe\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u683c\u5b50\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u6211\u4eec\u79f0\u78c1\u94c1\u9644\u8fd1\u7684 <code>.</code> \u4e3a \u7ec8\u7aef\u70b9\uff0c\u663e\u7136\u6211\u4eec\u7684\u8d77\u59cb\u4f4d\u7f6e\u4e0d\u5e94\u8be5\u9009\u62e9\u7ec8\u7aef\u70b9\uff0c\u56e0\u4e3a\u7ec8\u7aef\u70b9\u7684\u7b54\u6848\u53ea\u6709 \\(1\\)\u3002</p> <p>\u6807\u8bb0\u51fa\u6240\u6709\u7684\u7ec8\u7aef\u70b9\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u975e\u7ec8\u7aef\u70b9\u5982\u4f55\u8ba1\u7b97\u7b54\u6848\uff0c\u7531\u4e8e\u53ef\u4ee5\u591a\u6b21\u79fb\u52a8\uff0c\u975e\u7ec8\u7aef\u70b9\u4f1a\u5f62\u6210\u8fde\u901a\u5757\uff0c\u8fde\u901a\u5757\u7684\u8fb9\u754c\u5c31\u662f\u7ec8\u7aef\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u8fdb\u884c\u6267\u884c\u591a\u8f6e <code>dfs</code> \u6c42\u8fde\u901a\u5757\u7684\u64cd\u4f5c\uff0c\u6bcf\u8f6e <code>dfs</code> \u4e2d\u5c06\u975e\u7ec8\u7aef\u70b9\u7eb3\u5165\u5f53\u524d\u7684\u8fde\u901a\u5757\uff0c\u8bbf\u95ee\u5230\u7ec8\u7aef\u70b9\u65f6\u8fd4\u56de\u3002</p> <p>\u8fd9\u91cc\u548c\u666e\u901a\u7684\u6c42\u8fde\u901a\u5757\u4e0d\u540c\u7684\u662f\uff0c\u4e00\u4e2a\u7ec8\u7aef\u70b9\u53ef\u4ee5\u88ab\u591a\u4e2a\u4e0d\u540c\u7684\u8fde\u901a\u5757\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e0d\u80fd\u7b80\u5355\u7684\u4f7f\u7528 <code>bool</code> \u6765\u6807\u8bb0\u4e00\u4e2a\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff0c\u6211\u7684\u529e\u6cd5\u662f\uff0c\u5f15\u5165\u7684\u65f6\u95f4\u6233 <code>t</code> \u7528\u6765\u8868\u793a\u73b0\u5728\u6b63\u5728\u5904\u7406\u7b2c <code>t</code> \u4e2a\u8fde\u901a\u5757\uff0c\u8fd9\u6837\u5c31\u80fd\u8fc7\u4e86\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, m;\ncin &gt;&gt; n &gt;&gt; m;\nvector&lt;string&gt; g(n);\nfor (int i = 0; i &lt; n; i++)\ncin &gt;&gt; g[i];\nauto inlim = [n, m](int r, int c) -&gt; bool\n{ return r &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; c &gt;= 0 &amp;&amp; c &lt; m; };\nconst int dr[] = {-1, 1, 0, 0};\nconst int dc[] = {0, 0, -1, 1};\nvector&lt;vector&lt;bool&gt;&gt; ep(n, vector&lt;bool&gt;(m));\nfor (int r = 0; r &lt; n; r++)\nfor (int c = 0; c &lt; m; c++)\n{\nfor (int i = 0; i &lt; 4; i++)\n{\nint nr = r + dr[i], nc = c + dc[i];\nif (inlim(nr, nc) &amp;&amp; g[nr][nc] == '#')\n{\nep[r][c] = true;\nbreak;\n}\n}\n}\nvector&lt;vector&lt;int&gt;&gt; vis(n, vector&lt;int&gt;(m));\nint cnt = 0, t = 0;\nauto dfs = [&amp;](auto &amp;&amp;self, int r, int c)\n{\ncnt++;\nvis[r][c] = t;\nif (ep[r][c])\nreturn;\nfor (int i = 0; i &lt; 4; i++)\n{\nint nr = r + dr[i], nc = c + dc[i];\nif (inlim(nr, nc) &amp;&amp; g[nr][nc] == '.' &amp;&amp; vis[nr][nc] != t)\nself(self, nr, nc);\n}\n};\nint ans = 1;\nfor(int r = 0; r &lt; n; r++)\nfor(int c = 0; c &lt; m; c++)\nif(!vis[r][c] &amp;&amp; g[r][c] == '.' &amp;&amp; !ep[r][c])\n{\ncnt = 0;\nt++;\ndfs(dfs, r, c);\nans = max(ans, cnt);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc351/#e-jump-distance-sum","title":"E - Jump Distance Sum","text":"\u9898\u76ee\u5927\u610f <p>\u5728\u5e73\u9762\u4e0a\u7ed9\u4f60 \\(N(2 \\le N \\le 2 \\times 10^5)\\) \u4e2a\u70b9 \\(P_1, P_2, \\cdots, P_N\\) \uff0c\u5176\u4e2d \\(P_i\\) \u7684\u5750\u6807\u4e3a \\((X_i, Y_i)\\) \u3002</p> <p>\u5b9a\u4e49\u70b9 \\(A\\) \u548c\u70b9 \\(B\\) \u7684\u8ddd\u79bb \\(\\text{dist}(A, B)\\) \u5982\u4e0b\uff1a</p> <p>\u5047\u8bbe\u6709\u4e00\u53ea\u5154\u5b50\u4e00\u5f00\u59cb\u7ad9\u5728\u70b9 \\(A\\)\u200b \u4e0a\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u5154\u5b50\u7684\u5750\u6807\u662f \\((x, y)\\)\uff0c\u5b83\u6bcf\u4e00\u6b21\u53ef\u4ee5\u8df3\u5230 \\((x+1, y+1)\\)\uff0c\\((x+1, y-1)\\)\uff0c\\((x-1, y+1)\\) \u6216\u8005 \\((x-1, y-1)\\) \u7684\u683c\u5b50\u4e0a\u3002</p> <p>\u5b9a\u4e49 \\(\\text{dist}(A, B)\\) \u8868\u793a\u5154\u5b50\u4ece\u70b9 \\(A\\) \u8df3\u5230\u70b9 \\(B\\) \u7684\u6700\u5c11\u6b21\u6570\u3002</p> <p>\u5982\u679c\u65e0\u6cd5\u4ece\u70b9 \\(A\\) \u8df3\u5230\u70b9 \\(B\\)\uff0c\u5219 \\(\\text{dist}(A, B) = 0\\)</p> <p>\u6c42\u51fa \\(\\sum\\limits_{i=1}^{N-1}\\sum\\limits_{j=i+1}^N\\text{dist}(P_i, P_j)\\)</p> \u89e3\u9898\u601d\u8def <p>\u89c2\u5bdf\u8df3\u8dc3\u89c4\u5219\u53ef\u4ee5\u53d1\u73b0\uff0c\\(X_i + Y_i\\) \u7684\u5947\u5076\u6027\u51b3\u5b9a\u4e86\u54ea\u4e9b\u70b9\u7684\u8ddd\u79bb\u4e3a \\(0\\)\uff0c\u54ea\u4e9b\u70b9\u7684\u8ddd\u79bb\u4e0d\u4e3a \\(0\\)\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> <ul> <li>\u5982\u679c \\((X_i + Y_i) \\equiv(X_j+Y_j) \\bmod 2\\)\uff0c\u5219 \\(P_i\\) \u548c \\(P_j\\) \u7684\u8ddd\u79bb\u4e0d\u4e3a \\(0\\)</li> <li>\u5426\u5219\uff0c\\(P_i\\) \u548c \\(P_j\\) \u7684\u8ddd\u79bb\u4e3a \\(0\\)\u200b</li> </ul> <p>\\(0\\) \u7684\u8d21\u732e\u662f\u4e0d\u7528\u8003\u8651\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u6309\u7167 \\(X_i + Y_i\\) \u7684\u5947\u5076\u6027\u5206\u6210\u4e24\u4e2a\u70b9\u96c6\uff0c\u6c42\u51fa\u4e24\u4e2a\u70b9\u96c6\u5185\u90e8\u7684\u8ddd\u79bb\u4e4b\u548c\u76f8\u52a0\u5373\u53ef\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u5982\u4f55\u6c42\u51fa\u4e00\u4e2a\u70b9\u96c6\u5185\u7684\u8ddd\u79bb\u4e4b\u548c\u3002\u4ee5 \\((X_i + Y_i) \\equiv 0 \\bmod 2\\) \u7684\u96c6\u5408\u4e3a\u4f8b\uff0c\u6ce8\u610f\u5230\u8df3\u8dc3\u65b9\u5f0f\u5b9e\u9645\u5c31\u662f \u201c\u5de6\u4e0a\u201d\uff0c\u201c\u5de6\u4e0b\u201d\uff0c\u201d\u53f3\u4e0a\u201c\uff0c\u201d\u53f3\u4e0b\u201c\uff0c\u8003\u8651\u5c06\u201d\u53f3\u4e0a\u201c\u6620\u5c04\u6210\u201d\u53f3\u201c\uff0c\u5373\u5c06 \\((x, y)\\) \u6620\u5c04\u6210 \\((a, b)\\)\uff0c\u6620\u5c04\u524d\u7684 \\((x+1, y+1)\\) \u76f8\u5f53\u4e8e\u6620\u5c04\u540e\u7684 \\((a+1, 0)\\) \uff0c\u4e0d\u96be\u5199\u51fa\u6620\u5c04\u540e\u7684\u5bf9\u5e94\u5173\u7cfb\u4e3a\uff1a</p> \\[ \\left\\{\\begin{matrix}    a = \\frac{x+y}{2} \\\\     b = \\frac{y-x}{2}  \\end{matrix}\\right. \\] <p>\u6620\u5c04\u524d \\((x, y)\\) \u7684 \\(\\text{dist}\\) \u5b9e\u9645\u5c31\u662f\u6620\u5c04\u540e \\((a, b)\\) \u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u800c\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u6a2a\u7eb5\u5750\u6807\u662f\u5206\u5f00\u8ba1\u5165\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6620\u5c04\u540e\u7684 \\(a\\) \u548c \\(b\\) \u5b58\u5165\u5230\u4e24\u4e2a <code>vector</code> \u4e2d\uff0c\u5206\u5f00\u8ba1\u7b97\u8d21\u732e\u7136\u540e\u76f8\u52a0\u5373\u53ef\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u8ba1\u7b97 \\(a\\) \u6240\u5728\u7684 <code>vector</code> \u7684\u8d21\u732e\uff0c\u53ea\u9700\u8981\u5bf9 \\(a\\) \u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5728\u904d\u5386\u7684\u65f6\u5019\u76f4\u63a5\u51cf\u5c31\u80fd\u8ba1\u7b97\u51fa\u5dee\u503c\u3002\u8fd9\u6837\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002</p> <p>\u540c\u6837\u7ed9\u51fa \\((X_i + Y_i) \\equiv 1 \\bmod 2\\) \u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5728\u521a\u624d\u7684\u6620\u5c04\u5173\u7cfb\u4e2d\u6211\u5b9e\u9645\u53d6\u7684\u4e2d\u5fc3\u662f \\((0, 0)\\)\uff0c\u800c\u5728 \\((X_i + Y_i) \\equiv 1 \\bmod 2\\) \u65f6\u5c31\u4e0d\u80fd\u53d6 \\((0, 0)\\) \u4e86\uff0c\u6240\u4ee5\u6211\u53d6\u7684\u662f \\((1, 0)\\) \uff0c\u8fd9\u6837\u6620\u5c04\u5173\u7cfb\u5c31\u662f\uff1a</p> \\[ \\left\\{\\begin{matrix}    a = \\frac{x+y-1}{2} \\\\     b = \\frac{y-x+1}{2}  \\end{matrix}\\right. \\] \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\ntypedef long long LL;\nvector&lt;vector&lt;int&gt;&gt; v(4);\nint n, x, y;\ncin &gt;&gt; n;\nwhile (n--)\n{\ncin &gt;&gt; x &gt;&gt; y;\nif ((x &amp; 1) == (y &amp; 1))\n{\nv[0].push_back((x + y) / 2);\nv[1].push_back((y - x) / 2);\n}\nelse\n{\nv[2].push_back((x + y - 1) / 2);\nv[3].push_back((y - x + 1) / 2);\n}\n}\nauto cal = [](vector&lt;int&gt; &amp;v) -&gt; LL {\nsort(v.begin(), v.end());\nLL ans = 0, s = 0;\nfor(int i = 0, n = v.size(); i &lt; n; s += v[i++])\nans += (LL)i * v[i] - s;\nreturn ans;\n};\nLL ans = 0;\nfor(int i = 0; i &lt; 4; i++)\nans += cal(v[i]);\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc351/#f-double-sum","title":"F - Double Sum","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(A = (A_1, A_2, \\cdots, A_N)\\)\uff0c\u6c42\u51fa \\(\\sum\\limits_{i=1}^{N}\\sum\\limits_{j=i+1}^N\\text{max}(A_j-A_i, 0)\\)</p> <p>\u6570\u636e\u8303\u56f4\uff1a</p> <ul> <li>\\(2 \\le N \\le 4 \\times 10^5\\)</li> <li>\\(0 \\le A_i \\le 10^8\\)</li> </ul> \u89e3\u9898\u601d\u8def <p>\u770b\u4e86\u4e00\u773c \\(A_i\\) \u7684\u8303\u56f4\uff0c\\(10^8\\)\uff0c\u679c\u65ad\u7528\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u628a \\(A\\) \u7684\u503c\u5f53\u6210\u533a\u95f4\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u503c\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u503c\u7684\u548c\uff0c\u8fd9\u6837\u904d\u5386\u5230 \\(A_j\\) \u65f6\uff0c\u5728\u7ebf\u6bb5\u6811\u4e2d\u67e5\u51fa\u6709\u591a\u5c11\u4e2a\u6bd4 \\(A_j\\) \u5c0f\u7684\u6570\uff08\u5047\u8bbe\u6709 \\(k\\) \u4e2a\uff09\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u6570\u5b57\u7684\u548c\u662f\u591a\u5c11\uff08\u5047\u8bbe\u548c\u662f \\(s\\)\uff09\uff0c\u5219\u6240\u6709\u5728 \\(1 \\le A_i &lt; A_j\\) \u7684\u8d21\u732e\u5c31\u662f \\(kA_j - s\\)\u3002\u7136\u540e\u518d\u628a \\(A_j\\) \u63d2\u5165\u7ebf\u6bb5\u6811\u4e2d\u3002\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(nlog|A|\\)\uff0c\u662f\u53ef\u4ee5\u8fc7\u7684\u3002</p> <p>\u8fc7\u4e86\u4e4b\u540e\u53d1\u73b0\u7528\u4e86 <code>256MB</code> \uff08\u672c\u9898\u9650\u5236\u662f <code>1024MB</code> \uff09\uff0c\u7b97\u4e86\u4e00\u4e0b \\(10^8\\) \u5927\u7ea6\u662f \\(17\\) \u5c42\uff0c\u8fd9\u6837\u7684\u8bdd \\(17n\\) \u5dee\u4e0d\u591a\u5c31\u662f <code>256MB</code>\uff0c\u4e8e\u662f\u8d5b\u540e\u60f3\u4e86\u60f3\u6709\u6ca1\u6709\u522b\u7684\u505a\u6cd5...</p> <p>\u540e\u6765\u770b\u4e86\u5b98\u89e3\u4e4b\u540e\u624d\u77e5\u9053\uff0c\u5b8c\u5168\u53ef\u4ee5\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u8fd9\u6837\u4e5f\u7528\u4e0d\u4e0a\u7ebf\u6bb5\u6811\u4e86\uff0c\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u5c31\u80fd\u7ef4\u62a4\u4e86\uff0c\u5b9e\u73b0\u771f\u6b63\u7684\u7ebf\u6027\u7a7a\u95f4\u590d\u6742\u5ea6\uff01</p> \u53c2\u8003\u4ee3\u7801 \u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811 <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nstruct FenwickTree\n{\nint n;\nvector&lt;LL&gt; t;\n\nFenwickTree(int n) : n(n), t(n+1) {}\n\nint lowbit(int x)\n{return x &amp; -x;}\n\nvoid add(int x, int k)\n{\nfor(; x &lt;= n; x += lowbit(x))\nt[x] += k;\n}\n\nLL ask(int x)\n{\nLL ans = 0;\nfor(; x; x -= lowbit(x))\nans += t[x];\nreturn ans;\n}\n};\n\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\nFenwickTree cnt(n), sum(n);\nvector&lt;int&gt; a(n);\nfor(int i = 0; i &lt; n; i++)\ncin &gt;&gt; a[i];\nvector&lt;int&gt; rk = a;\nsort(rk.begin(), rk.end());\nrk.erase(unique(rk.begin(), rk.end()), rk.end());\nLL ans = 0;\nfor(int i = 0; i &lt; n; i++)\n{\nint j = lower_bound(rk.begin(), rk.end(), a[i]) - rk.begin() + 1;\nLL s = sum.ask(j), c = cnt.ask(j);\nans += c * a[i] - s;\nsum.add(j, a[i]);\ncnt.add(j, 1);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nstruct QueryResult\n{\nLL sum, cnt;\n};\n\nQueryResult operator + (const QueryResult &amp;x, const QueryResult &amp;y)\n{return QueryResult{x.sum+y.sum, x.cnt+y.cnt};}\n\nstruct SegmentTree\n{\nstruct Node\n{\nLL sum;\nint cnt;\nint lch, rch;\n};\nint n, idx = 1;\nvector&lt;Node&gt; t;\nSegmentTree(int n) : n(n), t(27 * n) {}\nvoid add(int &amp;p, int beg, int end, int x)\n{\nif(p == 0)\np = ++idx;\nif(beg == end)\n{\nt[p].cnt++;\nt[p].sum += beg;\nreturn;\n}\nint mid = (beg + end) / 2;\nint &amp;lch = t[p].lch, &amp;rch = t[p].rch;\nx &lt;= mid ? add(lch, beg, mid, x) : add(rch, mid+1, end, x);\nt[p].sum = t[lch].sum + t[rch].sum;\nt[p].cnt = t[lch].cnt + t[rch].cnt;\n}\nQueryResult query(int p, int beg, int end, int l, int r)\n{\nif(p == 0 || end &lt; l || beg &gt; r)\nreturn QueryResult{0, 0};\nif(beg &gt;= l &amp;&amp; end &lt;= r)\nreturn QueryResult{t[p].sum, t[p].cnt};\nint mid = (beg + end) / 2;\nint lch = t[p].lch, rch = t[p].rch;\nreturn query(lch, beg, mid, l, r) + query(rch, mid+1, end, l, r);\n}\n};\n\nint main()\n{\nint n, x;\ncin &gt;&gt; n;\nSegmentTree t(n);\nint root = 1;\nLL ans = 0;\nwhile(n--)\n{\ncin &gt;&gt; x;\nQueryResult res = t.query(1, 0, 1E8, 0, x-1);\nans += res.cnt * x - res.sum;\nt.add(root, 0, 1E8, x);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc351/#g-hash-on-tree","title":"G - Hash on Tree","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u68f5 \\(N(1 \\le N \\le 2 \\times 10^5)\\) \u4e2a\u70b9\u7684\u6811\uff0c\u70b9 \\(1\\) \u662f\u6811\u7684\u6839\u8282\u70b9\u3002\u7b2c \\(i\\) \u4e2a\u70b9\u7684\u6743\u503c\u662f \\(A_i(0 \\le A_i &lt; 998244353)\\)\u3002</p> <p>\u5b9a\u4e49 \\(f(i)\\) \u8868\u793a\u4ee5\u70b9 \\(i\\) \u4e3a\u6839\u7684\u5b50\u6811\u7684\u54c8\u5e0c\u503c\uff0c\\(f(i)\\) \u7684\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a</p> <ul> <li>\u5982\u679c\u70b9 \\(i\\) \u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219 \\(f(i) = A_i\\)\u200b</li> <li>\u5982\u679c\u70b9 \\(i\\) \u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219 \\(f(i) = A_i + \\prod\\limits_{c \\in s(i)} f(c)\\)\uff0c\u5176\u4e2d \\(s(i)\\) \u8868\u793a \\(i\\) \u7684\u5b69\u5b50\u3002</li> </ul> <p>\u7ed9\u4f60 \\(Q(1 \\le Q \\le 2 \\times 10^5)\\) \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u7ed9\u4f60\u4e24\u4e2a\u6570\u5b57 \\(v\\) \u548c \\(x\\)\uff0c\u8868\u793a\u5c06 \\(A_v\\) \u4fee\u6539\u6210 \\(x\\)\u3002\u4f60\u9700\u8981\u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u6574\u68f5\u6811\u7684\u54c8\u5e0c\u503c\uff08\u5373 \\(f(1)\\) \u7684\u503c\uff09\uff0c\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21 \u3002</p> \u89e3\u9898\u601d\u8def <p>\u9996\u5148\u4e0d\u8003\u8651\u4fee\u6539\u64cd\u4f5c\uff0c\u6c42\u51fa \\(f(1)\\) \u5c31\u662f\u4e00\u4e2a\u6811\u5f62 <code>dp</code>\u3002\u52a0\u4e0a\u4fee\u6539\u64cd\u4f5c\uff0c\u5c31\u662f\u52a8\u6001 <code>dp</code> \u4e86\uff0c\u5148\u8f7b\u91cd\u94fe\u5256\u5206\u3002</p> <p>\u8003\u8651\u5728 \\(f[i]\\) \u7684\u8f6c\u79fb\u5f0f\u4e2d\u5206\u5272\u51fa\u91cd\u5b69\u5b50\u7684\u90e8\u5206\uff0c\u5b9a\u4e49 \\(j\\) \u8868\u793a\u70b9 \\(i\\) \u7684\u91cd\u5b69\u5b50\uff0c\u4e14 \\(g[i] = \\prod\\limits_{c \\in s(i) \\backslash j} f(c)\\)\uff0c\u5373 \\(i\\) \u7684\u6240\u6709\u8f7b\u5b69\u5b50\u7684 \\(f\\) \u503c\u7684\u4e58\u79ef</p> <p>\u6b64\u65f6\u6709 \\(f[i] = A[i] + g[i] \\times f[j]\\)</p> <p>\u77e9\u9635\u7684\u5f62\u5f0f\u5c31\u662f\uff1a</p> \\[ \\begin{bmatrix} g[i]    &amp; a[i] \\\\ 0       &amp; 1 \\end{bmatrix} \\begin{bmatrix} f[j]\\\\ 1 \\end{bmatrix} =  \\begin{bmatrix} f[i]\\\\ 1 \\end{bmatrix} \\] <p>\u7136\u540e\u5c06 \\(\\begin{bmatrix} f[j]\\\\ 1 \\end{bmatrix}\\) \u4e5f\u5f52\u4e00\u5316\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u4e0d\u96be\u7b97\u51fa\uff1a</p> \\[ \\begin{bmatrix} g[i]    &amp; a[i] \\\\ 0       &amp; 1 \\end{bmatrix} \\begin{bmatrix} 0 &amp; f[j]\\\\ 0 &amp; 1 \\end{bmatrix} =  \\begin{bmatrix} 0 &amp; f[i]\\\\ 0 &amp; 1 \\end{bmatrix} \\] <p>\u8fd9\u6837\u5728\u77e9\u9635\u8fde\u4e58\u4e4b\u540e\uff0c\u53f3\u4e0a\u89d2\u7684\u503c\u5c31\u662f\u5bf9\u5e94\u7684 \\(f\\) \u503c\u3002</p> <p>\u5269\u4e0b\u7684\u5c31\u662f\u52a8\u6001 <code>dp</code> \u7684\u6a21\u677f\u4e86\uff0c\u4ee4 \\(M[i] = \\begin{bmatrix} g[i]    &amp; a[i] \\\\ 0       &amp; 1 \\end{bmatrix}\\) \uff0c\u6bcf\u6b21\u5355\u70b9\u4fee\u6539\u5b9e\u9645\u5c31\u662f\u6539 \\(M[i][0][1]\\) \u7684\u503c\uff0c\u7136\u540e\u6c42\u51fa\u6574\u6761\u91cd\u94fe\u7684\u77e9\u9635\u503c\uff0c\u518d\u66f4\u65b0\u5230\u7236\u8282\u70b9\u4e0a\uff0c\u66f4\u65b0\u7684\u65f6\u5019\u9996\u5148\u9664\u6389\u539f\u5148\u7684 \\(f\\) \u503c\uff08\u9700\u8981\u6c42\u9006\u5143\uff09\uff0c\u7136\u540e\u518d\u4e58\u4e0a\u65b0\u7684 \\(f\\) \u503c\u3002</p> <p>\u4e0d\u8fc7\u6211\u53d1\u73b0\u6211\u603b\u662f\u75af\u72c2 WA \u6389\u6700\u540e\u4e24\u4e2a\u6d4b\u8bd5\u70b9\u3002\u3002\u6700\u540e\u53d1\u73b0\u8fd9\u9053\u9898\u7684 \\(A_i\\) \u548c \\(x\\) \u7684\u503c\u90fd\u6709\u53ef\u80fd\u4e3a \\(0\\)\uff0c\u4e00\u65b9\u9762\u8fd9\u6837\u6c42\u9006\u5143\u7684\u65f6\u5019\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u53e6\u4e00\u65b9\u9762\u8003\u8651\u4e00\u79cd\u60c5\u51b5\uff1a</p> <p>\u5f53\u6211\u4eec\u4ece\u4e00\u6761\u91cd\u94fe\u66f4\u65b0\u5230\u7236\u8282\u70b9\u7684\u65f6\u5019\uff0c \\(g[i]\\) \u6709\u53ef\u80fd\u5df2\u7ecf\u662f \\(0\\) \u4e86\uff0c\u76f8\u5f53\u4e8e\u4ee5\u524d\u7684\u503c\u90fd\u4e22\u5931\u4e86\uff0c\u800c \\(g[i]=0\\) \u8868\u793a\u5b58\u5728\u4e00\u4e2a\u8f7b\u5b69\u5b50\u7684 \\(f\\) \u503c\u662f \\(0\\)\uff0c\u5728\u66f4\u65b0\u65f6\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u662f\u54ea\u4e00\u4e2a\u3002</p> <p>\u6240\u4ee5\u5fc5\u987b\u8bb0\u5f55\u989d\u5916\u7684\u4fe1\u606f\uff0c\u6211\u7684\u89e3\u51b3\u529e\u6cd5\u662f\uff1a\u518d\u5355\u5f00\u4e24\u4e2a\u6570\u7ec4\uff0c\\(c[i]\\) \u8868\u793a \\(i\\) \u7684\u6240\u6709\u8f7b\u5b69\u5b50\u7684 \u975e\u96f6 \\(f\\) \u503c\u7684\u4e58\u79ef\uff0c\u4ee5\u53ca \\(cnt[i]\\) \u8868\u793a \\(i\\) \u7684\u6240\u6709\u8f7b\u5b69\u5b50\u4e2d \\(f\\) \u503c\u4e3a \\(0\\) \u7684\u6570\u91cf\u3002\u8fd9\u6837\uff0c\u91cd\u94fe\u5411\u4e0a\u7684\u66f4\u65b0\u53ea\u4f1a\u5f71\u54cd\u5230 \\(c[i]\\) \u548c \\(cnt[i]\\) \u8fd9\u4e24\u4e2a\u6570\u7ec4\u7684\u503c\uff0c\u7136\u540e \\(i\\) \u5728\u7ebf\u6bb5\u6811\u66f4\u65b0\uff08\u4e5f\u5c31\u662f\u66f4\u65b0\u81ea\u5df1\u7684 \\(M[i]\\) \u77e9\u9635\uff09\u65f6\u518d\u53c2\u8003\u8fd9 \\(c[i]\\) \u548c \\(cnt[i]\\) \u7684\u503c\u66f4\u65b0 \\(M[i][0][0]\\) \u7684\u503c\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nconst int maxm = maxn * 2;\nconst int mod = 998244353;\n\nint n;\nint head[maxn], edge[maxm], ne[maxm], idx = 1;\nvoid add(int u, int v)\n{\nedge[idx] = v;\nne[idx] = head[u];\nhead[u] = idx++;\n}\n\nstruct Matrix {\nstatic const int n = 2;\nLL g[n][n];\nMatrix() // \u9ed8\u8ba4\u6784\u9020\u52a0\u6cd5\u5355\u4f4d\u5143\n{\nfor(int i = 0; i &lt; n; i++)\nfor(int j = 0; j &lt; n; j++)\ng[i][j] = 0;\n}\nstatic Matrix mul_unit_matrix()\n{\nMatrix u;\nu[0][0] = u[1][1] = 1;\nreturn u;\n}\nMatrix(LL c, int x)\n{\ng[0][0] = c;\ng[0][1] = x;\ng[1][0] = 0;\ng[1][1] = 1;\n}\nLL* operator [] (int i)\n{return g[i];}\nconst LL* operator [] (int i) const\n{return g[i];}\n};\n\nconst Matrix mul_unit = Matrix::mul_unit_matrix();\n\nMatrix operator * (const Matrix &amp;x, const Matrix &amp;y)\n{\nMatrix z;\nfor(int i = 0; i &lt; Matrix::n; i++)\nfor(int j = 0; j &lt; Matrix::n; j++)\nfor(int k = 0; k &lt; Matrix::n; k++)\nz[i][j] = (z[i][j] + x[i][k] * y[k][j]) % mod;\nreturn z;\n}\n\nint fa[maxn], siz[maxn], son[maxn], top[maxn], bot[maxn], dfn[maxn], ord[maxn], ti = 1, cnt[maxn];\nLL a[maxn], dp[maxn], c[maxn];\nMatrix A[maxn];\nvoid dfs(int u, int f)\n{\nsiz[u] = 1;\nfa[u] = f;\nint M = 0;\ndp[u] = a[u];\nLL s = 1;\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nif(v == f)\ncontinue;\ndfs(v, u);\ns = (s * dp[v]) % mod;\nif(siz[v] &gt; M)\n{\nM = siz[v];\nson[u] = v;\n}\nsiz[u] += siz[v];\n}\nif(son[u])\ndp[u] = (dp[u] + s) % mod;\n}\nvoid decompose(int u, int t)\n{\ntop[u] = t;\ndfn[u] = ti;\nord[ti] = u;\nbot[t] = ti++;\nif(!son[u])\nreturn;\nif(siz[u] &gt; 1)\nc[u] = 1;\ndecompose(son[u], t);\nfor(int i = head[u]; i; i = ne[i])\n{\nint v = edge[i];\nif(v == fa[u] || v == son[u])\ncontinue;\ndecompose(v, v);\nif(dp[v] == 0)\ncnt[u]++;\nelse\nc[u] = (c[u] * dp[v]) % mod;\n}\n}\n\nMatrix t[maxn*4];\n\nvoid build(int p, int beg, int end)\n{\nif(beg == end)\n{\nint u = ord[beg];\nA[u] = Matrix(cnt[u] ? 0 : c[u], a[u]);\nt[p] = A[u];\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid+1, end);\nt[p] = t[lch] * t[rch];\n}\n\nMatrix get_segment(int p, int beg, int end, int l, int r)\n{\nif(end &lt; l || beg &gt; r)\nreturn mul_unit;\nif(beg &gt;= l &amp;&amp; end &lt;= r)\nreturn t[p];\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn get_segment(lch, beg, mid, l, r) * get_segment(rch, mid+1, end, l, r);\n}\n\nvoid update(int p, int beg, int end, int pos)\n{\nif(beg == end)\n{\nint u = ord[beg];\nA[u][0][0] = cnt[u] ? 0 : c[u];\nt[p] = A[u];\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\npos &lt;= mid ? update(lch, beg, mid, pos) : update(rch, mid+1, end, pos);\nt[p] = t[lch] * t[rch];\n}\n\nvoid exgcd(LL a, LL b, LL &amp;x, LL &amp;y)\n{\nif(b == 0)\n{\nx = 1;\ny = 0;\nreturn;\n}\nexgcd(b, a % b, y, x);\ny -= a / b * x;\n}\n\nLL inv(LL a)\n{\nLL x, y;\nexgcd(a, mod, x, y);\nif(x &lt; 0)\nx += mod;\nreturn x;\n}\n\nvoid update_path(int u, int x)\n{\nA[u][0][1] = a[u] = x;\nMatrix old, now;\nwhile(u)\n{\nint t = top[u];\nold = get_segment(1, 1, n, dfn[t], bot[t]);\nupdate(1, 1, n, dfn[u]);\nnow = get_segment(1, 1, n, dfn[t], bot[t]);\nu = fa[t];\nLL ft = old[0][1];\nif(!ft)\ncnt[u]--;\nelse\nc[u] = (c[u] * inv(ft)) % mod;\nft = now[0][1];\nif(!ft)\ncnt[u]++;\nelse\nc[u] = (c[u] * ft) % mod;\n}\n}\n\nint main()\n{\nios::sync_with_stdio(0);\ncin.tie(0);\nint m, u, x;\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 2; i &lt;= n; i++)\n{\ncin &gt;&gt; u;\nadd(u, i);\nadd(i, u);\n}\nfor(int i = 1; i &lt;= n; i++)\ncin &gt;&gt; a[i];\ndfs(1, 0);\ndecompose(1, 1);\nbuild(1, 1, n);\nwhile(m--)\n{\ncin &gt;&gt; u &gt;&gt; x;\nupdate_path(u, x);\nMatrix res = get_segment(1, 1, n, 1, bot[1]);\ncout &lt;&lt; res[0][1] &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc352/","title":"ABC352(A-F)","text":""},{"location":"algorithm/AtCoder/abc352/#a-atcoder-line","title":"A - AtCoder Line","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u56db\u4e2a\u6574\u6570 \\(N, X, Y, Z\\) \u5224\u65ad\u662f\u5426\u6709 \\(X \\le Z \\le Y\\) \u6216\u8005 \\(Y \\le Z \\le X\\)</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, x, y, z;\ncin &gt;&gt; n &gt;&gt; x &gt;&gt; y &gt;&gt; z;\nif(x &gt; y)\nswap(x, y);\nif(x &lt;= z &amp;&amp; z &lt;= y)\nputs(\"Yes\");\nelse\nputs(\"No\");\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc352/#b-typing","title":"B - Typing","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(S\\) \u548c \\(T\\)\uff0c\u5176\u4e2d \\(S\\) \u662f \\(T\\) \u7684\u5b50\u5e8f\u5217\u3002\u95ee\uff1a\u5728 \\(T\\) \u4e2d\u4fdd\u7559\u54ea\u4e9b\u4f4d\u7f6e\u7684\u5b57\u7b26\u53ef\u4ee5\u83b7\u5f97 \\(S\\) \uff1f</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nstring s, t;\ncin &gt;&gt; s &gt;&gt; t;\nint n = s.size();\nfor(int i = 0, j = 0; i &lt; n; j++)\n{\nif(s[i] == t[j])\n{\ncout &lt;&lt; j + 1 &lt;&lt; ' ';\ni++;\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc352/#c-standing-on-the-shoulders","title":"C - Standing On The Shoulders","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N(2 \\le N \\le 2 \\times 10^5)\\) \u4e2a\u5de8\u4eba\uff0c\u5728\u5e73\u5730\u4e0a\uff0c\u7b2c \\(i\\) \u4e2a\u5de8\u4eba\u7684\u80a9\u8180\u7684\u9ad8\u5ea6\u662f \\(A_i\\)\uff0c\u5934\u7684\u9ad8\u5ea6\u662f \\(B_i(A_i \\le B_i)\\)\u3002\u4e00\u4e2a\u5de8\u4eba\u53ef\u4ee5\u7ad9\u5728\u53e6\u4e00\u4e2a\u5de8\u4eba\u7684\u80a9\u8180\u4e0a\uff0c\u4f8b\u5982\uff0c\u5de8\u4eba \\(x\\) \u7ad9\u5728\u5de8\u4eba \\(y\\) \u7684\u80a9\u8180\u4e0a\uff0c\u5047\u8bbe\u6b64\u65f6\u5de8\u4eba \\(y\\) \u80a9\u8180\u79bb\u5730\u7684\u9ad8\u5ea6\u662f \\(H\\)\uff0c\u5219\u5f53\u5de8\u4eba \\(x\\) \u7ad9\u5728\u5de8\u4eba \\(y\\) \u7684\u80a9\u8180\u4e0a\u4e4b\u540e\uff0c\u5de8\u4eba \\(x\\) \u7684\u80a9\u8180\u7684\u79bb\u5730\u9ad8\u5ea6\u53d8\u4e3a \\(A_x + H\\)\uff0c\u5934\u7684\u79bb\u5730\u9ad8\u5ea6\u53d8\u4e3a \\(B_x + H\\)\u3002</p> <p>\u8fd9 \\(N\\) \u4e2a\u5de8\u4eba\u60f3\u8981\u4e00\u4e2a\u63a5\u4e00\u4e2a\u7684\u7ad9\u6210\u76f4\u7ebf\uff0c\u540c\u65f6\u6700\u5927\u5316\u6700\u4e0a\u9762\u7684\u5de8\u4eba\u7684\u5934\u7684\u9ad8\u5ea6\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6700\u5927\u503c\u3002</p> \u89e3\u9898\u601d\u8def <p>\u8bbe\u7ad9\u5728\u6700\u4e0a\u9762\u7684\u5de8\u4eba\u7f16\u53f7\u4e3a \\(x\\)\uff0c\u5219\u6b64\u65f6\u7b54\u6848\u4e3a \\(\\sum\\limits_{i = 1} ^ N A_i - A_x + B_x\\)\uff0c\u800c \\(\\sum\\limits_{i = 1} ^ N A_i\\) \u662f\u5b9a\u5236\uff0c\u56e0\u6b64\u627e\u51fa \\(B_x - A_x\\) \u7684\u6700\u5927\u503c\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nint main()\n{\nint n;\nLL sum = 0, a, b, M = -2E9;\ncin &gt;&gt; n;\nwhile(n--)\n{\ncin &gt;&gt; a &gt;&gt; b;\nsum += a;\nM = max(M, b-a);\n}\ncout &lt;&lt; sum + M &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc352/#d-permutation-subsequence","title":"D - Permutation Subsequence","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a \\(1\\) \u5230 \\(N(1 \\le N \\le 2 \\times 10^5)\\) \u7684\u6392\u5217 \\(P = (P_1, P_2, \\cdots, P_N)\\)\uff0c\u540c\u65f6\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 \\(K(1 \\le K \\le N)\\)\uff0c\u5728 \u6392\u5217 \\(P\\) \u4e2d\u627e\u51fa\u4e00\u4e2a\u6700\u77ed\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u533a\u95f4\u4e2d\u5305\u542b \\(K\\) \u4e2a\u8fde\u7eed\u7684\u6574\u6570\u3002</p> \u89e3\u9898\u601d\u8def <p>\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u91c7\u7528\u7c7b\u4f3c\u6ed1\u52a8\u7a97\u53e3\u7684\u601d\u8def\uff0c\u4ece\u6570\u5b57 \\(1\\) \u5230 \\(K\\) \u5f00\u59cb\uff0c\u5c06\u6570\u5b57\u7684\u5750\u6807\u5b58\u5230 <code>set</code> \u4e2d\uff0c\u8ba1\u7b97\u65f6\u53d6\u51fa <code>set</code> \u4e2d\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, k, x;\ncin &gt;&gt; n &gt;&gt; k;\nvector&lt;int&gt; p(n+1);\nfor(int i = 1; i &lt;= n; i++)\n{\ncin &gt;&gt; x;\np[x] = i;\n}\nset&lt;int&gt; ps;\nfor(int i = 1; i &lt; k; i++)\nps.insert(p[i]);\nint ans = n;\nfor(int i = k; i &lt;= n; i++)\n{\nps.insert(p[i]);\nans = min(ans, *ps.rbegin() - *ps.begin());\nps.erase(p[i+1-k]);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc352/#e-clique-connect","title":"E - Clique Connect","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u6709 \\(N(2 \\le N \\le 2 \\times 10 ^ 5)\\) \u4e2a\u70b9\uff0c\u521d\u59cb\u65f6\uff0c\u56fe\u4e2d\u6ca1\u6709\u8fb9\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u4f60\u9700\u8981\u6267\u884c \\(M(1 \\le M \\le 2 \\times 10^5)\\) \u8f6e\u52a0\u8fb9\u70b9\u64cd\u4f5c\uff0c\u6bcf\u4e00\u8f6e\u64cd\u4f5c\u7ed9\u4f60\u4e24\u4e2a\u6574\u6570 \\(K_i\\) \u548c \\(C_i\\) \u4ee5\u53ca\u4e00\u4e2a\u70b9\u7684\u96c6\u5408 \\(S_i = \\{A_{i, 1}, A_{i, 2}, \\cdots, A_{i, K_i}\\}\\)\uff0c\u4f60\u9700\u8981\u7ed9\u96c6\u5408 \\(S_i\\) \u4e2d\u7684\u4efb\u610f\u4e24\u70b9\u90fd\u6dfb\u52a0\u4e00\u6761\u6743\u503c\u4e3a \\(C_i\\) \u7684\u8fb9\u3002</p> <p>\u5b8c\u6210 \\(M\\) \u8f6e\u52a0\u8fb9\u64cd\u4f5c\u4e4b\u540e\uff0c\u6c42\u51fa\u8fd9\u4e2a\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p> \u89e3\u9898\u601d\u8def <p>\u53c2\u8003\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\u7684\u601d\u8def\uff0c\u5c06 \\(M\\) \u8f6e\u64cd\u4f5c\u7684 \\(C_i\\) \u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e00\u8f6e\u52a0\u8fb9\u64cd\u4f5c\uff0c\u52a0\u8fb9\u524d\u5bf9\u96c6\u5408\u7b5b\u4e00\u904d\uff0c\u7559\u4e0b\u4e0d\u5728\u4e00\u4e2a\u8054\u901a\u5757\u7684\u70b9\uff0c\u5bf9\u8fd9\u4e9b\u70b9\u52a0\u8fb9\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\n\nint p[maxn];\n\nint find(int x)\n{return x == p[x] ? x : p[x] = find(p[x]);}\nbool same(int u, int v)\n{return find(u) == find(v);}\nvoid merge(int u, int v)\n{u = find(u), v = find(v), p[u] = v;}\n\nstruct EdgeSet {\nint k, c;\nvector&lt;int&gt; v;\nbool operator &lt; (const EdgeSet &amp;y) const\n{return c &lt; y.c;}\n};\n\nint main()\n{\nint n, m;\ncin &gt;&gt; n &gt;&gt; m;\nvector&lt;EdgeSet&gt; es(m);\nfor(int i = 0; i &lt; m; i++)\n{\ncin &gt;&gt; es[i].k &gt;&gt; es[i].c;\nes[i].v.resize(es[i].k);\nfor(auto &amp;&amp;u : es[i].v)\ncin &gt;&gt; u;\n}\nsort(es.begin(), es.end());\nfor(int i = 1; i &lt;= n; i++)\np[i] = i;\nint cnt = n;\nLL ans = 0;\nfor(int i = 0; i &lt; m &amp;&amp; cnt &gt; 1; i++)\n{\nvector&lt;int&gt; a;\nfor(auto u : es[i].v)\na.push_back(find(u));\nsort(a.begin(), a.end());\na.erase(unique(a.begin(), a.end()), a.end());\nint k = a.size();\ncnt -= k - 1;\nans += (LL)(k-1) * es[i].c;\nfor(int i = 1; i &lt; k; i++)\nmerge(a[0], a[i]);\n}\nif(cnt &gt; 1)\nans = -1;\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc352/#f-estimate-order","title":"F - Estimate Order","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a \\(1\\) \u5230 \\(N(2 \\le N \\le 16)\\) \u7684\u6392\u5217 \\(P = (P_1, P_2, \\cdots, P_N)\\) \uff0c\u4f46\u4f60\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6392\u5217\u662f\u4ec0\u4e48\u3002\u7ed9\u4f60 \\(M(0 \\le M \\le \\frac{N(N-1)}{2})\\) \u4e2a\u63d0\u793a\uff0c\u6bcf\u4e00\u4e2a\u63d0\u793a\u5305\u62ec\u4e09\u4e2a\u6570\u5b57 \\(a_i, b_i, c_i\\) \uff0c\u8868\u793a \\(P_{a_i} - P_{b_i} = c_i\\)\u3002</p> <p>\u95ee\uff1a\u6392\u5217\u4e2d\u54ea\u4e9b\u4f4d\u7f6e\u7684\u6570\u5b57\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff1f\u54ea\u4e9b\u4f4d\u7f6e\u662f\u4e0d\u786e\u5b9a\u7684\uff1f\u4e0d\u786e\u5b9a\u7684\u4f4d\u7f6e\u8f93\u51fa <code>-1</code> \u3002</p> \u89e3\u9898\u601d\u8def <p>\\(N\\) \u7684\u8303\u56f4\u53ea\u6709 \\(16\\)\uff0c\u641c\u7d22\u52a0\u4e0a\u4e00\u4e9b\u526a\u679d\u80af\u5b9a\u662f\u80fd\u5361\u8fc7\u53bb\u3002\u4f46\u662f\u6211\u4e00\u76f4\u5728\u601d\u8003\u5982\u4f55\u4f18\u96c5\u7684\u641c\u7d22\uff0c\u5bfc\u81f4\u6211\u60f3\u4e86\u5f88\u4e45\u5f88\u4e45\u3002\u3002\u3002\u6700\u540e\u7ec8\u4e8e\u60f3\u51fa\u4e86 \\(\\text{1ms}\\) \u7684\u89e3\u6cd5\u3002</p> <p>\u9996\u5148\u9700\u8981\u63a8\u51e0\u4e2a\u6027\u8d28\uff1a</p> <ul> <li> <p>\u6027\u8d28 1\uff1a\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u5f53\u6210\u70b9\uff0c\u6bcf\u5f53\u6709 \\(a_i, b_i, c_i\\)\uff0c\u5c31\u8fde\u4e00\u6761 \\((a_i, b_i, -c_i)\\) \u4ee5\u53ca \\((b_i, a_i, c_i)\\) \u7684\u8fb9 \u3002\u5219\u6700\u7ec8\u56fe\u4f1a\u88ab\u5206\u5272\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u3002</p> <p>\u8fd9\u4e2a\u6027\u8d28\u662f\u663e\u7136\u7684\u3002</p> </li> <li> <p>\u6027\u8d28 2: \u4efb\u610f\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\uff08\u5373\u67d0\u4e2a\u4f4d\u7f6e\uff09\u7684\u6570\u5b57\u786e\u5b9a\uff0c\u5219\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u5176\u4ed6\u7684\u70b9\uff08\u5373\u5176\u4ed6\u6709\u5173\u7684\u4f4d\u7f6e\uff09\u90fd\u786e\u5b9a\u3002</p> <p>\u8fd9\u4e2a\u6027\u8d28\u4e5f\u662f\u663e\u7136\u7684\u3002</p> </li> <li> <p>\u6027\u8d28 3: \u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u4efb\u610f\u4e24\u70b9\u5173\u4e8e\u5c0f\u4e8e\u53f7 \\(&lt;\\) \u662f\u4e00\u79cd\u504f\u5e8f\u5173\u7cfb\uff08\u901a\u4fd7\u6765\u8bb2\u5c31\u662f\u8fde\u901a\u5757\u4e2d\u968f\u4fbf\u4e24\u4e2a\u70b9\u8fdb\u884c\u6bd4\u8f83\u90fd\u6709\u5927\u5c0f\u5173\u7cfb\uff09\u3002</p> <p>\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6392\u5217\uff0c\u6240\u4ee5\u4efb\u610f\u4e24\u70b9\u7684\u6570\u5b57\u4e00\u5b9a\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6027\u8d28\u4e5f\u662f\u663e\u7136\u7684\u3002</p> </li> </ul> <p>\u6027\u8d28 3 \u6709\u4ec0\u4e48\u7528\u5462\uff1f\u8fd9\u4e2a\u6027\u8d28\u8868\u660e\uff0c\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u6570\u5b57\u662f\u6709\u56fa\u5b9a\u7684\u76f8\u5bf9\u5927\u5c0f\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u8fde\u901a\u5757\u4e2d\u7b2c\u4e8c\u5c0f\u7684\u6570\u5b57\u6bd4\u6700\u5c0f\u7684\u6570\u5b57\u5927 \\(3\\)\uff0c\u7b2c\u4e09\u5c0f\u7684\u6570\u5b57\u6bd4\u7b2c\u4e8c\u5c0f\u7684\u6570\u5b57\u5927 \\(2\\)\uff0c\u5219\u5f53\u6700\u5c0f\u7684\u6570\u5b57\u53d6 \\(1\\) \u65f6\uff0c\u6574\u4e2a\u8fde\u901a\u5757\u7684\u53d6\u503c\u5c31\u662f \\(\\{1, 4, 6\\}\\)\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u53ef\u80fd\u7684\u53d6\u503c\u5c31\u662f \\(\\{2, 5, 7\\}\\)\u3002</p> <p>\u4e3a\u4e86\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u9700\u8981\u5904\u7406\u51fa\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u504f\u5e8f\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c \\(\\text{Floyed}\\) \u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\u5904\u7406\u5b8c\u6210\u540e\u6211\u4eec\u5f97\u5230\u4e86\u6bcf\u4e2a\u8fde\u901a\u5757\u4e2d\u7c7b\u4f3c \\(\\{1, 4, 6\\}\\) \u8fd9\u6837\u7684\u96c6\u5408\uff0c\u7528\u4f4d\u8fd0\u7b97\u6765\u8868\u793a\uff0c\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u53d6\u503c\u53ea\u9700\u8981\u53f3\u79fb\u4e00\u4f4d\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u679a\u4e3e\u6bcf\u4e2a\u8fde\u901a\u5757\u53ef\u80fd\u7684\u53d6\u503c\u3002\u9996\u5148\u9700\u8981\u4f18\u5316\u679a\u4e3e\u7684\u987a\u5e8f\uff0c\u663e\u7136\uff0c\u5e94\u8be5\u4f18\u5148\u679a\u4e3e\u66f4\u5927\u7684\u8fde\u901a\u5757\u3002<code>dfs</code> \u679a\u4e3e\u7684\u5b9e\u73b0\u5c31\u662f\u5e38\u89c4\u7684\u4f4d\u8fd0\u7b97\uff0c\u5177\u4f53\u53c2\u8003\u4ee3\u7801\u3002</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u5927\u5c0f\u4e3a \\(1\\) \u7684\u8fde\u901a\u5757\uff08\u4e0b\u9762\u79f0\u4e4b\u4e3a\u5b64\u7acb\u70b9\uff09\uff0c\u5373\u6ca1\u6709\u4efb\u4f55\u63d0\u793a\u5173\u8054\u7684\u4f4d\u7f6e\u3002\u8fd9\u91cc\u4ecd\u7136\u6709\u4e00\u4e9b\u6027\u8d28\u3002</p> <ul> <li> <p>\u6027\u8d28 4\uff1a\u5982\u679c\u5b64\u7acb\u70b9\u7684\u4e2a\u6570\u5927\u4e8e \\(1\\) \u4e2a\uff0c\u5219\u6240\u6709\u7684\u5b64\u7acb\u70b9\u7684\u53d6\u503c\u90fd\u662f\u4e0d\u786e\u5b9a\u7684\u3002</p> <p>\u4e00\u4e2a\u4e0d\u592a\u4e25\u8c28\u7684\u8bc1\u660e\uff1a\u8bbe\u5f53\u524d\u6709 \\(x\\) \u4e2a\u5b64\u7acb\u70b9\uff0c\u5373\u4f7f\u6240\u6709\u975e\u5b64\u7acb\u70b9\u90fd\u53ea\u6709\u552f\u4e00\u7684\u53d6\u503c\uff0c\u4ecd\u7136\u5269\u4e0b \\(x\\) \u4e2a\u6570\u5b57\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u8fd9\u4e9b\u6570\u5b57\u6bcf\u4e00\u4e2a\u5b64\u7acb\u70b9\u90fd\u53ef\u4ee5\u53d6\u5f97\uff0c\u56e0\u6b64\u5f53 \\(x &gt; 1\\) \u65f6\uff0c\u8fd9\u4e9b\u5b64\u7acb\u70b9\u7684\u53d6\u503c\u4e5f\u4e0d\u552f\u4e00\u3002</p> </li> <li> <p>\u6027\u8d28 5\uff1a\u5982\u679c\u5b64\u7acb\u70b9\u7684\u4e2a\u6570\u53ea\u6709 \\(1\\) \u4e2a\uff0c\u5219\u8fd9\u4e2a\u5b64\u7acb\u70b9\u7684\u53d6\u503c\u6709\u53ef\u80fd\u662f\u552f\u4e00\u786e\u5b9a\u7684\u3002</p> <p>\u53c2\u8003\u6837\u4f8b 1 \u5373\u53ef\u3002</p> </li> </ul> <p>\u56e0\u6b64\u6211\u4eec\u5728\u679a\u4e3e\u7684\u65f6\u5019\uff0c\u8df3\u8fc7\u6240\u6709\u7684\u5b64\u7acb\u70b9\uff0c\u540c\u65f6\u7edf\u8ba1\u5b64\u7acb\u70b9\u7684\u6570\u91cf\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u5c06\u5176\u8bb0\u5f55\u5230\u6bcf\u4e2a\u70b9\u70b9\u53ef\u80fd\u7684\u53d6\u503c\u5f53\u4e2d\uff08\u7528 <code>set</code> \u5b58\u50a8\uff09\u3002</p> <p><code>dfs</code> \u7ed3\u675f\u540e\uff0c\u904d\u5386\u6240\u6709\u7684\u70b9\uff0c\u5982\u679c <code>set</code> \u4e2d\u53ea\u6709\u4e00\u4e2a\u503c\uff0c\u5219\u91cc\u9762\u7684\u503c\u5c31\u662f\u552f\u4e00\u786e\u5b9a\u7684\u503c\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a\u7531\u4e8e\u8df3\u8fc7\u4e86\u6240\u6709\u7684\u5b64\u7acb\u70b9\uff0c\u6240\u4ee5\u6700\u574f\u60c5\u51b5\u5e94\u8be5\u662f\u6ca1\u6709\u5b64\u7acb\u70b9\uff0c\u4e14\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u90fd\u4e3a \\(2\\) \u60c5\u5f62\uff0c\u6b64\u65f6\u76f8\u5f53\u4e8e\u4e24\u4e2a\u70b9\u7ed1\u4e00\u8d77\uff0c\u590d\u6742\u5ea6\u5c31\u662f \\((\\frac{N}{2})!\\) </p> <p>\u6700\u7ec8\u732e\u4e0a\u5b9e\u73b0\u8d77\u6765\u7b80\u5355\u7c97\u66b4\u4f46\u8fd0\u884c\u8d77\u6765\u4ec5\u9700 <code>1ms</code> \u7684\u4ee3\u7801\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;map&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\nconst int maxn = 20;\nint n, m;\nint b[maxn][maxn];\nvoid build()\n{\nfor (int k = 0; k &lt; n; k++)\nfor  (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; n; j++)\nif (b[i][k] &amp;&amp; b[k][j])\nb[i][j] = b[i][k] + b[k][j];\n}\n\nint p[maxn], col[maxn], ncol = 0;\nint find(int x)\n{\nreturn x == p[x] ? x : p[x] = find(p[x]);\n}\nbool same(int u, int v)\n{\nreturn find(u) == find(v);\n}\nvoid merge(int u, int v)\n{\nu = find(u), v = find(v), p[u] = v;\n}\n\nmap&lt;int, vector&lt;int&gt;&gt; group;\nstruct CG\n{\nvector&lt;int&gt; v;\nint bit, comb;\nCG(const vector&lt;int&gt; &amp;_v) : v(_v)\n{\nsort(v.begin(), v.end(), [](int i, int j) -&gt; bool {return b[i][j] &gt; 0;});\nbit = 1;\nfor(int i = 1, n = v.size(); i &lt; n; i++)\nbit |= 1 &lt;&lt; b[v[0]][v[i]];\ncomb = bit;\n}\nbool operator&lt;(const CG &amp;y) const\n{\nreturn v.size() &gt; y.v.size();\n}\n};\n\nvector&lt;CG&gt; cg;\nset&lt;int&gt; ans[maxn];\nint last = -1;\n\nvoid dfs(int cur, int can_used)\n{\nif(cur == (int)cg.size())\n{\nfor(auto &amp;c : cg)\n{\nint j = 0;\nfor(int i = 0; i &lt; n; i++)\nif(c.comb &gt;&gt; i &amp; 1)\n{\nint id = c.v[j++];\nans[id].insert(i+1);\n}\n}\nif(last &gt;= 0)\n{\nfor(int i = 0; i &lt; n; i++)\nif(can_used &gt;&gt; i &amp; 1)\nans[last].insert(i+1);\n}\nreturn;\n}\nfor(cg[cur].comb = cg[cur].bit; cg[cur].comb &lt; 1 &lt;&lt; n; cg[cur].comb &lt;&lt;= 1)\n{\nif((cg[cur].comb &amp; can_used) != cg[cur].comb)\ncontinue;\ndfs(cur+1, can_used ^ cg[cur].comb);\n}\n}\n\nint main()\n{\ncin &gt;&gt; n &gt;&gt; m;\nfor (int i = 0; i &lt; n; i++)\np[i] = i;\nfor (int i = 0; i &lt; m; i++)\n{\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nu--, v--;\nb[u][v] = -w;\nb[v][u] = w;\nmerge(u, v);\n}\nbuild();\nfor (int i = 0; i &lt; n; i++)\ngroup[find(i)].push_back(i);\nfor (auto &amp;[k, v] : group)\n{\nif(v.size() &gt; 1)\ncg.push_back(CG(v));\nelse if(last == -1)\nlast = k;\nelse\nlast = -2;\n}\nsort(cg.begin(), cg.end());\ndfs(0, (1 &lt;&lt; n) - 1);\nfor(int i = 0; i &lt; n; i++)\ncout &lt;&lt; (ans[i].size() == 1 ? *ans[i].begin() : -1) &lt;&lt;  ' ';\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc353/","title":"Abc353","text":"<p>\u6211\u7684\u8bc4\u4ef7\u662f\uff1aA-E \u975e\u5e38\u7b80\u5355\uff0c\\(F\\) \u6bd4 \\(G\\) \u96be</p>"},{"location":"algorithm/AtCoder/abc353/#a-buildings","title":"A - Buildings","text":"\u9898\u76ee\u5927\u610f <p>\u7ed9\u4f60 \\(N\\) \u4e2a\u6570\u5b57 \\(H = (H_1, H_2, \\cdots, H_N)\\)\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4 \\(H_1\\) \u5927\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u6570\uff0c\u8f93\u51fa <code>-1</code>\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, h1, hi;\ncin &gt;&gt; n &gt;&gt; h1;\nfor(int i = 2; i &lt;= n; i++)\n{\ncin &gt;&gt; hi;\nif(hi &gt; h1)\n{\ncout &lt;&lt; i &lt;&lt; endl;\nreturn 0;\n}\n}\ncout &lt;&lt; -1 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc353/#b-atcoder-amusement-park","title":"B - AtCoder Amusement Park","text":"\u9898\u76ee\u5927\u610f <p>\u6709\u4e00\u4e2a\u5a31\u4e50\u8bbe\u65bd\u6700\u591a\u80fd\u5bb9\u7eb3 \\(K\\) \u4e2a\u4eba\u540c\u65f6\u6e38\u73a9\u3002\u6709 \\(N\\) \u4e2a\u65c5\u884c\u56e2\u6b63\u5728\u6392\u961f\uff0c\u7b2c \\(i\\) \u4e2a\u65c5\u884c\u56e2\u6709 \\(A_i(A_i \\le K)\\) \u4e2a\u4eba\u3002\u4e00\u4e2a\u65c5\u884c\u56e2\u7684\u4eba\u8981\u4e48\u4e00\u8d77\u8fdb\u53bb\u6e38\u73a9\uff0c\u8981\u4e48\u90fd\u4e0d\u8fdb\u53bb\u6e38\u73a9\u3002\\(N\\) \u4e2a\u65c5\u884c\u56e2\u6b63\u5728\u6392\u961f\uff0c\u8f6e\u5230\u4e00\u4e2a\u65c5\u884c\u56e2\u7684\u65f6\u5019\uff0c\u5982\u679c\u8bbe\u65bd\u5185\u8fd8\u6709\u8db3\u591f\u7684\u7a7a\u4f4d\uff0c\u5219\u8fd9\u4e2a\u65c5\u884c\u56e2\u4e00\u8d77\u8fdb\u53bb\u6e38\u73a9\uff0c\u5426\u5219\u4ed6\u4eec\u4f1a\u7b49\u5230\u4e0b\u4e00\u8f6e\u3002\u95ee\uff1a\u6700\u5c11\u9700\u8981\u591a\u5c11\u8f6e\u624d\u80fd\u8ba9\u6240\u6709\u65c5\u884c\u56e2\u90fd\u6e38\u73a9\uff1f</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\nint n, h1, hi;\ncin &gt;&gt; n &gt;&gt; h1;\nfor(int i = 2; i &lt;= n; i++)\n{\ncin &gt;&gt; hi;\nif(hi &gt; h1)\n{\ncout &lt;&lt; i &lt;&lt; endl;\nreturn 0;\n}\n}\ncout &lt;&lt; -1 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc353/#c-sigma-problem","title":"C - Sigma Problem","text":"\u9898\u76ee\u5927\u610f <p>\u5bf9\u4e8e\u6b63\u6574\u6570 \\(x\\) \u548c \\(y\\)\uff0c\u5b9a\u4e49 \\(f(x, y)\\) \u4e3a \\(x+y\\) \u9664\u4ee5 \\(10^8\\) \u7684\u4f59\u6570\u3002</p> <p>\u7ed9\u4f60 \\(N(2 \\le N \\le 3 \\times 10^5)\\) \u4e2a\u6b63\u6574\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u662f \\(A_i(1 \\le A_i &lt; 10^8)\\)\uff0c\u6c42\u51fa \\(\\sum\\limits_{i=1}^{N-1}\\sum\\limits_{j=i+1}^{N} f(A_i, A_j)\\)</p> \u89e3\u9898\u601d\u8def <p>\u5c06\u6570\u5b57\u6392\u5e8f\uff0c\u7136\u540e\u679a\u4e3e \\(A_j\\)\uff0c\u5728\u679a\u4e3e\u65f6\u56e0\u4e3a\u6570\u7ec4\u5df2\u7ecf\u6709\u5e8f\uff0c\u4e14\u6240\u6709\u6570\u5b57\u90fd\u5c0f\u4e8e \\(10^8\\)\uff0c\u53ef\u4ee5\u4e8c\u5206\u51fa\u6700\u540e\u4e00\u4e2a\u76f8\u52a0\u540e\u4e0d\u4f1a\u6ea2\u51fa\u7684\u4f4d\u7f6e \\(mid\\)\uff0c\u5219 \\([1, mid]\\) \u4ee5\u53ca \\([mid+1, j-1]\\) \u90fd\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u6765\u5feb\u901f\u8ba1\u7b97\u51fa\u7b54\u6848\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\ntypedef long long LL;\nconst int mod = 1E8;\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\nvector&lt;int&gt; a(n+1);\nfor(int i = 1; i &lt;= n; i++)\ncin &gt;&gt; a[i];\nsort(a.begin(), a.end());\nvector&lt;LL&gt; s(n+1);\nfor(int i = 1; i &lt;= n; i++)\ns[i] = s[i-1] + a[i];\n\nauto get_sum = [&amp;](int l, int r) -&gt; LL {return s[r] - s[l-1];};\n\nLL ans = 0;\nfor(int i = 2; i &lt;= n; i++)\n{\nint mid = lower_bound(a.begin()+1, a.begin() + i, mod-a[i]) - a.begin();\nif(mid)\nans += get_sum(1, mid-1) + (LL)(mid-1) * a[i];\nif(mid &lt; i)\nans += get_sum(mid, i-1) + (LL)(i-mid) * (a[i] - mod);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc353/#d-another-sigma-problem","title":"D - Another Sigma Problem","text":"\u9898\u76ee\u5927\u610f <p>\u5bf9\u4e8e\u6b63\u6574\u6570 \\(x\\) \u548c \\(y\\)\uff0c\u5b9a\u4e49 \\(f(x, y)\\)\uff1a</p> <ul> <li>\u8bbe \\(X\\) \u8868\u793a\u6b63\u6574\u6570 \\(x\\) \u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\\(Y\\) \u8868\u793a\u6b63\u6574\u6570 \\(y\\) \u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u5219 \\(X\\) \u548c \\(Y\\) \u5b57\u7b26\u4e32\u62fc\u63a5\u7684\u7ed3\u679c\u5bf9\u5e94\u7684\u6b63\u6574\u6570\u5c31\u662f \\(f(x, y)\\) \u7684\u7ed3\u679c\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\\(f(3, 14) = 314\\)\uff0c\\(f(100, 1) = 1001\\)</p> <p>\u7ed9\u4f60 \\(N(2 \\le N \\le 2 \\times 10^5)\\) \u4e2a\u6b63\u6574\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u662f \\(A_i(1 \\le A_i &lt; 10^9)\\)\uff0c\u6c42\u51fa \\(\\sum\\limits_{i=1}^{N-1}\\sum\\limits_{j=i+1}^{N} f(A_i, A_j)\\)\uff0c\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> \u89e3\u9898\u601d\u8def <p>\u663e\u7136 \\(f(x, y)\\) \u662f\u6ca1\u6709\u4ea4\u6362\u5f8b\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u6392\u5e8f\u3002</p> <p>\u8bbe \\(|Y|\\) \u8868\u793a\u6570\u5b57 \\(y\\) \u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5219\u6709 $f(x, y) = 10 ^ {|Y|} \\times x + y $\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e \\(j\\)\uff0c\u5219\u5bf9\u4e8e \\(A_j = y\\)\uff0c\u8d21\u732e\u5c31\u662f \\(\\sum\\limits_{i=1}^{j-1} f(A_i, A_j) = \\sum\\limits_{i=1}^{j-1}(10 ^ {|A_j|} \\times A_i + A_j) = 10 ^ {|A_j|} \\sum\\limits_{i=1}^{j-1}A_i + (j-1) \\times A_j\\) \u3002</p> <p>\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u4e0a\u5f0f\u53ef\u5728 \\(O(1)\\) \u65f6\u95f4\u5185\u8ba1\u7b97\u3002 </p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\ntypedef long long LL;\nconst int mod = 998244353;\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\nvector&lt;int&gt; a(n+1);\nfor(int i = 1; i &lt;= n; i++)\ncin &gt;&gt; a[i];\nvector&lt;LL&gt; s(n+1);\nfor(int i = 1; i &lt;= n; i++)\ns[i] = (s[i-1] + a[i]) % mod;\n\nauto get_sum = [&amp;](int l, int r) -&gt; LL {return (s[r] - s[l-1] + mod) % mod;};\n\nauto cal_len = [](int x) -&gt; int {\nint len = 0;\nwhile(x)\n{\nlen++;\nx /= 10;\n}\nreturn len;\n};\n\nvector&lt;int&gt; p{1};\nfor(int i = 1; i &lt;= 10; i++)\np.emplace_back(p[i-1] * 10 % mod);\nLL ans = 0;\nfor(int j = 2; j &lt;= n; j++)\n{\nint k = cal_len(a[j]);\nans += get_sum(1, j-1) * p[k] % mod + (LL)(j-1) * a[j] % mod;\nans %= mod;\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc353/#e-yet-another-sigma-problem","title":"E - Yet Another Sigma Problem","text":"\u9898\u76ee\u5927\u610f <p>\u5bf9\u4e8e\u5b57\u7b26\u4e32 \\(x\\) \u548c \\(y\\)\uff0c\u5b9a\u4e49 \\(f(x, y)\\) \u4e3a \\(x\\) \u548c \\(y\\) \u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\u3002</p> <p>\u7ed9\u4f60 \\(N(2 \\le N \\le 2 \\times 10^5)\\) \u4e2a\u5b57\u7b26\u4e32\uff0c\u7b2c \\(i\\) \u4e2a\u5b57\u7b26\u4e32\u662f \\(S_i(\\sum\\limits_{i=1}^N|S_i| \\le 3 \\times 10^5)\\)\uff0c\u6c42\u51fa \\(\\sum\\limits_{i=1}^{N-1}\\sum\\limits_{j=i+1}^{N} f(S_i, S_j)\\)</p> \u89e3\u9898\u601d\u8def <p>\u8003\u8651\u5982\u4f55\u8ba1\u7b97 \\(f(S_i, S_j)\\)\uff0c\u66b4\u529b\u7684\u7b97\u6cd5\u65e0\u975e\u5c31\u662f\u4e00\u4e2a\u4e0b\u6807\u5f00\u59cb\u679a\u4e3e\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u7b49\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6709\u4e00\u4e2a\u5b57\u7b26\u76f8\u7b49\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u4f1a \\(+1\\)\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u6309\u4ee5\u6b64\u5c06\u6240\u6709\u5b57\u7b26\u4e32\u63d2\u5165\u4e00\u68f5 <code>Trie</code> \u6811\uff0c\u63d2\u5165\u5b57\u7b26\u4e32\u4f1a\u8ba9\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u7684\u6743\u503c\u90fd \\(+1\\)\uff0c\u5219\u67e5\u8be2\u76f8\u5f53\u4e8e\u67e5\u8be2\u5b57\u7b26\u4e32\u5bf9\u5e94\u8def\u5f84\u7684\u6743\u503c\u4e4b\u548c\u3002</p> <p>\u5b9e\u9645\u5199\u6cd5\u66f4\u7b80\u5355\uff0c\u53ea\u9700\u8981\u7ba1\u63d2\u5165\uff0c\u5728\u63d2\u5165\u65f6\u987a\u4fbf\u628a\u7b54\u6848\u4e5f\u67e5\u8be2\u51fa\u6765\u5c31\u597d\u4e86\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\ntypedef long long LL;\n\nconst int maxn = 3E5 + 10;\n\nclass Trie\n{\npublic:\nauto insert(const string &amp;s) -&gt; int {\nint ans = 0, p = 1;\nfor(auto ch : s)\n{\nint id = ch - 'a';\nif(!next[p][id])\nnext[p][id] = idx++;\np = next[p][id];\nans += cnt[p]++;\n}\nreturn ans;\n}\nprivate:\nint next[maxn][26], cnt[maxn], idx = 2;\n}t;\n\nint main()\n{\nint n;\ncin &gt;&gt; n;\nLL ans = 0;\nstring s;\nwhile(n--)\n{\ncin &gt;&gt; s;\nans += t.insert(s);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc353/#f-tile-distance","title":"F - Tile Distance","text":"\u9898\u76ee\u5927\u610f <p>\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c\u6709\u4e24\u79cd\u7816\u5757\uff0c\u4e00\u79cd\u662f \\(1 \\times 1\\) \u7684\u5c0f\u7816\u5757\uff0c\u53e6\u4e00\u79cd\u662f \\(K \\times K\\) \u7684\u5927\u7816\u5757\u3002\u5bf9\u4e8e\u67d0\u4e2a\u5de6\u4e0b\u89d2\u5750\u6807 \\((i, j)\\)\uff0c\u5982\u679c \\(\\lfloor\\frac{i}{K}\\rfloor + \\lfloor\\frac{j}{K}\\rfloor\\) \u662f\u5076\u6570\uff0c\u5219\u4ee5 \\((i, j)\\) \u4f5c\u4e3a\u5de6\u4e0b\u89d2\u7684 \\(1 \\times 1\\) \u8303\u56f4\u662f\u5c0f\u7816\u5757\uff0c\u5426\u5219\u4ee5 \\((i, j)\\) \u4f5c\u4e3a\u5de6\u4e0b\u89d2\u7684 \\(K \\times K\\)\u200b \u8303\u56f4\u662f\u5927\u7816\u5757\u3002</p> <p>\u7816\u5757\u4e0e\u7816\u5757\u4e4b\u524d\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002</p> <p>\u4f8b\u5982\u4e0b\u56fe\u662f \\(K=3\\) \u7684\u60c5\u51b5\u4e0b\u7684\u4f8b\u5b50\uff1a</p> <p></p> <p>\u5728\u8fd9\u4e2a\u5e73\u9762\u4e0a\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u79fb\u52a8\uff0c\u6bcf\u4e00\u6b21\u79fb\u52a8\u4ece\u4e0a\u4e0b\u5de6\u53f3\u9009\u62e9\u4e00\u4e2a\u65b9\u5411\uff0c\u79fb\u52a8 \\(1\\) \u5355\u4f4d\u7684\u8ddd\u79bb\u3002\u5728\u5927\u7816\u5757\u5185\u90e8\u79fb\u52a8\u65e0\u9700\u82b1\u8d39\u91d1\u94b1\u3002\u5f53\u4f60\u4ece\u4e00\u4e2a\u5c0f\u7816\u5757\u79fb\u52a8\u5230\u76f8\u90bb\u7684\u5927\u7816\u5757\uff0c\u6216\u8005\u4ece\u5927\u7816\u5757\u79fb\u52a8\u5230\u76f8\u90bb\u7684\u5c0f\u7816\u5757\u65f6\uff0c\u9700\u8981\u82b1\u8d39 \\(1\\) \u5143\u3002</p> <p>\u73b0\u5728\uff0c\u4f60\u7684\u8d77\u70b9\u662f \\((S_x+0.5, S_Y+0.5)\\)\uff0c\u7ec8\u70b9\u662f \\((T_x+0.5, T_Y+0.5)\\)\uff0c\u95ee\uff1a\u6700\u5c11\u82b1\u8d39\u591a\u5c11\u5143\u624d\u80fd\u5230\u8fbe\uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a</p> <ul> <li>\u6240\u6709\u7684\u8f93\u5165\u90fd\u662f\u6574\u6570\u3002</li> <li>\\(0 \\le S_x, S_Y, T_x, T_Y \\le 2 \\times 10^{16}\\)</li> </ul> \u89e3\u9898\u601d\u8def <p>\u53ef\u4ee5\u53d1\u73b0 \\(k=1\\)\u200b \u65f6\u66fc\u54c8\u987f\u8ddd\u79bb\u5c31\u662f\u7b54\u6848\u3002</p> <p>\u5f53 \\(k &gt; 3\\) \u65f6\uff0c\u53ef\u4ee5\u53d1\u73b0\u659c\u7740\u8d70\u5230\u4e00\u4e2a\u5927\u683c\u5b50\u53ea\u9700\u8981\u82b1\u8d39 \\(2\\)\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u800c\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7528 \\(4\\) \u7684\u82b1\u8d39\u8d70\u5230\u4e00\u4e2a\u76f4\u7ebf\u76f8\u90bb\u7684\u683c\u5b50\uff0c\u56e0\u6b64\u6bd4\u8f83\u597d\u7684\u8d70\u6cd5\u5c31\u662f\u4f18\u5148\u8d70\u659c\u7684\u5927\u683c\u5b50\uff0c\u7136\u540e\u518d\u8d70\u76f4\u7ebf\u7684\u5c0f\u683c\u5b50\u3002</p> <p></p> <p>\u4f46\u662f\u6709\u4e00\u4e2a\u7279\u4f8b\u662f \\(k = 2\\) \u65f6\uff0c\u6b64\u65f6\u8d70\u76f4\u7ebf\u4e5f\u662f \\(2\\) \u82b1\u8d39\u3002</p> <p>\u6240\u4ee5\u5173\u952e\u5c31\u662f\u679a\u4e3e\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u5927\u683c\u5b50\uff0c\u6309\u7167\u5927\u683c\u5b50\u7684\u8ba1\u7b97\u65b9\u5f0f\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++"},{"location":"algorithm/AtCoder/abc353/#g-merchant-takahashi","title":"G - Merchant Takahashi","text":"\u9898\u76ee\u5927\u610f <p>\u6709 \\(N(1 \\le N \\le 2 \\times 10^5)\\) \u4e2a \u57ce\u9547\uff0c\u4ece\u57ce\u9547 \\(i\\) \u79fb\u52a8\u5230\u57ce\u9547 \\(j\\) \u9700\u8981\u82b1\u8d39 \\(C \\times |i-j|\\) \u5143\uff0c\u4f60\u662f\u4e00\u4e2a\u5546\u4eba\uff0c\u521d\u59cb\u7684\u65f6\u5019\u5728\u57ce\u9547 \\(1\\)\u3002\u63a5\u4e0b\u91cc\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6709 \\(M(1 \\le M \\le 2 \\times 10^5)\\) \u4e2a\u96c6\u4f1a\uff0c\u7b2c \\(i\\) \u4e2a\u96c6\u4f1a\u5728\u57ce\u9547 \\(T_i\\) \u4e3e\u884c\uff0c\u4f60\u53ef\u4ee5\u51b3\u5b9a\u53c2\u52a0\u8fd9\u573a\u96c6\u4f1a\uff0c\u4f60\u5c06\u652f\u4ed8\u5728\u57ce\u9547\u95f4\u79fb\u52a8\u7684\u8d39\u7528\uff0c\u540c\u65f6\u6536\u83b7 \\(P_i\\) \u5143\u3002\u8fd9\u4e9b\u96c6\u4f1a\u662f\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u8fdb\u884c\u7684\uff0c\u4e14\u4efb\u610f\u4e24\u573a\u96c6\u4f1a\u7684\u65f6\u95f4\u90fd\u4e0d\u91cd\u5408\uff0c\u57ce\u9547\u95f4\u79fb\u52a8\u6240\u8017\u8d39\u7684\u65f6\u95f4\u5ffd\u7565\u4e0d\u8ba1\u3002</p> <p>\u521d\u59cb\u65f6\u4f60\u6709 \\(0\\) \u5143\uff0c\u5728\u4efb\u610f\u65f6\u523b\uff0c\u4f60\u7684\u73b0\u6709\u8d44\u91d1\u53ef\u4ee5\u4e3a\u8d1f\uff0c\u95ee\uff1a\u5728 \\(M\\) \u6b21\u96c6\u4f1a\u7ed3\u675f\u4e4b\u540e\uff0c\u4f60\u6700\u591a\u80fd\u62e5\u6709\u591a\u5c11\u94b1\uff1f</p> \u89e3\u9898\u601d\u8def <p>\u6bcf\u6b21\u96c6\u4f1a\u53ea\u6709\u53bb\u6216\u8005\u4e0d\u53bb\u4e24\u79cd\u51b3\u7b56\uff0c\u5982\u679c\u6309\u7167\u7ebf\u6027 \\(dp\\) \u7684\u65b9\u5f0f\u8003\u8651\uff0c\u65e0\u6cd5\u786e\u5b9a\u4e0a\u4e00\u6b21\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64 \\(dp\\) \u7684\u72b6\u6001\u9700\u8981\u8003\u8651\u5546\u4eba\u7684\u4f4d\u7f6e\u3002</p> <p>\u5b9a\u4e49 \\(dp[i][j]\\) \u8868\u793a\u524d \\(i\\) \u573a\u96c6\u4f1a\u540e\u5546\u4eba\u7684\u4f4d\u7f6e\u5728\u57ce\u9547 \\(j\\) \u7684\u6700\u4f73\u7b54\u6848\uff0c\u663e\u7136\u5982\u679c\u4e0d\u53c2\u52a0\u7b2c \\(i\\) \u573a\u96c6\u4f1a\uff0c \\(dp[i][j]\\) \u7684\u72b6\u6001\u76f4\u63a5\u7ee7\u627f \\(dp[i-1][j]\\)\uff0c\u800c\u5982\u679c\u53c2\u52a0\uff0c\u4e5f\u4ec5\u4ec5\u4f1a\u5f71\u54cd\u5230 \\(dp[i][T_i]\\) \u7684\u503c\uff0c\u5176\u4ed6\u7684\u503c\u4ecd\u7136\u7ee7\u627f\u3002\u56e0\u6b64\u53ef\u4f18\u5316\u6210\u4e00\u7ef4\u7684 \\(dp[j]\\)\u3002</p> <p>\u5bf9\u4e8e\u7b2c \\(i\\) \u573a\u96c6\u4f1a\uff0c\u4ee4 \\(j = T_i\\) \uff0c\u5982\u679c\u53c2\u52a0\uff0c\u5219\u9700\u8981\u679a\u4e3e\u4e0a\u4e00\u6b21\u7684\u4f4d\u7f6e \\(k\\)\uff0c\u8f6c\u79fb\u5f0f\u4e3a\uff1a $$ dp[j] = \\max_{k=1}^N(dp[k] + C \\times |j-k| + P_i) $$ \u62c6\u5f00\u7edd\u5bf9\u503c\u53ef\u5f97\uff1a $$ \\begin{aligned} dp[j]   &amp; = \\max(\\max_{k=1}^j(dp[k] + C \\times (j-k) + P_i), \\max_{k=j}^N(dp[k] + C \\times (k-j) + P_i)) \\         &amp; = \\max{(\\max_{k=1}^j(dp[k] - C \\times k) + C \\times j), (\\max_{k=j}^N(dp[k] + C \\times k) - C \\times j)} + P_i \\end{aligned} $$ \u5173\u952e\u5c31\u662f\u5982\u4f55\u7b97\u51fa \\(\\max\\limits_{k=1}^j(dp[k] - C \\times k)\\) \u548c \\(\\max\\limits_{k=j}^N(dp[k] + C \\times k)\\)\uff0c\u53ea\u9700\u8981\u628a \\(dp[k] - C \\times k\\) \u548c \\(dp[k] + C \\times k\\) \u90fd\u5b58\u5230\u7ebf\u6bb5\u6811\u91cc\u5373\u53ef\uff08\u6240\u6709\u8282\u70b9\u90fd\u5b58\u4e24\u79cd\u503c\uff09\u3002</p> <p>\u8ba1\u7b97\u51fa \\(dp[j]\\) \u4e4b\u540e\uff0c\u8ba1\u7b97\u51fa\u65b0\u7684 \\(dp[j]-C \\times j\\) \u548c  \\(dp[j] + C \\times j\\)\uff0c\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002</p> \u53c2\u8003\u4ee3\u7801 C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst LL pinf = -1E15;\nclass SegmentTree\n{\npublic:\nSegmentTree(int n, LL C) : C(C), add(4*n), sub(4*n) {\nbuild(1, 1, n);\nupdate(1, 1, n, 1, 0);\n}\nvoid build(int p, int beg, int end)\n{\nif(beg == end)\n{\nadd[p] = sub[p] = pinf;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nbuild(lch, beg, mid);\nbuild(rch, mid+1, end);\npush_up(p);\n}\nLL get_add(int p, int beg, int end, int l, int r)\n{\nif(end &lt; l || beg &gt; r)\nreturn pinf;\nif(beg &gt;= l &amp;&amp; end &lt;= r)\nreturn add[p];\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn max(get_add(lch, beg, mid, l, r), get_add(rch, mid+1, end, l, r));\n}\nLL get_sub(int p, int beg, int end, int l, int r)\n{\nif(end &lt; l || beg &gt; r)\nreturn pinf;\nif(beg &gt;= l &amp;&amp; end &lt;= r)\nreturn sub[p];\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\nreturn max(get_sub(lch, beg, mid, l, r), get_sub(rch, mid+1, end, l, r));\n}\nvoid update(int p, int beg, int end, int pos, LL k)\n{\nif(beg == end)\n{\nadd[p] = k + C * beg;\nsub[p] = k - C * beg;\nreturn;\n}\nint mid = (beg + end) / 2;\nint lch = p * 2, rch = p * 2 + 1;\npos &lt;= mid ? update(lch, beg, mid, pos, k) : update(rch, mid+1, end, pos, k);\npush_up(p);\n}\nprivate:\nLL C;\nvector&lt;LL&gt; add, sub;\nvoid push_up(int p)\n{\nint lch = p * 2, rch = p * 2 + 1;\nadd[p] = max(add[lch], add[rch]);\nsub[p] = max(sub[lch], sub[rch]);\n}\n};\n\nint main()\n{\nios::sync_with_stdio(0);\ncin.tie(0);\n\nint N;\nLL C;\ncin &gt;&gt; N &gt;&gt; C;\nvector&lt;LL&gt; now(N+1, pinf);\nnow[1] = 0;\nSegmentTree t(N, C);\nint M, T;\nLL P;\ncin &gt;&gt; M;\nwhile(M--)\n{\ncin &gt;&gt; T &gt;&gt; P;\nLL val = max(t.get_add(1, 1, N, 1, T) - C * T, t.get_sub(1, 1, N, T, N) + C * T) + P;\nif(val &gt; now[T])\n{\nnow[T] = val;\nt.update(1, 1, N, T, now[T]);\n}\n}\ncout &lt;&lt; *max_element(now.begin(), now.end()) &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"archive/crypto/","title":"\u5bc6\u7801\u5b66\u671f\u672b\u590d\u4e60","text":""},{"location":"archive/crypto/#1","title":"\u7b2c \\(1\\) \u7ae0 \u5bc6\u7801\u5b66\u6982\u8bba","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u274e\u274e\u2705\u274e\u2705</p> <p>06-10   \u2705\u2705\u2705\u274e\u2705</p> <p>01-07   AABCDDC</p> <ul> <li>\u4fe1\u606f\u5b89\u5168\u53d1\u5c55\u53f2\u65e9\u4e8e\u5bc6\u7801\u5b66\u53d1\u5c55\u53f2\u3002</li> <li>\u300a\u5bc6\u7801\u6cd5\u300b\u4e8e 2019 \u5e74 10 \u6708 26 \u65e5 \u4e0b\u5348\u8868\u51b3\u901a\u8fc7\uff0c\u4e8e \uff082020 \u5e74 1 \u6708 1 \u65e5\uff09\u8d77\u6b63\u5f0f\u65bd\u884c\u3002</li> </ul>"},{"location":"archive/crypto/#_1","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\u673a\u5bc6\u6027 \u5b8c\u6574\u6027 \u8ba4\u8bc1\u6027  \u4e0d\u53ef\u5426\u8ba4\u6027</li> <li>\u673a\u5bc6\u6027 \u5b8c\u6574\u6027 \u53ef\u7528\u6027</li> <li>\u4e2d\u65ad \u622a\u53d6 \u7be1\u6539 \u4f2a\u9020 \u88ab\u52a8\u653b\u51fb \u4e3b\u52a8\u653b\u51fb</li> <li>\u300a\u4fdd\u5bc6\u7cfb\u7edf\u7684\u901a\u4fe1\u7406\u8bba\u300b</li> <li>\u4f20\u7edf\u5bc6\u7801\u9636\u6bb5 \u73b0\u4ee3\u5bc6\u7801\u9636\u6bb5\u3002</li> <li>\u300a\u5bc6\u7801\u5b66\u7684\u65b0\u65b9\u5411\u300b</li> <li> <p>\u5bc6\u7801\u5de5\u4f5c\u6cd5\u89c4</p> </li> <li> <p>\u4fe1\u606f\u5b89\u5168\u4e09\u8981\u7d20\uff1a\u673a\u5bc6\u6027\u3001\u5b8c\u6574\u6027\u3001\u53ef\u7528\u6027\u3002</p> </li> <li>\u653b\u51fb\u6709 \\(5\\) \u79cd\u5f62\u5f0f\uff1a\u4e2d\u65ad\u3001\u622a\u53d6\u3001\u7be1\u6539\u3001\u4f2a\u9020\u3001\u91cd\u653e\u3002</li> </ol>"},{"location":"archive/crypto/#_2","title":"\u672f\u8bed\u89e3\u91ca","text":"<ol> <li>\u300a\u5bc6\u7801\u6cd5\u300b\uff1a2019 \u5e74 10 \u6708 26 \u65e5\uff0c\u5341\u4e09\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u5341\u56db\u6b21\u4f1a\u8bae\u901a\u8fc7\u4e86\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u5bc6\u7801\u6cd5\u300b\uff0c\u7b80\u79f0\u300a\u5bc6\u7801\u6cd5\u300b\uff0c\u5176\u81ea 2020 \u5e74 1 \u6708 1 \u65e5\u8d77\u6b63\u5f0f\u65bd\u884c\u3002</li> </ol>"},{"location":"archive/crypto/#_3","title":"\u7b80\u7b54\u9898","text":"<ol> <li> <p>\u5bc6\u7801\u5b66\u7684\u4e3b\u8981\u529f\u80fd\u6709\u54ea\u4e9b\uff1f\u8fd9\u4e9b\u529f\u80fd\u7684\u5b9e\u73b0\u5206\u522b\u4e0e\u54ea\u79cd\u5bc6\u7801\u6280\u672f\u5bc6\u5207\u76f8\u5173\uff1f</p> <ol> <li>\u673a\u5bc6\u6027\uff1a\u673a\u5bc6\u6027\u662f\u6307\u4fdd\u8bc1\u4fe1\u606f\u4e0d\u6cc4\u9732\u7ed9\u975e\u6388\u6743\u7684\u7528\u6237\u6216\u5b9e\u4f53\uff0c\u786e\u4fdd\u5b58\u50a8\u7684\u4fe1\u606f\u548c\u88ab\u4f20\u8f93\u7684\u4fe1\u606f\u4ec5\u80fd\u88ab\u6388\u6743\u7684\u5404\u65b9\u5f97\u5230\u3002\u52a0\u5bc6\u7b97\u6cd5</li> <li>\u5b8c\u6574\u6027\u662f\u6307\u5728\u6570\u636e\u6574\u4e2a\u751f\u547d\u5468\u671f\u7ef4\u6301\u5176\u51c6\u786e\u548c\u4e00\u81f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4fe1\u606f\u672a\u7ecf\u6388\u6743\u4e0d\u80fd\u8fdb\u884c\u7be1\u6539\u7684\u7279\u5f81\uff0c\u6216\u8005\u8bf4\u4fe1\u606f\u5728\u751f\u6210\u3001\u4f20\u8f93\u3001\u5b58\u50a8\u548c\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u4eba\u4e3a\u6216\u975e\u4eba\u4e3a\u7684\u975e\u6388\u6743\u7be1\u6539\uff08\u63d2\u5165\u3001\u4fee\u6539\u3001\u5220\u9664\u3001\u91cd\u6392\u5e8f\u7b49\uff09\u5747\u53ef\u4ee5\u88ab\u68c0\u6d4b\u5230\u3002\u54c8\u5e0c\u51fd\u6570</li> <li>\u8ba4\u8bc1\u6027\u662f\u6307\u4e00\u4e2a\u6d88\u606f\u7684\u6765\u6e90\u6216\u6d88\u606f\u672c\u8eab\u88ab\u6b63\u786e\u5730\u6807\u8bc6\uff0c \u540c\u65f6\u786e\u4fdd\u8be5\u6807\u8bc6\u6ca1\u6709\u88ab\u4f2a\u9020\u3002\u6570\u5b57\u8bc1\u4e66</li> <li>\u4e0d\u53ef\u5426\u8ba4\u6027\uff1a\u4e0d\u53ef\u5426\u8ba4\u6027\u662f\u6307\u7528\u6237\u65e0\u6cd5\u5728\u4e8b\u540e\u5426\u8ba4\u66fe\u7ecf\u8fdb\u884c\u7684\u6d88\u606f\u7684\u751f\u6210\u3001\u7b7e\u53d1\u3001\u63a5\u6536\u7b49\u884c\u4e3a\u3002\u6570\u5b57\u7b7e\u540d</li> </ol> </li> <li> <p>\u7b80\u8ff0\u5bc6\u7801\u5b66\u548c\u4fe1\u606f\u5b89\u5168\u7684\u5173\u7cfb\u3002</p> <ul> <li>\u5bc6\u7801\u5b66\u662f\u4fe1\u606f\u5b89\u5168\u591a\u65b9\u9762\u6709\u5173\u7684\u6570\u5b66\u6280\u672f\u7684\u7814\u7a76\u3002</li> <li>\u5bc6\u7801\u5b66\u662f\u4fdd\u969c\u4fe1\u606f\u5b89\u5168\u7684\u6838\u5fc3\u6280\u672f\uff0c\u4f46\u4e0d\u662f\u63d0\u4f9b\u4fe1\u606f\u5b89\u5168\u7684\u552f\u4e00\u65b9\u5f0f\u3002</li> <li>\u4fe1\u606f\u5b89\u5168\u662f\u5bc6\u7801\u5b66\u7814\u7a76\u4e0e\u53d1\u5c55\u7684\u76ee\u7684\u3002</li> <li>\u4fe1\u606f\u5b89\u5168\u7684\u7406\u8bba\u57fa\u7840\u662f\u5bc6\u7801\u5b66\uff0c\u4fe1\u606f\u5b89\u5168\u7684\u95ee\u9898\u6839\u672c\u89e3\u51b3\u901a\u5e38\u4f9d\u9760\u5bc6\u7801\u5b66\u7406\u8bba\u3002</li> </ul> </li> <li> <p>\u5bc6\u7801\u5b66\u7684\u53d1\u5c55\u5927\u81f4\u5206\u4e3a\u51e0\u4e2a\u9636\u6bb5\uff1f\u5404\u9636\u6bb5\u7684\u7279\u70b9\u662f\u4ec0\u4e48\uff1f</p> <p>\u5bc6\u7801\u5b66\u7684\u53d1\u5c55\u5927\u81f4\u7ecf\u5386\u4e86\u4e24\u4e2a\u9636\u6bb5\uff1a\u4f20\u7edf\u5bc6\u7801\u9636\u6bb5\u548c\u73b0\u4ee3\u5bc6\u7801\u9636\u6bb5\u3002\u8fd9\u4e24\u4e2a\u9636\u6bb5\u7684\u5206\u754c\u6807\u5fd7\u662f 1949 \u5e74\u9999\u519c\u53d1\u8868\u4e86\u4ed6\u7684\u7ecf\u5178\u8bba\u6587\u300a\u4fdd\u5bc6\u7cfb\u7edf\u7684\u901a\u4fe1\u7406\u8bba\u300b\uff0c\u5728\u6b64\u4e4b\u524d\u79f0\u4e3a\u4f20\u7edf\u5bc6\u7801\u5b66\u9636\u6bb5\uff0c\u8fd9\u4e2a\u9636\u6bb5\u6301\u7eed\u7684\u65f6\u95f4\u957f\uff0c \u5927\u7ea6\u6709\u51e0\u5343\u5e74\u7684\u5386\u53f2\uff0c\u6b64\u65f6\u7684\u5bc6\u7801\u4f53\u5236\u4e3b\u8981\u4f9d\u9760\u624b\u5de5\u6216\u673a\u68b0\u64cd\u4f5c\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u91c7\u7528\u4ee3\u6362\u548c\u6362\u4f4d\u6280\u672f\uff0c\u901a\u4fe1\u624b\u6bb5\u662f\u4ee5\u4eba\u5de5\u6216\u7535\u62a5\u4e3a\u4e3b\uff0c\u662f\u4e00\u79cd\u827a\u672f\uff08\u5bcc\u6709\u521b\u9020\u6027\u7684\u65b9\u5f0f\u3001\u65b9\u6cd5\uff09\u3002\u81ea\u9999\u519c\u53d1\u8868\u4e86\u4ed6\u7684\u7ecf\u5178\u8bba\u6587\u81f3\u4eca\u79f0\u4e3a\u73b0\u4ee3\u5bc6\u7801\u5b66\u9636\u6bb5\uff0c\u6b64\u65f6\u7684\u5bc6\u7801\u4f53\u5236\u4e3b\u8981\u662f\u4f9d\u9760\u8ba1\u7b97\u673a\u6765\u5b9e\u73b0\uff0c\u6709\u575a\u5b9e\u7684\u6570\u5b66\u7406\u8bba\u57fa\u7840\uff0c\u901a\u4fe1\u624b\u6bb5\u662f\u65e0\u7ebf\u901a\u4fe1\u3001\u6709\u7ebf\u901a\u4fe1\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u7b49\uff0c\u5f62\u6210\u4e00\u95e8\u79d1\u5b66\uff0c\u662f\u5bc6\u7801\u5b66\u53d1\u5c55\u7684\u9ad8\u7ea7\u9636\u6bb5\u3002</p> </li> <li> <p>\u73b0\u4ee3\u5bc6\u7801\u9636\u6bb5\u5305\u62ec\u4e24\u6b21\u98de\u8dc3\u53ca\u4e24\u6b21\u91cc\u7a0b\u7891\u4e8b\u4ef6\uff0c\u8bf7\u6307\u51fa\u5206\u522b\u662f\u4ec0\u4e48\u4ee5\u53ca\u5404\u81ea\u7684\u610f\u4e49\u3002</p> <p>\u4e24\u6b21\u98de\u8dc3\uff1a</p> <ul> <li>1949 \u5e74\u9999\u519c\u53d1\u8868\u300a\u4fdd\u5bc6\u7cfb\u7edf\u7684\u901a\u4fe1\u7406\u8bba\u300b\uff0c\u5960\u5b9a\u4e86\u5bc6\u7801\u5b66\u7684\u7406\u8bba\u57fa\u7840\uff0c\u5bc6\u7801\u5b66\u6210\u4e3a\u4e00\u95e8\u79d1\u5b66\u3002</li> <li>1976\u5e74 Diffel \u548c Hellman \u53d1\u8868\u300a\u5bc6\u7801\u5b66\u7684\u65b0\u65b9\u5411\u300b\uff0c\u6807\u5fd7\u4e86\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u8bde\u751f\u3002</li> </ul> <p>\u4e24\u6b21\u91cc\u7a0b\u7891\u4e8b\u4ef6\uff1a</p> <ul> <li>1977\u5e74\uff0cDES\u7b97\u6cd5\u516c\u5f00\uff0c\u4f7f\u5f97\u5bc6\u7801\u6280\u672f\u5728\u5546\u4e1a\u7b49\u591a\u4e2a\u9886\u57df\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4fc3\u8fdb\u4e86\u5bc6\u7801\u5b66\u7684\u53d1\u5c55\u3002</li> <li>1978\u5e74\uff0cRSA\u7b97\u6cd5\u7684\u8bde\u751f\uff0c\u8868\u660e\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u5207\u5b9e\u53ef\u884c\u3002</li> </ul> </li> </ol>"},{"location":"archive/crypto/#2","title":"\u7b2c \\(2\\) \u7ae0 \u5bc6\u7801\u5b66\u57fa\u7840","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u2705\u274e\u274e\u274e\u2705</p> <p>06-10   \u2705\u274e\u2705\u2705\u2705</p> <p>01-06   DBCBDA</p> <ul> <li>\u4e00\u6b21\u4e00\u5bc6\u4f53\u5236\u662f\u65e0\u6761\u4ef6\u5b89\u5168\u7684\uff0c\u5373\u4f7f\u7a77\u4e3e\u653b\u51fb\u4e5f\u4e0d\u80fd\u7834\u8bd1\u3002</li> <li>\u6839\u636e\u9999\u519c\u7684\u7406\u8bba\uff0c\u5728\u52a0\u5bc6\u524d\u538b\u7f29\u660e\u6587\uff0c\u4f1a\u589e\u52a0\u653b\u51fb\u8005\u7834\u8bd1\u7684\u96be\u5ea6\u3002</li> </ul>"},{"location":"archive/crypto/#_4","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\u5bc6\u7801\u7f16\u7801 \u5bc6\u7801\u5206\u6790</li> <li>\u4fdd\u5bc6 \u8ba4\u8bc1</li> <li>\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236 \u975e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236</li> <li>\u5355\u94a5 \u5206\u7ec4 \u5e8f\u5217</li> <li>\u5168\u90e8\u7834\u8bd1 \u5168\u76d8\u63a8\u5012 \u5b9e\u4f8b\u63a8\u5bfc \u4fe1\u606f\u63a8\u5bfc\u3002</li> <li> <p>\u6d88\u606f\u8ba4\u8bc1\u7801 \u6570\u5b57\u7b7e\u540d\u3002</p> </li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6</p> </li> <li> <p>\u6307\u6570\u7ea7 \u4e9a\u6307\u6570\u7ea7</p> </li> <li> <p>\u5bc6\u7801\u7f16\u7801\u5b66\u4e3b\u8981\u5206\u4e3a\uff1a\u4fdd\u5bc6\u4f53\u5236\u3001\u8ba4\u8bc1\u4f53\u5236\u3002</p> </li> <li>\u7834\u89e3\u5bc6\u7801\u7b97\u6cd5\u6309\u7167\u5b89\u5168\u6027\u9012\u51cf\uff1a\u5168\u90e8\u7834\u8bd1\u3001\u5168\u76d8\u63a8\u5bfc\u3001\u5b9e\u4f8b\u63a8\u5bfc\u3001\u4fe1\u606f\u63a8\u5bfc\u3002</li> </ol>"},{"location":"archive/crypto/#_5","title":"\u672f\u8bed\u89e3\u91ca","text":"<ol> <li> <p>\u5bc6\u7801\u7f16\u7801\u5b66\uff1a\u7814\u7a76\u5982\u4f55\u5bf9\u4fe1\u606f\u7f16\u7801\u4ee5\u5b9e\u73b0\u4fe1\u606f\u548c\u901a\u4fe1\u5b89\u5168\u7684\u79d1\u5b66\u79f0\u4e3a\u5bc6\u7801\u7f16\u7801\u5b66\u3002</p> </li> <li> <p>\u5bc6\u7801\u5206\u6790\u5b66\uff1a\u7814\u7a76\u5982\u4f55\u7834\u8bd1\u6216\u653b\u51fb\u53d7\u4fdd\u62a4\u7684\u4fe1\u606f\u7684\u79d1\u5b66\u79f0\u4e3a\u5bc6\u7801\u5206\u6790\u5b66\u3002</p> </li> <li> <p>\u67ef\u514b\u970d\u592b\u539f\u5219\uff1a\u5bc6\u7801\u4f53\u5236\u7684\u5b89\u5168\u6027\u53d6\u51b3\u4e8e\u5bc6\u94a5\u7684\u5b89\u5168\u6027\uff0c\u52a0\u5bc6\u548c\u89e3\u5bc6\u7684\u8fc7\u7a0b\u548c\u7ec6\u8282\u662f\u516c\u5f00\u7684 \uff0c\u53ea\u8981\u5bc6\u94a5\u662f\u4fdd\u5bc6\u7684\uff0c\u653b\u51fb\u8005\u5c31\u65e0\u6cd5\u63a8\u5bfc\u51fa\u660e\u6587\u3002</p> </li> <li> <p>\u552f\u5bc6\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u9664\u4e86\u62e5\u6709\u622a\u83b7\u7684\u5bc6\u6587\u5916\uff0c\u6ca1\u6709\u5176\u4ed6\u53ef\u4ee5\u5229\u7528\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>\u5df2\u77e5\u660e\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u4e0d\u4ec5\u638c\u63e1\u4e86\u76f8\u5f53\u6570\u91cf\u7684\u5bc6\u6587\uff0c\u8fd8\u6709\u4e00\u4e9b\u4e00\u81f4\u7684\u660e-\u5bc6\u6587\u5bf9\u53ef\u4f9b\u5229\u7528\u3002</p> </li> <li> <p>\u9009\u62e9\u660e\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u901a\u8fc7\u67d0\u79cd\u624b\u6bb5\u6682\u65f6\u63a7\u5236\u4e86\u52a0\u5bc6\u673a\uff0c\u80fd\u9009\u62e9\u4efb\u4f55\u660e\u6587\u5e76\u5f97\u5230\u4f7f\u7528\u540c\u4e00\u672a\u77e5\u5bc6\u94a5\u52a0\u5bc6\u7684\u76f8\u5e94\u5bc6\u6587\u3002</p> </li> <li> <p>\u9009\u62e9\u5bc6\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u901a\u8fc7\u67d0\u79cd\u624b\u6bb5\u6682\u65f6\u63a7\u5236\u4e86\u89e3\u5bc6\u673a\uff0c\u80fd\u4ece\u4efb\u610f\u5bc6\u6587\u4e2d\u5f97\u5230\u5bf9\u5e94\u7684\u660e\u6587\u3002</p> </li> <li> <p>\u9009\u62e9\u6587\u672c\u653b\u51fb\uff1a\u9009\u62e9\u660e\u6587\u653b\u51fb\u548c\u9009\u62e9\u5bc6\u6587\u653b\u51fb\u7684\u7ed3\u5408\u3002</p> </li> </ol>"},{"location":"archive/crypto/#_6","title":"\u7b80\u7b54\u9898","text":"<ol> <li> <p>\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u4e0e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\u76f8\u6bd4\u6709\u54ea\u4e9b\u4f18\u70b9\u548c\u4e0d\u8db3?</p> <ul> <li> <p>\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u4f18\u70b9\uff1a</p> </li> <li> <p>\u5bc6\u94a5\u7684\u5206\u53d1\u76f8\u5bf9\u5bb9\u6613\u3002</p> </li> <li>\u5bc6\u94a5\u7ba1\u7406\u7b80\u5355\u3002</li> <li> <p>\u53ef\u4ee5\u6709\u6548\u5730\u5b9e\u73b0\u6570\u5b57\u7b7e\u540d\u3002</p> </li> <li> <p>\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u7f3a\u70b9\uff1a</p> </li> <li> <p>\u4e0e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\u76f8\u6bd4\uff0c\u8fd0\u7b97\u901f\u5ea6\u8f83\u6162\u3002</p> </li> <li>\u5728\u540c\u7b49\u5b89\u5168\u5f3a\u5ea6\u4e0b\uff0c\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u8981\u6c42\u7684\u5bc6\u94a5\u4f4d\u6570\u8981\u591a\u4e00\u4e9b\u3002</li> <li>\u5728\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u4e2d\uff0c\u5bc6\u6587\u7684\u957f\u5ea6\u5f80\u5f80\u4e0e\u660e\u6587\u7684\u957f\u5ea6\u4e0d\u76f8\u540c\u3002</li> </ul> </li> <li> <p>\u7b80\u8ff0\u5bc6\u7801\u7b97\u6cd5\u516c\u5f00\u7684\u610f\u4e49\u3002</p> <ol> <li> <p>\u6709\u5229\u4e8e\u589e\u5f3a\u5bc6\u7801\u7b97\u6cd5\u7684\u5b89\u5168\u6027\uff1b\u80fd\u591f\u63a5\u53d7\u5927\u4f17\u68c0\u9a8c\uff0c\u5c24\u5176\u4e13\u4e1a\u5bc6\u7801\u5206\u6790\u4eba\u5458\u7684\u68c0\u9a8c\u3002</p> </li> <li> <p>\u6709\u5229\u4e8e\u5bc6\u7801\u6280\u672f\u7684\u63a8\u5e7f\u5e94\u7528\u548c\u6807\u51c6\u5316\uff1b</p> <p>\u4f7f\u7528\u76f8\u540c\u5bc6\u7801\u7b97\u6cd5\u7684\u4eba\u6216\u96c6\u4f53\u624d\u80fd\u65b9\u4fbf\u6709\u6548\u5730\u5b9e\u73b0\u4fdd\u5bc6\u901a\u4fe1\uff0c\u8fd9\u662f\u5bc6\u7801\u7b97\u6cd5\u516c\u5f00\u7684\u5b9e\u9645\u9700\u6c42\u3002</p> </li> <li> <p>\u6709\u5229\u4e8e\u589e\u52a0\u7528\u6237\u4f7f\u7528\u7684\u4fe1\u5fc3\uff1b</p> <p>\u6d88\u9664\u7528\u6237\u7591\u8651(\u7b97\u6cd5\u7559\u6709\u540e\u95e8)\uff0c\u56e0\u4e3a\u5373\u4f7f\u5bc6\u7801\u7b97\u6cd5\u8bbe\u8ba1\u8005\u6ca1\u6709\u5bc6\u94a5\u4e5f\u4e0d\u80fd\u6709\u6548\u89e3\u5bc6\u3002</p> </li> <li> <p>\u6709\u5229\u4e8e\u5bc6\u7801\u6280\u672f\u7684\u53d1\u5c55\u3002</p> <p>\u516c\u5f00\u5bc6\u7801\u8bbe\u8ba1\u601d\u60f3\uff0c\u5bc6\u7801\u8bbe\u8ba1\u8005\u53ef\u53d6\u957f\u8865\u76f8\u4e92\uff0c\u8bbe\u8ba1\u66f4\u597d\u7684\u5bc6\u7801\u7b97\u6cd5\u3002</p> <p>\u6ce8\uff1aDES\u7b97\u6cd5\u7684\u516c\u5f00\u4f7f\u7528\u6210\u4e3a\u73b0\u4ee3\u5bc6\u7801\u53f2\u4e0a\u91cc\u7a0b\u7891\u4e8b\u4ef6\uff0c\u5176\u4e3b\u8981\u8d21\u732e\u5728\u4e8e\u5bc6\u7801\u7b97\u6cd5\u516c\u5f00\uff0c\u5bc6\u7801\u8fdb\u5165\u4e86\u66f4\u5e7f\u6cdb\u9886\u57df\u3002</p> </li> </ol> </li> <li> <p>\u8bbe\u5bc6\u6587\u7a7a\u95f4\u5171\u542b\u6709 \\(5\\) \u4e2a\u4fe1\u606f \\(m_i(1 \\le i \\le 5)\\) \uff0c\u5e76\u4e14 \\(p(m_1) = p(m_2) = p(m_3) = \\frac{1}{4}\\)\uff0c\\(p(m_4) = p(m_5) = \\frac{1}{8}\\)\uff0c\u6c42 \\(H(M)\\)\u3002</p> </li> </ol> <p>\u200b   2.25</p>"},{"location":"archive/crypto/#3","title":"\u7b2c \\(3\\) \u7ae0  \u4f20\u7edf\u5bc6\u7801\u4f53\u5236","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u274e\u2705\u274e\u274e\u274e</p> <p>06-09   \u274e\u2705\u274e\u2705</p> <p>1-5   BDCCB</p> <p>6-8   CAD</p>"},{"location":"archive/crypto/#_7","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\u7f6e\u6362 \u4ee3\u6362</li> <li>\u6362\u4f4d\u5bc6\u7801 \u5217\u7f6e\u6362\u5bc6\u7801 \u5468\u671f\u7f6e\u6362\u5bc6\u7801</li> <li>\u5355\u8868\u4ee3\u6362\u5bc6\u7801 \u591a\u8868\u4ee3\u6362\u5bc6\u7801</li> <li>\\(312\\)</li> <li>\u4e0a\u4e0b\u6587</li> <li>\u6027\u80fd\u597d \u6210\u672c\u4f4e</li> <li> <p>\\(E\\) \\(0.127\\)\u3002</p> </li> <li> <p>\u7f6e\u6362\u5bc6\u7801\uff1a\u5373\u6362\u4f4d\u5bc6\u7801\uff0c\u5e38\u89c1\u7684\u6709\u5217\u7f6e\u6362\u548c\u5468\u671f\u7f6e\u6362\u3002</p> </li> <li>\u5b9e\u7528\u7684\u5bc6\u7801\u8bbe\u5907\u5e94\u5fc5\u5907\u56db\u8981\u7d20\uff1a\u5b89\u5168\u3001\u6027\u80fd\u597d\u3001\u6210\u672c\u4f4e\u3001\u4f7f\u7528\u65b9\u4fbf\u3002</li> </ol>"},{"location":"archive/crypto/#_8","title":"\u672f\u8bed\u89e3\u91ca","text":"<ol> <li>\u7f6e\u6362\u5bc6\u7801\uff1a\u7f6e\u6362\u5bc6\u7801\u53c8\u79f0\u6362\u4f4d\u5bc6\u7801\uff0c\u5176\u52a0\u5bc6\u65b9\u6cd5\u662f\u6839\u636e\u4e00\u5b9a\u7684\u89c4\u5219\u91cd\u65b0\u6392\u5217\u660e\u6587\uff0c\u4ee5\u4fbf\u6253\u7834\u660e\u6587\u7684\u7ed3\u6784\u7279\u6027\u3002</li> <li>\u4ee3\u6362\u5bc6\u7801\uff1a\u4ee3\u6362\u5bc6\u7801\u662f\u5c06\u660e\u6587\u4e2d\u7684\u5b57\u7b26\u66ff\u6362\u4e3a\u5176\u4ed6\u5b57\u7b26\u7684\u5bc6\u7801\u4f53\u5236\u3002</li> <li>\u591a\u8868\u4ee3\u6362\u5bc6\u7801\uff1a\u591a\u8868\u4ee3\u6362\u5bc6\u7801\u662f\u4ee5\u4e00\u7cfb\u5217\u4ee3\u6362\u8868\u4f9d\u6b21\u5bf9\u660e\u6587\u6d88\u606f\u7684\u5b57\u6bcd\u5e8f\u5217\u8fdb\u884c\u4ee3\u6362\u7684\u52a0\u5bc6\u65b9\u6cd5\uff0c\u5373\u660e\u6587\u6d88\u606f\u4e2d\u51fa\u73b0\u7684\u540c\u4e00\u4e2a\u5b57\u6bcd\u5728\u52a0\u5bc6\u65f6\u4e0d\u662f\u5b8c\u5168\u88ab\u540c\u4e00\u56fa\u5b9a\u7684\u5b57\u6bcd\u4ee3\u6362\uff0c\u800c\u662f\u6839\u636e\u5176\u51fa\u73b0\u7684\u4f4d\u7f6e\u6b21\u5e8f\u7528\u4e0d\u540c\u7684\u5b57\u6bcd\u4ee3\u6362\u3002</li> </ol>"},{"location":"archive/crypto/#_9","title":"\u7b80\u7b54\u9898","text":"<ol> <li>\u6c42\u7f6e\u6362 \\(\\sigma = \\begin{pmatrix}      1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8\\\\      5 &amp; 1 &amp; 7 &amp; 2 &amp; 6 &amp; 8 &amp; 4 &amp; 3      \\end{pmatrix}\\)\u7684\u9006\u7f6e\u6362\u3002</li> </ol> <p>\u200b   \u89e3\uff1a\\(\\sigma^{-1} = \\begin{pmatrix} 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8\\\\ 2 &amp; 4 &amp; 8 &amp; 7 &amp; 1 &amp; 5 &amp; 3 &amp; 6 \\end{pmatrix}\\)</p> <ol> <li>\u7528 Vigenere \u5bc6\u7801\u52a0\u5bc6\u660e\u6587\"please keep this message in secret\"\uff0c\u5176\u4e2d\u4f7f\u7528\u7684\u5bc6\u94a5\u4e3a \"computer\"\uff0c\u8bd5\u6c42\u5176\u5bc6\u6587\u3002</li> </ol> <p>\u200b   \u89e3\uff1arzqpmxovgdfwclqvugmvybrjgqdtn</p> <ol> <li> <p>\u7528 Playfair \u5bc6\u7801\u52a0\u5bc6\u660e\u6587\"hide the gold in the tree stump\"\uff0c\u5bc6\u94a5\u4e3a\"cryptography\"\uff0c \u8bd5\u6c42\u5176\u5bc6\u6587\u3002</p> </li> <li> <p>\u7528 Hill \u5bc6\u7801\u52a0\u5bc6\u660e\u6587\"hill\u201d\uff0c\u4f7f\u7528\u7684\u5bc6\u94a5\u662f</p> </li> </ol> \\[ k = \\begin{bmatrix} 8  &amp; 6 &amp; 9  &amp; 5\\\\ 6  &amp; 9 &amp; 5  &amp; 10\\\\ 5  &amp; 8 &amp; 4  &amp; 9\\\\ 10 &amp; 6 &amp; 11 &amp; 4 \\end{bmatrix} \\] <p>\u200b   \u8bd5\u6c42\u5176\u5bc6\u6587\u3002</p> <p>\u200b   \u89e3\uff1ajiiy</p> <ol> <li> <p>\u660e\u6587 \"friday\" \u7528 \\(m=2\\) \u7684 Hill \u5bc6\u7801\u52a0\u5bc6\u540e\u5f97\u5230\u5bc6\u6587 \"POCFKB\"\uff0c\u6c42\u5bc6\u94a5\u3002</p> <p>\u89e3\uff1aHBIZ</p> </li> </ol>"},{"location":"archive/crypto/#4","title":"\u7b2c \\(4\\) \u7ae0 \u5206\u7ec4\u5bc6\u7801","text":"\u5206\u7ec4\u5bc6\u7801 \u5bc6\u94a5\u957f\u5ea6 \u5206\u7ec4\u957f\u5ea6 \u52a0\u5bc6\u8f6e\u6b21 \u67e5\u8868 \u52a0\u89e3\u5bc6\u7ed3\u6784 DES 56 64 16 \u9700\u8981 \u76f8\u540c 3DES 112\u6216168 64 48 \u9700\u8981 \u76f8\u540c AES 128192256 128 101214 \u9700\u8981 \u4e0d\u540c SM4 128 128 32 \u9700\u8981 \u76f8\u540c IDEA 128 64 8 \u4e0d\u9700\u8981 \u76f8\u540c RC6 128 128 20 \u4e0d\u9700\u8981 \u4e0d\u540c Skipjack 80 64 32 \u9700\u8981 \u4e0d\u540c <p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u274e\u2705\u274e\u2705\u274e</p> <p>06-10   \u2705\u274e\u274e\u274e\u274e 11-15   \u274e\u2705\u2705\u2705\u274e</p> <p>16-18   \u2705\u274e\u2705</p> <p>01-05   CBBBA</p> <p>06-10   CBAAB</p> <p>11-15   BCCB(CB)</p> <p>16-21   BCBADD</p> <ul> <li>\u591a\u91cd DES \u5e76\u4e0d\u5b58\u5728\u4e00\u4e2a\u5355 DES \u5bc6\u94a5\u80fd\u591f\u5bf9\u5e94\u591a\u91cd DES \u5bc6\u94a5\u7684\u60c5\u51b5\u3002</li> <li>\u5982\u679c\u5206\u7ec4\u957f\u5ea6\u8fc7\u77ed\uff0c\u5bb9\u6613\u53d7\u5230\u9009\u62e9\u660e\u6587\u653b\u51fb\u3002</li> <li>CTR \u6a21\u5f0f\u652f\u6301\u5e76\u884c\u5904\u7406\uff0c\u5373\u9884\u5148\u5904\u7406\u51fa\u5bc6\u94a5\uff0c\u7136\u540e\u968f\u673a\u8bbf\u95ee\u3002</li> </ul>"},{"location":"archive/crypto/#_10","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\\(n\\) \\(2^n!\\) \\(n*2^n\\) </li> <li>\u6269\u6563 \u6df7\u4e71 </li> <li>\u5bc6\u94a5\u957f\u5ea6\u8fc7\u77ed</li> <li>\u5b89\u5168\u6027 \u6027\u80fd \u9002\u5e94\u6027</li> <li>\u6269\u5c55\u8fd0\u7b97E \u538b\u7f29\u8fd0\u7b97S \u7f6e\u6362\u8fd0\u7b97P</li> <li>256</li> <li>56 \u4e92\u8865\u6027</li> <li>S\u76d2 \u5b57\u8282\u4ee3\u6362</li> <li>2001 2002</li> <li>128 128 192 256</li> <li>4 2</li> <li>128 64 128 64 128 128 128 80 32 8 20 32</li> </ol>"},{"location":"archive/crypto/#_11","title":"\u540d\u8bcd\u89e3\u91ca","text":"<ol> <li>\u5206\u7ec4\u5bc6\u7801\uff1a\u5c06\u660e\u6587\u6d88\u606f\u7f16\u7801\u540e\u8868\u793a\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217\u5212\u5206\u6210\u56fa\u5b9a\u5927\u5c0f\u7684\u5206\u7ec4\uff0c\u6bcf\u4e2a\u5206\u7ec4\u5206\u522b\u5728\u5bc6\u94a5\u7684\u63a7\u5236\u4e0b\u53d8\u6362\u6210\u7b49\u957f\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217\u3002</li> <li>\u6269\u6563\uff1a\u6bcf 1 \u6bd4\u7279\u660e\u6587\u7684\u53d8\u5316\u5c3d\u53ef\u80fd\u591a\u5730\u5f71\u54cd\u8f93\u51fa\u5bc6\u6587\u5e8f\u5217\u7684\u6bd4\u7279\uff0c\u4ee5\u4fbf\u9690\u85cf\u660e\u6587\u7684\u7edf\u8ba1\u7279\u6027\u3002</li> <li>\u6df7\u4e71\uff1a\u5728\u52a0\u5bc6\u53d8\u6362\u8fc7\u7a0b\u4e2d\u660e\u6587\u3001\u5bc6\u94a5\u4ee5\u53ca\u5bc6\u6587\u4e4b\u95f4\u7684\u5173\u7cfb\u5c3d\u53ef\u80fd\u590d\u6742\uff0c\u4ee5\u9632\u5bc6\u7801\u662f\u7834\u8bd1\u8005\u91c7\u7528\u7edf\u8ba1\u5206\u6790\u6cd5\u8fdb\u884c\u7834\u8bd1\u653b\u51fb\u3002</li> <li>SP\u7f51\u7edc\uff1a\u5373\u4ee3\u6362-\u7f6e\u6362\u7f51\u7edc\uff0c\u662f\u7531 S \u4ee3\u6362\u548c P \u7f6e\u6362\u4ea4\u66ff\u8fdb\u884c\u591a\u6b21\u8fed\u4ee3\u800c\u5f62\u6210\u7684\u53d8\u6362\u7f51\u8def\u3002</li> <li>\u5f31\u5bc6\u94a5\uff1a\u8bb8\u591a\u5bc6\u7801\u7b97\u6cd5\u90fd\u5b58\u5728\u4e00\u4e9b\u201c\u4e0d\u597d\u201d\u7684\u5bc6\u94a5\uff0c\u8fd9\u4e9b\u5bc6\u94a5\u7684\u5b89\u5168\u6027\u6bd4\u5bc6\u94a5\u7a7a\u95f4\u4e2d\u7684\u5176\u4ed6\u5bc6\u94a5\u5dee\u3002\u4ea7\u751f\u5f31\u5bc6\u94a5\u7684\u539f\u56e0\u662f\u660e\u6587\u5728\u7f6e\u6362\u3001\u4ee3\u6362\u65f6\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002\uff08\u4e3e\u4e00\u4e2a\u4eff\u5c04\u5bc6\u7801\u7684\u4f8b\u5b50\uff09</li> <li>\u5dee\u5206\u5206\u6790\uff1a\u7814\u7a76\u660e\u6587\u4e2d\u7684\u4e00\u4e2a\u5fae\u5c0f\u53d8\u5316\u662f\u5982\u4f55\u5f71\u54cd\u5bc6\u6587\u7684\u3002</li> </ol>"},{"location":"archive/crypto/#_12","title":"\u7b80\u7b54\u9898","text":"<ol> <li> <p>\u7b80\u8ff0\u5206\u7ec4\u5bc6\u7801\u7684\u8bbe\u8ba1\u5e94\u6ee1\u8db3\u7684\u5b89\u5168\u6027\u8981\u6c42\u3002</p> <ol> <li>\u5206\u7ec4\u957f\u5ea6\u8db3\u591f\u5927\u3002</li> <li>\u5bc6\u94a5\u957f\u5ea6\u8db3\u591f\u5927\u3002</li> <li>\u5bc6\u7801\u53d8\u6362\u8db3\u591f\u590d\u6742\u3002</li> <li>\u52a0\u89e3\u5bc6\u8fd0\u7b97\u7b80\u5355\u3002</li> <li>\u65e0\u6570\u636e\u6269\u5c55\u6216\u538b\u7f29\u3002</li> <li>\u5728\u5206\u7ec4\u5bc6\u7801\u7b97\u6cd5\u4e2d\uff0c\u5982\u679c\u5206\u7ec4\u957f\u5ea6\u8fc7\u77ed\uff0c\u90a3\u4e48\u653b\u51fb\u8005\u53ef\u5229\u7528\u4ec0\u4e48\u653b\u51fb\u65b9\u5f0f\u6765\u8fdb\u884c\u653b\u51fb\uff1f\u7b80\u8ff0\u653b\u51fb\u8fc7\u7a0b\u3002</li> </ol> <p>\u5982\u679c\u5206\u7ec4\u957f\u5ea6\u8fc7\u77ed\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u9009\u62e9\u660e\u6587\u653b\u51fb\u3002</p> </li> <li> <p>DES \u7b97\u6cd5\u5177\u6709\u4e92\u8865\u6027\uff0c\u800c\u8fd9\u4e2a\u7279\u6027\u4f1a\u4f7f DES \u5728\u9009\u62e9\u660e\u6587\u653b\u51fb\u4e0b\u6240\u9700\u7684\u5de5\u4f5c\u91cf\u51cf\u534a\u3002 \u7b80\u8981\u8bf4\u660e\u539f\u56e0\u3002</p> </li> </ol> <p>\u200b   \u5047\u8bbe\u5728\u9009\u62e9\u660e\u6587\u653b\u51fb\u4e0b\uff0c\u6211\u4eec\u62e5\u6709\u660e\u5bc6\u6587\u5bf9 \\((m, c_1)\\) \u548c \\((\\overline{m}, c_2)\\)\uff0c\u5219\u6709\uff1a $$ c_1 = E_k(m) \\ c_2 = E_{k}(\\overline{m}) $$ \u200b   \u6839\u636e\u4e92\u8865\u6027\u53ef\u5f97\uff1a $$ c_1 = E_k(m) \\ \\overline{c_2} = E_{\\overline{k}}(m) $$ \u200b   \u56e0\u6b64\u6211\u4eec\u6839\u636e \\(c_1 = E_k(m)\\) \u641c\u7d22\u5bc6\u94a5 \\(k\\)\uff0c\u5982\u679c\u52a0\u5bc6\u7684\u7ed3\u679c\u662f \\(c_1\\) \u8868\u793a\u6240\u641c\u5230\u4e86 \\(k\\)\uff0c\u5982\u679c\u52a0\u5bc6\u7ed3\u679c\u662f \\(\\overline{c_2}\\)  \u8868\u793a\u6240\u641c\u5230\u4e86 \\(\\overline{k}\\)\u3002</p> <ol> <li>\u4e3a\u4ec0\u4e48\u4e8c\u91cd DES\u5e76\u4e0d\u50cf\u4eba\u4eec\u76f8\u50cf\u90a3\u6837\u53ef\u63d0\u9ad8\u5bc6\u94a5\u957f\u5ea6\u5230 112 \u6bd4\u7279\uff0c\u800c\u76f8\u5f53 57 \u6bd4\u7279\uff1f \u7b80\u8981\u8bf4\u660e\u539f\u56e0\u3002</li> </ol> <p>\u200b   \u5047\u8bbe\u5728\u5df2\u77e5\u660e\u6587\u653b\u51fb\u7684\u6761\u4ef6\u4e0b\uff0c\u62e5\u6709\u660e\u5bc6\u6587\u5bf9 \\((P, C)\\)\uff0c</p> <p>\u200b   \u52a0\u5bc6\u8fc7\u7a0b\u4e3a\uff1a $$ C = E_{K_2}(E_{K_1}(P)) $$ \u200b   \u89e3\u5bc6\u8fc7\u7a0b\u4e3a\uff1a $$ P = D_{K_1}(D_{K_2}(C)) $$ \u200b   \u53ef\u5f97\uff1a $$ D_{K_2}(C) = E_{K_1}(P) $$ \u200b   \u9996\u5148\u679a\u4e3e\u6240\u6709\u7684 \\(K_1\\) \u503c\uff0c\u5c06 \\(E_{K_1}(P)\\) \u7684\u7ed3\u679c\u5b58\u653e\u5230\u54c8\u5e0c\u8868\u4e2d\uff08\u952e\u4e3a \\(E_{K_1}(P)\\)\uff0c\u503c\u4e3a \\(K_1\\)\uff09\uff0c\u7136\u540e\u679a\u4e3e\u6240\u6709\u7684 \\(K_2\\)\uff0c\u6bcf\u4e00\u6b21\u679a\u4e3e\u65f6\u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u8be2\u662f\u5426\u6709 \\(D_{K_2}(C)\\)\uff0c\u5982\u679c\u6709\u5219\u8bf4\u660e\u627e\u5230\u4e86\u5bc6\u94a5 \\(K_1\\) \u548c \\(K_2\\) \u8fd9\u6837\u603b\u7684\u8ba1\u7b97\u91cf\u4e3a \\(2^{57}\\)</p> <ol> <li> <p>\u7b80\u8ff0\u4e09\u91cd DES \u7684\u4f18\u70b9\u4e0e\u4e0d\u8db3\u3002</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u5bc6\u94a5\u957f\u5ea6\u589e\u52a0\u5230 112 \u4f4d\u6216 168 \u4f4d\uff0c\u53ef\u4ee5\u6709\u6548\u62b5\u6297\u7a77\u4e3e\u653b\u51fb\u3002</li> <li>\u76f8\u5bf9\u4e8e DES\uff0c\u7b97\u6cd5\u66f4\u52a0\u590d\u6742\uff0c\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u3002</li> <li>\u5728\u5df2\u7ecf\u4f7f\u7528\u4e86 DES \u7684\u8f6f\u786c\u4ef6\u4ea7\u54c1\u4e0a\u5347\u7ea7\u6210 3DES \u6210\u672c\u66f4\u5c0f\u3002</li> <li>\u7531\u4e8e DES \u6bd4\u5176\u5b83\u4efb\u4f55\u52a0\u5bc6\u7b97\u6cd5\u53d7\u5230\u7684\u5206\u6790\u65f6\u95f4\u90fd\u957f\u7684\u591a\uff0c\u76f8\u5e94\u5730\uff0c3DES \u6297\u5206\u6790\u80fd\u529b\u66f4\u5f3a\u3002</li> </ul> <p>\u4e0d\u8db3\uff1a</p> <ul> <li>\u52a0\u89e3\u5bc6\u901f\u5ea6\u8f83\u6162\u3002</li> <li>\u867d\u7136\u5bc6\u94a5\u957f\u5ea6\u589e\u52a0\u4e86\uff0c\u4f46\u5206\u7ec4\u957f\u5ea6\u6ca1\u6709\u76f8\u5bf9\u5e94\u7684\u589e\u52a0\u3002</li> </ul> </li> <li> <p>\u7b80\u8ff0 AES \u7b97\u6cd5\u7684\u5217\u6df7\u5408\u53d8\u6362\u7cfb\u6570\u6bd4\u9006\u6df7\u5408\u53d8\u6362\u7cfb\u6570\u5c0f\u7684\u539f\u56e0\u3002</p> </li> <li> <p>\u7b80\u8ff0 AES \u7684\u5bc6\u94a5\u6269\u6563\u7b97\u6cd5\u7684\u8bbe\u8ba1\u6807\u51c6\u3002</p> </li> <li> <p>\u7b80\u8ff0 DES \u4e0e AES \u7684\u76f8\u540c\u4e0e\u4e0d\u540c\u4e4b\u5904\u3002</p> <p>\u76f8\u4f3c\u4e4b\u5904\uff1a</p> <ul> <li>\u4e8c\u8005\u7684\u8f6e\u51fd\u6570\u90fd\u662f\u7531\u56db\u5c42\u6784\u6210\uff0c\u975e\u7ebf\u6027\u5c42\u3001\u79fb\u4f4d\u5c42\u3001\u7ebf\u6027\u6df7\u5408\u5c42\u3001\u5b50\u5bc6\u94a5\u5f02\u6216\uff0c\u53ea\u662f\u987a\u5e8f\u4e0d\u540c\u3002</li> <li>\u975e\u7ebf\u6027\u5c42\uff1a\u4e24\u8005\u90fd\u6709\u67e5\u8868\u66ff\u6362\u7684\u8fc7\u7a0b\uff0c\u4f8b\u5982 DES \u7684 S \u76d2\uff0cAES \u7684\u5b57\u8282\u66ff\u6362\u3002</li> <li>\u79fb\u4f4d\u5c42\uff1aAES \u7684\u884c\u79fb\u4f4d\u5bf9\u5e94 DES \u7684\u7f6e\u6362 P\u3002</li> <li>\u7ebf\u6027\u6df7\u5408\u5c42\uff1aAES \u7684\u5217\u6df7\u6dc6\u5bf9\u5e94 DES \u7684 F \u51fd\u6570\u7684\u8f93\u51fa\u4e0e\u5de6\u8fb9\u4e00\u534a\u6570\u636e\u76f8\u52a0\u3002</li> <li>\u5b50\u5bc6\u94a5\u5f02\u6216\uff1a\u4e24\u8005\u90fd\u6709\u5b50\u5bc6\u94a5\u5f02\u6216\uff0c\u4f46\u987a\u5e8f\u4e0d\u540c\u3002</li> </ul> <p>\u4e0d\u540c\u4e4b\u5904\uff1a</p> <ul> <li>\u5bc6\u94a5\u957f\u5ea6\u3001\u5206\u7ec4\u957f\u5ea6\u3001\u52a0\u5bc6\u8f6e\u6b21\u7b49\u3002</li> <li>DES\u662f\u9762\u5411\u6bd4\u7279\u7684\u8fd0\u7b97\uff0cAES\u662f\u9762\u5411\u5b57\u8282\u7684\u8fd0\u7b97\u3002</li> <li>AES \u7684\u52a0\u5bc6\u6a21\u5757\u548c\u89e3\u5bc6\u6a21\u5757\u8fd0\u7b97\u4e0d\u4e00\u81f4\u3002\u800c DES \u53ef\u4ee5\u590d\u7528\uff0c\u53ea\u662f\u89e3\u5bc6\u65f6\u5b50\u5bc6\u94a5\u7684\u987a\u5e8f\u4e0d\u540c\u3002</li> </ul> </li> <li> <p>\u7b80\u8ff0 SM4 \u7b97\u6cd5\u4e0e AES\uff08\u6216DES\uff09\u7684\u76f8\u4f3c\u4e0e\u4e0d\u540c\u4e4b\u5904\u3002</p> <p>ppt</p> </li> <li> <p>\u7b80\u8ff0\u8bbe\u8ba1\u5206\u7ec4\u5bc6\u7801\u7684\u5de5\u4f5c\u6a21\u5f0f\u65f6\u901a\u5e38\u8981\u8003\u8651\u7684\u56e0\u7d20\u3001</p> <ul> <li>\u8003\u8651\u52a0\u5bc6\u6570\u636e\u7684\u683c\u5f0f\uff0c\u4f8b\u5982\u6570\u636e\u7684\u5927\u5c0f\u3002</li> <li>\u6570\u636e\u662f\u5426\u652f\u6301\u968f\u673a\u5b58\u50a8\uff0c\u8fd9\u4f1a\u5f71\u54cd\u80fd\u5426\u5e76\u53d1\u7684\u52a0\u5bc6\u3002</li> <li>\u901a\u4fe1\u7684\u65b9\u5f0f\u662f\u5206\u7ec4\u4f20\u8f93\u8fd8\u662f\u6d41\u4f20\u8f93\u3002</li> <li>\u5bf9\u4f20\u8f93\u9519\u8bef\u7684\u5bb9\u9519\u3002</li> <li>\u4fe1\u9053\u7684\u566a\u58f0\uff0c\u540c\u6b65\u7684\u6027\u80fd\u7b49\u3002</li> </ul> </li> <li> <p>\u8bf7\u603b\u7ed3 ECB\u3001CBC\u3001CTR \u6a21\u5f0f\u7684\u4f18\u7f3a\u70b9\u3002</p> </li> </ol> <p>\u200b   ECB \u6a21\u5f0f\u64cd\u4f5c\u7b80\u5355\uff0c\u652f\u6301\u5e76\u53d1\u5904\u7406\uff0c\u4f46\u76f8\u540c\u7684\u660e\u6587\u5206\u7ec4\u5bf9\u5e94\u7684\u5bc6\u6587\u5b8c\u5168\u4e00\u81f4\uff0c\u5bb9\u6613\u906d\u53d7\u7edf\u8ba1\u5206\u6790\u653b\u51fb\u3001\u5206\u7ec4\u91cd\u653e\u653b\u51fb\u3001\u4ee3\u6362\u653b\u51fb\u3002\u901a\u5e38\u7528\u6765\u52a0\u5bc6\u8f83\u77ed\u7684\u968f\u673a\u6570\u6216\u8005\u5bc6\u94a5\u3002</p> <p>\u200b   CBC \u6a21\u5f0f\u76f8\u540c\u7684\u660e\u6587\u5728\u4e0d\u540c\u7684\u5206\u7ec4\u4e2d\u7684\u5bc6\u6587\u901a\u5e38\u4e0d\u76f8\u7b49\u3002\u7f3a\u70b9\u662f\u4e0d\u80fd\u5e76\u884c\u5904\u7406\u3002CBC\u9002\u5408\u6587\u4ef6\u52a0\u5bc6\uff0c\u5373\u4f7f\u6709\u5c11\u91cf\u9519\u8bef\u4e5f\u4e0d\u4f1a\u9020\u6210\u540c\u6b65\u5931\u8d25\u3002</p> <p>\u200b   CTR \u6a21\u5f0f\u7ed3\u5408\u4e86 ECB \u548c CBC \u7684\u6709\u70b9\uff0c\u652f\u6301\u6d41\u5904\u7406\u3001\u5e76\u884c\u52a0\u5bc6\u3001\u9884\u5904\u7406\u5bc6\u94a5\u6d41\u3001\u968f\u673a\u8bbf\u95ee\u4e14\u5b9e\u73b0\u7b80\u5355\u3002\u5728 ATM \u7f51\u7edc\u548c IPSec \u4e2d\u8d77\u5230\u91cd\u8981\u7684\u4f5c\u7528\u3002</p> <p>\u200b   CFB \u6a21\u5f0f\u5177\u6709 CBC \u6a21\u5f0f\u7684\u4f18\u70b9\uff0c\u4e14\u6d88\u606f\u53ef\u770b\u4f5c\u6bd4\u7279\u6d41\uff0c\u53ef\u7528\u4e8e\u81ea\u540c\u6b65\u5e8f\u5217\u5bc6\u7801\u3002\u4f46\u5bf9\u4fe1\u9053\u9519\u8bef\u8f83\u654f\u611f\u4e14\u4f1a\u9020\u6210\u9519\u8bef\u4f20\u64ad\u3002  </p> <p>\u200b   OFB \u6a21\u5f0f\u662f CFB \u6a21\u5f0f\u7684\u4e00\u79cd\u53d8\u5f62\uff0c\u514b\u670d\u7531\u9519\u8bef\u4f20\u64ad\u5e26\u6765\u7684\u95ee\u9898\uff0c\u4f46\u5bf9\u5bc6\u6587\u88ab\u7be1\u6539\u96be\u4e8e\u8fdb\u884c\u68c0\u6d4b\uff1b OFB \u6a21\u5f0f\u4e0d\u5177\u6709\u81ea\u540c\u6b65\u80fd\u529b\uff0c\u8981\u6c42\u7cfb\u7edf\u4fdd\u6301\u4e25\u683c\u7684\u540c\u6b65\uff0c\u5426\u5219\u96be\u4e8e\u89e3\u5bc6\u3002\u901a\u5e38\u7528\u4e8e\u6781\u6613\u51fa\u9519\u7684\u73af\u5883\uff0c\u4f46\u9700\u8981\u5177\u5907\u9ad8\u901f\u540c\u6b65\u7684\u673a\u5236\u3002</p>"},{"location":"archive/crypto/#5","title":"\u7b2c \\(5\\) \u7ae0 \u5e8f\u5217\u5bc6\u7801","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u2705\u274e\u2705\u274e\u2705</p> <p>06-10   \u274e\u2705\u274e\u274e\u274e</p> <p>11-12   \u2705\u2705</p> <p>01-05   DCCBC</p> <p>06-10   BBBBC</p> <ul> <li>\u5bc6\u94a5\u5e8f\u5217\u751f\u6210\u5668\u4f7f\u7528\u975e\u7ebf\u6027\u7ec4\u5408\u51fd\u6570\u7684\u76ee\u7684\u662f\u5b9e\u73b0\u5bc6\u7801\u5b66\u7684\u5404\u79cd\u6027\u8d28\uff0c\u800c\u4e0d\u662f\u5b9e\u73b0\u66f4\u957f\u5468\u671f\u7684\u5bc6\u94a5\u5e8f\u5217\u3002</li> <li>Geffe \u53d1\u751f\u5668\u4f7f\u7528\u4e86 \uff08\\(3\\)\uff09\u4e2a LFSR</li> </ul>"},{"location":"archive/crypto/#_13","title":"\u586b\u7a7a\u9898","text":"<ol> <li>Verman\u5bc6\u7801\u7b97\u6cd5</li> <li>\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236 \u6d41\u5bc6\u7801</li> <li>\u8bbe\u8ba1\u4e00\u4e2a\u968f\u673a\u6027\u597d\u7684\u5bc6\u94a5\u6d41\u53d1\u751f\u5668</li> <li>\u540c\u6b65\u5e8f\u5217\u5bc6\u7801 \u81ea\u540c\u6b65\u5e8f\u5217\u5bc6\u7801</li> <li>\u79fb\u4f4d\u5bc4\u5b58\u5668 \u53cd\u9988\u51fd\u6570</li> <li>\u62bd\u5934\u4f4d \u521d\u6001</li> <li> <p>\\(2^n-1\\) \\(2n\\)</p> </li> <li> <p>\u5e8f\u5217\u5bc6\u7801\u7684\u8d77\u6e90\uff1aVerman\u5bc6\u7801\u7b97\u6cd5</p> </li> <li>\u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668\u7684\u7ec4\u6210\uff1a\u79fb\u4f4d\u5bc4\u5b58\u5668\u3001\u53cd\u9988\u51fd\u6570</li> </ol>"},{"location":"archive/crypto/#_14","title":"\u540d\u8bcd\u89e3\u91ca","text":"<ol> <li>\u5e8f\u5217\u5bc6\u7801\uff1a\u660e\u6587\u6d88\u606f\u6309\u7167\u6bd4\u7279\u8fdb\u884c\u7b80\u5355\u8fd0\u7b97\u5b9e\u73b0\u52a0\u5bc6\u7684\u7b97\u6cd5\uff0c\u8fd0\u7b97\u901a\u5e38\u662f\u7b80\u5355\u8fd0\u7b97\uff0c\u4f8b\u5982\u5f02\u6216\u3002</li> <li>\u4e00\u6b21\u4e00\u5bc6\uff1a\u5982\u679c\u5bc6\u94a5\u5e8f\u5217\u662f\u968f\u673a\u4ea7\u751f\u7684\uff0c\u4e14\u548c\u660e\u6587\u4e00\u6837\u957f\uff0c\u5219\u79f0\u4e3a\u4e00\u6b21\u4e00\u5bc6\u3002</li> <li>\u79cd\u5b50\u5bc6\u94a5\uff1a\u79cd\u5b50\u5bc6\u94a5\u8f93\u5165\u5230\u5bc6\u94a5\u5e8f\u5217\u4ea7\u751f\u5668\u4e2d\uff0c\u7528\u4e8e\u751f\u6210\u5bc6\u94a5\u5e8f\u5217\u3002</li> <li>\u7ebf\u6027\u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668\uff1a</li> <li>\u4f2a\u968f\u673a\u5e8f\u5217\uff1a\u5728\u4e00\u5b9a\u957f\u5ea6\u5185\u4fdd\u6301\u968f\u673a\u6027\u8d28\u7684\u5e8f\u5217\uff0c\u5bf9\u4e8e\u8ba1\u7b97\u80fd\u529b\u6709\u9650\u7684\u653b\u51fb\u8005\u6765\u8bf4\u65e0\u6cd5\u83b7\u53d6\u89c4\u5f8b\u3002</li> <li>m \u5e8f\u5217\uff1a\\(n\\) \u7ea7\u7ebf\u6027\u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668\u7684\u5468\u671f\u5c0f\u4e8e\u7b49\u4e8e \\(2^n-1\\)\uff0c\u5468\u671f\u8fbe\u5230\u6700\u5927\u503c\u7684\u5e8f\u5217\u79f0\u4e3am\u5e8f\u5217\u3002</li> </ol>"},{"location":"archive/crypto/#_15","title":"\u7b80\u7b54\u9898","text":"<ol> <li>\u7b80\u8ff0\u5e8f\u5217\u5bc6\u7801\u7b97\u6cd5\uff08\u4e0e\u5206\u7ec4\u5bc6\u7801\u7b97\u6cd5\u76f8\u6bd4\uff09\u7684\u7279\u70b9\u3002<ul> <li>\u52a0\u89e3\u5bc6\u7b80\u5355\uff0c\u4e0d\u4f9d\u8d56\u590d\u6742\u7535\u8def\u3002</li> <li>\u5b89\u5168\u5f3a\u5ea6\u53d6\u51b3\u4e8e\u5bc6\u94a5\u5e8f\u5217\u7684\u968f\u673a\u6027\u3002</li> <li>\u80fd\u591f\u53ca\u65f6\u5904\u7406\u3002</li> </ul> </li> <li> <p>\u5bc6\u94a5\u5e8f\u5217\u751f\u6210\u5668\u662f\u5e8f\u5217\u5bc6\u7801\u7b97\u6cd5\u7684\u6838\u5fc3 \uff0c \u8bf7\u8bf4\u51fa\u81f3\u5c11 5 \u70b9\u5173\u4e8e\u5bc6\u94a5\u5e8f\u5217\u751f\u6210\u5668\u7684\u57fa\u672c\u8981\u6c42 \u3002</p> <ol> <li>\u79cd\u5b50\u5bc6\u94a5 \\(K\\) \u7684\u957f\u5ea6\u8db3\u591f\u5927\uff0c\u4e00\u822c\u5e94\u5728 \\(128\\) \u4f4d\u4ee5\u4e0a\u3002</li> <li>\u5bc6\u94a5\u5e8f\u5217\u5177\u6709\u6781\u5927\u5468\u671f\u3002</li> <li>\u5bc6\u94a5\u5e8f\u5217\u5177\u6709\u5747\u5300\u7684 \\(n\\) \u5143\u5206\u5e03\u3002</li> <li>\u80fd\u591f\u62b5\u6297\u7edf\u8ba1\u653b\u51fb\u3002</li> <li>\u6df7\u4e71\u6027\u3002</li> <li>\u6269\u6563\u578b\u3002</li> <li>\u4e0d\u53ef\u9884\u6d4b\u3002</li> </ol> </li> <li> <p>ZUC \u7b97\u6cd5\u7684\u7ec4\u6210\uff0c\u8fd0\u7528\u4e86\u54ea\u4e9b\u57fa\u672c\u6280\u672f\uff0c\u7b80\u8981\u8bc4\u4ef7\u8be5\u7b97\u6cd5\u3002</p> <ul> <li>\u4e0a\u5c42\uff1aLSFR</li> <li>\u4e2d\u5c42\uff1a\u6bd4\u7279\u91cd\u7ec4</li> <li>\u4e0b\u5c42\uff1a\u975e\u7ebf\u6027\u51fd\u6570 F</li> </ul> <p>ZUC \u7b97\u6cd5\u7684 \\(m\\) \u5e8f\u5217\u5468\u671f\u957f\uff0c\u7edf\u8ba1\u7279\u6027\u597d\uff0c\u7ebf\u6027\u7ed3\u6784\u5f31\u3001\u6bd4\u7279\u5173\u7cfb\u7b26\u5408\u7387\u4f4e\u3002\u6b64\u5916\uff0c\u786c\u4ef6\u5b9e\u73b0\u4ee3\u4ef7\u4f4e\uff0c\u603b\u7684\u6765\u8bf4\u517c\u987e\u4e86\u5b89\u5168\u6027\u548c\u6548\u7387\u3002</p> </li> </ol>"},{"location":"archive/crypto/#6-hash","title":"\u7b2c \\(6\\) \u7ae0 Hash \u51fd\u6570\u548c\u6d88\u606f\u8ba4\u8bc1","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u2705\u2705\u274e\u274e\u2705</p> <p>06-10   \u2705\u2705\u2705\u274e\u274e</p> <p>11-15   \u2705\u2705\u2705\u2705\u274e</p> <p>01-05   ABABB</p> <p>06-10   CDCDD</p> <p>11-14   DABB</p> <ul> <li>\u6309\u7167\u76ee\u524d\u7684\u8ba1\u7b97\u80fd\u529b\uff0cMD5 \u7b97\u6cd5\u662f\u4e0d\u5b89\u5168\u7684\u3002</li> <li>\u57fa\u4e8e Hash \u6d88\u606f\u8ba4\u8bc1\u7801\u7684\u8f93\u51fa\u957f\u5ea6\u4e0e\u6d88\u606f\u7684\u957f\u5ea6\u65e0\u5173\uff0c\u800c\u4e0e\u9009\u7528\u7684 Hash \u51fd\u6570\u6709\u5173\u3002</li> <li>SHA256/224\uff08\u4e0d\u662f SHA256\uff09 \u7684\u54c8\u5e0c\u503c\u957f\u5ea6\u662f \\(224\\)</li> <li>SHA256 \u54c8\u5e0c\u503c\u957f\u5ea6 \\(256\\)\uff0c\u5206\u7ec4\u957f\u5ea6 \\(512\\)\uff0c\u8f93\u5165\u6700\u5927\u957f\u5ea6\u662f \\(2^{64}-1\\)</li> <li>SHA512 \u7684\u53c2\u6570\u76f8\u5bf9\u4e8e SHA256 \u7ffb\u500d\u3002</li> <li>SM3 \u7684\u53c2\u6570\u540c SHA256\u3002</li> </ul>"},{"location":"archive/crypto/#_16","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\u54c8\u5e0c\u503c\uff08\u6d88\u606f\u6458\u8981\u3001\u6563\u5217\u503c\uff09</li> <li> <p>\u6297\u5f3a\u78b0\u649e \u5355\u5411\u6027</p> </li> <li> <p>\\(2^{128}-1\\) \\(1024\\) \\(512\\) </p> </li> <li>\u54c8\u5e0c\u78b0\u649e \u751f\u65e5\u653b\u51fb</li> <li>\\(2^\\frac{n}{2}\\)</li> <li>\u786e\u8ba4\u6d88\u606f\u7684\u6765\u6e90 \u786e\u4fdd\u4fe1\u606f\u7684\u5b8c\u6574\u6027</li> <li>\\(512\\) \\(1024\\)</li> </ol>"},{"location":"archive/crypto/#7","title":"\u7b2c \\(7\\) \u7ae0 \u516c\u94a5\u5bc6\u7801\u4f53\u5236","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u2705\u274e\u274e\u2705\u274e</p> <p>06-10   \u2705\u2705\u2705\u2705\u2705</p> <p>11-15   \u274e\u274e\u2705\u2705\u2705</p> <p>16-17   \u274e\u274e</p> <p>01-05   CCADC</p> <p>06-10   BBCBC</p> <p>11-15   CDDD</p> <ul> <li>SM9 \u6ca1\u6709\u89e3\u51b3\u516c\u94a5\u771f\u5b9e\u6027\u95ee\u9898\u3002</li> <li>\u4e0d\u80fd\u5229\u7528 RSA \u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u5b9e\u73b0\u7528\u6237\u79c1\u94a5\u5206\u53d1\u3002</li> <li>RSA \u5b89\u5168\u5bc6\u94a5\u957f\u5ea6\uff1a2048</li> <li>NTRU \u662f\u540e\u91cf\u5b50\u5bc6\u7801\uff0c\u80fd\u591f\u6839\u636e\u516c\u94a5\u8bc6\u522b\u7528\u6237\u7684\u8eab\u4efd\uff0c\u57fa\u4e8e\u683c\u7684\u56f0\u96be\u95ee\u9898\u3002</li> <li>SM2 \u7684\u5b89\u5168\u6027\u57fa\u4e8e\u3002</li> </ul>"},{"location":"archive/crypto/#_17","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\u9677\u95e8 \u6b63\u5411 \u9006\u5411</li> <li>1976\u300a\u5bc6\u7801\u5b66\u7684\u65b0\u65b9\u5411\u300b</li> <li>\u5b9e\u7528\u6216\u5b89\u5168 \u6b27\u62c9\u5b9a\u7406</li> <li>\u5bc6\u94a5\u5206\u53d1 \u5bc6\u94a5\u7ba1\u7406 \u6570\u5b57\u7b7e\u540d</li> <li>B\u7684\u516c\u94a5 A\u7684\u79c1\u94a5</li> <li>ECC 256 \u53cc\u7ebf\u6027\u6620\u5c04 256</li> <li>\u5927\u6574\u6570\u5206\u89e3\u95ee\u9898 \u79bb\u6563\u5bf9\u6570\u95ee\u9898</li> <li>\u5408\u6570\u6a21\u6570\u4e0b\u6c42\u89e3\u5e73\u65b9\u6839 4</li> <li>\u4e8c\u6b21\u5269\u4f59\u95ee\u9898 \u76f8\u540c\u7684\u660e\u6587\u5728\u4e0d\u540c\u6b21\u52a0\u5bc6\u4e2d\u5f97\u5230\u7684\u5bc6\u6587\u4e0d\u540c \u52a0\u5bc6\u540e\u6570\u636e\u6269\u5c55 \\(log_2n\\) \u500d \u5355\u6bd4\u7279\u4e32\u6216\u5f88\u77ed\u7684\u6bd4\u7279\u4e32</li> <li> <p>\u53ea\u9002\u7528\u4e8e\u5c0f\u7fa4\u4f53 \u79c1\u94a5\u9700\u8981\u5b89\u5168\u4f20\u64ad \u79c1\u94a5\u4e0d\u5177\u5907\u552f\u4e00\u6027</p> </li> <li> <p>SM2 \u7684\u5b89\u5168\u6027\u662f\u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u7684\u79bb\u6563\u5bf9\u6570\u95ee\u9898\uff0c\u5bc6\u94a5\u957f\u5ea6 \\(256\\)</p> </li> <li>SM9 \u7684\u5b89\u5168\u6027\u662f\u57fa\u4e8e\u53cc\u7ebf\u6027\u5bf9\u6620\u5c04\u95ee\u9898\uff0c\u5bc6\u94a5\u957f\u5ea6 \\(256\\)</li> </ol>"},{"location":"archive/crypto/#_18","title":"\u540d\u8bcd\u89e3\u91ca","text":"<ol> <li>\u516c\u94a5\u5bc6\u7801\u4f53\u5236\uff1a\u5728\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u5bc6\u94a5\u7684\u52a0\u5bc6\u4f53\u5236\u3002</li> <li> <p>\u9677\u95e8\u5355\u5411\u51fd\u6570\uff1a\u6ee1\u8db3\u4e0b\u5217\u6027\u8d28\u7684\u51fd\u6570</p> <ol> <li>\u6b63\u5411\u8ba1\u7b97\u5bb9\u6613\u3002\u8bbe\u6d88\u606f\u4e3a \\(M\\)\uff0c\u516c\u94a5\u662f \\(K_p\\)\uff0c\u8ba1\u7b97\u51fa\u5bc6\u6587 \\(C = f_{K_p}(M)\\) \u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002</li> <li>\u5728\u4e0d\u77e5\u9053\u79c1\u94a5 \\(K_s\\) \u7684\u60c5\u51b5\u4e0b\uff0c\u53cd\u5411\u8ba1\u7b97\u662f\u4e0d\u53ef\u884c\u7684\u3002\u5373\u627e\u5230 \\(M = f^{-1}(C)\\) \u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\u3002</li> <li>\u5728\u77e5\u9053\u79c1\u94a5 \\(K_s\\) \u7684\u60c5\u51b5\u4e0b\uff0c\u53cd\u5411\u8ba1\u7b97\u662f\u5bb9\u6613\u7684\u3002\u5373\u8ba1\u7b97\u51fa \\(M = f^{-1}_{K_s}(C)\\) \u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002</li> </ol> </li> <li> <p>\u6b27\u62c9\u5b9a\u7406\uff1a\u82e5 \\(gcd(a, n) = 1\\)\uff0c\u5219 \\(a^{\\varphi(n)} \\equiv 1 \\bmod n\\)\uff0c\u5176\u4e2d \\(\\varphi\\) \u662f\u6b27\u62c9\u51fd\u6570\uff0c\\(\\varphi(n)\\) \u8868\u793a\u5c0f\u4e8e\u7b49\u4e8e \\(n\\) \u7684\u6b63\u6574\u6570\u4e2d\u4e0e \\(n\\) \u4e92\u8d28\u7684\u6570\u5b57\u7684\u4e2a\u6570\u3002</p> </li> <li>\u5927\u6574\u6570\u56e0\u5b50\u5206\u89e3\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a \\(n\\)\uff0c\u6c42\u51fa\u6ee1\u8db3 \\(n = p \\times q\\) \u7684 \\(p\\) \u548c \\(q\\) \u7684\u503c\u3002</li> <li>\u79bb\u6563\u5bf9\u6570\u95ee\u9898\uff1a\u5df2\u77e5 \\(g\\) \u662f\u6a21 \\(p\\) \u4e0b\u7684\u751f\u6210\u5143\uff0c\u7ed9\u5b9a \\(g\\)\u3001\\(p\\)\u3001\\(y\\)\uff0c\u6c42\u51fa\u6ee1\u8db3 \\(y = g^x \\bmod p\\) \u7684 \\(x\\) \u7684\u503c\u3002</li> <li>\u80cc\u5305\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 \\(W\\) \u548c \\(n\\) \u4e2a\u6b63\u6574\u6570 \\(a_1, a_2, \\cdots, a_n\\)\uff0c\u6c42\u51fa\u8fd9\u4e2a \\(n\\) \u4e2a\u6570\u7684\u4e00\u4e2a\u5b50\u96c6\u4f7f\u5f97\u5b50\u96c6\u7684\u6570\u5b57\u4e4b\u548c\u6070\u597d\u7b49\u4e8e \\(W\\)</li> <li>\u5e73\u65b9\u5269\u4f59\u95ee\u9898\uff1a\u7ed9\u5b9a\u6b63\u6574\u6570 \\(a\\) \u548c \\(b\\)\uff0c\u6c42\u51fa\u6ee1\u8db3 \\(x^2 \\equiv a \\bmod b\\) \u7684 \\(x\\) \u7684\u503c\u3002</li> </ol>"},{"location":"archive/crypto/#_19","title":"\u7b80\u7b54\u9898","text":"<ol> <li> <p>\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u4e0e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\u76f8\u6bd4\u6709\u54ea\u4e9b\u4f18\u70b9\u548c\u4e0d\u8db3\uff1f</p> <p>\u4f18\u70b9\uff1a</p> <ol> <li>\u5bc6\u94a5\u5206\u53d1\u7b80\u5355\uff1b</li> <li>\u5bc6\u94a5\u7684\u6570\u91cf\u5c11\uff0c\u6613\u4e8e\u7ba1\u7406\uff1b</li> <li>\u53ef\u4ee5\u5b9e\u73b0\u6570\u5b57\u7b7e\u540d\u3002</li> </ol> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\u52a0\u89e3\u5bc6\u901f\u5ea6\u6162\uff0c\u901a\u5e38\u7528\u516c\u94a5\u4f53\u5236\u52a0\u5bc6\u5bc6\u94a5\uff0c\u7136\u540e\u7528\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\u52a0\u5bc6\uff1b</li> <li>\u5bc6\u94a5\u957f\u5ea6\u957f\uff1b</li> <li>\u90e8\u5206\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u5b58\u5728\u6570\u636e\u6269\u5c55\u95ee\u9898\u3002</li> </ol> </li> <li> <p>\u5b66\u4e60\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u65f6\u5e94\u601d\u8003\u7684\u57fa\u672c\u95ee\u9898\u6709\u54ea\u4e9b\uff1f</p> <ul> <li>\u79c1\u94a5\u548c\u516c\u94a5\u5982\u4f55\u751f\u6210\uff0c\u4e24\u8005\u7684\u5173\u7cfb\uff1b</li> <li>\u5b89\u5168\u7684\u5bc6\u94a5\u957f\u5ea6\uff1b</li> <li>\u6570\u5b66\u96be\u9898\uff1b</li> <li>\u52a0\u89e3\u5bc6\u6d41\u7a0b\uff1b</li> <li>\u89e3\u5bc6\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff1b</li> <li>\u5b89\u5168\u6027\u5206\u6790\u3002</li> </ul> </li> <li> <p>\u5728\u6548\u7387\u548c\u5b89\u5168\u65b9\u9762\uff0c\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u5e94\u6ee1\u8db3\u7684\u8981\u6c42\u6709\u54ea\u4e9b\uff1f</p> <p>\u6ee1\u8db3\u9677\u95e8\u7684\u4e09\u4e2a\u7279\u6027\u3002</p> </li> <li> <p>\u5229\u7528\u6b27\u62c9\u5b9a\u7406\u8ba1\u7b97 \\(2^{1000000} \\bmod 77\\) \u7684\u503c\u3002</p> <p>\\(23\\)</p> </li> <li> <p>\u9488\u5bf9 RSA \u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u4e2d\uff0c\u8bbe \\(p = 11\\)\uff0c\\(q = 17\\)\uff0c\u53d6 \\(e = 7\\) \u4f5c\u4e3a\u516c\u94a5\uff0c\u6c42\u79c1\u94a5\u3002\u5047\u5982\u660e\u6587 \\(m = 222\\)\uff0c\u5f97\u5230\u7684\u5bc6\u6587\u662f\u591a\u5c11\uff1f      $$      \\begin{matrix}      \\varphi(n) &amp; = &amp; (p-1)(q-1) &amp; = &amp; 160 \\      d &amp; \\equiv &amp; e^{-1} &amp; \\equiv  &amp; 23 \\bmod 160 \\</p> <p>\\end{matrix}  $$  \u660e\u6587\u9700\u8981\u5206\u7ec4\uff0c\u5206\u7ec4\u65b9\u5f0f\u6709\u5f88\u591a\uff0c\u4f8b\u5982\u5206\u4e3a \\(2|22\\)\uff0c\u5206\u7ec4\u540e\u52a0\u5bc6\u5373\u53ef\u3002</p> </li> <li> <p>\u5728 RSA \u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u4e2d\uff0c\u5bf9\u7d20\u6570 \\(p\\) \u548c \\(q\\) \u7684\u9009\u53d6\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u4f8b\u5982\uff1a</p> <ol> <li>\\(p\\) \u548c \\(q\\) \u7684\u957f\u5ea6\u76f8\u5dee\u4e0d\u80fd\u592a\u5927\uff0c\u503c\u76f8\u5dee\u8981\u6bd4\u8f83\u5927\u3002</li> <li>\\(p-1\\) \u548c \\(q-1\\) \u5e94\u6709\u5927\u7684\u7d20\u56e0\u5b50\u3002</li> </ol> <p>\u8bf7\u8bf4\u660e\u539f\u56e0\u3002</p> <p>\u5982\u679c \\(p\\) \u548c \\(q\\) \u957f\u5ea6\u76f8\u5dee\u592a\u5927\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u8bd5\u9664\u6cd5\u679a\u4e3e\u5f97\u5230\u5176\u4e2d\u8f83\u5c0f\u7684\u90a3\u4e2a\u3002</p> <p>\u5982\u679c \\(p\\) \u548c \\(q\\) \u76f8\u5dee\u592a\u5c0f\uff0c\u5219\u8bbe \\(p &gt; q\\)\uff0c\\(k = p - q\\)\uff0c\u5219\u6709\uff1a  $$  \\left{\\begin{matrix}   (p+q)<sup>2-(p-q)</sup>2 &amp; = &amp; 4pq &amp; = &amp; 4n\\  (p+q)^2 &amp; = &amp; k^2+4n  \\end{matrix}\\right.  $$  \u4e8e\u662f\u6709\uff1a  $$  \\left{\\begin{matrix}   (p+q)^2 &amp; = &amp; \\sqrt{k^2+4n} \\  p-q &amp; = &amp; k  \\end{matrix}\\right.  $$  \u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e \\(k\\) \u6765\u89e3\u51fa \\(p\\) \u548c \\(q\\)</p> <p>\u7d20\u56e0\u5b50\u653b\u51fb\uff0c\u53c2\u8003\u8bfe\u672c P194-P195</p> </li> <li> <p>\u8bc4\u4ef7 RSA \u7b97\u6cd5\u3002</p> <ul> <li>\u7b2c\u4e00\u4e2a\u5b9e\u7528\u3001\u5b89\u5168\u7684\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\uff1b</li> <li>\u76ee\u524d\u4f7f\u7528\u6700\u591a\u3002</li> <li>\u89e3\u5bc6\u7684\u6b63\u786e\u6027\u57fa\u4e8e\u6b27\u62c9\u5b9a\u7406\u3002</li> <li>\u5b89\u5168\u6027\u57fa\u4e8e\u5927\u6574\u6570\u5206\u89e3\u7684\u56f0\u96be\u95ee\u9898\u3002</li> <li>\u65e2\u80fd\u7528\u4e8e\u52a0\u5bc6\u4e5f\u53ef\u4ee5\u7528\u4e8e\u6570\u5b57\u7b7e\u540d\u3002</li> <li>\u5b89\u5168\u7684\u5bc6\u94a5\u957f\u5ea6\u81f3\u5c11\u9700\u8981\u8fbe\u5230 \\(2048\\) \u4f4d\u3002</li> </ul> </li> <li> <p>\u5728 ElGamal \u5bc6\u7801\u7cfb\u7edf\u4e2d\uff0cAlice \u548c Bob \u4f7f\u7528 \\(p = 17\\) \u548c \\(g = 3\\)\u3002Bob \u9009\u7528 \\(x = 6\\) \u4f5c\u4e3a\u4ed6\u7684\u79c1\u94a5\uff0c \u5219\u4ed6\u7684\u516c\u94a5 \\(y = 15\\)\u3002Alice \u53d1\u9001\u5bc6\u6587\\((7,6)\\)\uff0c\u8bf7\u786e\u5b9a\u660e\u6587 \\(m\\)\u3002      $$      \\begin{matrix}      (c ^ x)^{-1}   &amp; \\equiv &amp; 9^{-1}       &amp; \\equiv &amp; 2 &amp; \\bmod 17 \\      m              &amp; \\equiv &amp; 6 \\times 2   &amp; \\equiv &amp; 12 &amp; \\bmod 17       \\end{matrix}      $$</p> </li> <li> <p>\u7b80\u8ff0\u9488\u5bf9 ElGamal \u516c\u94a5\u5bc6\u7801\u653b\u51fb\u7684\u5927\u6b65\u5c0f\u6b65\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u3002</p> <p>\u8981\u6c42\u51fa\u6ee1\u8db3 \\(h = g^a \\bmod p\\) \u4e2d \\(a\\) \u7684\u503c\u3002</p> <p>\u4ee4 \\(r = \\sqrt{p}\\)\uff0c\u5219 \\(a\\) \u53ef\u8868\u793a\u4e3a \\(a = a_0 + r a_1\\) \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d \\(0 \\le a_0, a_1, \\le r\\)</p> <p>\u6709 \\(hg^{- a_0} = g^{a-a_0} = g^{ra_1}\\)</p> </li> </ol> <p>\u200b   \u56e0\u6b64\u9996\u5148\u679a\u4e3e\u6240\u6709 \\(a_0\\)\uff0c\u5c06 \\(hg^{- a_0}\\) \u52a0\u5165\u54c8\u5e0c\u8868\u4e2d\u3002\u7136\u540e\u679a\u4e3e\u6240\u6709\u7684 \\(a_1\\)\uff0c\u8ba1\u7b97 \\(g^{ra_1}\\) \u662f\u5426\u51fa\u73b0\u5728\u8868\u4e2d\uff0c\u5728\u4e0d\u8003\u8651\u5e42\u8fd0\u7b97\u7684\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\sqrt{p})\\)</p>"},{"location":"archive/crypto/#8","title":"\u7b2c \\(8\\) \u7ae0 \u6570\u5b57\u7b7e\u540d\u6280\u672f","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u274e\u274e\u274e\u2705\u274e</p> <p>06-10   \u274e\u274e\u2705\u274e\u2705</p> <p>11-15   \u2705\u2705\u2705\u2705\u274e</p> <p>01-05   DACBD</p> <p>06-10   ADCDB</p> <p>11-14   BADC</p>"},{"location":"archive/crypto/#_20","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\u5b8c\u6574\u6027 \u8ba4\u8bc1\u6027</li> <li>\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5 \u7b7e\u540d\u7b97\u6cd5 \u9a8c\u8bc1\u7b97\u6cd5</li> <li>ElGamma\u7b7e\u540d\u65b9\u6848 Schnorr\u7b7e\u540d\u65b9\u6848</li> <li>\u6709\u5e8f\u591a\u91cd\u6570\u5b57\u7b7e\u540d \u5e7f\u64ad\u591a\u91cd\u6570\u5b57\u7b7e\u540d</li> <li>\u533f\u540d\u6027 \u4e0d\u5173\u8054\u6027</li> <li>\u533f\u540d\u6027 \u4e0d\u53ef\u8ffd\u8e2a\u6027</li> <li>\u5b8c\u5168\u59d4\u6258\u7684\u4ee3\u7406\u7b7e\u540d \u90e8\u5206\u6388\u6743\u7684\u4ee3\u7406\u7b7e\u540d \u5e26\u6388\u6743\u4e66\u7684\u4ee3\u7406\u7b7e\u540d</li> <li>\u4e0d\u53ef\u5426\u8ba4\u7b97\u6cd5</li> <li>\u73af\u7b7e\u540d \u591a\u91cd\u7b7e\u540d</li> <li>\u7b7e\u540d\u7ec4\u5408\u7b97\u6cd5</li> </ol>"},{"location":"archive/crypto/#_21","title":"\u7b80\u7b54\u9898","text":"<ol> <li> <p>\u6570\u5b57\u7b7e\u540d\u4e0e\u4f20\u7edf\u7684\u624b\u5199\u7b7e\u540d\u76f8\u6bd4\u6709\u54ea\u4e9b\u533a\u522b\uff1f</p> </li> <li> <p>\u7b80\u8ff0\u6570\u5b57\u7b7e\u540d\u7684\u539f\u7406\u3002</p> </li> <li> <p>\u7b80\u8ff0\u6d88\u606f\u8ba4\u8bc1\u7801\u548c\u6570\u5b57\u7b7e\u540d\u7684\u533a\u522b\u3002</p> \u6d88\u606f\u8ba4\u8bc1\u7801 \u6570\u5b57\u7b7e\u540d \u53d1\u9001\u8005 \u7528\u5bf9\u79f0\u5bc6\u94a5\u8ba1\u7b97MAC \u7528\u79c1\u94a5\u751f\u6210\u7b7e\u540d \u63a5\u53d7\u8005 \u7528\u5bf9\u79f0\u5bc6\u94a5\u8ba1\u7b97MAC \u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d \u5bc6\u94a5\u5206\u53d1\u95ee\u9898 \u5b58\u5728 \u4e0d\u5b58\u5728 \u6548\u7387 \u9ad8 \u4f4e \u5b8c\u6574\u6027 \u652f\u6301 \u652f\u6301 \u8ba4\u8bc1\u6027 \u652f\u6301\uff08\u4ec5\u9650\u901a\u4fe1\u53cc\u65b9\uff09 \u652f\u6301\uff08\u53ef\u9002\u7528\u4e8e\u7b2c\u4e09\u65b9\uff09 \u4e0d\u53ef\u5426\u8ba4\u6027 \u4e0d\u652f\u6301\uff08\u53cc\u65b9\u90fd\u80fd\u53d1\uff09 \u652f\u6301 </li> </ol>"},{"location":"archive/crypto/#9","title":"\u7b2c \\(9\\) \u7ae0 \u5bc6\u7801\u534f\u8bae","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u274e\u2705\u2705\u274e\u2705</p> <p>06-10   \u274e\u2705\u274e\u2705\u2705</p> <p>11-15   \u2705\u274e\u2705\u274e\u274e</p> <p>16-20   \u274e\u2705\u2705\u274e\u274e   </p> <p>01-05   CBCDA</p> <p>06-10   CDDBC</p> <p>11-12   CB</p>"},{"location":"archive/crypto/#10","title":"\u7b2c \\(10\\) \u7ae0 \u5bc6\u94a5\u7ba1\u7406","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-05   \u2705\u2705\u2705\u274e\u274e</p> <p>06-10   \u2705\u274e\u2705\u2705\u274e</p> <p>11-15   \u274e\u2705\u2705\u274e\u274e</p> <p>16-17   \u2705\u2705</p> <p>01-05   CACCB</p> <p>06-10   CBACB</p> <p>11-14   CDCD</p>"},{"location":"archive/crypto/#_22","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\u4e3b\u5bc6\u94a5 \u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5 \u4f1a\u8bdd\u5bc6\u94a5</li> <li>\u5bc6\u94a5\u5206\u914d \u5bc6\u94a5\u534f\u5546</li> <li>\u4f7f\u7528\u524d\u72b6\u6001 \u4f7f\u7528\u72b6\u6001 \u4f7f\u7528\u540e\u72b6\u6001 \u8fc7\u671f\u72b6\u6001</li> <li>\u5bc6\u94a5\u5b58\u6863 \u5bc6\u94a5\u9500\u6bc1</li> <li>\u65e0\u5bc6\u94a5\u5bc6\u94a5\u5206\u914d \u6709\u5bc6\u94a5\u5bc6\u94a5\u5206\u914d</li> <li>\u751f\u6210\u7684\u5bc6\u94a5\u662f\u7531\u4e00\u65b9\u751f\u6210\u7684\u8fd8\u662f\u53cc\u65b9\u5404\u81ea\u751f\u6210\u90e8\u5206\u5bc6\u94a5\u540e\u534f\u5546\u751f\u6210\u5bc6\u94a5</li> <li>\u4e2d\u95f4\u4eba\u653b\u51fb</li> <li>CA \u7684\u7b7e\u540d</li> <li>\u6838\u5b9e\u7533\u8bf7\u8bc1\u4e66\u7684\u7528\u6237\u7684\u4fe1\u606f</li> <li>\u8bc1\u4e66\u5230\u671f \u56e0\u5b89\u5168\u539f\u56e0\u63d0\u524d\u7ec8\u6b62\u8bc1\u4e66\u7684\u4f7f\u7528 \u8bc1\u4e66\u6269\u5c55\u5185\u5bb9\u53d1\u751f\u91cd\u5927\u53d8\u5316</li> <li>\u7528\u6237\u5b89\u5168\u6210\u5206 \u5bc6\u94a5\u6258\u7ba1\u6210\u5206 \u6570\u636e\u6062\u590d\u6210\u5206</li> <li>\u62c9\u683c\u6717\u65e5\u63d2\u503c</li> <li>\u4e2d\u56fd\u5269\u4f59  </li> </ol>"},{"location":"archive/crypto/#11","title":"\u7b2c \\(11\\) \u7ae0 \u7f51\u7edc\u5b89\u5168\u534f\u8bae","text":"<p>\u5224\u65ad\u9009\u62e9</p> <p>01-04   \u2705\u274e\u274e\u2705</p> <p>01-05   CDAD</p>"},{"location":"archive/crypto/#_23","title":"\u586b\u7a7a\u9898","text":"<ol> <li>\u63e1\u624b\u534f\u8bae \u8bb0\u5f55\u534f\u8bae</li> <li>\\(4\\) \\(2\\)</li> <li>\u673a\u5bc6\u6027 \u5b8c\u6574\u6027 \u8ba4\u8bc1\u6027</li> <li>\u533f\u540dSSL\u8fde\u63a5 \u5bf9\u7b49\u5b89\u5168\u670d\u52a1 \u7f51\u4e0a\u4ea4\u6613</li> </ol>"},{"location":"archive/graph/","title":"\u56fe\u8bba\u671f\u672b\u590d\u4e60","text":"<p>\u6559\u5b66\u4e91\u5e73\u53f0 (bupt.edu.cn)</p>"},{"location":"archive/graph/#_1","title":"\u7b2c\u4e00\u7ae0 \u56fe\u7684\u6982\u5ff5","text":""},{"location":"archive/graph/#11","title":"1.1 \u56fe\u7684\u6982\u5ff5","text":"<ul> <li>\u82e5\u4e00\u7fa4\u4eba\u4e2d\uff0c\u51e1\u76f8\u8bc6\u7684\u4e24\u4eba\u90fd\u65e0\u516c\u5171\u670b\u53cb\uff0c\u51e1\u4e0d\u76f8\u8bc6\u7684\u4e24\u4eba\u90fd\u6070\u6709\u4e24\u4e2a\u516c\u5171\u670b\u53cb\uff0c\u5219\u6bcf\u4eba\u7684\u670b\u53cb\u6570\u76f8\u7b49(\u76f8\u8bc6\u8005\u4e92\u4e3a\u670b\u53cb)\u3002</li> <li>\u8bc1\u660e\u5728\u4efb\u610f 6 \u4e2a\u4eba\u7684\u805a\u4f1a\u4e0a\uff0c\u8981\u4e48\u6709 3 \u4e2a\u4eba\u4e92\u76f8\u8ba4\u8bc6\uff0c\u8981\u4e48\u6709 3 \u4e2a\u4e92\u4e0d\u8ba4\u8bc6\u3002</li> </ul> <p>\u200b   \u8bc1\u660e\uff1a\u5c06 6 \u4eba\u7f16\u53f7\u4e3a \\(ABCDEF\\)\uff0c\u5219\u5bf9\u4e8e \\(A\\)\uff0c\u5176\u4f59 \\(5\\) \u4eba\u8981\u4e48\u8ba4\u8bc6 \\(A\\)\uff0c\u8981\u4e48\u4e0d\u8ba4\u8bc6 \\(A\\)\uff0c\u8981\u4e48\u5b58\u5728 \\(3\\) \u4eba \u90fd\u8ba4\u8bc6 \\(A\\)\uff0c\u8981\u4e48\u5b58\u5728 \\(3\\) \u4eba\u90fd\u4e0d\u8ba4\u8bc6 \\(A\\)</p> <p>\u200b   \u4e0d\u59a8\u8bbe \\(BCD\\) \u90fd\u8ba4\u8bc6 \\(A\\)\uff0c\u8003\u8651 \\(BCD\\) \u662f\u5426\u76f8\u4e92\u8ba4\u8bc6\u3002</p> <p>\u200b   \u5982\u679c \\(BCD\\) \u4e4b\u95f4\u4e92\u4e0d\u8ba4\u8bc6\uff0c\u5219 \\(BCD\\) \u5c31\u662f\u6ee1\u8db3\u6761\u4ef6\u7684 \\(3\\) \u4e2a\u4e92\u4e0d\u8ba4\u8bc6\u7684\u4eba\u3002</p> <p>\u200b   \u5982\u679c \\(BCD\\) \u5b58\u5728\u4e24\u4eba\u76f8\u4e92\u8ba4\u8bc6\uff0c\u4e0d\u59a8\u8bbe \\(B\\) \u8ba4\u8bc6 \\(C\\)\uff0c\u5219 \\(ABC\\) \u5c31\u662f\u6ee1\u8db3\u6761\u4ef6\u7684 \\(3\\) \u4e2a\u4e92\u76f8    \u8ba4\u8bc6\u7684\u4eba\u3002</p> <ul> <li> <p>Ramsey\u6570\u8fdb\u5c55\uff1a\u5bf9\u79f0\u77e9\u9635</p> \\(r, s\\) \\(3\\) \\(4\\) \\(5\\) \\(6\\) \\(7\\) \\(8\\) \\(9\\) \\(3\\) 6 9 14 18 23 28 36 \\(4\\) 18 25 </li> </ul>"},{"location":"archive/graph/#12-13","title":"1.2-1.3 \u56fe\u540c\u6784\u3001\u5b50\u56fe","text":"<ul> <li> <p>\u5728\u4eba\u6570\u5927\u4e8e 1 \u7684\u4efb\u4f55\u4e00\u4e2a\u7fa4\u4f53\u4e2d\uff0c\u4e00\u5b9a\u6709\u4e24\u4e2a\u6216\u8005\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4eba\u5728\u8be5\u7fa4\u4f53\u4e2d\u6709\u76f8\u540c\u7684\u670b\u53cb\u6570\u3002</p> <p>\\(n\\) \u4e2a\u70b9\u7684\u7b80\u5355\u56fe\uff0c\u70b9\u7684\u5ea6\u6570\u81f3\u591a\u4e3a \\(n-1\\)\uff0c\u81f3\u5c11\u4e3a \\(0\\)\uff0c\u53d6\u503c\u8303\u56f4\u662f \\([0, n-1]\\)\uff0c\u800c \\(0\\) \u548c \\(n-1\\) \u4e0d\u4f1a\u540c\u65f6\u53d6\u5f97\uff0c\u56e0\u6b64\uff0c\u5728\u4e00\u4e2a\u56fe\u4e2d\u81f3\u591a\u6709 \\(n-1\\) \u79cd\u5ea6\u6570\u7684\u53d6\u503c\uff0c\u6709 \\(n\\) \u4e2a\u70b9\uff0c\u6240\u4ee5\u4e00\u5b9a\u6709\u4e24\u4e2a\u6216\u8005\u4e24\u4e2a\u4ee5\u4e0a\u7684\u70b9\u5ea6\u6570\u76f8\u7b49\u3002</p> </li> <li> <p>\u8bc1\u660e\uff1a\u5982\u679c\u4e00\u4e2a\u56fe\u4e0e\u5176\u8865\u56fe\u540c\u6784\uff0c\u5219 \\(n \\equiv 0 \\bmod 4\\) \u6216\u8005 \\(n \\equiv 1 \\bmod 4\\)</p> </li> </ul> <p>\u200b   \u8bbe\u539f\u56fe\u8fb9\u6570\u4e3a \\(m\\)\uff0c\u5219\u8865\u56fe\u8fb9\u6570\u4e5f\u4e3a \\(m\\)\uff0c\u5b8c\u5168\u56fe\u7684\u8fb9\u6570\u4e3a \\(\\frac{n(n-1)}{2}\\) \u5219\u6709\uff1a\\(2m = \\frac{n(n-1)}{2}\\)</p> <p>\u200b   \u56e0\u6b64\u6709 \\(n(n-1) = 4m\\)</p> <p>\u200b   \u6240\u4ee5 \\(n \\equiv 0 \\bmod 4\\) \u6216\u8005 \\(n \\equiv 1 \\bmod 4\\)</p> <ul> <li> <p>\\(\\delta\\) \u8868\u793a\u6700\u5c0f\u5ea6\uff0c\\(\\Delta\\) \u8868\u793a\u6700\u5927\u5ea6\uff0c\\(\\varepsilon\\) \u8868\u793a\u8fb9\u6570\uff0c\\(v\\) \u8868\u793a\u70b9\u6570\uff0c\u5219\u6709 \\(\\delta \\le \\frac{2\\varepsilon}{v} \\le v\\)</p> </li> <li> <p>\u8bbe\u5e73\u9762\u4e0a\u6709 \\(n\\) \u4e2a\u70b9\uff0c\u5176\u4e2d\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u4f55\u8ddd\u79bb\u5927\u4e8e\u6216\u7b49\u4e8e \\(1\\) \uff0c\u8bc1\u660e\uff1a\u6700\u6709 \\(3n\\) \u5bf9\u70b9\u7684\u8ddd\u79bb\u7b49\u4e8e \\(1\\)\u3002</p> </li> </ul> <p>\u200b   \u5728\u4e00\u4e2a\u5355\u4f4d\u5706\u4e0a\uff0c\u81f3\u591a\u6709 \\(6\\) \u4e2a\u5706\u4e0a\u7684\u70b9\u76f8\u4e92\u4e4b\u95f4\u7684\u8ddd\u79bb\u7b49\u4e8e \\(1\\)\uff08\u6bcf\u76f8\u90bb\u7684\u4e00\u5bf9\u70b9\u548c\u5706\u5fc3\u7ec4\u6210\u7b49\u8fb9\u4e09\u89d2\u5f62\uff0c\u89d2\u5ea6\u4e3a \\(60\\) \uff09</p> <p>\u200b   \u5c06\u8ddd\u79bb\u7b49\u4e8e \\(1\\) \u7684\u4e24\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u3002\u4e00\u5171\u6709 \\(n\\) \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u81f3\u591a\u4e3a \\(6\\).</p> <p>\u200b   \u56e0\u6b64\u6709 \\(|E| \\le 6n\\)\uff0c\u5373\u81f3\u591a \\(3n\\) \u5bf9\u70b9\u8ddd\u79bb\u7b49\u4e8e \\(1\\)</p>"},{"location":"archive/graph/#14-16","title":"1.4-1.6 \u8def\u548c\u8fde\u901a\u6027\u3001\u5708\u3001\u56fe\u7684\u6570\u636e\u7ed3\u6784","text":"<ul> <li> <p>\u4e00\u4e9b\u6982\u5ff5\uff1a</p> <ul> <li>\u9014\u5f84\uff1a\u5141\u8bb8\u8fb9\u548c\u70b9\u91cd\u590d\u3002</li> <li>\u8ff9\uff1a\u4e0d\u5141\u8bb8\u8fb9\u91cd\u590d\uff0c\u5141\u8bb8\u70b9\u91cd\u590d\u3002</li> <li>\u8def\uff1a\u4e0d\u5141\u8bb8\u8fb9\u548c\u70b9\u91cd\u590d\u3002</li> <li>\u8ddd\u79bb\uff1a\u6700\u77ed\u8def\u7684\u957f\u3002</li> </ul> </li> <li> <p>\u5728\u7b80\u5355\u56fe \\(G\\) \u4e2d\uff0c\u82e5 \\(\\delta \\ge k\\)\uff0c\u5219\u56fe \\(G\\) \u4e2d\u6709\u957f\u5ea6\u81f3\u5c11\u4e3a \\(k\\) \u7684\u8def\u3002</p> <p>\u8bc1\u660e\uff1a\u82e5\u56fe\u4e2d\u7684\u6700\u957f\u8def\u7684\u957f\u5ea6\u5c0f\u4e8e \\(k\\)\uff0c\u4e0d\u59a8\u8bbe\u6700\u957f\u8def\u5e8f\u5217\u4e3a \\(P_1P_2\\cdots P_n\\)\uff0c\u5176\u4e2d \\(n \\le k\\)</p> <p>\u7531\u4e8e \\(\\delta \\ge k\\)\uff0c\u56e0\u6b64\u7ec8\u70b9 \\(P_n\\) \u81f3\u5c11\u6709 \\(k\\) \u4e2a\u90bb\u5c45\uff0c\u7531\u4e8e \\(n \\le k\\)\uff0c\u5373 \\(P_n\\) \u7684\u90bb\u5c45\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u5728\u5e8f\u5217\u4e2d\uff0c\u5c06\u5176\u4f5c\u4e3a\u7ec8\u70b9\u5f97\u5230\u7684\u8def\u4f1a\u66f4\u957f\uff0c\u8fd9\u5c31\u4ea7\u751f\u77db\u76fe\u3002</p> </li> <li> <p>\\(G\\) \u8fde\u901a \\(\\Leftrightarrow\\) \u5bf9 \\(\\forall S \\subset V\\) \u90fd\u6709 \\([S, \\overline{S}] \\ne \\varnothing\\)</p> </li> <li> <p>\u8bbe\u6709 \\(2n\\) \u4e2a\u7535\u8bdd\u4ea4\u6362\u53f0\uff0c\u6bcf\u4e2a\u53f0\u4e0e\u81f3\u5c11\u5176\u4ed6 \\(n\\) \u4e2a\u53f0\u6709\u76f4\u901a\u7ebf\u8def\uff0c\u5219\u8be5\u4ea4\u6362\u7cfb\u7edf\u4e2d\u4efb\u4e8c\u53f0\u5747\u53ef\u5b9e\u73b0\u901a\u8bdd\u3002</p> <p>\u8bc1\u660e\uff1a\u539f\u9898\u8868\u793a\u4e3a\u7b80\u5355\u56fe \\(G\\) \u6709 \\(2n\\) \u4e2a\u9876\u70b9\uff0c\u4e14\u6700\u5c0f\u5ea6\u6570\u4e3a \\(n\\)\uff0c\u6c42\u8bc1\u56fe \\(G\\) \u8fde\u901a\u3002</p> <p>\u5047\u8bbe\u56fe \\(G\\) \u4e0d\u8fde\u901a\uff0c\u5219\u81f3\u5c11\u5b58\u5728 \\(2\\) \u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u9876\u70b9\u6570\u4e0d\u8d85\u8fc7 \\(n\\)\uff0c\u800c\u5bf9\u4e8e\u4e00\u4e2a \\(n\\) \u4e2a\u9876\u70b9\u7684\u56fe\uff0c\u5ea6\u6570\u7684\u6700\u5927\u503c\u4e3a \\(n-1\\)\uff0c\u8fd9\u5c31\u4ea7\u751f\u77db\u76fe\uff0c\u56e0\u6b64\u5047\u8bbe\u4e0d\u6210\u7acb\u3002</p> </li> <li> <p>\u82e5\u56fe \\(G\\) \u8fde\u901a\uff0c\u4e14\u5bf9 \\(\\forall v \\in V\\)\uff0c\\(d(v)\\) \u4e3a\u5076\u6570 \\(\\Rightarrow\\) \\(\\omega(G-v) \\le \\frac{d(v)}{2}\\)\u3002\u5176\u4e2d \\(G-v\\) \u8868\u793a\u56fe \\(G\\) \u5220\u53bb\u70b9 \\(v\\) \u5f97\u5230\u7684\u56fe\uff0c\\(\\omega\\) \u8868\u793a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\u3002</p> </li> <li> <p>\u8fde\u901a\u56fe\u4e2d\uff0c\u4efb\u4e8c\u6700\u957f\u8def\u5fc5\u6709\u516c\u5171\u9876\u70b9\u3002</p> </li> <li> <p>\u7ade\u8d5b\u56fe\uff1a\u5728\u65e0\u5411\u5b8c\u5168\u56fe\u4e2d\u4e3a\u6bcf\u4e2a\u8fb9\u5206\u914d\u4e00\u4e2a\u65b9\u5411\uff0c\u5f97\u5230\u7ade\u8d5b\u56fe\u3002</p> </li> <li> <p>\\(G\\) \u4e3a\u4e8c\u5206\u56fe \\(\\Leftrightarrow\\) \\(G\\) \u4e0d\u542b\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u5708</p> </li> <li> <p>\u82e5\u7b80\u5355\u56fe \\(G\\) \u4e2d \\(\\delta \\ge 2\\)\uff0c\u5219 \\(G\\) \u542b\u957f\u5ea6\u5927\u4e8e \\(\\delta\\) \u7684\u5708\u3002</p> <p>\u8bc1\u660e\uff1a\u4ece\u56fe\u4e2d\u4efb\u610f\u9009\u53d6\u4e00\u4e2a\u70b9\u5f00\u59cb\u53cc\u5411\u6269\u5c55\u8def\u5f84\uff0c\u76f4\u5230\u65e0\u6cd5\u518d\u6269\u5c55\uff0c\u6b64\u65f6\u5f97\u5230\u4e00\u6761\u8def\u5f84 \\(P = P_1P_2\\cdots P_k\\)\uff0c\u7531\u4e8e \\(\\delta\\) \u8868\u793a\u6700\u5c0f\u5ea6\u6570\uff0c\u5219 \\(P_k\\) \u81f3\u5c11\u6709 \\(\\delta\\) \u4e2a\u90bb\u5c45\u3002</p> <p>\u53c8\u56e0\u4e3a\u8def\u5f84 \\(P\\) \u65e0\u6cd5\u518d\u6269\u5c55\uff0c\u6240\u4ee5 \\(P_k\\) \u7684\u6240\u6709\u90bb\u5c45\u90fd\u5728\u8def\u5f84 \\(P\\) \u5f53\u4e2d\u3002\u53d6\u5176\u4e2d\u6807\u53f7\u6700\u5c0f\u7684\u90bb\u5c45\uff0c\u8bb0\u4e3a \\(P_i\\)\uff0c\u5219\u6709\u5708 \\(C = P_iP_{i+1}\\cdots P_kP_i\\)\uff0c\u8fd9\u4e2a\u5708\u7684\u957f\u5ea6\u81f3\u5c11\u4e3a \\(\\delta + 1\\)</p> </li> </ul>"},{"location":"archive/graph/#_2","title":"\u7b2c\u4e8c\u7ae0 \u6700\u77ed\u8def\u95ee\u9898","text":""},{"location":"archive/graph/#_3","title":"\u7b2c\u4e09\u7ae0 \u6811","text":""},{"location":"archive/graph/#31","title":"3.1 \u6811\u7684\u6982\u5ff5","text":"<ul> <li> <p>\u6bcf\u68f5\u975e\u5e73\u51e1\u6811\u81f3\u5c11\u6709\u4e24\u4e2a\u5ea6\u4e3a \\(1\\) \u7684\u9876\u70b9\uff08\u60ac\u6302\u70b9\uff09\u3002</p> <p>\u8bc1\u660e\uff1a\u8bbe\u4efb\u610f\u975e\u5e73\u51e1\u6811\u6709 \\(n(n &gt; 1)\\) \u4e2a\u70b9\uff0c\u5176\u4e2d\u6709 \\(k\\) \u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a \\(1\\)\uff0c\u5176\u4f59\u7684 \\(n-k\\) \u4e2a\u70b9\u5ea6\u6570\u5927\u4e8e \\(1\\)</p> <p>\u6839\u636e\u63e1\u624b\u5b9a\u7406\u6709 \\(2m = 2n-2 \\ge k + 2(n-k) = 2n-k\\)\uff0c\u5373 \\(k \\ge 2\\)</p> </li> <li> <p>\u6070\u53ea\u5305\u542b\u4e24\u4e2a\u5ea6\u4e3a \\(1\\) \u9876\u70b9\u7684\u6811\u662f\u8def\u3002</p> <p>\u8bc1\u660e\uff1a\u7531\u4e0a\u4e00\u4e2a\u63a8\u8bba\u53ef\u77e5\uff0c\u5982\u679c\u5176\u4f59\u7684 \\(n-2\\) \u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u7b49\u4e8e \\(2\\)\uff0c\u5219\u6b64\u65f6\u6070\u597d\u6709 \\(2\\) \u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a \\(1\\)\uff0c\u6b64\u65f6\u6811\u7684\u5f62\u72b6\u4e3a\u4e00\u6761\u76f4\u7ebf\uff0c\u4e5f\u5c31\u662f\u4e00\u6761\u8def\u3002</p> </li> <li> <p>\u56fe \\(G\\) \u662f\u6811\uff0c\u5219\u56fe \\(G\\) \u8981\u4e48\u53ea\u6709\u4e00\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u8981\u4e48\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u4e2d\u5fc3\u70b9\u3002</p> </li> </ul>"},{"location":"archive/graph/#32","title":"3.2 \u751f\u6210\u6811\u3001\u4f59\u6811\u548c\u952e","text":"<ul> <li> <p>\u8bbe \\(T\\) \u4e3a\u8fde\u901a\u56fe \\(G\\) \u7684\u4e00\u4e2a\u751f\u6210\u6811\uff0c \\(e\\) \u4e3a \\(T\\) \u7684\u4e00\u6761\u8fb9\uff0c\u5219\uff1a</p> <ul> <li>\u4f59\u6811 \\(\\overline{T}\\) \u4e0d\u5305\u542b \\(G\\) \u7684\u952e\uff1b</li> <li>\\(\\overline{T} + e\\) \u4e2d\u552f\u4e00\u5305\u542b \\(G\\) \u7684\u4e00\u4e2a\u952e\u3002</li> </ul> </li> <li> <p>\u8bbe \\(F\\) \u662f \\(G\\) \u7684\u6781\u5927\u6797\uff0c\u5219\uff1a</p> <ul> <li>\u5bf9 \\(G\\) \u7684\u6bcf\u4e2a\u5206\u652f \\(H\\) \uff0c \\(F\\cap H\\) \u662f \\(H\\) \u7684\u751f\u6210\u6811\uff1b</li> <li>\\(\\varepsilon(F) = v(G) - \\omega(G)\\)\u3002</li> </ul> </li> <li> <p>\u4efb\u4e00\u56fe \\(G\\) \u81f3\u5c11\u5305\u542b \\(\\varepsilon - v + \\omega\\) \u4e2a\u4e0d\u540c\u7684\u5708\u3002</p> </li> <li> <p>\u82e5 \\(G\\) \u7684\u6bcf\u4e2a\u9876\u70b9\u5747\u4e3a\u5076\u70b9\uff08\u5373\u5ea6\u4e3a\u5076\u6570\u7684\u9876\u70b9\uff09\uff0c\u5219 \\(G\\) \u6ca1\u6709\u5272\u8fb9</p> <p>\u8bc1\u660e\uff1a\u5047\u8bbe\u56fe \\(G\\) \u7684\u67d0\u6761\u8fb9 \\((u, v)\\) \u662f\u5272\u8fb9\uff0c\u5220\u53bb\u8fd9\u6761\u8fb9\u540e\u5c06\u56fe\u5206\u4e3a\u4e24\u4e2a\u8fde\u901a\u5206\u91cf \\(X\\) \u548c \\(Y\\)\uff0c\u5176\u4e2d \\(X\\) \u662f\u5305\u542b\u4e86\u70b9 \\(u\\) \u7684\u8fde\u901a\u5206\u91cf\u3002</p> </li> </ul> <p>\u200b   \u5219\u5728 \\(X\\) \u4e2d\uff0c\u9664\u4e86\u70b9 \\(u\\) \u5176\u4f59\u7684\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570\uff0c\u53ea\u6709\u70b9 \\(u\\) \u7684\u5ea6\u6570\u662f\u5947\u6570\uff0c\u8fd9\u4e0e\u63e1\u624b\u5b9a\u7406\u77db\u76fe\u3002\u56e0\u6b64\u5047\u8bbe\u4e0d\u6210\u7acb\u3002</p> <ul> <li> <p>\u82e5 \\(G\\) \u662f \\(k\\)-\u6b63\u5219\u5076\u56fe\u4e14 \\(k \\ge 2\\) \uff0c\u5219\u6ca1\u6709\u5272\u8fb9\u3002</p> <p>\u8bc1\u660e\uff1a\u5047\u8bbe\u56fe \\(G\\) \u7684\u67d0\u6761\u8fb9 \\((u, v)\\) \u662f\u5272\u8fb9\uff0c\u5220\u53bb\u8fd9\u6761\u8fb9\u540e\u5c06\u56fe\u5206\u4e3a\u4e24\u4e2a\u8fde\u901a\u5206\u91cf \\(X\\) \u548c \\(Y\\)\uff0c\u5176\u4e2d \\(X\\) \u662f\u5305\u542b\u4e86\u70b9 \\(u\\) \u7684\u8fde\u901a\u5206\u91cf\u3002</p> <p>\u7531\u4e8e \\(G\\) \u662f \\(k\\)-\u6b63\u5219\u5076\u56fe\uff0c\u5219 \\(X\\) \u4e5f\u662f\u5076\u56fe\uff0c\u8bbe \\(X\\) \u7684\u4e8c\u90e8\u5212\u5206\u4e3a \\(S\\) \u548c \\(T\\)\uff0c\u4e0d\u59a8\u8bbe \\(S\\) \u5305\u542b\u4e86\u70b9 \\(u\\)\u3002</p> <p>\u6839\u636e\u5076\u56fe\u7684\u6027\u8d28\u53ef\u77e5 \\(S\\) \u7684\u5ea6\u6570\u4e4b\u548c\u7b49\u4e8e \\(T\\) \u7684\u5ea6\u6570\u4e4b\u548c\u3002\u8bbe \\(|S| = s\\)\uff0c\\(|T| = t\\)</p> <p>\u56e0\u6b64\u6709 \\(sk - 1 = tk\\)</p> <p>\u82e5 \\(s \\ge t\\) \u5219 \\((s-t)k = 1\\)\uff0c\u53c8\u56e0\u4e3a \\(k &gt; 1\\)\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u51b5\u4e0d\u6210\u7acb\u3002</p> <p>\u82e5 \\(s &lt; t\\) \u5219 \\((t-s)k = -1\\)\uff0c\u540c\u6837\u4e0d\u6210\u7acb\u3002</p> <p>\u56e0\u6b64\u6ca1\u6709\u5272\u8fb9\u3002</p> </li> <li> <p>\u5f53\u56fe \\(G\\) \u8fde\u901a\u65f6\uff0c\u82e5 \\(S \\ne \\varnothing\\)\uff0c\u5219\u8fb9\u5272 \\(B = [S, \\overline{S}]\\) \u4e3a\u952e\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f \\(G[S]\\)\uff0c\\(G[\\overline{S}]\\) \u90fd\u8fde\u901a\u3002</p> </li> <li> <p>\u56fe \\(G\\) \u7684\u6bcf\u2f00\u4e2a\u8fb9\u5272\u662f\u56fe \\(G\\) \u7684\u2f00\u4e9b\u952e(\u5373\u5272\u96c6)\u7684\u8fb9\u4e0d\u91cd\u5e76\u3002</p> </li> <li> <p>\u5728\u56fe \\(G\\) \u4e2d\uff0c\u8bbe \\(B_1\\) \u548c \\(B_2\\) \u4e3a\u952e\uff0c \\(C_1\\) \u548c \\(C_2\\) \u4e3a \u5708\uff08\u770b\u4f5c\u8fb9\u2f26\u96c6\uff09\uff0c\u5219\uff1a</p> <ul> <li>\\(B_1 \\oplus B_2\\) \u662f\u56fe \\(G\\) \u7684\u952e\u7684\u8fb9\u4e0d\u91cd\u5e76\u96c6\uff1b</li> <li>\\(C_1 \\oplus C_2\\) \u662f\u56fe \\(G\\) \u7684\u952e\u7684\u8fb9\u4e0d\u91cd\u5e76\u96c6\uff1b</li> <li>\u5bf9\u56fe \\(G\\) \u7684\u4efb\u610f\u4e00\u6761\u8fb9 \\(e\\)\uff0c\\((B_1 \\cup B_2)\\backslash \\{e\\}\\) \u90fd\u5305\u542b\u952e;</li> <li>\u5bf9\u56fe \\(G\\) \u7684\u4efb\u610f\u4e00\u6761\u8fb9 \\(e\\)\uff0c\\((C_1 \\cup C_2)\\backslash \\{e\\}\\) \u90fd\u5305\u542b\u5708;</li> </ul> </li> <li> <p>\u82e5\u56fe \\(G\\) \u5305\u542b \\(k\\) \u68f5\u8fb9\u4e0d\u91cd\u7684\u2f63\u6210\u6811\uff0c\u5219\u5bf9\u4e8e\u9876\u70b9\u96c6\u6bcf\u2f00\u4e2a\u5212\u5206 \\((V_1, V_2, \\cdots , V_n)\\)\uff0c\u4e24\u4e2a\u7aef\u70b9\u5728\u8fd9\u4e2a\u5212\u5206\u7684\u4e0d\u540c\u90e8\u5206\u7684\u8fb9\u7684\u6570\u76ee\u81f3\u5c11\u4e3a \\(k(n-1)\\)\u3002</p> </li> <li>\u82e5\u8fde\u901a\u56fe \\(G\\) \u7684\u8fb9\u5b50\u96c6 \\(E'\\) \u4e0e\u56fe \\(G\\) \u7684\u6bcf\u2f00\u68f5\u751f\u6210\u6811\u90fd\u6709\u516c\u5171\u8fb9\uff0c\u5219 \\(E'\\) \u5305\u542b \u7684\u2f00\u4e2a\u56fe \\(G\\) \u7684\u8fb9\u5272\u3002 \uff08\u63d0\u793a\uff1a\u8bc1\u660e \\(G\u2f00E'\\) \u4e0d\u8fde\u901a\u3002\uff09</li> <li>\u82e5\u70b9 \\(u\\) \u662f\u7b80\u5355\u8fde\u901a\u56fe \\(G\\) \u7684\u5272\u70b9\uff0c\u5219\u70b9 \\(u\\) \u662f\u56fe \\(G^C\\) \u7684\u975e\u5272\u70b9\u3002(\u63d0\u793a:\u2f00\u822c\u5730\uff0c\u56fe \\(G\\) \u4e0d\u8fde\u901a\uff0c\u5219\u56fe \\(G^C\\) \u8fde\u901a\u3002)</li> <li>\u82e5\u6811 \\(T\\) \u4e3a\u8fde\u901a\u56fe \\(G\\) \u7684\u4efb\u610f\u2f00\u68f5\u6811(\u4e0d\u2f00\u5b9a\u4e3a\u751f\u6210\u6811)\uff0c\\(e \\in E(T)\\)\uff0c\u5219\u5728\u56fe \\(G\\) \u4e2d\u2f00\u5b9a\u6709\u2f00\u4e2a\u952e \\(B\\)\uff0c\u4f7f\u5f97 \\(B \\cap T = \\{e\\}\\)\u3002</li> </ul>"},{"location":"archive/graph/#_4","title":"\u7b2c\u56db\u7ae0 \u5339\u914d","text":""},{"location":"archive/graph/#41","title":"4.1 \u5339\u914d","text":"<ul> <li>\\(M\\) \u4e3a \\(G\\) \u4e2d\u7684\u6700\u5927\u5339\u914d \\(\\Leftrightarrow\\) G \u4e2d\u4e0d\u5728 \\(M\\)-\u53ef\u6269\u8def\u3002</li> <li>\\(M\\)-\u53ef\u6269\u8def\u7684\u8fb9\u6570\u662f\u5947\u6570\u3002</li> </ul>"},{"location":"archive/graph/#42","title":"4.2 \u72ec\u7acb\u96c6\u3001\u56e2\u3001\u8986\u76d6\u548c\u5339\u914d\u53ca\u5176\u4e4b\u95f4\u7684\u5173\u7cfb","text":"<ul> <li>\u8bfe\u672c\u4e2d\u8986\u76d6\u8868\u793a\u70b9\u8986\u76d6\u3002\u8fb9\u8986\u76d6\u624d\u662f\u8fb9\u8986\u76d6\u3002</li> <li>\u72ec\u7acb\u6570\uff1a\u6700\u5927\u72ec\u7acb\u96c6\u7684\u70b9\u7684\u6570\u91cf\u3002</li> <li>\u8986\u76d6\u6570\uff1a\u6700\u5c0f\u70b9\u8986\u76d6\u7684\u70b9\u7684\u6570\u91cf\u3002</li> <li>\u6700\u5927\u72ec\u7acb\u96c6 \\(+\\) \u6700\u5c0f\u70b9\u8986\u76d6 \\(=n\\)</li> <li>\u5982\u679c\u4e00\u4e2a\u56fe\u6ca1\u6709\u5b64\u7acb\u7684\u70b9\uff0c\u5219 \u6700\u5927\u5339\u914d \\(+\\) \u6700\u5c0f\u8fb9\u8986\u76d6 \\(=n\\)</li> <li> <p>\\(S\\) \u4e3a\u8986\u76d6\uff1a</p> <p>\\(\\Leftrightarrow\\) \\(G\\) \u7684\u6bcf\u8fb9\u81f3\u5c11\u6709\u2f00\u7aef\u5728 \\(S\\) \u4e2d\u3002</p> <p>\\(\\Leftrightarrow\\) \u4e0d\u5b58\u5728\u4e24\u4e2a\u7aef\u70b9\u5168\u5728 \\(V \\backslash S\\) \u4e2d\u7684\u8fb9\u3002</p> <p>\\(\\Leftrightarrow\\) \\(V \\backslash S\\) \u4e3a \u7a7a\u56fe\u6216\u72ec\u7acb\u96c6\u3002</p> </li> <li> <p>\u5339\u914d\u548c\u8986\u76d6\u7684\u5173\u7cfb\uff1a\u8bbe\u4efb\u610f\u5339\u914d\u4e3a \\(M\\)\uff0c\u6700\u5927\u5339\u914d\u4e3a \\(M^*\\)\uff0c\u6700\u5c0f\u8986\u76d6\u4e3a \\(K\\)\uff0c\u4efb\u610f\u8986\u76d6\u4e3a \\(K^*\\)\uff0c\u5219\u6709 \\(|M| \\le |M^*| \\le |K^*| \\le |K|\\)</p> </li> </ul>"},{"location":"archive/graph/#43","title":"4.3 \u5076\u56fe\u7684\u5339\u914d\u548c\u8986\u76d6","text":"<ul> <li> <p>\u90bb\u96c6 \\(N(S)\\) \\((S \\subseteq V)\\) \u8868\u793a \\(G\\) \u4e2d\u6240\u6709\u4e0e \\(S\\) \u4e2d\u9876\u70b9\u76f8\u90bb\u63a5\u7684\u9876\u70b9\u96c6\u5408\u3002\\(N(S)\\) \u4e5f\u53ef\u80fd\u5305\u542b \\(S\\) \u4e2d\u7684\u9876\u70b9\u3002</p> </li> <li> <p>\u5728\u5076\u56fe \\(G=(X,Y,E)\\) \u4e2d \\(G\\) \u5305\u542b\u4f7f \\(X\\) \u4e2d\u6bcf\u4e2a\u9876\u70b9\u90fd\u9971\u548c\u7684\u5339\u914d \\(\\Leftrightarrow\\) \\(\\forall S \\subseteq X\\)\uff0c\\(|N(S) | \\ge |S|\\)</p> </li> <li> <p>\u82e5 \\(G\\) \u4e3a \\(k\\)-\u6b63\u5219\u5076\u56fe \\((k&gt;0)\\)\uff0c\u5219 \\(G\\) \u6709\u5b8c\u7f8e\u5339\u914d\u3002</p> <p>\u8bc1\u660e\uff1a\u8bbe \\(G\\) \u7684 \\(2\\)-\u5212\u5206\u4e3a \\((X,Y)\\)\uff0c\u5219\u6709 \\(k|X| = E = k|Y|\\)</p> <p>\u56e0\u6b64 \\(|X| = |Y|\\)</p> <p>\u5bf9 \\(\\forall S \\subseteq X\\)\uff0c\u4ee4 \\(E_1\\) \u548c \\(E_2\\) \u5206\u522b\u4e3a \\(S\\) \u548c \\(N(S)\\) \u76f8\u5173\u8054\u7684\u8fb9\u96c6\u3002\u663e\u7136\u6709 \\(E_1 \\subseteq E_2\\)</p> <p>\\(k|S| = |E_1| \\le |E_2| = k|N(S)| \\Rightarrow |S| \\le |N(S)|\\)</p> </li> </ul> <p>\u200b   \u6545 \\(G\\) \u4e2d\u6709\u4f7f \\(X\\) \u4e2d\u6bcf\u4e2a\u9876\u70b9\u90fd\u9971\u548c\u7684\u5339\u914d \\(M\\) \uff0c\u5b83\u4e5f\u662f\u5b8c\u7f8e\u5339\u914d\u3002</p> <ul> <li>\u5728\u4e8c\u5206\u56fe\u4e2d\uff0c\u6700\u5927\u5339\u914d \\(=\\) \u6700\u5c0f\u70b9\u8986\u76d6\u3002</li> </ul>"},{"location":"archive/graph/#_5","title":"\u7b2c\u4e94\u7ae0 \u904d\u5386\u95ee\u9898","text":""},{"location":"archive/graph/#51-euler","title":"5.1 Euler\u73af\u6e38","text":"<ul> <li> <p>\u65e0\u5411\u56fe\u662f\u6b27\u62c9\u56fe\u5f53\u4e14\u4ec5\u5f53\uff1a</p> <ul> <li> <p>\u975e\u96f6\u5ea6\u9876\u70b9\u662f\u8fde\u901a\u7684</p> </li> <li> <p>\u9876\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570</p> </li> </ul> </li> <li> <p>\u65e0\u5411\u56fe\u662f\u534a\u6b27\u62c9\u56fe\u5f53\u4e14\u4ec5\u5f53\uff1a</p> <ul> <li> <p>\u975e\u96f6\u5ea6\u9876\u70b9\u662f\u8fde\u901a\u7684</p> </li> <li> <p>\u6070\u6709 2 \u4e2a\u5947\u5ea6\u9876\u70b9</p> </li> </ul> </li> <li> <p>\u6709\u5411\u56fe\u662f\u6b27\u62c9\u56fe\u5f53\u4e14\u4ec5\u5f53\uff1a</p> <ul> <li> <p>\u975e\u96f6\u5ea6\u9876\u70b9\u662f\u5f3a\u8fde\u901a\u7684</p> </li> <li> <p>\u6bcf\u4e2a\u9876\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u76f8\u7b49</p> </li> </ul> </li> <li> <p>\u6709\u5411\u56fe\u662f\u534a\u6b27\u62c9\u56fe\u5f53\u4e14\u4ec5\u5f53\uff1a</p> <ul> <li> <p>\u975e\u96f6\u5ea6\u9876\u70b9\u662f\u5f31\u8fde\u901a\u7684</p> </li> <li> <p>\u81f3\u591a\u4e00\u4e2a\u9876\u70b9\u7684\u51fa\u5ea6\u4e0e\u5165\u5ea6\u4e4b\u5dee\u4e3a 1</p> </li> <li> <p>\u81f3\u591a\u4e00\u4e2a\u9876\u70b9\u7684\u5165\u5ea6\u4e0e\u51fa\u5ea6\u4e4b\u5dee\u4e3a 1</p> </li> <li> <p>\u5176\u4ed6\u9876\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u76f8\u7b49</p> </li> </ul> </li> <li> <p>\u6c42\u6b27\u62c9\uff08\u73af\uff09\u8def\u7684\u65b9\u6cd5\uff1adfs+Hierholzer \u7b97\u6cd5\uff0cdfs \u56de\u5230\u4e0a\u4e00\u5c42\u7684\u65f6\u5019\u5c31\u5165\u6808\uff0c\u6700\u540e\u6309\u5e8f\u5f39\u51fa\u6808\u4e2d\u5143\u7d20\u5373\u53ef\u3002</p> </li> <li> <p>\u82e5\u53ef\u80fd\uff0c\u753b\u51fa\u2f00\u4e2a\u70b9\u4e3a\u5076\u6570\uff0c\u800c\u8fb9\u4e3a\u5947\u6570\u7684\u6b27\u62c9\u56fe\u3002 \u5426\u5219\u8bf4\u660e\u7406\u7531\u3002</p> <p>2 \u4e2a\u70b9\uff0c1\u6761\u81ea\u73af\u5373\u53ef\u3002\u82e5\u4e0d\u5141\u8bb8\u81ea\u73af\uff0c\u5219\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u56fe\u3002</p> </li> <li> <p>\u82e5 \\(G\\) \u65e0\u5947\u70b9\uff0c\u5219 \\(G\\) \u7684\u6bcf\u4e2a\u5757\u4e5f\u662f\u6b27\u62c9\u56fe\u3002</p> </li> <li> <p>\u82e5\u56fe \\(G\\) \u65e0\u5947\u70b9\uff0c\u5219\u5b58\u5728\u8fb9\u4e0d\u91cd\u7684\u5708 \\(C_1, C_2, \\cdots, C_m\\) \u4f7f\u5f97 \\(E(G) = E(C_1) \\cup E(C_2)\\cup \\cdots \\cup E(C_m)\\)</p> </li> <li> <p>\u82e5\u8fde\u901a\u56fe \\(G\\) \u6709 \\(2k(k &gt; 0)\\) \u4e2a\u5947\u70b9\uff0c\u5219 \\(G\\) \u4e2d\u5b58\u5728 \\(k\\) \u6761\u8fb9\u4e0d\u91cd\u7684\u8ff9 \\(Q_1, Q_2, \\cdots, Q_m\\) \u4f7f\u5f97 \\(E(G) = E(Q_1) \\cup E(Q_2)\\cup \\cdots \\cup E(Q_k)\\)</p> </li> <li> <p>\u8fde\u901a\u56fe \\(G\\) \u4efb\u610f\u4e00\u4e2a\u8fb9\u5272\u8fb9\u6570\u90fd\u662f\u5076\u6570\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\u56fe \\(G\\) \u662f\u4e00\u4e2a\u6b27\u62c9\u56fe\u3002</p> </li> <li> <p>\u82e5\u8fde\u901a\u56fe \\(G\\) \u4e2d\u53ea\u6709\u4e24\u4e2a\u5947\u70b9\uff0c\u5219\u4e0e\u4efb\u610f\u4e00\u4e2a\u5947\u70b9\u76f8\u5173\u8054\u7684\u8fb9\u4e2d\u81f3\u591a\u6709\u4e00\u6761\u662f\u56fe \\(G\\) \u7684\u5272\u8fb9\u3002</p> </li> </ul>"},{"location":"archive/graph/#53-hamilton","title":"5.3 Hamilton\u5708","text":"<ul> <li> <p>\u54c8\u5bc6\u987f\u56fe\u7684\u5fc5\u8981\u6761\u4ef6\uff1a</p> <ul> <li>\u5bf9 \\(\\forall S \\subset V\\)\uff0c\u90fd\u6709 \\(\\omega(G-S) \\le |S|\\)</li> </ul> </li> <li> <p>\u5224\u5b9a\u4e3a\u54c8\u5bc6\u987f\u56fe\u7684\u5145\u5206\u6761\u4ef6\uff1a</p> <ul> <li> <p>\u82e5\u56fe \\(G\\) \u662f \\(v \\ge 2\\) \u7684\u65e0\u5411\u7b80\u5355\u56fe\uff0c\u4e14\u5bf9\u4e8e\u56fe \\(G\\) \u4e2d\u4efb\u610f\u4e0d\u76f8\u90bb\u7684\u9876\u70b9 \\(a, b\\) \u90fd\u6709 \\(d(a) + d(b) \\ge v - 1\\)\uff0c\u5219\u56fe\u4e2d\u5b58\u5728\u54c8\u5bc6\u987f\u901a\u8def\u3002</p> <p>\u8bc1\u660e\uff1a\u5148\u8bc1\u660e\u56fe \\(G\\) \u662f\u8fde\u901a\u56fe\uff0c\u5047\u8bbe \\(G\\) \u4e0d\u662f\u8fde\u901a\u56fe\uff0c\u5219\u81f3\u5c11\u6709\u4e24\u4e2a\u8fde\u901a\u5206\u91cf \\(X\\) \u548c \\(Y\\)\uff0c\u5047\u8bbe \\(a \\in X\\)\uff0c\\(b \\in Y\\)\u3002\u5219\u6709 \\(d(a) + d(b) \\le |X| - 1 + |Y| - 1 = v - 2\\)\uff0c\u8fd9\u4e0e \\(d(a) + d(b) \\ge v - 1\\) \u77db\u76fe\u3002\u56e0\u6b64\u56fe \\(G\\) \u4e00\u5b9a\u662f\u8fde\u901a\u56fe\u3002</p> <p>\u4e0b\u9762\u8bc1\u660e\u56fe \\(G\\) \u5b58\u5728\u54c8\u5bc6\u987f\u8def\u5f84\u3002\u9996\u5148\u627e\u5230\u4e00\u6761\u6781\u5927\u8def\u5f84 \\(P = P_1P_2\\cdots P_{k-1}P_k\\)</p> <ol> <li> <p>\u82e5 \\(k = v\\)\uff0c\u5219 \\(P\\) \u5c31\u662f \\(G\\) \u7684\u54c8\u5bc6\u987f\u8def\u5f84\u3002</p> </li> <li> <p>\u82e5 \\(k &lt; v\\)\uff0c\u5219\u5148\u8bc1\u660e\u5b58\u5728\u4e00\u4e2a\u56de\u8def\u7ecf\u8fc7 \\(P\\) \u4e0a\u6240\u6709\u7684\u70b9\u3002</p> <ol> <li> <p>\u82e5 \\(P_1\\) \u548c \\(P_k\\) \u76f8\u90bb\uff0c\u5219\u5b58\u5728\u56de\u8def \\(C = P_1P_2\\cdots P_{k-1}P_kP_1\\)</p> </li> <li> <p>\u82e5 \\(P_1\\) \u548c \\(P_k\\) \u4e0d\u76f8\u90bb\uff0c\u7531\u4e8e \\(P\\) \u662f\u6781\u5927\u8def\u5f84\uff0c\u56e0\u6b64 \\(P_1\\) \u548c \\(P_k\\) \u7684\u6240\u6709\u90bb\u5c45\u90fd\u5728\u8def\u5f84 \\(P\\) \u4e2d\u3002\u8bbe \\(P_1\\) \u7684\u90bb\u5c45\u5728 \\(P\\) \u4e2d\u6807\u53f7\u6700\u5927\u7684\u4e3a \\(P_j\\)\uff0c\\(P_k\\) \u7684\u90bb\u5c45\u5728 \\(P\\) \u4e2d\u6807\u53f7\u6700\u5927\u7684\u4e3a \\(P_i\\)</p> <p>\u4e0b\u9762\u8bc1\u660e \\(j &gt; i\\)\uff0c\u5047\u8bbe \\(j \\le i\\)\uff0c\u5219 \\(P_1\\) \u81f3\u591a\u6709 \\(j-1\\) \u4e2a\u90bb\u5c45\uff08\\(P_2\\cdots P_i\\)\uff09\uff0c \\(P_k\\) \u81f3\u591a\u6709 \\(k-i\\) \u4e2a\u90bb\u5c45\uff08\\(P_j\\cdots P_{k-1}\\)\uff09\uff0c\u5219 \\(d(P_1) + d(P_k) \\le j-1+k-i \\le k - 1 &lt; v - 1\\)\uff0c\u8fd9\u5c31\u4ea7\u751f\u77db\u76fe\uff0c\u56e0\u6b64\u6709 \\(j &gt; i\\)</p> <p>\u5219\u5b58\u5728\u4e00\u6761\u56de\u8def \\(C = P_1P_2\\cdots P_{i-1}PiP_kP_{k-1}\\cdots P_{j+1}P_j\\)</p> </li> </ol> <p>\u7531\u4e8e\u56fe \\(G\\) \u662f\u8fde\u901a\u56fe\uff0c\u5219\u5728\u8def\u5f84 \\(P\\) \u4ee5\u5916\u5b58\u5728\u4e00\u4e2a\u70b9 \\(u\\) \u4e0e \\(P_2\\) \u5230 \\(P_{k-1}\\) \u7684\u67d0\u70b9\u90bb\u63a5\uff08\u5426\u5219\uff0c\u70b9 \\(P\\) \u4e2d\u6240\u6709\u7684\u70b9\u7ec4\u6210\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\uff09\uff0c\u5219\u5c06 \\(u\\) \u5e76\u5165\u56de\u8def \\(C\\) \u4e2d\u53ef\u4ee5\u5f97\u5230\u4e00\u6761\u65b0\u7684\u8def\u5f84\u3002\u4e0d\u65ad\u6267\u884c\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5219\u53ef\u4ee5\u5f97\u5230\u4e00\u6761\u6b27\u62c9\u8def\u5f84\u3002</p> </li> </ol> </li> </ul> </li> </ul>"},{"location":"dev/","title":"\u5f00\u53d1","text":"<p>https://codezhxs.github.io</p> <p>\u4f60\u597d!!</p> <p>\u6b63\u5728\u9f9f\u901f\u66f4\u65b0:</p> <ul> <li>\u300aJava\u6838\u5fc3\u6280\u672f\u300b\u7b14\u8bb0</li> <li>TCP/IP\u7f51\u7edc\u7f16\u7a0b</li> <li>\u6211\u7684windoes\u5f00\u53d1\u73af\u5883\u914d\u7f6e</li> </ul>"},{"location":"dev/myoj/","title":"hydro OJ\u8fd0\u7ef4","text":"<p>\u53c2\u8003\u6587\u6863</p>"},{"location":"dev/myoj/#_1","title":"\u7f51\u9875\u6ce8\u518c","text":"<pre><code># \u5173\u95ed\nhydrooj cli user setPriv 0 0\npm2 restart hydrooj\n</code></pre> <pre><code># \u542f\u52a8\nhydrooj cli user setPriv 0 8\npm2 restart hydrooj\n</code></pre>"},{"location":"dev/myoj/#_2","title":"\u4fee\u6539\u9875\u9762","text":"<p>\u5728URL\u524d\u52a0\u5165 <code>view-source:</code> \u67e5\u770b <code>data-page</code> \u7684\u503c\uff0c\u5728\u8fd9\u91cc\u627e\u5230\u5bf9\u5e94\u7684html\u6587\u4ef6</p> <p>cd\u5230 <code>~/.hydro/addons/addon/templates</code> \u8fdb\u884c\u4fee\u6539\u3002</p>"},{"location":"dev/db/cmu-15445_note/","title":"Cmu 15445 note","text":"<p>\u4e3b\u8981\u6536\u5f55\u7b14\u8005\u5728\u5b66\u4e60 CMU 15-445/645 :: Intro to Database Systems (Fall 2023) \u4ee5\u53ca\u9605\u8bfb\u6559\u6750 \u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\uff08\u539f\u4e66\u7b2c7\u7248\uff09\u300b) \u8bb0\u4e0b\u7684\u7b14\u8bb0\u3002</p>"},{"location":"dev/db/cmu-15445_note/#lecture-3-database-storage-i","title":"Lecture #3 Database Storage I","text":"<p>\u8bfe\u7a0b\u4e3b\u8981\u8bb2\u89e3\u9762\u5411\u78c1\u76d8\uff08\u975e\u6613\u5931\u6027\u5b58\u50a8\u4ecb\u8d28\uff09\u7684\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u7406\u5ff5\u3002\u5185\u5b58\u7684\u8bbf\u95ee\u901f\u5ea6\u6bd4\u78c1\u76d8\u5feb\u7684\u591a\uff08\u65e0\u8bba\u662f\u987a\u5e8f\u6216\u8005\u968f\u673a\u90fd\u5f88\u5feb\uff09\u3002\u4e00\u822c\u6765\u8bf4\u6570\u636e\u5e93\u7684\u5927\u5c0f\u8fdc\u5927\u4e8e\u5185\u5b58\u5bb9\u91cf\uff0c\u6570\u636e\u5e93\u6587\u4ef6\u5728\u78c1\u76d8\u4e2d\u6301\u4e45\u5316\u5b58\u50a8\u3002\u78c1\u76d8\u4e2d\u968f\u673a\u8bfb\u53d6\u6bd4\u987a\u5e8f\u8bfb\u53d6\u6162\uff0c\u56e0\u6b64 DBMS \u8981\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u6570\u636e\u5728\u78c1\u76d8\u4e2d\u987a\u5e8f\u8bfb\u53d6\u3002</p> <p>\u4e3a\u4e86\u8bfb\u5199\u8fd9\u4e9b\u6587\u4ef6\uff0cDBMS \u5728\u5fc5\u8981\u65f6\u5c06\u5176\u8bfb\u5165\u5185\u5b58\u4e2d\uff0c\u5728\u5fc5\u8981\u65f6\u5199\u56de\u78c1\u76d8\u3002</p> <p>\u4e00\u4e9b\u6982\u5ff5\uff1a</p> <ul> <li> <p>\u9875\u9762\uff1a\u9875\u9762\u5b58\u653e\u6570\u636e\uff0c\u5f53 DBMS \u9700\u8981\u7279\u5b9a\u6570\u636e\u65f6\uff0c\u5b9e\u9645\u662f\u8bfb\u5165\u8fd9\u6761\u6570\u636e\u6240\u5728\u7684\u9875\u9762\u3002</p> </li> <li> <p>\u9875\u9762\u5927\u5c0f\uff1a\u8868\u793a\u8bfb\u5165\u4e00\u6b21\u9875\u9762\u7684\u6570\u636e\u91cf\u5927\u5c0f\u3002\u9ed8\u8ba4\u9875\u9762\u5927\u5c0f\u89c1\u4e0b\u8868\uff1a</p> \u9ed8\u8ba4\u9875\u9762\u5927\u5c0f DBMS 4KB SQLite\u3001Oracle\u3001DB2\u3001RocksDB\u3001WiredTiger 8KB PostgresSQL\u3001SQL Server 16KB MySQL </li> <li> <p>\u810f\u9875\u9762\uff1a\u9875\u9762\u88ab\u8bfb\u5165\u5185\u5b58\u540e\u5982\u679c\u53d1\u751f\u6539\u52a8\uff0c\u5219\u4e0e\u78c1\u76d8\u4e2d\u7684\u9875\u9762\u4e0d\u4e00\u81f4\uff0c\u8fd9\u6837\u7684\u9875\u9762\u79f0\u4e3a\u810f\u9875\u9762\u3002</p> </li> <li> <p>\u5e72\u51c0\u9875\u9762\uff1a\u810f\u9875\u9762\u5199\u56de\u78c1\u76d8\u4e2d\u53d8\u4e3a\u5e72\u51c0\u9875\u9762\u3002</p> </li> </ul>"},{"location":"dev/db/cmu-15445_note/#mmap","title":"\u4e0d\u8981\u4f7f\u7528 mmap","text":"<p>Andy \u7528\u4e86 30 \u5206\u949f\u65f6\u95f4\u8bf4\u660e \u4e0d\u8981\u5728 DBMS \u4e2d\u4f7f\u7528mmap\uff08\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u865a\u62df\u5185\u5b58\uff09 \uff0cmmap \u5bf9\u4e8e\u53ea\u8bfb\u7a0b\u5e8f\u662f\u8db3\u591f\u7684\uff0c\u4f46\u5bf9\u4e8e\u6587\u4ef6\u540c\u65f6\u88ab\u5199\u5165\u7684\u7a0b\u5e8f\uff0c\u4f7f\u7528 mmap \u4f1a\u590d\u6742\u5f88\u591a\u3002</p> <p>\u4f7f\u7528 mmap \u7684\u5f0a\u7aef\uff1a</p> <ol> <li>\u4e8b\u52a1\u5b89\u5168\uff1aOS \u53ef\u80fd\u5728\u4efb\u610f\u65f6\u95f4\u5c06\u810f\u9875\u9762\u5199\u56de\u78c1\u76d8\u3002</li> <li>I/O \u505c\u987f\uff1aDBMS \u4e0d\u77e5\u9053\u54ea\u4e2a\u9875\u9762\u5728\u5185\u5b58\u4e2d\uff0c\u8bf7\u6c42\u4e0d\u5728\u5185\u5b58\u4e2d\u7684\u9875\u9762\u65f6\u4f1a\u51fa\u73b0 I/O \u505c\u987f\u3002</li> <li>\u9519\u8bef\u5904\u7406\uff1aDBMS \u9700\u8981\u5904\u7406 SIGBUS \u4fe1\u53f7\u3002</li> <li>\u6027\u80fd\u95ee\u9898\u3002</li> </ol>"},{"location":"dev/db/cmu-15445_note/#_1","title":"\u6570\u636e\u5e93\u5b58\u50a8","text":""},{"location":"dev/db/cmu-15445_note/#_2","title":"\u5806\u6587\u4ef6\u7ec4\u7ec7","text":""},{"location":"dev/env/win/gcc/","title":"\u5728Windows\u4e2d\u5b89\u88c5gcc","text":"<p>Windows \u7cfb\u7edf\u7684 gcc/g++ \u53ef\u4ee5\u5b89\u88c5\u5fae\u8f6f\u5b98\u65b9\u7684 Visual Studio\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b89\u88c5 MinGW\uff0c\u7531\u4e8e\u6211\u5e73\u65f6\u7f16\u5199 C/C++ \u90fd\u662f\u5728 VSCode\u4e0a\uff0c\u6240\u4ee5\u9009\u62e9\u540e\u8005\u3002</p> <p>\u7f51\u4e0a\u5927\u591a\u6570\u6559\u7a0b\u90fd\u505c\u7559\u5728 MinGW 8 \u7684\u7248\u672c\uff0c\u592a\u8001\u4e86\uff0c\u8fd9\u662f\u6211\u8bb0\u5f55\u8fd9\u7bc7\u535a\u5ba2\u7684\u539f\u56e0\u3002</p>"},{"location":"dev/env/win/gcc/#mingw","title":"\u4e0b\u8f7d MinGW \u5b89\u88c5\u5305","text":"<p>\u8fdb\u5165 Downloads - MinGW-w64\uff0c\u9009\u62e9 Mingw-builds\uff0c\u4f1a\u8df3\u8f6c\u5230 github</p> <p>\u9009\u62e9\u4e00\u4e2a Release\uff0c\u8fd9\u91cc\u6211\u9009\u7684\u662f x86_64-13.2.0-release-posix-seh-ucrt-rt_v11-rev1.7z</p> <p>\u89e3\u91ca\u4e00\u4e0b\u5404\u4e2a\u6587\u4ef6\u7684\u4e0d\u540c\uff1a</p> <ol> <li><code>x64-64</code> \u548c <code>i686</code>\uff1a<code>x64-64</code> \u8868\u793a 64 \u4f4d\uff0c <code>i686</code> \u8868\u793a 32 \u4f4d\u3002\u9009 64 \u5c31\u597d\u3002</li> <li><code>13.2.0-release</code>\uff1a\u7248\u672c\u53f7\uff0c\u9009\u6700\u65b0\u7684\u5c31\u597d\u3002</li> <li><code>win32</code> \u3001<code>posix</code>\u3001<code>mcf</code>\uff1a\u591a\u7ebf\u7a0b\u6a21\u578b\uff0c\u5176\u5b9e\u6ca1\u5565\u533a\u522b\uff0c\u9009\u54ea\u4e2a\u90fd\u4e00\u6837\uff0c\u636e\u8bf4 <code>posix</code> \u542f\u7528\u4e86  c++11/c11\u7684\u591a\u7ebf\u7a0b\u529f\u80fd\u3002</li> <li><code>seh</code> \u548c <code>draft</code>\uff1a\u7ed3\u6784\u5316\u5f02\u5e38\u5904\u7406\u7684\u4e1c\u897f\uff0c<code>seh</code> \u6027\u80fd\u597d\u4e00\u4e9b\u652f\u6301 64 \u4f4d\uff0c<code>draft</code> \u517c\u5bb9\u6027\u597d\u4e00\u4e9b\u4e9b\uff0c64 \u548c 32 \u90fd\u652f\u6301\u3002</li> <li><code>ucrt</code> \u548c <code>msvcrt</code> \uff1a<code>ucrt</code> \u65b0\u4e00\u70b9\u3002</li> </ol>"},{"location":"dev/env/win/gcc/#_1","title":"\u73af\u5883\u53d8\u91cf","text":"<p>\u627e\u4e2a\u89e3\u538b\u8def\u5f84\u89e3\u538b\uff0c\u4f8b\u5982 <code>C:\\Program Files</code>\uff0c\u7136\u540e\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff1a</p> <p>\u6b64\u7535\u8111\uff08\u53f3\u952e) | \u5c5e\u6027 | \u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e | \u9ad8\u7ea7 | \u73af\u5883\u53d8\u91cf | \u7cfb\u7edf\u53d8\u91cf\uff08\u6216\u8005\u7528\u6237\u53d8\u91cf\uff09| Path\uff08\u53cc\u51fb\uff09| \u65b0\u5efa | <code>C:\\Program Files\\mingw64\\bin</code></p> <p>\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165 <code>gcc -v</code> \u5373\u53ef</p>"},{"location":"dev/env/win/my_powershell/","title":"\u6211\u7684PowerShell\u914d\u7f6e","text":""},{"location":"dev/env/win/my_powershell/#windows-terminal","title":"Windows Terminal \u914d\u7f6e","text":"<p>\u5728\u5fae\u8f6f\u5546\u5e97\u5b89\u88c5 PowerShell \u548c Windows Terminal </p> <p>\u6253\u5f00\u7ec8\u7aef\u6309\u7167\u5982\u4e0b\u8bbe\u7f6e\u3002</p>"},{"location":"dev/env/win/my_powershell/#_1","title":"\u542f\u52a8","text":"\u8bbe\u7f6e\u9879 \u8bbe\u7f6e \u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6 PowerShell \u9ed8\u8ba4\u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f Windows \u7ec8\u7aef \u542f\u52a8\u5927\u5c0f \u5217\uff1a95 \u884c\uff1a30 \u542f\u52a8\u53c2\u6570 \u5728\u542f\u52a8\u65f6\u5c45\u4e2d"},{"location":"dev/env/win/my_powershell/#_2","title":"\u5916\u89c2","text":"\u8bbe\u7f6e\u9879 \u8bbe\u7f6e \u5728\u9009\u9879\u5361\u4e2d\u4f7f\u7528\u4e9a\u514b\u529b\u6750\u6599 \u5f00"},{"location":"dev/env/win/my_powershell/#_3","title":"\u914d\u8272\u65b9\u6848","text":"<p>\u4f7f\u7528 <code>Snazzy</code>,\u53c2\u8003 Richienb/windows-terminal-snazzy: Elegant Windows Terminal theme with bright colors (github.com) \u7684\u5b89\u88c5\u6b65\u9aa4\uff1a</p> <ol> <li>\u5728\u8bbe\u7f6e\u4e2d\u6253\u5f00JSON\u6587\u4ef6\u3002</li> <li>\u5728 <code>schemes</code> \u4e2d\u6dfb\u52a0\u5982\u4e0b\uff1a <pre><code>        {\n\"background\": \"#282A36\",\n\"black\": \"#282A36\",\n\"blue\": \"#57C7FF\",\n\"brightBlack\": \"#686868\",\n\"brightBlue\": \"#57C7FF\",\n\"brightCyan\": \"#9AEDFE\",\n\"brightGreen\": \"#5AF78E\",\n\"brightPurple\": \"#FF6AC1\",\n\"brightRed\": \"#FF5C57\",\n\"brightWhite\": \"#EFF0EB\",\n\"brightYellow\": \"#F3F99D\",\n\"cursorColor\": \"#97979B\",\n\"cyan\": \"#9AEDFE\",\n\"foreground\": \"#EFF0EB\",\n\"green\": \"#5AF78E\",\n\"name\": \"Snazzy\",\n\"purple\": \"#FF6AC1\",\n\"red\": \"#FF5C57\",\n\"selectionBackground\": \"#3E404A\",\n\"white\": \"#F1F1F0\",\n\"yellow\": \"#F3F99D\"\n},\n</code></pre></li> <li>\u5728 \u8bbe\u7f6e-\u914d\u8272\u65b9\u6848 \u4e2d\u9009\u62e9 <code>Snazzy</code> \u4e3b\u9898\u3002</li> </ol>"},{"location":"dev/env/win/my_powershell/#_4","title":"\u64cd\u4f5c","text":"<p>\u5feb\u6377\u952e\u6839\u636e\u81ea\u5df1\u9700\u6c42\u8bbe\u7f6e\u3002</p>"},{"location":"dev/env/win/my_powershell/#-","title":"\u914d\u7f6e\u6587\u4ef6-\u9ed8\u8ba4\u503c-\u5916\u89c2","text":"\u8bbe\u7f6e\u9879 \u8bbe\u7f6e \u914d\u8272\u65b9\u6848 Snazzy \u5b57\u4f53 FiraCode Nerd Font Mono\u4e0b\u8f7d\u94fe\u63a5 \u5b57\u53f7 14 \u80cc\u666f\u4e0d\u900f\u660e\u5ea6 90% \u542f\u7528\u4e9a\u514b\u529b\u6750\u6599 \u5f00"},{"location":"dev/env/win/my_powershell/#-powershell","title":"\u914d\u7f6e\u6587\u4ef6-PowerShell","text":"<p>\u8c03\u6362\u4e00\u4e0b\u987a\u5e8f</p> <ol> <li>\u5728\u8bbe\u7f6e\u4e2d\u6253\u5f00JSON\u6587\u4ef6\u3002</li> <li>\u5728 <code>profiles</code> - <code>list</code> \u4e2d\uff0c\u5c06 <code>PowerShell</code> \u7684\u90e8\u5206\u79fb\u52a8\u5230\u6700\u524d\u9762\u3002</li> </ol>"},{"location":"dev/env/win/my_powershell/#powershell","title":"\u66f4\u6539 PowerShell \u8bed\u6cd5\u989c\u8272","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cpowershell \u4e2d\u67d0\u4e9b\u8bed\u6cd5\u989c\u8272\u5f88\u5947\u602a\uff0c\u4f8b\u5982 <code>git -v</code> \u7684 <code>-v</code> \u663e\u793a\u7684\u989c\u8272\u975e\u5e38\u6d45\uff0c<code>git</code> \u7684\u989c\u8272\u4e5f\u662f\u9ec4\u8272\uff0c\u8fd9\u548c zsh \u4e0d\u592a\u4e00\u6837\u3002</p>"},{"location":"dev/env/win/my_powershell/#powershell_1","title":"PowerShell \u914d\u7f6e\u6587\u4ef6\u8def\u5f84","text":"<p>zsh \u5728\u542f\u52a8\u65f6\u4f1a\u6267\u884c <code>~/.zshrc</code> \u4e2d\u7684\u6240\u6709\u8bed\u53e5\uff0c\u7528\u4e8e zsh \u3002 \u540c\u6837\u7684\uff0cpowershell \u4e5f\u6709\u7c7b\u4f3c\u7684\u6587\u4ef6\uff0c\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>echo $PROFILE\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>~\\Documents\\PowerShell\\Microsoft.PowerShell_profile.ps1\n</code></pre> <p>\u53d8\u91cf <code>$PROFILE</code> \u5b58\u50a8\u7684\u662f\u5f53\u524d\u7528\u6237\u5f53\u524d\u4e3b\u673a\u7684 powershell \u914d\u7f6e\u6587\u4ef6\uff0c\u7b49\u4ef7\u4e8e <code>$PROFILE.CurrentUserCurrentHost</code>\uff0c<code>$PROFILE</code> \u5177\u6709\u4ee5\u4e0b\u503c\uff1a</p> <ul> <li>\u5f53\u524d\u7528\u6237\uff0c\u5f53\u524d\u4e3b\u673a - <code>$PROFILE</code></li> <li>\u5f53\u524d\u7528\u6237\uff0c\u5f53\u524d\u4e3b\u673a - <code>$PROFILE.CurrentUserCurrentHost</code></li> <li>\u5f53\u524d\u7528\u6237\uff0c\u6240\u6709\u4e3b\u673a - <code>$PROFILE.CurrentUserAllHosts</code></li> <li>\u6240\u6709\u7528\u6237\uff0c\u5f53\u524d\u4e3b\u673a - <code>$PROFILE.AllUsersCurrentHost</code></li> <li>\u6240\u6709\u7528\u6237\uff0c\u6240\u6709\u4e3b\u673a - <code>$PROFILE.AllUsersAllHosts</code></li> </ul>"},{"location":"dev/env/win/my_powershell/#psreadline-powershell","title":"\u4f7f\u7528 PSReadLine \u4fee\u6539 PowerShell \u5b57\u4f53\u989c\u8272","text":"<p>PSReadLine \u662f powershell \u81ea\u5e26\u7684\u547d\u4ee4\u884c\u81ea\u5b9a\u4e49\u6a21\u5757\uff0c\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u547d\u4ee4\u884c\u8bed\u6cd5\u7740\u8272</li> <li>\u8bed\u6cd5\u9519\u8bef\u7684\u76f4\u89c2\u6307\u793a</li> <li>\u66f4\u597d\u7684\u591a\u884c\u4f53\u9a8c\uff08\u7f16\u8f91\u548c\u5386\u53f2\u8bb0\u5f55\uff09</li> <li>\u53ef\u81ea\u5b9a\u4e49\u7684\u952e\u7ed1\u5b9a</li> <li>Cmd \u548c Emacs \u6a21\u5f0f</li> <li>\u8bb8\u591a\u914d\u7f6e\u9009\u9879</li> <li>Bash \u98ce\u683c\u8865\u5168\uff08Cmd \u6a21\u5f0f\u4e0b\u4e3a\u53ef\u9009\uff0cEmacs \u6a21\u5f0f\u4e0b\u4e3a\u9ed8\u8ba4\uff09</li> <li>Emacs yank/kill-ring</li> <li>\u57fa\u4e8e PowerShell \u6807\u8bb0\u7684\u201c\u5355\u8bcd\u201d\u79fb\u52a8\u548c\u5220\u9664</li> <li>\u9884\u6d4b IntelliSense</li> <li>\u5728\u63a7\u5236\u53f0\u4e2d\u52a8\u6001\u663e\u793a\u5e2e\u52a9\uff0c\u800c\u4e0d\u4f1a\u4e22\u5931\u5728\u547d\u4ee4\u884c\u4e2d\u7684\u4f4d\u7f6e</li> </ul> <p>\u7b2c\u4e00\u4e2a\u529f\u80fd\u5c31\u662f\u4fee\u6539\u547d\u4ee4\u884c\u8bed\u6cd5\u989c\u8272\uff0c\u4e0b\u9762\u8fdb\u884c\u4fee\u6539</p> <p>\u9996\u5148\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b PSReadLine \u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff1a</p> <pre><code>Get-PSReadLineOption\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u6700\u540e\u4e00\u90e8\u5206\u662f\u5e26\u6709\u989c\u8272\u7684\u5b57\u4f53\uff0c\u6709\u5173\u5b57\u4f53\u989c\u8272\u4ee5\u53ca\u8f93\u51fa\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003 PowerShell : \u5982\u4f55\u8bbe\u7f6e\u8f93\u51fa\u989c\u8272\uff0cFormat-Color\u8ba9\u9ed1\u4e4e\u4e4e\u7684\u7a97\u53e3\u4e30\u5bcc\u8d77\u6765_powershell\u5b57\u4f53\u4e0d\u53d8\u8272-CSDN\u535a\u5ba2 \u3002</p> <p>\u4e0b\u9762\u4fee\u6539\u8bed\u6cd5\u7740\u8272\u7684\u90e8\u5206\uff0c\u53c2\u8003\u5b98\u65b9\u7684 Set-PSReadLineOption (PSReadLine) - PowerShell | Microsoft Learn \u3002</p> <p>\u9996\u5148\u6253\u5f00\u914d\u7f6e\u6587\u4ef6 </p> <pre><code>code $PROFILE\n</code></pre> <p>\u6dfb\u52a0\u8bed\u6cd5\u989c\u8272\u4fee\u6539\u7684\u914d\u7f6e\uff0c\u4f7f\u5176\u66f4\u63a5\u8fd1 zsh \u7684\u8bed\u6cd5\u7740\u8272\uff1a</p> <pre><code># $PROFILE\nSet-PSReadLineOption -Colors @{\n    Command     = 'Green'\n    Parameter   = 'White'\n    String      = 'Yellow'\n    Variable    = 'White'\n}\n</code></pre> <p>\u53f3\u4fa7\u7684\u503c\u53ef\u4ee5\u9009\u62e9\u4ee5\u4e0b\u4e4b\u4e00\uff08\u5e94\u8be5\u4e5f\u652f\u6301 ANSI \u548c RBG\uff0c\u672a\u6d4b\u8bd5\uff09</p> <ul> <li><code>Black</code></li> <li><code>DarkBlue</code></li> <li><code>DarkGreen</code></li> <li><code>DarkCyan</code></li> <li><code>DarkRed</code></li> <li><code>DarkMagenta</code></li> <li><code>DarkYellow</code></li> <li><code>Gray</code></li> <li><code>DarkGray</code></li> <li><code>Blue</code></li> <li><code>Green</code></li> <li><code>Cyan</code></li> <li><code>Red</code></li> <li><code>Magenta</code></li> <li><code>Yellow</code></li> <li><code>White</code></li> </ul>"},{"location":"dev/env/win/my_powershell/#git","title":"Git \u547d\u4ee4\u8865\u5168\u3001\u72b6\u6001\u663e\u793a","text":"<p>\u76ee\u524d\u547d\u4ee4\u884c\u9488\u5bf9 <code>git</code> \u76f8\u5173\u7684\u547d\u4ee4\u4e0d\u80fd\u8865\u5168\uff0c\u4e5f\u4e0d\u80fd\u663e\u793a\u5f53\u524d\u5206\u652f\u3002</p>"},{"location":"dev/env/win/my_powershell/#git_1","title":"\u5b89\u88c5 Git","text":"<p>\u4e0b\u8f7d\u94fe\u63a5\uff1aGit - Downloading Package (git-scm.com)\uff0c\u5f00\u59cb\u5b89\u88c5\u3002</p> <p>\u5b89\u88c5\u9009\u9879\u4e2d\uff0c\u6700\u597d\u52fe\u4e0a \u201cAdd a Git Bash Profile to Windows Terminal\u201d\uff0c\u56e0\u4e3a\u4ee5\u540e\u6709\u53ef\u80fd\u5728\u7ec8\u7aef\u6253\u5f00 Git Bash\u3002</p> <p>\u5176\u4ed6\u7684\u9009\u9879\u6839\u636e\u559c\u597d\u9009\u62e9\u3002</p>"},{"location":"dev/env/win/my_powershell/#posh-git","title":"\u5b89\u88c5 Posh-Git","text":"<p>Posh-Git \u63d0\u4f9b\u9488\u5bf9 <code>git</code> \u547d\u4ee4\u7684\u8865\u5168\uff0c\u4ee5\u53ca\u663e\u793a\u5f53\u524d\u5206\u652f\u7b49\u529f\u80fd\u3002</p> <p>\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5f00\u59cb\u5b89\u88c5\uff1a</p> <pre><code>Install-Module posh-git\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728 <code>$PROFILE</code> \u4e2d\u6dfb\u52a0\uff1a</p> <pre><code># $PROFILE\nImport-Module Posh-Git\n</code></pre> <p>\u968f\u540e\u65b0\u5efa\u4e00\u4e2a powershell\uff0c\u5c31\u652f\u6301\u547d\u4ee4\u8865\u5168\u4ee5\u53ca\u72b6\u6001\u663e\u793a\u4e86\u3002\uff08\u76ee\u524d\u72b6\u6001\u663e\u793a\u7684\u5b57\u4f53\u6709\u70b9\u95ee\u9898\uff0c\u7b49\u4e00\u4e0b\u4f1a\u4fee\u6539\u3002\uff09</p>"},{"location":"dev/env/win/my_powershell/#oh-my-posh","title":"\u4f7f\u7528 oh-my-posh \u7f8e\u5316\u547d\u4ee4\u63d0\u793a\u7b26","text":"<p>\u76ee\u524d\u7684\u547d\u4ee4\u63d0\u793a\u7b26\u8fd8\u4e0d\u591f\u7f8e\u89c2\uff0c\u5e76\u4e14\u7f3a\u4e4f\u547d\u4ee4\u6267\u884c\u65f6\u95f4\u7b49\u529f\u80fd\u3002\u5fae\u8f6f\u5b98\u65b9\u63a8\u8350\u4f7f\u7528 <code>oh-my-posh</code> \u6765\u7f8e\u5316\u547d\u4ee4\u63d0\u793a\u7b26\u4ee5\u53ca\u62d3\u5c55\u76f8\u5173\u7684\u529f\u80fd\u3002</p>"},{"location":"dev/env/win/my_powershell/#oh-my-posh_1","title":"\u5b89\u88c5 oh-my-posh","text":"<p>\u5fae\u8f6f\u5546\u5e97\u76f4\u63a5\u5b89\u88c5\uff1aoh-my-posh - Microsoft Apps</p>"},{"location":"dev/env/win/my_powershell/#_5","title":"\u9009\u62e9\u4e3b\u9898\uff1a","text":"<p>oh-my-posh \u63d0\u4f9b\u8bb8\u591a\u73b0\u6210\u7684\u4e3b\u9898\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 Themes | Oh My Posh\u3001</p> <p>\u4e0d\u540c\u7684\u4e3b\u9898\u6709\u4e0d\u540c\u7684\u7f8e\u5316\u6548\u679c\uff0c\u8fd8\u63d0\u4f9b\u4e00\u4e9b\u989d\u5916\u7684\u529f\u80fd\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u663e\u793a\u5f53\u524d\u8def\u5f84</li> <li> <p>\u663e\u793a git \u5206\u652f\u3001\u7248\u672c\u53f7\u7b49</p> </li> <li> <p>\u663e\u793a\u5f53\u524d\u7528\u6237\u540d\u3001\u4e3b\u673a\u540d</p> </li> <li>\u663e\u793a\u5f53\u524d\u65f6\u95f4</li> <li>\u663e\u793a\u7535\u8111\u5185\u5b58</li> <li>\u663e\u793a\u4e0a\u4e00\u6761\u547d\u4ee4\u6267\u884c\u7684\u65f6\u95f4</li> </ul> <p>\u9009\u62e9\u559c\u6b22\u7684\u4e3b\u9898\uff0c\u5e76\u8bb0\u4e0b\u4e3b\u9898\u540d\u3002</p>"},{"location":"dev/env/win/my_powershell/#_6","title":"\u8bbe\u7f6e\u4e3b\u9898","text":"<p>\u6211\u5728 Unix \u7cfb\u7edf\u4e0b\u7684 zsh \u4f7f\u7528\u7684\u662f pure \u4e3b\u9898\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e5f\u9009\u62e9 <code>pure</code> \u4e3b\u9898\u3002</p> <p>\u5728 <code>$PROFILE</code> \u7684\u7b2c\u4e00\u884c\u6dfb\u52a0\uff1a</p> <pre><code># $PROFILE\noh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH/pure.omp.json\" | Invoke-Expression\n</code></pre> <p>\u5c06 <code>pure</code> \u6362\u6210\u5176\u4ed6\u7684\u4e3b\u9898\u540d\u5373\u53ef\u3002</p> <p>\u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u65b0\u5efa\u4e00\u4e2a\u7ec8\u7aef\uff0c\u547d\u4ee4\u63d0\u793a\u7b26\u6837\u5f0f\u5c31\u4f1a\u53d1\u751f\u6539\u53d8\u3002</p>"},{"location":"dev/env/win/my_powershell/#_7","title":"\u4fee\u6539\u4e3b\u9898","text":"<p>oh-my-posh \u7684 pure \u4e3b\u9898\u548c zsh \u7684 pure \u4e3b\u9898\u5e76\u4e0d\u662f\u5b8c\u5168\u76f8\u4f3c\u7684\uff0c\u5177\u4f53\u6765\u8bf4\u6709\u4ee5\u4e0b 2 \u70b9\u4e0d\u540c\uff1a</p> <ol> <li>oh-my-posh \u7684 pure \u4e3b\u9898\u9ed8\u8ba4\u663e\u793a\u7528\u6237\u540d\uff0c\u4f46 zsh \u7684 pure \u4e3b\u9898\u5728\u672c\u5730\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u5e76\u4e0d\u4f1a\u663e\u793a\u7528\u6237\u540d\u3002</li> <li>oh-my-posh \u7684 pure \u4e3b\u9898\u67d0\u4e9b\u90e8\u5206\u7684\u5b57\u4f53\u989c\u8272\u548c zsh \u7684 pure \u4e3b\u9898\u4e0d\u4e00\u81f4\u3002</li> <li>oh-my-posh \u7684 pure \u4e3b\u9898\u65e0\u6cd5\u663e\u793a python \u865a\u62df\u73af\u5883\u3002</li> </ol> <p>\u4fee\u6539\u4e3b\u9898\u4e4b\u524d\uff0c\u9700\u8981\u590d\u5236\u539f\u6709\u4e3b\u9898\u7684\u4e00\u4e2a\u526f\u672c\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff08\u8fd9\u91cc\u6211\u5c06\u5176\u590d\u5236\u5230\u548c <code>$PROFILE</code> \u7684\u540c\u4e00\u76ee\u5f55\u4e0b\uff09\uff1a</p> <pre><code>mv $env:POSH_THEMES_PATH/pure.omp.json ~/Documents/PowerShell/my_pure.omp.json\n</code></pre> <p>\u4fee\u6539 <code>my_pure.omp.json</code> \u5c31\u80fd\u4fee\u6539\u4e3b\u9898\u4e86\uff0c\u4e3b\u9898\u53ef\u4fee\u6539\u7684\u5185\u5bb9\u5f88\u591a\uff0c\u53c2\u8003 Introduction | Oh My Posh\u3002</p> <p>\u9488\u5bf9\u6211\u7684 2 \u4e2a\u9700\u6c42\uff0c\u4fee\u6539\u65b9\u6cd5\u5982\u4e0b\uff1a</p>"},{"location":"dev/env/win/my_powershell/#_8","title":"\u53bb\u9664\u7528\u6237\u540d\u663e\u793a","text":"<p>\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5220\u6389\u6709 <code>segments</code> \u91cc\u5e26\u6709 <code>{{ .UserName}}</code> \u7684\u90a3\u4e00\u6bb5\u5c31\u597d\u4e86\u3002</p>"},{"location":"dev/env/win/my_powershell/#_9","title":"\u4fee\u6539\u90e8\u5206\u5b57\u4f53\u989c\u8272","text":"<p>\u4f7f\u7528 vscode \u6253\u5f00\u914d\u7f6e\u6587\u4ef6\uff0c\u5e26\u6709 <code>foreground</code> \u7684\u6807\u7b7e\u5c31\u662f\u5b57\u4f53\u7684\u989c\u8272\uff0c\u76f4\u63a5\u4fee\u6539\u5c31\u597d\u3002</p> <p>\u5b57\u4f53\u7684\u989c\u8272\u662f RGB \u683c\u5f0f\uff0c\u6bd4\u8f83\u9ebb\u70e6\u7684\u662f\u8981\u5982\u4f55\u77e5\u9053\u4fee\u6539\u6210\u4ec0\u4e48\u989c\u8272\uff0c\u4f8b\u5982\u6211\u60f3\u8981\u6539\u6210\u548c zsh \u7684 pure \u4e3b\u9898\u4e00\u6837\u7684\u5b57\u4f53\u989c\u8272\uff0c\u5c31\u5fc5\u987b\u83b7\u5f97 zsh \u7684 pure \u4e3b\u9898\u7684\u989c\u8272\u503c\u3002\u89e3\u51b3\u7684\u529e\u6cd5\u6709\u4e24\u4e2a\uff0c\u4e00\u662f\u76f4\u63a5\u67e5\u9605 zsh \u7684 pure \u4e3b\u9898\u7684\u6e90\u7801\uff0c\u76f4\u63a5\u5728 github \u4e0a\u641c\u7d22\u3002\u4e8c\u662f\u76f4\u63a5\u6355\u83b7\u5c4f\u5e55\u7684\u50cf\u7d20\u70b9\u7684\u503c\uff0c\u6211\u7528\u7684\u662f <code>PowerToys</code> \u63d0\u4f9b\u7684\u989c\u8272\u9009\u53d6\u5de5\u5177 PowerToys\u9002\u7528\u4e8e Windows \u7684 ColorPicker \u5b9e\u7528\u5de5\u5177 | Microsoft Learn\u3002\u7528\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u9996\u5148\u5728 windows \u7ec8\u7aef ssh \u5230\u4e00\u53f0\u914d\u597d\u4e86 zsh \u548c pure \u4e3b\u9898\u7684 Unix \u7cfb\u7edf\u4e0a\uff08\u4e91\u670d\u52a1\u5668\u3001\u865a\u62df\u673a\u3001WSL \u90fd\u53ef\u4ee5\uff09 \uff0c\u7136\u540e\u4f7f\u7528 <code>CTRL+\u6eda\u8f6e</code> \u653e\u5927\u7ec8\u7aef\uff0c\u6700\u540e\u7528\u5feb\u6377\u952e\u76f4\u63a5\u6355\u6349\u5c4f\u5e55\u50cf\u7d20\u70b9\u7684 RGB \u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u7b80\u5355\u5feb\u6377\u3002</p> <p>\u6700\u7ec8\u6211\u4fee\u6539\u4e86 pure \u4e3b\u9898\u8fd9\u4e9b\u90e8\u5206\u7684\u5b57\u4f53\u989c\u8272\uff1a</p> type \u4fee\u6539\u524d \u4fee\u6539\u540e path #81A1C1 #57C7FF executiontime #A3BE8C #F3F99D status #B48EAD #FF6AC1 <p>\u6539\u4e86\u8fd9\u4e09\u4e2a\u5c31\u548c zsh \u7684 pure \u4e3b\u9898\u5dee\u4e0d\u591a\u4e86\u3002</p>"},{"location":"dev/env/win/my_powershell/#python","title":"\u589e\u52a0 python \u865a\u62df\u73af\u5883\u63d0\u793a","text":"<p>\u53c2\u8003 Python | Oh My Posh\u3002</p> <p>\u6ce8\u610f\u865a\u62df\u73af\u5883\u7684\u540d\u5b57\u4e0d\u80fd\u4e3a <code>.venv</code> \u6216\u8005 <code>venv</code>\uff0c\u5426\u5219\u5b9e\u9645\u663e\u793a\u7684\u65f6\u5019\u4f1a\u53d8\u6210\u4e0a\u4e00\u7ea7\u76ee\u5f55\u7684\u540d\u5b57\u3002</p>"},{"location":"dev/env/win/my_powershell/#powershell-zsh","title":"\u8ba9 PowerShell \u66f4\u52a0\u63a5\u8fd1 zsh","text":"<p>\u914d\u7f6e\u4e00\u4e9b\u63d2\u4ef6\u8ba9 powershell \u66f4\u52a0\u7f8e\u89c2\u3001\u66f4\u52a0\u597d\u7528\u3002\u6b64\u5916\uff0cpowershell \u7684\u547d\u4ee4\u540d\u79f0\u548c zsh \u4e0d\u592a\u4e00\u81f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u522b\u540d\u5b9e\u73b0\u3002</p>"},{"location":"dev/env/win/my_powershell/#z","title":"z \uff1a\u81ea\u52a8\u8df3\u8f6c","text":"<p>\u7c7b\u4f3c\u4e8e zsh \u7684\u81ea\u52a8\u8df3\u8f6c\u63d2\u4ef6\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a</p> <pre><code>Install-Module z\n</code></pre> <p>\u7136\u540e\u5728 <code>$PROFILE</code> \u6dfb\u52a0\uff1a</p> <pre><code># $PROFILE\nImport-Module z\n</code></pre>"},{"location":"dev/env/win/my_powershell/#terminal-icons","title":"Terminal-Icons\uff1a\u7ec8\u7aef\u56fe\u6807","text":"<p>\u5728 <code>ls</code> \u7684\u65f6\u5019\u6587\u4ef6\u524d\u9644\u52a0\u56fe\u6807\u663e\u793a\uff08\u4e0d\u7136\u7684\u8bdd\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6587\u4ef6\u5939\u7684\u9ad8\u4eae\u663e\u793a\u4e0d\u592a\u597d\u770b\uff09\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a</p> <pre><code>Install-Module Terminal-Icons\n</code></pre> <p>\u7136\u540e\u5728 <code>$PROFILE</code> \u6dfb\u52a0\uff1a</p> <pre><code># $PROFILE\nImport-Module Terminal-Icons\n</code></pre>"},{"location":"dev/env/win/my_powershell/#set-alias","title":"\u4f7f\u7528 Set-Alias \u7ed9\u547d\u4ee4\u8d77\u522b\u540d","text":""},{"location":"dev/env/win/my_powershell/#open","title":"open \u547d\u4ee4","text":"<pre><code>Set-Alias open ii\n</code></pre>"},{"location":"dev/env/win/my_powershell/#_10","title":"\u4f7f\u7528\u51fd\u6570\u521b\u5efa\u7c7b\u4f3c\u7684\u547d\u4ee4","text":""},{"location":"dev/env/win/my_powershell/#whereis","title":"whereis\u547d\u4ee4","text":"<pre><code># \u65e2\u80fd\u67e5\u6587\u4ef6\u4e5f\u80fd\u67e5\u547d\u4ee4\nfunction whereis ($command) {\n    Get-Command -Name $command -ErrorAction SilentlyContinue | \n    Select-Object -ExpandProperty Path -ErrorAction SilentlyContinue\n}\n</code></pre>"},{"location":"dev/env/win/my_powershell/#vscode","title":"\u9002\u914d vscode \u7ec8\u7aef","text":"<p>\u89e3\u51b3 vscode \u7ec8\u7aef\u7f3a\u5931\u5b57\u4f53\u7684\u95ee\u9898</p> <p>\u5728\u8bbe\u7f6e\u4e2d\u641c\u7d22 <code>Font</code>\uff0c\u5c06 <code>Terminal &gt; Integrated: Font Family</code> \u8bbe\u7f6e\u4e3a <code>FiraCode Nerd Font</code> \u5373\u53ef\u3002</p>"},{"location":"dev/env/win/my_powershell/#_11","title":"\u6211\u7684\u6700\u7ec8\u914d\u7f6e\u6587\u4ef6","text":""},{"location":"dev/env/win/my_powershell/#profile","title":"<code>$PROFILE</code> \u6587\u4ef6","text":"<pre><code># oh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH/aliens.omp.json\" | Invoke-Expression\noh-my-posh init pwsh --config \"~/Documents/PowerShell/my_pure.omp.json\" | Invoke-Expression\nSet-PSReadLineOption -Colors @{\n    Command     = 'Green'\n    Parameter   = 'White'\n    String      = 'Yellow'\n    Variable    = 'White'\n}\n\n# \u5173\u95edpython\u81ea\u5e26\u7684\u865a\u62df\u73af\u5883\u63d0\u793a\n$Env:VIRTUAL_ENV_DISABLE_PROMPT=1\n\nImport-Module Posh-Git\nImport-Module Terminal-Icons\nImport-Module z\n\nSet-Alias open ii\n\nfunction clash {\n    $Env:http_proxy = \"http://127.0.0.1:7890\"\n    $Env:https_proxy = \"http://127.0.0.1:7890\"\n}\nfunction clash-off {\n    $Env:http_proxy = $Env:https_proxy = $null\n}\n\n# \u65e2\u80fd\u67e5\u6587\u4ef6\u4e5f\u80fd\u67e5\u547d\u4ee4\nfunction whereis ($command) {\n    Get-Command -Name $command -ErrorAction SilentlyContinue | \n    Select-Object -ExpandProperty Path -ErrorAction SilentlyContinue\n}\n</code></pre>"},{"location":"dev/env/win/my_powershell/#my_pureompjson","title":"<code>my_pure.omp.json</code> \u6587\u4ef6","text":"<pre><code>{\n\"$schema\": \"https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\",\n\"version\": 2,\n\"blocks\": [\n{\n\"type\": \"prompt\",\n\"alignment\": \"left\",\n\"newline\": true,\n\"segments\": [\n{\n\"foreground\": \"#57C7FF\",\n\"properties\": {\n\"style\": \"full\"\n},\n\"style\": \"plain\",\n\"template\": \"{{ .Path }} \",\n\"type\": \"path\"\n}\n]\n},\n{\n\"type\": \"prompt\",\n\"alignment\": \"left\",\n\"segments\": [\n{\n\"foreground\": \"#6C6C6C\",\n\"properties\": {\n\"branch_ahead_icon\": \"&lt;#88C0D0&gt;\\u21e1 &lt;/&gt;\",\n\"branch_behind_icon\": \"&lt;#88C0D0&gt;\\u21e3 &lt;/&gt;\",\n\"branch_icon\": \"\",\n\"fetch_stash_count\": true,\n\"fetch_status\": true,\n\"fetch_upstream_icon\": true,\n\"github_icon\": \"\"\n},\n\"style\": \"plain\",\n\"template\": \"{{ .UpstreamIcon }}{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}{{ if .Working.Changed }}&lt;#FFAFD7&gt;*&lt;/&gt;{{ .Working.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Staging.Changed }} \\uf046 {{ .Staging.String }}{{ end }}{{ if gt .StashCount 0 }} \\ueb4b {{ .StashCount }}{{ end }} \",\n\"type\": \"git\"\n}\n]\n},\n{\n\"alignment\": \"left\",\n\"segments\": [\n{\n\"foreground\": \"#F3F99D\",\n\"properties\": {\n\"style\": \"austin\"\n},\n\"style\": \"plain\",\n\"template\": \" {{ .FormattedMs }} \",\n\"type\": \"executiontime\"\n}\n],\n\"type\": \"prompt\"\n},\n{\n\"type\": \"prompt\",\n\"alignment\": \"left\",\n\"newline\": true,\n\"segments\": [\n{\n\"type\": \"python\",\n\"style\": \"plain\",\n\"foreground\": \"#6C6C6C\",\n\"template\": \"{{ .Venv }} \",\n\"properties\": {\n\"home_enabled\": false,       \"fetch_virtual_env\": true,\n\"display_default\": true,\n\"fetch_version\": true,\n\"missing_command_text\": \"\",\n\"display_mode\": \"environment\"\n}\n},\n{\n\"foreground\": \"#FF6AC1\",\n\"foreground_templates\": [\n\"{{ if gt .Code 0 }}#BF616A{{ end }}\"\n],\n\"properties\": {\n\"always_enabled\": true\n},\n\"style\": \"plain\",\n\"template\": \"\\u276f \",\n\"type\": \"status\"\n}\n]\n}\n],\n\"console_title_template\": \"{{if .Root}}(Admin){{end}} {{.PWD}}\"\n}\n</code></pre>"},{"location":"dev/env/win/vmware/","title":"VMware-Linux\u4e2a\u4eba\u4f7f\u7528\u624b\u518c","text":""},{"location":"dev/env/win/vmware/#_1","title":"\u524d\u8a00","text":"<p>\u867d\u7136 Windows \u63a8\u51fa\u4e86 WSL2 \uff0c\u4f46\u662f\u6211\u4e2a\u4eba\u8fd8\u662f\u503e\u5411\u4e8e\u5728\u865a\u62df\u673a\u4e0a\u5b89\u88c5 Linux \u7cfb\u7edf\uff0c\u539f\u56e0\uff1a</p> <ul> <li>\u865a\u62df\u673a\u662f\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002</li> <li>\u865a\u62df\u673a\u652f\u6301\u591a\u8282\u70b9\u90e8\u7f72\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u62e5\u6709\u4e0d\u540c\u7684\u914d\u7f6e\u3002</li> <li>\u5982\u679c WSL2 \u7684\u4f7f\u7528\u51fa\u73b0\u95ee\u9898\uff0c\u6709\u53ef\u80fd\u662f WSL2 \u7684\u95ee\u9898\uff0c\u4e5f\u6709\u53ef\u80fd\u662f Linux \u7cfb\u7edf\u7684\u95ee\u9898\u3002\u800c VMware \u5df2\u7ecf\u76f8\u5f53\u6210\u719f\uff0c\u57fa\u672c\u6ca1\u6709\u95ee\u9898\u3002</li> </ul> <p>\u5f53\u7136\uff0cWSL2 \u4e5f\u4e0d\u662f\u6beb\u65e0\u4f18\u70b9\u3002\u5982\u679c\u8981\u505a\u6df1\u5ea6\u5b66\u4e60\u7684\u8bdd\uff0c\u53ef\u80fd WSL2 \u548c\u786c\u4ef6\u7684\u517c\u5bb9\u6027\u8981\u597d\u4e00\u4e9b\u3002</p>"},{"location":"dev/env/win/vmware/#vmware","title":"VMware \u7684\u4e0b\u8f7d\u4e0e\u5b89\u88c5","text":"<p>\u4e0b\u8f7d VMware Workstation Pro | CN</p> <p>\u4e0b\u8f7d\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86\uff0c\u6fc0\u6d3b\u7684\u8bdd\uff0c\u7f51\u4e0a\u627e\u6fc0\u6d3b\u7801\u3002\u4e0d\u60f3\u627e\u6fc0\u6d3b\u7801\u5c31\u4e0b\u8f7d\u793e\u533a\u7248\u3002</p> <ul> <li>20240517 \u66f4\u65b0\uff1a\u542c\u8bf4\u6700\u8fd1 VMware \u9488\u5bf9\u4e2a\u4eba\u7528\u6237\u5b8c\u5168\u514d\u8d39\u4e86\uff0c\u597d\u8036\uff01</li> </ul>"},{"location":"dev/env/win/vmware/#_2","title":"\u914d\u7f6e\u865a\u62df\u7f51\u5361","text":"<p>VMware \u63d0\u4f9b\u4e09\u79cd\u7f51\u7edc\u6a21\u5f0f\uff1a\u6865\u63a5\u6a21\u5f0f\u3001\u4e3b\u673a\u6a21\u5f0f\u3001NAT \u6a21\u5f0f\u3002</p> <p>\u7f51\u4e0a\u5173\u4e8e\u4e09\u79cd\u6a21\u5f0f\u7684\u8bb2\u89e3\u5f88\u591a\u4e86\uff0c\u6211\u4e2a\u4eba\u6bd4\u8f83\u63a8\u8350 NAT \u6a21\u5f0f\uff0c\u4e00\u65b9\u9762\u6211\u4e0d\u7528\u7ba1\u7269\u7406\u673a\u7684 ip \u53d8\u5316\uff0c\u53e6\u4e00\u65b9\u9762\u8bbe\u7f6e\u4ee3\u7406\u4e4b\u540e\u51fa\u53e3\u7684\u662f\u540c\u4e00\u4e2a ip\uff0c\u6240\u4ee5\u53ea\u5360\u7528 1 \u4e2a\u8bbe\u5907\u3002NAT \u6a21\u5f0f\u53ef\u80fd\u4f1a\u6709\u4e00\u70b9\u6027\u80fd\u635f\u5931\uff0c\u4f46\u975e\u5e38\u5c0f\u3002</p> <ol> <li> <p>\u5728 VMware \u4e2d\u9009\u62e9 \u3010\u7f16\u8f91--\u865a\u62df\u7f51\u7edc\u8bbe\u7f6e\u3011       </p> </li> <li> <p>\u5148\u9009\u62e9\u3010\u66f4\u6539\u8bbe\u7f6e\u3011\uff0c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u7ee7\u7eed\uff0c\u5bf9 \u3010VMnet8\u3011\u8fdb\u884c\u914d\u7f6e\u3002</p> <p>\u9700\u8981\u914d\u7f6e\u5b50\u7f51\u7684\u7f51\u6bb5\u548c\u5b50\u7f51\u63a9\u7801\uff0c\u5b50\u7f51\u7f51\u6bb5\u53ea\u8981\u4e0d\u548c\u5176\u4ed6\u7f51\u5361\u7684\u51b2\u7a81\u5373\u53ef\uff0c\u7528\u9ed8\u8ba4\u7684\u4e5f\u884c\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u9ed8\u8ba4\u7684 26 \u7f51\u6bb5\u3002\u7136\u540e\u52fe\u9009\u3010\u5c06\u4e3b\u673a\u865a\u62df\u9002\u914d\u5668\u8fde\u63a5\u5230\u6b64\u7f51\u7edc\u3011 \uff0c\u540c\u65f6\u53d6\u6d88 \u3010\u4f7f\u7528\u672c\u5730 DHCP \u670d\u52a1\u5c06 IP \u5730\u5740\u5206\u914d\u7ed9\u865a\u62df\u673a\u3011\u3002\u6700\u540e\u9009\u62e9 \u3010NAT \u8bbe\u7f6e\u3011</p> <p> </p> </li> <li> <p>\u8bbe\u7f6e\u4e00\u4e0b\u7f51\u5173\uff0c\u4e00\u822c\u8bbe\u7f6e\u6210 1 \u5c31\u53ef\u4ee5\u3002</p> <p> </p> </li> <li> <p>\u914d\u7f6e\u7269\u7406\u673a\u7684 VMnet8 \u7f51\u5361 ip\uff0c\u6253\u5f00\u7f51\u7edc\u9002\u914d\u5668\uff0c\u8bbe\u7f6e ip\u3002</p> <p> </p> </li> </ol>"},{"location":"dev/env/win/vmware/#ubuntu","title":"Ubuntu \u955c\u50cf\u4e0b\u8f7d","text":"<p>\u5efa\u8bae\u9009\u62e9 Ubuntu\u3002</p> <p>\u684c\u9762\u7248\uff08\u5e26\u6709GUI\uff09\uff1aDownload Ubuntu Desktop | Download | Ubuntu</p> <p>\u670d\u52a1\u5668\uff08\u6ca1\u6709GUI\uff09\uff1aGet Ubuntu Server | Download | Ubuntu</p>"},{"location":"dev/env/win/vmware/#_3","title":"\u521b\u5efa\u865a\u62df\u673a\u8bbe\u7f6e","text":"<ol> <li> <p>\u9009\u62e9 \u3010\u521b\u5efa\u65b0\u7684\u865a\u62df\u673a\u3011  </p> <p> </p> <p>\u9009\u62e9\u5178\u578b\u5c31\u597d\u3002</p> <p> </p> </li> <li> <p>\u7b2c\u4e8c\u9879\u8fd9\u91cc\u9009\u62e9\u521a\u521a\u4e0b\u8f7d\u7684 Ubuntu \u955c\u50cf\uff0c\u7c7b\u4f3c\u4e8e\u653e\u4e00\u4e2a\u5b89\u88c5\u7528\u7684\u5149\u76d8\u3002</p> <p> </p> </li> <li> <p>\u8bbe\u7f6e\u865a\u62df\u673a\u540d\u79f0\uff0c\u6211\u8fd9\u91cc\u662f\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u8bbe\u7f6e\u6210 02\u3002</p> <p> </p> </li> <li> <p>\u5206\u914d\u5927\u5c0f\uff0c\u9ed8\u8ba4\u7684 20GB \u592a\u5c0f\u4e86\uff0c\u73b0\u5728\u6700\u8f7b\u91cf\u7684\u4e91\u670d\u52a1\u5668\u90fd\u662f 40GB \u8d77\u6b65\u3002</p> <p> </p> </li> <li> <p>\u914d\u7f6e\u5b8c\u6210\u540e\u9009\u62e9 \u3010\u81ea\u5b9a\u4e49\u786c\u4ef6--\u7f51\u7edc\u9002\u914d\u5668\u3011\uff0c\u9009\u62e9 \u3010\u81ea\u5b9a\u4e49--VMnet8\uff08NAT \u6a21\u5f0f\uff09\u3011\u3002</p> <p> </p> </li> </ol>"},{"location":"dev/env/win/vmware/#ubuntu_1","title":"Ubuntu \u5b89\u88c5\u4e0e\u914d\u7f6e","text":"<ol> <li> <p>\u9009\u7b2c\u4e00\u4e2a\u5f00\u59cb\u5b89\u88c5\u3002</p> <p> </p> </li> <li> <p>\u7b49\u5f85\u4e00\u4f1a\u8fdb\u5165\u8bed\u8a00\u9009\u62e9\u754c\u9762</p> <p> </p> <p>\u7136\u540e\u4f1a\u8df3\u51fa\u786e\u8ba4\u8bed\u8a00\u754c\u9762\u3002</p> <p> </p> </li> <li> <p>\u914d\u7f6e\u7f51\u7edc\uff0c\u624b\u52a8\u7ed9\u7cfb\u7edf\u56fa\u5b9a\u4e00\u4e2a ip\uff0c\u5728\u7f51\u5361\u90a3\u91cc\u9009\u62e9 \u3010Edit IPv4\u3011</p> <p> </p> <p>\u914d\u7f6e\u65b9\u5f0f\u9009\u62e9 \u3010Manual\u3011\u624b\u52a8\u914d\u7f6e\uff0c\u3010Subset\u3011\u8868\u793a\u7f51\u6bb5\uff0c\u3010Address\u3011\u8868\u793a\u56fa\u5b9a\u7684 ip\uff0cGateway \u8868\u793a\u7f51\u5173\uff0c\u3010Name servers\u3011\u8868\u793a dns\uff0c\u5176\u4e2d <code>223.5.5.5</code> \u548c <code>223.6.6.6</code> \u662f\u963f\u91cc\u4e91\u516c\u5171 dns\u3002</p> <p>\u3010Search domains\u3011\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\u3002</p> <p> </p> <p>\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ea\u8981\u7269\u7406\u4e3b\u673a\u6709\u7f51\uff0c\u5219\u865a\u62df\u673a\u5c31\u6709\u7f51\u3002</p> </li> <li> <p>\u914d\u7f6e\u4ee3\u7406\u9009\u9879\uff0c\u5982\u679c\u60f3\u8ba9\u7269\u7406\u4e3b\u673a\u65e0\u6761\u4ef6\u4ee3\u7406\u6d41\u91cf\u7684\u8bdd\u5c31\u586b\u7269\u7406\u4e3b\u673a\u5728 VMnet8 \u7f51\u5361\u7684 ip\u3002\u6211\u7684\u4f7f\u7528\u4e60\u60ef\u662f\u53ea\u5728\u5fc5\u8981\u7684\u65f6\u5019\u5f00\u542f\u4ee3\u7406\uff0c\u6240\u4ee5\u7559\u7a7a\u3002</p> <p> </p> </li> <li> <p>\u8bbe\u7f6e\u955c\u50cf\u6e90\uff0c\u5982\u679c\u524d\u9762\u7f51\u7edc\u914d\u7f6e\u6b63\u786e\uff0c\u865a\u62df\u673a\u6709\u7f51\u7684\u8bdd\uff0c\u5219\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684\u63d0\u793a\uff0c\u9ed8\u8ba4\u7528\u7684\u662f\u6e05\u534e\u6e90\uff0c\u6240\u4ee5\u4e5f\u4e0d\u7528\u66ff\u6362\u4e86\uff0c\u7701\u4e8b\u3002\u5982\u679c\u8fd9\u91cc\u6ca1\u6709\u63d0\u793a\u5219\u865a\u62df\u673a\u53ef\u80fd\u6ca1\u6709\u7f51\u7edc\u3002</p> <p> </p> </li> <li> <p>\u662f\u5426\u66f4\u65b0\uff0c\u4e0d\u60f3\u66f4\u65b0\u5c31\u9009 continue\u3002</p> <p> </p> </li> <li> <p>\u662f\u5426\u5bf9\u78c1\u76d8\u5206\u533a\uff0c\u770b\u81ea\u5df1\u7684\u4f7f\u7528\u4e60\u60ef\uff0c\u6ca1\u6709\u5206\u533a\u4e60\u60ef\u5c31\u4e0d\u7528\u52a8\u3002</p> <p> </p> <p>\u7136\u540e\u4f1a\u8ba9\u4f60\u786e\u8ba4\u78c1\u76d8\u914d\u7f6e\u7684\u4fe1\u606f\u3002</p> <p> </p> <p>\u786e\u8ba4\u65e0\u8bef\u4e4b\u540e\u9009\u62e9 Continue\u3002</p> <p> </p> </li> <li> <p>\u8bbe\u7f6e\u7528\u6237\u4e3b\u673a\u7b49\u4fe1\u606f\uff0c\u3010Your name\u3011\u8868\u793a\u5f00\u673a\u7684\u65f6\u5019\u770b\u5230\u7684\u540d\u5b57\uff0c\u767b\u5f55\u4e4b\u540e\u5c31\u6ca1\u7528\u4e86\uff0c\u5982\u679c\u662f\u6ca1\u6709 GUI \u7684\u8bdd\u8fd9\u4e2a\u5e94\u8be5\u662f\u770b\u4e0d\u5230\u7684\u3002\u3010Your server's name\u3011\u8868\u793a\u4e3b\u673a\u540d\uff0c\u3010Pick a username\u3011\u8868\u793a\u7528\u6237\u540d\u3002</p> <p> </p> </li> <li> <p>\u63d0\u793a\u662f\u5426\u5347\u7ea7\u5230 Ubuntu pro\uff0c\u8df3\u8fc7\u3002</p> <p> </p> </li> <li> <p>\u662f\u5426\u5b89\u88c5 OpenSSH\uff0c\u8fd9\u4e2a\u5b89\u88c5\u4e4b\u540e\uff0c\u540e\u9762\u5c31\u4e0d\u7528\u5728 VMware \u4e0a\u7528\u865a\u62df\u673a\u4e86\u3002</p> <p> </p> </li> <li> <p>\u5e38\u89c1\u7684\u8f6f\u4ef6\u5b89\u88c5\uff0c\u9700\u8981\u54ea\u4e2a\u5c31\u5b89\u88c5\u54ea\u4e2a\u3002</p> <p> </p> </li> <li> <p>\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\u9009\u62e9 \u3010Cancel update and reboot\u3011</p> <p> </p> </li> <li> <p>\u91cd\u542f\u7684\u65f6\u5019\u4f1a\u63d0\u793a\u9700\u8981\u79fb\u9664\u5b89\u88c5\u5a92\u4ecb\u3002</p> <p> </p> <p>\u5148\u5173\u95ed\u865a\u62df\u673a\u3002</p> <p> </p> <p>\u5728\u865a\u62df\u673a\u8bbe\u7f6e\u7684\u3010CD/DVD\uff08SATA\uff09\u3011\u4e2d\uff0c\u6539\u4e3a\u3010\u4f7f\u7528\u7269\u7406\u9a71\u52a8\u5668-\u81ea\u52a8\u68c0\u6d4b\u3011\u3002</p> <p> </p> </li> <li> <p>\u542f\u52a8\u865a\u62df\u673a\uff0c\u63d0\u793a\u627e\u4e0d\u5230\u8fde\u63a5\u7684 SATA\uff0c\u56e0\u4e3a\u521a\u521a\u79fb\u9664\u4e86\u5b89\u88c5\u5a92\u4ecb\uff0c\u865a\u62df\u673a\u8bc6\u522b\u4e0d\u5230\u4e86\u3002\u9009\u5426\u5c31\u884c\u3002</p> <p> </p> </li> <li> <p>\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff08\u53ef\u4ee5\u6309\u56de\u8f66\uff0c\u5982\u679c\u63d0\u793aLogin\u8868\u793a\u5b89\u88c5\u6210\u529f\uff09\uff0c\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u767b\u5f55\u6210\u529f\u3002</p> <p> </p> </li> </ol>"},{"location":"dev/env/win/vmware/#_4","title":"\u540e\u7eed\u8bbe\u7f6e","text":""},{"location":"dev/env/win/vmware/#ssh","title":"\u4f7f\u7528 ssh \u767b\u5f55\u865a\u62df\u673a","text":"<p>\u5728 PowerShell \u4e2d\u8f93\u5165\uff1a</p> <pre><code># \u7269\u7406\u673a\nssh username@ip\n</code></pre> <p>\u8f93\u5165\u5bc6\u7801\u5373\u53ef\u767b\u5f55\uff0c\u540e\u9762\u5c31\u4e0d\u7528\u518d VMware \u4e2d\u64cd\u4f5c\u4e86\u3002</p>"},{"location":"dev/env/win/vmware/#_5","title":"\u68c0\u6d4b\u865a\u62df\u673a\u6709\u6ca1\u6709\u7f51","text":"<p><code>ping</code> \u4e00\u4e0b\u5c31\u597d\uff1a</p> <pre><code># \u865a\u62df\u673a\nping baidu.com\n</code></pre>"},{"location":"dev/env/win/vmware/#root","title":"\u4fee\u6539 root \u5bc6\u7801","text":"<p>\u5e73\u65f6\u8fd8\u662f\u7528 root \u6bd4\u8f83\u591a\uff0c\u5148\u4fee\u6539\u5bc6\u7801\uff1a</p> <pre><code># \u865a\u62df\u673a\nsudo passwd root\n</code></pre> <p>\u7136\u540e\u5207\u6362\u5230 root\uff1a</p> <pre><code># \u865a\u62df\u673a\nsudo root\n</code></pre>"},{"location":"dev/env/win/vmware/#root-ssh","title":"\u5141\u8bb8 root \u7528\u6237\u4f7f\u7528 ssh \u767b\u5f55","text":"<p>\u9700\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff1a</p> <pre><code># \u865a\u62df\u673a\nvi /etc/ssh/sshd_config\n</code></pre> <p>\u6dfb\u52a0\u8fd9\u4e00\u884c\u5373\u53ef</p> <pre><code>PermitRootLogin yes\n</code></pre> <p>\u7136\u540e\u91cd\u542f ssh \u670d\u52a1\u3002</p> <pre><code># \u865a\u62df\u673a\nservice sshd restart\n</code></pre> <p>\u73b0\u5728\u53ef\u4ee5\u7528 root \u7528\u6237\u767b\u5f55\u4e86\u3002</p> <pre><code># \u7269\u7406\u673a\nssh root@ip\n</code></pre>"},{"location":"dev/env/win/vmware/#ip","title":"\u65e0\u9700\u8f93\u5165 ip \u767b\u5f55","text":"<p>\u5728\u7269\u7406\u673a\u7684 VSCode \u4e2d\u9009\u62e9\u5de6\u4e0b\u89d2\u7684\u7eff\u8272\u6309\u94ae\uff0c\u3010\u8fde\u63a5\u5230\u4e3b\u673a--\u914d\u7f6e SSH \u4e3b\u673a\u3011\uff0c\u7136\u540e\u4efb\u610f\u9009\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u5176\u4e2d\u52a0\u5165\uff1a</p> <pre><code>Host linux2\n    HostName 192.168.26.129\n    User root\n</code></pre> <p>\u8fd9\u8868\u793a\u4f7f\u7528 <code>linux2</code> \u4ee3\u66ff <code>root@192.168.26.129</code></p> <p>\u73b0\u5728\uff0c\u65e0\u9700\u8f93\u5165\u7528\u6237\u540d\u548c ip\uff0c\u8f93\u5165\u8fd9\u6761\u547d\u4ee4\u5373\u53ef\u767b\u5f55\uff1a</p> <pre><code># \u7269\u7406\u673a\nssh linux2\n</code></pre>"},{"location":"dev/env/win/vmware/#_6","title":"\u514d\u5bc6\u767b\u5f55","text":"<p>\u5148\u751f\u6210\u4e00\u4e2a\u516c\u79c1\u94a5\u5bf9\uff1a</p> <pre><code># \u7269\u7406\u673a\nssh-keygen\n</code></pre> <p>\u4e00\u8def\u56de\u8f66\uff08\u8868\u793a\u5168\u9ed8\u8ba4\uff0c\u4f1a\u5728 <code>~/.ssh/id_rsa</code> \u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u5bf9 <code>RSA</code> \u516c\u79c1\u94a5\uff0c\u9ed8\u8ba4\u957f\u5ea6\u4e3a 3072\uff09</p> <p>\u7136\u540e\u590d\u5236\u516c\u94a5\u7684\u5185\u5bb9</p> <pre><code># \u7269\u7406\u673a\ncd ~/.ssh\nls\ncat id_rsa.pub\n</code></pre> <p>\u5176\u4e2d <code>id_rsa.pub</code> \u8868\u793a\u516c\u94a5\u7684\u5185\u5bb9\uff0c<code>cat</code> \u547d\u4ee4\u5c06\u5176\u6253\u5370\u51fa\u6765\uff0c\u5168\u90e8\u590d\u5236\u5373\u53ef\u3002</p> <p>\u7136\u540e\u767b\u5f55\u865a\u62df\u673a\uff0c\u5c06\u516c\u94a5\u7684\u5185\u5bb9\u52a0\u4e0a\u53bb\u3002</p> <pre><code># \u7269\u7406\u673a\nssh linux2\n# \u865a\u62df\u673a\nvi ~/.ssh/authorized_keys\n</code></pre> <p>\u7c98\u8d34\u516c\u94a5\u5373\u53ef\u3002</p> <p>\u73b0\u5728\uff0c\u65e0\u9700\u8f93\u5165\u5bc6\u7801\u5373\u53ef\u767b\u5f55\u865a\u62df\u673a\u3002</p>"},{"location":"dev/env/win/vmware/#vscode-remote-ssh","title":"\u5728 VSCode \u4e2d Remote - SSH","text":"<ul> <li>\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u7eff\u8272\u6309\u94ae\uff0c\u8fde\u63a5\u5230\u865a\u62df\u673a\uff0c\u9009\u62e9 Linux \u7cfb\u7edf\u5373\u53ef\u3002</li> <li><code>code</code> \u547d\u4ee4\u7684\u4f7f\u7528\u3002</li> </ul>"},{"location":"dev/env/win/vmware/#linux","title":"Linux \u547d\u4ee4\u884c\u7f8e\u5316","text":"<p>\u6709\u5f88\u591a\u6559\u7a0b\uff0c\u6211\u6bd4\u8f83\u559c\u6b22\u6781\u7b80\u98ce\u683c\uff0c\u53c2\u8003 \u8fd9\u4e2a\u6559\u7a0b\uff0c\u867d\u7136\u8fd9\u4e2a\u6559\u7a0b\u662f Mac \u7684\uff0c\u4f46\u672c\u8d28\u90fd\u662f Unix \u7cfb\u7edf\u3002</p> <ol> <li> <p>\u5b89\u88c5 zsh</p> <pre><code>sudo apt install zsh\n</code></pre> </li> <li> <p>\u5b89\u88c5 oh-my-zsh</p> <p>\u53ef\u80fd\u6709\u70b9\u5361\uff0c\u5efa\u8bae\u6302\u4ee3\u7406\uff0c</p> <pre><code>sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre> </li> <li> <p>\u5b89\u88c5 pure prompt\uff0cLinux \u9009\u62e9\u624b\u52a8\u5b89\u88c5\u5373\u53ef\u3002</p> </li> <li> <p>\u5b89\u88c5 <code>zsh-syntax-highlighting</code></p> <pre><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n</code></pre> </li> <li> <p>\u5b89\u88c5 <code>zsh-autosuggestions</code></p> <pre><code>git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n</code></pre> </li> <li> <p>\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff1a</p> <pre><code>code ~/.zshrc\n</code></pre> <pre><code>plugins=(\ngit\n    rand-quote\n    sudo\n    z\n    colored-man-pages\n    cp\n    zsh-syntax-highlighting\n    zsh-autosuggestions\n)\n</code></pre> <pre><code>source ~/.zshrc\n</code></pre> </li> </ol>"},{"location":"dev/env/win/vmware/#_7","title":"\u6269\u5bb9\u78c1\u76d8","text":"<p>\u53c2\u8003\uff1a</p> <ul> <li>LVM : \u6269\u5c55\u6587\u4ef6\u7cfb\u7edf\u7684\u5bb9\u91cf - sparkdev - \u535a\u5ba2\u56ed (cnblogs.com)</li> <li> <p>ubuntu \u6269\u5c55\u5206\u533a\u5e76\u5c06\u5269\u4f59\u7a7a\u95f4\u6dfb\u52a0\u5230\u73b0\u6709\u903b\u8f91\u5377\u4e2d_ubuntu\u6269\u5c55\u5206\u533a\u5927\u5c0f \u5c06\u4e00\u4e2a\u78c1\u76d8\u52a0\u5230\u53e6\u4e00\u4e2a\u5f53\u4e2d-CSDN\u535a\u5ba2</p> </li> <li> <p>\u9996\u5148\u5728 VMware \u4e0a\u6269\u5c55\u786c\u76d8\u5bb9\u91cf\u3002</p> </li> <li> <p>\u5c06\u589e\u52a0\u7684\u5bb9\u91cf\u6269\u5c55\u5230\u5206\u533a\u4e2d\u3002</p> <pre><code>parted /dev/sda\n\n# \u6253\u5370\u5206\u533a\u8868 \u786e\u5b9a\u8981\u6269\u5c55\u7684\u5206\u533a\n(parted) print # \u6211\u8981\u6269\u5c55\u7684\u5206\u533a\u662f /dev/sda3\n(parted) resizepart 3 100%\n\n# \u6253\u5370\u5206\u533a\u8868 \u67e5\u770b /dev/sda3 \u662f\u5426\u6269\u5c55\u6210\u529f\n(parted) print\n\n# \u9000\u51fa\n(parted) q\n</code></pre> </li> </ul> <p>\u200b   \u901a\u8fc7 <code>lsblk</code> \u4e5f\u80fd\u67e5\u770b\u5206\u533a\u5927\u5c0f\u662f\u5426\u6269\u5c55\u6210\u529f\u3002</p> <ol> <li> <p>\u5c06 <code>dev/sda3</code> \u589e\u52a0\u7684\u5bb9\u91cf\u6269\u5c55\u5230 <code>VG</code> \u4e2d</p> <p>\u9996\u5148\u786e\u5b9a <code>VG</code> \u540d\uff0c\u8f93\u5165 <code>pvs</code>\uff0c\u5047\u8bbe\u8f93\u51fa\u662f</p> <pre><code>PV         VG        Fmt  Attr PSize   PFree\n/dev/sda3  ubuntu-vg lvm2 a--  &lt;38.00g    0\n</code></pre> <p>\u5219\u5bf9\u5e94\u7684 <code>VG</code> \u540d\u662f <code>ubuntu-vg</code>\u3002</p> <p>\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u6269\u5c55\uff1a</p> <pre><code>pvresize /dev/sda3\n</code></pre> <p>\u518d\u6b21\u8f93\u5165 <code>pvs</code>\uff0c\u786e\u5b9a <code>PSize</code> \u662f\u5426\u6269\u5c55\u6210\u529f\u3002</p> </li> <li> <p>\u5c06 <code>VG</code> \u589e\u52a0\u7684\u5bb9\u91cf\u6269\u5c55\u5230 <code>LV</code> \u4e2d\uff1a</p> <p>\u9996\u5148\u786e\u5b9a <code>LV Path</code> \uff0c\u8f93\u5165 <code>lvdisplay</code>\uff0c\u5047\u8bbe\u8f93\u51fa\u662f</p> <p><pre><code>--- Logical volume ---\nLV Path                /dev/ubuntu-vg/ubuntu-lv\nLV Name                ubuntu-lv\nVG Name                ubuntu-vg\nLV UUID                yRSVAA-gKW9-eY6U-owBw-IEHX-4Nes-DJ4ie2\nLV Write Access        read/write\nLV Creation host, time ubuntu-server, 2023-11-14 14:06:32 +0800\nLV Status              available\n# open                 1\nLV Size                &lt;58.00 GiB\nCurrent LE             14847\nSegments               1\nAllocation             inherit\nRead ahead sectors     auto\n- currently set to     256\nBlock device           253:0\n</code></pre>  \u5219\u5bf9\u5e94\u7684 <code>LV Path</code> \u662f <code>/dev/ubuntu-vg/ubuntu-lv</code>\u3002</p> <p>\u5c06 <code>VG</code> \u589e\u52a0\u7684\u6240\u6709\u5bb9\u91cf\u6269\u5c55\u5230 <code>LV</code> \u4e2d\uff1a</p> <pre><code>lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u7528 <code>-L</code> \u53c2\u6570\u6307\u5b9a\u5177\u4f53\u7684\u5927\u5c0f\uff0c\u4f8b\u5982\u8fd9\u6761\u547d\u4ee4\u4f1a\u8ba9 <code>LV</code> \u53d8\u6210 78G\uff1a</p> <pre><code>lvextend -L 78G /dev/ubuntu-vg/ubuntu-lv\n</code></pre> </li> <li> <p>\u5bf9 <code>LV</code> \u6267\u884c\u52a8\u6001\u6269\u5bb9\u547d\u4ee4</p> <pre><code>resize2fs /dev/ubuntu-vg/ubuntu-lv\n</code></pre> </li> <li> <p>\u641e\u5b9a\uff0c\u8f93\u5165 <code>lsblk</code> \u548c <code>df -hT</code> \u786e\u5b9a\u662f\u5426\u6210\u529f\u3002</p> </li> </ol>"},{"location":"dev/env/win/vmware/#_8","title":"\u521b\u5efa\u5176\u4ed6\u7528\u6237","text":"<p>\u867d\u7136\u6211\u4e00\u822c\u90fd\u662f\u5728 <code>root</code> \u7528\u6237\u4e0b\uff0c\u6709\u65f6\u5019\u8fd8\u662f\u4f1a\u6709\u5728\u5176\u4ed6\u7528\u6237\u7684\u9700\u6c42\u3002 <code>Ubuntu</code> \u521b\u5efa\u65b0\u7528\u6237\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u5728 <code>root</code> \u7528\u6237\u4e2d\u8f93\u5165\u4e24\u6761\u547d\u4ee4\uff1a</p> <ol> <li> <p>\u521b\u5efa\u7528\u6237\u3002</p> <pre><code>adduser newuser\n</code></pre> </li> </ol> <p>\u200b   \u8f93\u4e2a\u5bc6\u7801\u7136\u540e\u5269\u4e0b\u7684\u5176\u4ed6\u4fe1\u606f\u56de\u8f66\u5373\u53ef\u3002</p> <ol> <li> <p>\u7136\u540e\u65b0\u5efa\u7528\u6237\u6dfb\u52a0\u5230 <code>sudo</code> \u7ec4\u3002</p> <pre><code>adduser newuser sudo\n</code></pre> </li> </ol> <p>\u6ca1\u4e86\uff0c\u4f7f\u7528 <code>sudo su newuser</code> \u5207\u6362\u6210\u65b0\u7528\u6237\uff0c<code>sudo su root</code> \u5207\u6362\u6210 <code>root</code></p>"},{"location":"dev/java/CoreJava/ch02/","title":"\u7b2c2\u7ae0 Java\u7a0b\u5e8f\u8bbe\u8ba1\u73af\u5883","text":""},{"location":"dev/java/CoreJava/ch02/#jdk","title":"\u4e0b\u8f7dJDK","text":"<p>\u8fd9\u7bc7\u535a\u5ba2 \u4ecb\u7ecd\u4e86\u5404\u4e2a\u7248\u672c\u7684\u533a\u522b\u3002</p> <p>\u6211\u5b89\u88c5\u7684\u7248\u672c\u662f Install Eclipse Temurin\u2122 | Adoptium</p>"},{"location":"dev/java/CoreJava/ch02/#_1","title":"\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf","text":"<p>\u5982\u679c\u6309\u7167\u4e0a\u9762\u7684\u6559\u7a0b\u5b89\u88c5\uff0c\u4e0d\u7528\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002</p> <pre><code>export JAVA_HOME=/usr/local/jdk-11.0.20.1+1 #jdk\u5305\u7684\u4f4d\u7f6e\nexport PATH=$JAVA_HOME/bin:$PATH #\u6dfb\u52a0\u547d\u4ee4\u884c\u5de5\u5177\n\n# \u8fd9\u4e2a\u53d8\u91cf\u662f\u7528\u4e8e\u5168\u5c40\u7684\u5bfb\u627eCLASS\u7684\u8def\u5f84 \u4e0d\u5efa\u8bae\u5f00\u542f\n# export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n</code></pre> <pre><code>\u276f java --version\nopenjdk 11.0.20.1 2023-08-24\nOpenJDK Runtime Environment Temurin-11.0.20.1+1 (build 11.0.20.1+1)\nOpenJDK 64-Bit Server VM Temurin-11.0.20.1+1 (build 11.0.20.1+1, mixed mode)\n</code></pre>"},{"location":"dev/java/CoreJava/ch02/#_2","title":"\u7f16\u8bd1\u8fd0\u884c","text":"<p>\u901a\u5e38\u8ba4\u4e3a <code>java</code> \u662f\u4ecb\u4e8e <code>\u7f16\u8bd1\u578b</code> \u548c <code>\u89e3\u91ca\u578b</code> \u4e4b\u95f4\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>javac</code> \u547d\u4ee4\u5c06 <code>.java</code> \u6587\u4ef6\u7f16\u8bd1\u6210 <code>.class</code> \u6587\u4ef6\uff0c <code>.class</code> \u662f\u5b57\u8282\u7801\uff0c\u4e0d\u662f\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u800c\u662f\u8981\u4f7f\u7528 <code>java</code> \u547d\u4ee4\uff0c\u5c06 <code>.class</code> \u4ea4\u7ed9 <code>JVM</code> \u89e3\u91ca\u6267\u884c\u3002</p> <p>\u65b0\u5efa\u4e00\u4e2a <code>Hello.java</code> \u6587\u4ef6\uff1a</p> <pre><code>public class Hello {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello, World!\");\n}\n}\n</code></pre> <p>\u6267\u884c\u4ee5\u4e0b\u6307\u4ee4\uff1a</p> <pre><code>\u276f javac Hello.java\n\u276f ls\nHello.class  Hello.java\n\u276f java Hello      \nHello, World!\n</code></pre>"},{"location":"dev/java/CoreJava/ch02/#classpath","title":"CLASSPATH","text":"<p>\u4e0a\u9762\u7684\u7a0b\u5e8f\u867d\u7136\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>java</code> \u547d\u4ee4\u76f4\u63a5\u8fd0\u884c\uff1a</p> <pre><code>\u276f ls\nHello.java\n\u276f java Hello.java                   \nHello, World!\n</code></pre> <p>\u4f46\u662f\uff0c\u53ea\u6709\u5305\u542bmain\u51fd\u6570\u3001\u4e14\u7c7b\u4f9d\u8d56\u5173\u7cfb\u975e\u5e38\u7b80\u5355\u7684\u6587\u4ef6\u624d\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u90fd\u662f\u4f7f\u7528 <code>javac</code> \u547d\u4ee4\u751f\u6210 <code>.class</code> \u6587\u4ef6\uff0c\u7136\u540e\u7528 <code>java</code> \u547d\u4ee4\u6267\u884c\u3002</p> <p>\u5728\u4f7f\u7528 <code>javac</code> \u547d\u4ee4\u800c\u4e0d\u6307\u5b9a <code>-d</code> \u53c2\u6570\u65f6\uff0c\u751f\u6210\u7684 <code>.class</code> \u6587\u4ef6\u4f1a\u9ed8\u8ba4\u751f\u6210\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u3002\u6bd4\u8f83\u597d\u7684\u4e60\u60ef\u662f\u5c06\u9879\u76ee\u7684\u6e90\u4ee3\u7801\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u5f00\u5b58\u653e\uff0c\u53ef\u4ee5\u7528 <code>-d</code> \u53c2\u6570\u6307\u5b9a <code>.class</code> \u6587\u4ef6\u7684\u5b58\u653e\u7684\u8def\u5f84\uff0c\u4f8b\u5982\u8fd9\u4e2a\u9879\u76ee\u8def\u5f84\uff1a</p> <pre><code>.\n\u251c\u2500\u2500 bin\n\u251c\u2500\u2500 lib\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 Hello.java\n</code></pre> <p>\u5728\u8fd9\u4e2a\u9879\u76ee\u7ed3\u6784\u4e2d\uff0c<code>src</code> \u5b58\u653e\u6240\u6709\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c<code>bin</code> \u5b58\u653e\u6240\u6709 <code>.class</code> \u6587\u4ef6\u3002</p> <p>\u4f7f\u7528 <code>javac -d</code> \u5728\u6307\u5b9a\u76ee\u5f55\u4e2d\u751f\u6210 <code>.class</code> \u6587\u4ef6\uff1a</p> <pre><code>\u276f javac src/Hello.java -d bin/ </code></pre> <p>\u6b64\u65f6\u6587\u4ef6\u7ed3\u6784\u53d8\u6210</p> <pre><code>.\n\u251c\u2500\u2500 bin\n\u2502   \u2514\u2500\u2500 Hello.class\n\u251c\u2500\u2500 lib\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 Hello.java\n</code></pre> <p>\u53ef\u4ee5 <code>cd</code> \u5230 <code>bin</code> \u4e2d\u7136\u540e\u518d <code>java</code> \u6267\u884c\uff08\u6ce8\uff1a\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u662f\u4e0d\u80fd\u76f4\u63a5\u5728\u5916\u9762 <code>java bin/Hello</code> \u7684\uff0c\u539f\u56e0\u662f <code>java</code> \u547d\u4ee4\u4e25\u683c\u6309\u7167 <code>1\u7ea7\u5305\u540d/2\u7ea7\u5305\u540d/.../\u7c7b\u540d</code> \u7684\u683c\u5f0f\u89e3\u6790\uff0c\u6240\u4ee5\u8fd9\u6761\u547d\u4ee4\u4f1a\u5c06<code>bin/</code>\u89e3\u6790\u4e3a\u4e00\u4e2a\u5305(<code>package</code>)\u7684\u540d\u5b57, \u800c<code>Hello.java</code> \u4e2d\u5e76\u6ca1\u6709\u6ca1\u6709\u6307\u5b9a\u4efb\u4f55<code>package</code> \uff09\uff1a</p> <pre><code>\u276f cd bin\n\u276f java Hello\nHello, World!\n</code></pre> <p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u6307\u5b9a <code>CLASSPATH</code>\uff0c\u53ea\u9700\u8981\u5728\u6267\u884c <code>java</code> \u547d\u4ee4\u65f6\u589e\u52a0 <code>-cp</code> \u53c2\u6570\uff1a</p> <pre><code>\u276f java -cp bin Hello  \nHello, World!\n</code></pre> <p>\u4e0a\u8ff0\u6307\u4ee4\u6307\u5b9a\u4e86 <code>bin</code> \u4f5c\u4e3a <code>CLASSPATH</code> ,   \u8fd9\u6837\u5c31\u4f1a\u5728 <code>bin</code> \u76ee\u5f55\u4e0b\u5bfb\u627e <code>.class</code> \u6587\u4ef6\uff0c\u548b\u4e00\u770b\u8fd9\u79cd\u65b9\u5f0f\u548c <code>cd</code> \u6ca1\u6709\u533a\u522b\uff0c\u4f46\u662f\uff0c <code>-cp</code> \u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u8def\u5f84\u4f5c\u4e3a <code>CLASSPATH</code>\uff0c\uff08\u5728Linux\u4e2d\u53ef\u4ee5\u7528 <code>:</code> \u5c06\u591a\u4e2a\u8def\u5f84\u9694\u5f00\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u5168\u5c40\u7684 <code>CLASSPATH</code> \u73af\u5883\u53d8\u91cf\uff08\u4f46\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\uff09\u3002</p>"},{"location":"dev/java/CoreJava/ch02/#ide","title":"IDE \u5982\u4f55\u7b80\u5316\u4ee5\u4e0a\u6d41\u7a0b\uff1f","text":"<p>\u8bb8\u591a\u73b0\u4ee3\u7684 IDE \u53ef\u4ee5\u7b80\u5316\u4e0a\u8ff0\u7684\u6d41\u7a0b\uff0c\u4f8b\u5982\uff0c\u4e3a\u6bcf\u4e2a\u9879\u76ee\u6dfb\u52a0 <code>CLASSPATH</code>\uff0c\u5e76\u4e14\u968f\u7740\u6587\u4ef6\u7684\u6539\u52a8 <code>\u81ea\u52a8\u7f16\u8bd1</code>\uff0c\u76f8\u5f53\u4e8e\u5e2e\u6211\u4eec\u52a8\u6001\u7684\u6267\u884c <code>javac -d bin ...</code> \uff0c\u4e5f\u80fd <code>\u81ea\u52a8\u7ba1\u7406\u6587\u4ef6</code> \uff0c\u4f8b\u5982\u6e05\u7406\u4e0d\u518d\u4f9d\u8d56\u7684\u7c7b\u7b49\u3002\u6211\u4eec\u53ea\u9700\u8981\u70b9\u51fb <code>run</code> \u6309\u94ae\uff0c\u5c31\u4f1a\u81ea\u52a8\u6267\u884c <code>java -cp bin ...</code> \u7684\u547d\u4ee4\u3002\u5f53\u7136\uff0cIDE \u80fd\u505a\u7684\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u5e38\u89c1\u7684 <code>java</code> IDE \u6709 <code>IDEA</code>\u3001<code>Eclipse</code> \u7b49\uff0c\u4f7f\u7528 <code>VSCode</code> \u5e76\u914d\u7f6e\u4e00\u4e9b\u63d2\u4ef6\u4e5f\u53ef\u4ee5\u8fbe\u5230 IDE \u7684\u5f00\u53d1\u4f53\u9a8c\u3002</p>"},{"location":"dev/java/CoreJava/ch02/#jshell","title":"JShell","text":"<p>\u4ece <code>Java 9</code> \u5f00\u59cb\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 <code>jshell</code> \u5373\u53ef\u8fdb\u5165\u4ea4\u4e92\u5f0f\u7f16\u7a0b\u73af\u5883\uff1a</p> <pre><code>\u276f jshell\njshell&gt; \"Core Java\".length()\n$1 ==&gt; 9\njshell&gt; 5 * $1 - 3\n$2 ==&gt; 42\njshell&gt; int answer = 5 * $1 - 3\nanswer ==&gt; 42\njshell&gt; Math.log10(0.001)\n$4 ==&gt; -3.0\n</code></pre>"},{"location":"dev/java/CoreJava/ch03/","title":"\u7b2c3\u7ae0 Java\u7684\u57fa\u672c\u7a0b\u5e8f\u8bbe\u8ba1\u7ed3\u6784","text":"<p><code>Java</code> \u6ca1\u6709\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u7c7b\u578b\u6216\u53d8\u91cf\u7684\u5927\u5c0f\u3002</p>"},{"location":"dev/java/CoreJava/ch03/#_1","title":"\u6574\u578b","text":"\u7c7b\u578b \u5927\u5c0f byte 1\u5b57\u8282 short 2\u5b57\u8282 int 4\u5b57\u8282 long 8\u5b57\u8282 <ul> <li>\u6ca1\u6709\u65e0\u7b26\u53f7\u6574\u578b\u3002\u901a\u5e38\u4f7f\u7528<code>Byte.toUnsignedInt(b)</code> \u5c06\u4e00\u4e2a\u6709\u7b26\u53f7\u7684 <code>byte</code> \u7c7b\u578b <code>b</code> \u8f6c\u6362\u6210\u65e0\u7b26\u53f7\u7684 <code>int</code> \uff0c\u4ee5\u53ca <code>Integer.toUnsignedLong(i);</code> \u6765\u5c06\u4e00\u4e2a\u6709\u7b26\u53f7\u7684 <code>int</code> \u7c7b\u578b <code>i</code> \u8f6c\u6362\u6210\u65e0\u7b26\u53f7\u7684 <code>long</code> \u3002</li> <li>\u7c7b\u578b\u7684\u5927\u5c0f\u4e0e\u673a\u5668\u65e0\u5173\uff08<code>java</code> \u662f\u8de8\u5e73\u53f0\u7684\uff09\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch03/#char","title":"char\u7c7b\u578b","text":"<ul> <li><code>char</code> \u7c7b\u578b\u5360\u7528 <code>2</code> \u5b57\u8282\u3002</li> <li>\u53ef\u4ee5\u7528 <code>\\u</code> \u52a0\u4e0a <code>4</code> \u4e2a\u5341\u516d\u8fdb\u5236\u8868\u793a\u4e00\u4e2a <code>char</code>\u3002</li> <li>\u6709\u4e9b <code>Unicode</code> \u53ef\u4ee5\u7528\u4e00\u4e2a <code>char</code> \u503c\u63cf\u8ff0\uff082\u5b57\u8282\uff09\uff0c\u6709\u4e9b\u9700\u8981\u4e24\u4e2a <code>char</code> \u503c\uff084\u5b57\u8282\uff09\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch03/#unicodechar","title":"Unicode\u548cchar\u7c7b\u578b","text":"<ul> <li> <p><code>\u7801\u70b9(codepoint)</code> \u5c31\u662f\u4e00\u4e2a\u7f16\u7801\u8868\u4e2d\u67d0\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u4ee3\u7801\u503c\u3002<code>java</code> \u4f7f\u7528 <code>Unicode</code> \u7f16\u7801\u673a\u5236\u3002\u524d\u7f00 <code>U+</code> \u6765\u8868\u793a\u4e00\u4e2a <code>Unicode</code> \u5b57\u7b26\uff0c\u4f8b\u5982 <code>U+0041</code> \u5c31\u662f <code>'A'</code> \u7684\u7801\u70b9\u3002</p> </li> <li> <p><code>java</code> \u4f7f\u7528 <code>UTF-16</code> \u6765\u8868\u793a\u5b57\u7b26\uff0c\u8fd9\u79cd\u7f16\u7801\u65b9\u5f0f\u4f7f\u7528 <code>2</code> \u4e2a\u5b57\u8282\u6765\u8868\u793a\u5927\u591a\u6570\u5e38\u7528\u5b57\u7b26\uff0c\u5bf9\u4e8e\u5176\u4ed6\u4e0d\u592a\u5e38\u7528\u7684\u5b57\u7b26\u4f7f\u7528\u4f7f\u7528 <code>4</code> \u4e2a\u5b57\u8282\u8868\u793a\u3002</p> </li> <li> <p>\u6bcf <code>2</code> \u4e2a\u5b57\u8282\u79f0\u4e3a\u4e00\u4e2a <code>\u4ee3\u7801\u5355\u5143</code>(code unit) \uff0c\u5728 <code>java</code> \u4e2d\uff0c <code>char</code> \u7c7b\u578b\u63cf\u8ff0\u4e86 <code>UTF-16</code> \u7f16\u7801\u4e2d\u7684\u4e00\u4e2a\u4ee3\u7801\u5355\u5143\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5b57\u7b26\uff0c<code>char</code> \u53ef\u4ee5\u76f4\u63a5\u8868\u793a\uff0c\u4f46\u67d0\u4e9b\u5b57\u7b26\u9700\u8981\u4e24\u4e2a <code>char</code> \u624d\u80fd\u8868\u793a\u3002\u56e0\u6b64\uff0c\u4e0d\u5efa\u8bae\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528 <code>char</code> \u7c7b\u578b\u3002</p> </li> </ul>"},{"location":"dev/java/CoreJava/ch03/#boolean","title":"boolean\u7c7b\u578b","text":"<ul> <li>\u5728<code>java</code> \u4e2d\u96f6\u503c\u4e0d\u80fd\u89e3\u6790\u4e3a <code>false</code> \uff0c\u4f8b\u5982\u6574\u6570\u7684 <code>0</code>\uff0c\u5bf9\u8c61\u7684 <code>null</code> \u7b49\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch03/#_2","title":"\u5b57\u7b26\u4e32","text":"<p><code>java</code> \u4e2d\u7684\u5b57\u7b26\u4e32\u662f <code>String</code> \u7c7b\u578b\uff0c\u662f <code>Unicode</code> \u5b57\u7b26\u5e8f\u5217\u3002 </p> <ul> <li><code>.substring(l, r)</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a \\([l, r)\\) \u7684\u5b50\u4e32\u3002</li> <li><code>String</code> \u4e0d\u652f\u6301\u539f\u5730\u4fee\u6539\u3002\u5b57\u7b26\u4e32\u53d8\u91cf\u7684\u590d\u5236\u5b9e\u8d28\u662f\u5171\u4eab\u540c\u4e00\u6bb5\u5b57\u7b26\u4e32\u3002</li> <li>\u4e0d\u8981\u4f7f\u7528 <code>==</code> \u68c0\u6d4b\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u8fd9\u53ea\u80fd\u68c0\u6d4b\u4e24\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\u662f\u5426\u5171\u4eab\u540c\u4e00\u6bb5\u3002\u5982\u679c\u8981\u68c0\u6d4b\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u662f\u5426\u76f8\u7b49\uff0c\u8981\u7528 <code>.equals()</code> \u65b9\u6cd5\u3002<code>String</code> \u4e2d\u8fd8\u6709\u4e00\u4e2a <code>.compareTo()</code> \u65b9\u6cd5\u7c7b\u4f3c\u4e8e <code>C\u8bed\u8a00</code> \u4e2d\u7684 <code>strcmp()</code> \u51fd\u6570\u3002</li> <li>\u65b0\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f <code>null</code> \uff0c<code>null</code> \u8868\u793a\u6ca1\u6709\u5f15\u7528\u4efb\u4f55\u5bf9\u8c61\uff0c\u5e76\u4e0d\u662f\u7a7a\u4e32\u7684\u610f\u601d\u3002\u68c0\u6d4b\u7a7a\u4e32\u53ef\u4ee5\u7528 <code>.length() == 0</code> \u6216\u8005 <code>.equals(\"\")</code> \u3002</li> <li> <p><code>.length()</code> \u8fd4\u56de\u4ee3\u7801\u5355\u5143\uff08<code>char</code>\uff09\u7684\u6570\u91cf\uff0c<code>.codePointCount(l, r)</code> \u53ef\u4ee5\u8fd4\u56de \\([l, r)\\) \u7684\u7801\u70b9\uff08<code>Unicode</code>\uff09 \u7684\u6570\u91cf\u3002\u5bf9\u4e8e\u53ef\u80fd\u5b58\u5728 <code>4</code> \u5b57\u8282\u7684\u7801\u70b9\u7684\u5b57\u7b26\u4e32\uff0c\u904d\u5386\u65f6\u9700\u8981\u6ce8\u610f\u3002</p> </li> <li> <p><code>StringBuild</code> \u548c <code>StringBuffer</code> \u662f\u652f\u6301\u539f\u5730\u4fee\u6539\u7684\u5b57\u7b26\u4e32\u3002\u5176\u4e2d\uff0c<code>StringBuild</code> \u901f\u5ea6\u66f4\u5feb\uff0c\u4f46\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002<code>StringBuffer</code> \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p> </li> </ul>"},{"location":"dev/java/CoreJava/ch03/#_3","title":"\u65e5\u671f\u4e0e\u65f6\u95f4","text":"<p>\u5bf9\u4e8e\u65b0\u7684\u4ee3\u7801\uff0c\u5e94\u8be5\u4f7f\u7528 <code>java.time</code> \u5305\u6765\u8868\u793a\u65f6\u95f4\u70b9\u3002\u65e7\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u4f7f\u7528 <code>Date</code> \u7c7b\u6765\u8868\u793a\u65f6\u95f4\u70b9\u3002</p>"},{"location":"dev/java/CoreJava/ch03/#_4","title":"\u6570\u7ec4","text":"<ul> <li>\u5c06\u4e00\u4e2a\u6570\u7ec4\u53d8\u91cf\u8d4b\u7ed9\u53e6\u4e00\u4e2a\u6570\u7ec4\u53d8\u91cf\uff0c\u5b9e\u8d28\u662f\u5f15\u7528\u76f8\u540c\u7684\u6570\u7ec4\u5bf9\u8c61\u3002\u4e5f\u5c31\u662f <code>\u6d45\u62f7\u8d1d</code> \u3002 <code>\u6df1\u62f7\u8d1d</code> \u8981\u7528 <code>Arrays.copyOf()</code> \u65b9\u6cd5\u3002</li> <li><code>java</code> \u7684\u591a\u7ef4\u6570\u7ec4\u652f\u6301\u201c\u4e0d\u89c4\u5219\u201d\uff0c\u5e76\u4e0d\u8981\u6c42\u6bcf\u4e00\u884c\u90fd\u6709\u76f8\u540c\u7684\u5217\u6570\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch04/","title":"\u7b2c4\u7ae0 \u5bf9\u8c61\u4e0e\u7c7b","text":""},{"location":"dev/java/CoreJava/ch04/#_1","title":"\u5bf9\u8c61\u53d8\u91cf\u662f\u5f15\u7528","text":"<p><code>java</code> \u4e2d\u7684\u5bf9\u8c61\u53d8\u91cf\u7c7b\u4f3c\u4e8e <code>C++</code> \u4e2d\u7684\u5bf9\u8c61\u6307\u9488\uff0c\u5bf9\u8c61\u53d8\u91cf\u5b9e\u8d28\u662f\u5f15\u7528\u67d0\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u65b0\u5efa\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\u5fc5\u987b\u8981\u7528 <code>new \u6784\u9020\u51fd\u6570()</code> \u3002<code>java</code> \u4e2d\u4e0d\u80fd\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u672c\u8eab\uff0c\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u662f\u5728\u5806\u4e2d\u6784\u9020\u7684\u3002</p> <p>\u6784\u9020\u51fd\u6570\u603b\u662f\u4e0e <code>new</code> \u914d\u5408\u4f7f\u7528\uff0c\u4e0d\u80fd\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u8c03\u7528\u6784\u9020\u5668\u6765\u6253\u5230\u91cd\u65b0\u8bbe\u7f6e\u5b9e\u4f8b\u5b57\u6bb5\u7684\u76ee\u7684\u3002\u5982\u679c\u8981\u91cd\u8bbe\u5b9e\u4f8b\u5b57\u6bb5\uff0c\u8fd8\u662f\u9700\u8981\u914d\u5408 <code>new</code> \u4f7f\u7528\uff0c\u8fd9\u4f1a\u5f15\u7528\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002</p> <p>\u67d0\u4e9b\u7c7b\u7684\u5bf9\u8c61\u5e76\u4e0d\u4f7f\u7528\u6784\u9020\u51fd\u6570\u6765\u6784\u9020\uff0c\u800c\u662f\u4f7f\u7528 <code>\u9759\u6001\u5de5\u5382\u65b9\u6cd5</code> , \u4f8b\u5982<code>LocalDate</code>\u7c7b\uff08\u7528\u6765\u8868\u793a\u67d0\u4e2a\u65e5\u671f\uff09\u4f7f\u7528 <code>LocalDate.now()</code> \u548c <code>LocalDate.of()</code>\uff0c\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u76f4\u63a5\u5c31\u80fd\u83b7\u5f97\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff08\u4e0d\u9700\u8981 <code>new</code> \uff09\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#_2","title":"\u6784\u9020\u51fd\u6570","text":""},{"location":"dev/java/CoreJava/ch04/#_3","title":"\u9ed8\u8ba4\u5b57\u6bb5\u521d\u59cb\u5316","text":"<ul> <li>\u6570\u503c\u578b\u7684\u9ed8\u8ba4\u503c\u4e3a <code>0</code>\uff0c\u5e03\u5c14\u578b\u9ed8\u8ba4\u503c\u4e3a <code>false</code>\uff0c\u5bf9\u8c61\u5f15\u7528\u9ed8\u8ba4\u503c\u4e3a <code>null</code>\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u6784\u9020\u51fd\u6570\uff0c\u5219\u9ed8\u8ba4\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u5c06\u6240\u6709\u5b9e\u4f8b\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u5df2\u7ecf\u5199\u4e86\u81f3\u5c11\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5219\u4e0d\u4f1a\u63d0\u4f9b\u9ed8\u8ba4\u7684\u65e0\u53c2\u6570\u6784\u9020\u51fd\u6570\u3002</li> <li>\u5728\u6784\u9020\u51fd\u6570\u4e2d\u6ca1\u6709\u88ab\u8d4b\u503c\u7684\u5b57\u6bb5\u4f1a\u88ab\u8d4b\u4e3a\u9ed8\u8ba4\u503c\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch04/#_4","title":"\u91cd\u8f7d","text":"<p><code>java</code> \u652f\u6301\u91cd\u8f7d\u8bed\u6cd5\uff0c\u5305\u62ec\u6784\u9020\u51fd\u6570\u548c\u5176\u4ed6\u51fd\u6570\u90fd\u53ef\u4ee5\u91cd\u8f7d\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#null","title":"null \u503c\u5904\u7406","text":"<p>\u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\uff08\u800c\u4e0d\u8c03\u7528\u6784\u9020\u51fd\u6570\uff09\u4f1a\u5f97\u5230\u4e00\u4e2a <code>null</code> \u3002\u5bf9 <code>null</code> \u4f7f\u7528\u65b9\u6cd5\u4f1a\u4ea7\u751f\u5f02\u5e38\u3002</p> <p>\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u5bf9\u4f20\u5165\u7684\u53c2\u6570\u68c0\u67e5\uff0c\u5047\u8bbe\u6709\u8fd9\u6837\u7684\u7c7b\uff1a</p> <pre><code>class Employee {\nprivate String name;\nprivate double salary;\nprivate LocalDate hireDay;\n}\n</code></pre> <p>\u5176\u4e2d <code>name</code> \u548c <code>hireDay</code> \u90fd\u6709\u53ef\u80fd\u4f20\u5165 <code>null</code> \u503c\u3002\u5bf9\u4e8e\u53ef\u80fd\u4f20\u5165\u7684 <code>null</code> \u503c\uff0c\u7b2c\u4e00\u79cd\u5904\u7406\u65b9\u6cd5\u662f\u8d4b\u4e00\u4e2a\u9ed8\u8ba4\u5bf9\u8c61\u53d8\u91cf\uff0c\u5728 <code>java 9</code> \u4e2d\uff0c <code>Objects</code> \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a <code>.requireNonNullElse()</code> \u65b9\u6cd5\uff08\u6240\u6709\u7c7b\u90fd\u6269\u5c55\u81ea <code>Objects</code> \u7c7b\uff09\uff1a</p> <pre><code>public Employee(String n, double s, int year, int month, int day) {\nname = Objects.requireNonNullElse(n, \"unknown\");\n...\n}\n</code></pre> <p>\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5f53 <code>n == null</code> \u65f6\u4f1a\u8d4b\u9ed8\u8ba4\u503c <code>name = \"unknown\"</code> \u3002</p> <p>\u7b2c\u4e8c\u79cd\u5904\u7406\u662f\u501f\u52a9<code>.requireNonNull()</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728 <code>n == null</code> \u65f6\u629b\u51fa\u5f02\u5e38\uff1a</p> <pre><code>public Employee(String n, double s, int year, int month, int day) {\nObjects.requireNonNull(n, \"The name cannot be null\");\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch04/#_5","title":"\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570","text":"<p>\u4f7f\u7528 <code>this</code> \u5173\u952e\u5b57\uff0c \u53ef\u4ee5\u5728\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff1a</p> <pre><code>public Employee(double s) {\n// \u5047\u8bbe\u4e4b\u524d\u5b9a\u4e49\u4e86 Employee\uff08String n, double s\uff09\nthis(\"Employee #\" + nextId, s);\nnextId++;\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch04/#final","title":"final","text":"<p>\u7c7b\u4f3c\u4e8e <code>C++</code> \u4e2d\u7684 <code>const</code>\uff0c\u7528\u6765\u8868\u793a\u5e38\u91cf\uff0c\u5b9a\u4e49\u540e\u4e0d\u53ef\u4fee\u6539\u3002</p> <pre><code>final int maxn = 1010; // \u4e0d\u80fd\u66f4\u6539\u7684\u5e38\u91cf\n</code></pre> <p>\u5b9e\u4f8b\u5b57\u6bb5\u5982\u679c\u8bbe\u7f6e\u4e3a <code>final</code> \uff0c\u5219\u5fc5\u987b\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e <code>final</code> \u5b57\u6bb5\u7684\u503c\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e4b\u540e\u4e0d\u80fd\u66f4\u6539\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#_6","title":"\u521d\u59cb\u5316\u5757","text":"<p>\u4e00\u5171\u6709\u4e09\u79cd\u521d\u59cb\u5316\u6570\u636e\u5b57\u6bb5\u7684\u65b9\u5f0f\uff0c\u6309\u7167\u987a\u5e8f\u4e3a\uff1a</p> <ol> <li>\u5728\u58f0\u660e\u65f6\u76f4\u63a5\u8d4b\u503c\u3002</li> <li>\u5728\u521d\u59cb\u5316\u5757\u4e2d\u8d4b\u503c\u3002</li> <li>\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8d4b\u503c\u3002</li> </ol> <p>\u5982\u679c\u6784\u9020\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u8c03\u7528\u4e86\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5219\u4f1a\u5148\u6267\u884c\u7b2c\u4e8c\u4e2a\u6784\u9020\u51fd\u6570\u3002\u5426\u5219\uff0c\u5148\u6267\u884c\u521d\u59cb\u5316\u5757\u3002\u521d\u59cb\u5316\u5757\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4f1a\u6309\u7167\u987a\u5e8f\u6267\u884c\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#_7","title":"\u9759\u6001\u5b57\u6bb5\u4e0e\u9759\u6001\u65b9\u6cd5","text":"<p><code>static</code> \u8868\u793a <code>\u9759\u6001\u5b57\u6bb5</code>\uff0c\u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u5171\u4eab\u540c\u4e00\u4e2a\u5b57\u6bb5\u3002<code>\u9759\u6001\u5b57\u6bb5</code> \u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u3002</p> <p>\u4f8b\u5982\u8981\u7ed9\u6bcf\u4e2a\u5458\u5de5\u5206\u914d\u4e00\u4e2a\u9012\u589e\u7684 <code>id</code>\uff0c\u5219 <code>nextID</code> \u53d8\u91cf\u7528\u4e8e\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u5206\u914d\u7684 <code>id</code> \u503c\u3002</p> <pre><code>class Employee {\nprivate static int nextID = 1;\nprivate int id;\npublic void setId() {\nid = nextID++;\n}\n}\n</code></pre> <p><code>static final</code> \u8868\u793a <code>\u9759\u6001\u5e38\u91cf</code>\uff0c\u4f8b\u5982 <code>Math.PI</code>\u3002</p> <p><code>\u9759\u6001\u65b9\u6cd5</code> \u662f\u6307\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 <code>Math.pow()</code> \u3002</p> <p><code>\u9759\u6001\u5de5\u5382\u65b9\u6cd5</code> \u662f\u6307\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\u7684\u6784\u9020\u51fd\u6570\uff0c\u4f8b\u5982 <code>LocalDate.now()</code> \u548c <code>LocalDate.of()</code> \u3002</p> <p><code>main()</code> \u51fd\u6570\u7684\u7f29\u5199\u662f <code>psvm</code> \uff0c\u5373 <code>public static void main(String[] args)</code>\u3002\u6bcf\u4e2a\u7c7b\u53ef\u4ee5\u6709\u4e00\u4e2a <code>main</code> \u51fd\u6570\uff0c\u7528\u4e8e\u5bf9\u7c7b\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002\u5355\u5143\u6d4b\u8bd5\u53ea\u4f1a\u8fd0\u884c\u5355\u72ec\u7684\u4e00\u4e2a <code>main</code> \u51fd\u6570\uff0c\u4f8b\u5982 <code>java Employee</code> \u5c31\u662f\u8fd0\u884c <code>Employee.class</code> \u7684 <code>main</code> \u51fd\u6570\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#java","title":"<code>java</code> \u7684\u53c2\u6570\u4f20\u9012\u662f\u6309\u503c\u5f15\u7528\u7684","text":"<p><code>java</code> \u53ea\u6709\u6309\u503c\u4f20\u9012\u53c2\u6570\u7684\u65b9\u5f0f\uff0c\u56e0\u6b64\uff1a</p> <ul> <li>\u65b9\u6cd5\u4e0d\u80fd\u4fee\u6539\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u53c2\u6570\uff08\u5373\u6570\u503c\u578b\u6216\u5e03\u5c14\u578b\uff09\u3002</li> <li>\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8\u5bf9\u8c61\u53c2\u6570\u7684\u72b6\u6001\u3002</li> <li>\u65b9\u6cd5\u4e0d\u80fd\u8ba9\u4e00\u4e2a\u5bf9\u8c61\u53c2\u6570\u5f15\u7528\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch04/#_8","title":"\u5305","text":""},{"location":"dev/java/CoreJava/ch04/#_9","title":"\u7c7b\u7684\u5bfc\u5165","text":"<p>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u4f7f\u7528\u6240\u5c5e\u5305\u4e2d\u7684\u6240\u6709\u7c7b\uff0c\u4ee5\u53ca\u5176\u4ed6\u5305\u4e2d\u7684\u516c\u5171\u7c7b\u3002</p> <p>\u6709\u4e24\u79cd\u65b9\u6cd5\u8bbf\u95ee\u5176\u4ed6\u5305\u4e2d\u7684\u516c\u5171\u7c7b\uff1a</p> <ol> <li>\u4f7f\u7528\u5b8c\u5168\u9650\u5b9a\u540d\uff0c\u4f8b\u5982\uff1a <pre><code>java.time.LocalDate today = java.time.LocalDate.now();\n</code></pre></li> <li>\u4f7f\u7528 <code>import</code> \u5bfc\u5165\u6574\u4e2a\u5305\u6216\u8005\u7279\u5b9a\u7684\u7c7b\uff0c\u4f8b\u5982\uff1a <pre><code>import java.time.LocalDate; //\u5bfc\u5165\u7279\u5b9a\u7684\u7c7b\n</code></pre> \u6216\u8005\uff1a <pre><code>import java.time.* //\u5bfc\u5165\u6574\u4e2a\u5305\n</code></pre> \u6ce8\u610f\u53ea\u80fd\u4f7f\u7528\u4f7f\u7528 <code>*</code> \u5bfc\u5165\u4e00\u4e2a\u5305\uff0c\u4f8b\u5982\u4e0d\u80fd\u4f7f\u7528 <code>import java.*</code> \uff0c\u56e0\u4e3a <code>java.*</code> \u4e0d\u6b62\u4e00\u4e2a\u5305\u3002</li> </ol> <p><code>java</code> \u4e2d\u7684 <code>import</code> \u7c7b\u4f3c\u4e8e <code>C++</code> \u4e2d\u7684 <code>using namespace</code> \uff0c\u56e0\u4e3a <code>java</code> \u7f16\u8bd1\u5668\u53ef\u4ee5\u67e5\u770b\u5176\u4ed6\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u800c <code>C++</code> \u7f16\u8bd1\u5668\u4e0d\u884c\uff0c\u6240\u4ee5\u5728 <code>C++</code> \u4e2d\u9700\u8981\u4f7f\u7528 <code>#include</code> \u3002</p>"},{"location":"dev/java/CoreJava/ch04/#_10","title":"\u9759\u6001\u5bfc\u5165","text":"<p>\u4f7f\u7528 <code>import static</code> \u53ef\u4ee5\u5bfc\u5165\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u5b57\u6bb5\uff0c\u4f8b\u5982\uff1a</p> <pre><code>import static java.lang.Math.sqrt;\npublic class Main {\npublic static void main(String[] args) {\ndouble ans = sqrt(2.0);\nSystem.out.println(ans);\n}    }\n</code></pre>"},{"location":"dev/java/CoreJava/ch04/#_11","title":"\u5305\u8def\u5f84","text":"<p>\u5305\u548c\u76ee\u5f55\u8981\u5339\u914d\uff0c\u867d\u7136\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u4e0d\u68c0\u67e5\u76ee\u5f55\u7ed3\u6784\uff0c\u4f46\u662f\u865a\u62df\u673a\u8fd0\u884c\u65f6\u4f1a\u6309\u7167\u5305\u7684\u7ed3\u6784\u53bb\u5bfb\u627e\u7c7b\u3002\u6240\u4ee5\u63a8\u8350\u7684\u505a\u6cd5\u5c31\u662f\u6309\u7167\u5305\u7684\u7ed3\u6784\u8bbe\u7f6e\u6587\u4ef6\u7684\u7ed3\u6784\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#jar","title":"JAR\u6587\u4ef6","text":"<p>\u53ef\u4ee5\u5c06 <code>.class</code> \u6587\u4ef6\u6253\u5305\u5728\u4e00\u4e2a <code>.jar</code> \u6587\u4ef6\u4e2d\uff0c <code>.jar</code> \u6587\u4ef6\u5b9e\u8d28\u5c31\u662f <code>.zip</code> \u6587\u4ef6\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4\u3001\u6539\u5584\u6027\u80fd\u3002</p> <p>\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u7684\u5e93\u6587\u4ef6\u65f6\uff0c\u901a\u5e38\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u6216\u8005\u591a\u4e2a <code>.jar</code> \u6587\u4ef6\u3002\u5728\u4ee5\u4e0b\u8fd9\u79cd\u9879\u76ee\u7ed3\u6784\u4e2d\uff0c\u901a\u5e38\u5c06<code>.jar</code> \u6587\u4ef6\u653e\u5728 <code>lib</code> \u6587\u4ef6\u5939\u4e2d\u3002</p> <pre><code>.\n\u251c\u2500\u2500 bin\n\u251c\u2500\u2500 lib\n\u2514\u2500\u2500 src\n</code></pre> <p>\u5728\u8fd0\u884c\u65f6\uff0c\u9700\u8981\u7528 <code>:</code>\u5c06 <code>lib</code> \u6587\u4ef6\u5939\u6dfb\u52a0\u5230 <code>CLASSPATH</code> \u4e2d\uff0c\u8fd9\u6837\u865a\u62df\u673a</p>"},{"location":"dev/java/CoreJava/ch04/#_12","title":"\u7c7b\u8bbe\u8ba1\u6280\u5de7","text":"<ol> <li>\u4e00\u5b9a\u8981\u4fdd\u8bc1\u6570\u636e\u79c1\u6709\u3002</li> <li>\u4e00\u5b9a\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u521d\u59cb\u5316\u3002</li> <li>\u4e0d\u8981\u5728\u7c7b\u4e2d\u4f7f\u7528\u8fc7\u591a\u7684\u57fa\u672c\u7c7b\u578b\uff08\u5f53\u57fa\u672c\u7c7b\u578b\u8fc7\u591a\u65f6\uff0c\u8003\u8651\u7528\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u66ff\u6362\u76f8\u5173\u7684\u5b57\u6bb5\uff09\u3002</li> <li>\u4e0d\u662f\u6240\u6709\u7684\u5b57\u6bb5\u90fd\u9700\u8981\u5355\u72ec\u7684\u8bbf\u95ee\u5668\u548c\u66f4\u6539\u5668\u3002</li> <li>\u5206\u89e3\u6709\u8fc7\u591a\u804c\u8d23\u7684\u7c7b\u3002</li> <li>\u7c7b\u540d\u548c\u65b9\u6cd5\u540d\u8981\u80fd\u591f\u4f53\u73b0\u5b83\u4eec\u7684\u529f\u80fd\u3002</li> <li>\u4f18\u5148\u4f7f\u7528\u4e0d\u53ef\u53d8\u7684\u7c7b\uff08\u4f8b\u5982 <code>LocalDate</code> \u7c7b\u5c31\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff09\u3002</li> </ol>"},{"location":"dev/java/CoreJava/ch05/","title":"\u7b2c5\u7ae0 \u7ee7\u627f","text":""},{"location":"dev/java/CoreJava/ch05/#_1","title":"\u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26","text":"<ul> <li><code>private</code> \uff1a\u4ec5\u5bf9\u672c\u7c7b\u53ef\u89c1\u3002</li> <li><code>\u9ed8\u8ba4\uff08\u4e0d\u52a0\u4fee\u9970\u7b26\u7b26\uff09</code> \uff1a\u5bf9\u672c\u5305\u53ef\u89c1\u3002</li> <li><code>protected</code> \uff1a\u5bf9\u672c\u5305\u548c\u6240\u6709\u5b50\u7c7b\u53ef\u89c1\u3002</li> <li><code>public</code> \uff1a\u5bf9\u5916\u90e8\u53ef\u89c1\u3002</li> </ul> \u5f53\u524d\u7c7b \u5f53\u524dpackage \u5b50\u7c7b \u5916\u90e8package public protected \u9ed8\u8ba4 private"},{"location":"dev/java/CoreJava/ch05/#_2","title":"\u7ee7\u627f","text":""},{"location":"dev/java/CoreJava/ch05/#_3","title":"\u591a\u6001\u4e0e\u52a8\u6001\u7ed1\u5b9a","text":"<p>\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\u53ef\u4ee5\u6307\u793a\u591a\u79cd\u5b9e\u9645\u7c7b\u578b\u7684\u73b0\u8c61\u79f0\u4e3a <code>\u591a\u6001</code> \u3002</p> <p>\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u4e2d\uff0c <code>Employee</code> \u7c7b\u578b\u7684 <code>e</code> \u53d8\u91cf\u5373\u53ef\u6307\u793a <code>Employee</code> \u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u6307\u793a <code>Manager</code> \u7c7b\u578b\u3002\u53cd\u8fc7\u6765\u5219\u4e0d\u884c\uff0c\u5373\u5b50\u7c7b\u578b\u7684\u53d8\u91cf\u4e0d\u80fd\u6307\u793a\u7236\u7c7b\u578b\u3002</p> <pre><code>class Employee {\nprivate String name;\npublic Employee(String n) {\nname = n;\n}\npublic String getName() {\nreturn name;\n}\npublic void printProfile() {\nSystem.out.println(\"Employee: \" + getName());\n}\n}\n\nclass Manager extends Employee {\npublic Manager(String n) {\nsuper(n);\n}\npublic void printProfile() {\nSystem.out.println(\"Manager: \" + super.getName());\n}\n}\n\npublic class Main {\npublic static void main(String[] args) {\nEmployee e = new Employee(\"E1\");\ne.printProfile(); // Employee: E1\ne = new Manager(\"M1\"); // \u4e5f\u662f\u53ef\u4ee5\u7684\ne.printProfile(); // Manager: M1\n}\n}\n</code></pre> <p>\u8fd0\u884c\u65f6\uff0c\u4f8b\u5982<code>e.printProfile()</code>\uff0c <code>JVM</code> \u80fd\u591f\u6839\u636e <code>e</code> \u5b9e\u9645\u6307\u793a\u7684\u7c7b\u578b\u81ea\u52a8\u9009\u62e9\u9002\u5f53\u7684\u65b9\u6cd5\uff0c\u79f0\u4e3a <code>\u52a8\u6001\u7ed1\u5b9a</code> \u3002</p> <p>\u4e0e <code>\u52a8\u6001\u7ed1\u5b9a</code> \u76f8\u5bf9\u7684\u662f <code>\u9759\u6001\u7ed1\u5b9a</code>\uff0c<code>\u9759\u6001\u7ed1\u5b9a</code> \u7684\u65b9\u6cd5\u5728\u7f16\u8bd1\u671f\u95f4\u5c31\u80fd\u51c6\u786e\u7684\u77e5\u9053\u5e94\u8be5\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5\u3002<code>private</code> \u65b9\u6cd5\u3001<code>static</code> \u65b9\u6cd5\u3001<code>final</code> \u65b9\u6cd5\u4f1a\u4f7f\u7528 <code>\u9759\u6001\u7ed1\u5b9a</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#_4","title":"\u9759\u6001\u7ed1\u5b9a","text":""},{"location":"dev/java/CoreJava/ch05/#_5","title":"\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5","text":"<p>\u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u5b9a\u4e49\u4e0e\u7236\u7c7b\u540c\u540d\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code>\uff0c\u5219\u8c03\u7528\u7684\u5c31\u662f\u7236\u7c7b\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code>\u3002</p> <pre><code>class Employee {\npublic static int idx = 123;\npublic static void Hello() {\nSystem.out.printf(\"Employee: Hello! idx = %d\\n\", idx);\n}\n}\n\nclass Manager extends Employee {\n}\n\npublic class Main {\npublic static void main(String[] args) {\nSystem.out.println(Employee.idx); // 123\nSystem.out.println(Manager.idx);  // 123\nEmployee.Hello(); // Employee: Hello! idx = 123\nManager.Hello();  // Employee: Hello! idx = 123\n}\n}\n</code></pre> <p>\u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u548c\u7236\u7c7b\u540c\u540d\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code>\uff0c\u548c\u7236\u7c7b\u662f\u72ec\u7acb\u7684\uff0c\u6307\u5b9a\u5b50\u7c7b\u540d\u65f6\u4f1a\u8c03\u7528\u5b50\u7c7b\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code>\uff0c\u6307\u5b9a\u7236\u7c7b\u540d\u65f6\u4f1a\u8c03\u7528\u7236\u7c7b\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code> \u3002</p> <pre><code>class Employee {\npublic static int idx = 123;\npublic static void Hello() {\nSystem.out.printf(\"Employee: Hello! idx = %d\\n\", idx);\n}\n}\n\nclass Manager extends Employee {\npublic static int idx = 456;\npublic static void Hello() {\nSystem.out.printf(\"Manager: Hello! idx = %d\\n\", idx);\n}\n}\n\npublic class Main {\npublic static void main(String[] args) {\nSystem.out.println(Employee.idx); // 123\nSystem.out.println(Manager.idx);  // 456\nEmployee.Hello(); // Employee: Hello! idx = 123\nManager.Hello();  // Manager: Hello! idx = 456\n\nEmployee e = new Manager();\n// static\u4e00\u5b9a\u662f\u9759\u6001\u7ed1\u5b9a\ne.Hello(); // Employee: Hello! idx = 123\n}\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch05/#final","title":"\u4f7f\u7528 final \u963b\u6b62\u7ee7\u627f","text":"<ul> <li><code>final</code> \u53ef\u4ee5\u9632\u6b62\u7c7b\u88ab\u6d3e\u751f\u6216\u65b9\u6cd5\u88ab\u91cd\u5199\u3002</li> <li>\u4e00\u4e2a <code>final</code> \u7c7b\u7684\u6240\u6709\u65b9\u6cd5\u4f1a\u81ea\u52a8\u6210\u4e3a <code>final</code> \u65b9\u6cd5\u3002</li> <li><code>final</code> \u65b9\u6cd5\u4f7f\u7528 <code>\u9759\u6001\u7ed1\u5b9a</code>\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch05/#private","title":"private","text":"<p>\u5b9a\u4e49\u548c\u7236\u7c7b\u540c\u540d\u5bf9 <code>\u79c1\u6709\u53d8\u91cf</code> \u6216 <code>\u79c1\u6709\u65b9\u6cd5</code> \u4e5f\u662f\u72ec\u7acb\u7684\u3002<code>\u79c1\u6709\u65b9\u6cd5</code>\u4e5f\u662f <code>\u9759\u6001\u7ed1\u5b9a</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#_6","title":"\u62bd\u8c61\u7c7b","text":"<p>\u4f7f\u7528 <code>abstract</code> \u5b9a\u4e49\u62bd\u8c61\u7c7b\u548c\u62bd\u8c61\u65b9\u6cd5\u3002</p> <pre><code>abstract class Person {\n...\npublic abstract String getDescription();\n}\n</code></pre> <p>\u62bd\u8c61\u65b9\u6cd5\u4e0d\u9700\u8981\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u53ea\u9700\u8981\u5728\u62bd\u8c61\u7c7b\u4e2d\u5b9a\u4e49\u3002\u5177\u4f53\u65b9\u6cd5\u7531\u7ee7\u627f\u4e86\u62bd\u8c61\u7236\u7c7b\u7684\u5b50\u7c7b\u5b9e\u73b0\u3002</p> <p>\u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u53ea\u6709\u5b9a\u4e49\u5177\u4f53\u5b50\u7c7b\u4e4b\u540e\uff0c\u5b9e\u4f8b\u5316\u5177\u4f53\u5b50\u7c7b\uff0c\u4f8b\u5982\uff1a</p> <pre><code>class Employee extends Person {\npublic String getDescription() {\nreturn \"I am an Employee!\";\n}\n}\n\npublic class Main {\npublic static void main(String[] args) {\n// \u4e0d\u80fd\u7528 Person p = new Person();\nPerson p = new Employee();\nSystem.out.println(p.getDescription());\n}\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch05/#object","title":"Object \u7c7b","text":"<p><code>Object</code> \u7c7b\u662f\u6240\u6709\u7c7b\u7684\u7236\u7c7b\u3002<code>Objects</code> \u662f <code>Object</code> \u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c<code>Objects</code> \u7c7b\u4e2d\u5305\u88c5\u4e86\u4e00\u4e9b\u9759\u6001\u65b9\u6cd5\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#equals","title":"equals \u65b9\u6cd5","text":"<p><code>Object.equals()</code> \u65b9\u6cd5\u7528\u4e8e\u68c0\u6d4b\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u7b49\u4e8e\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u3002\u5728 <code>Object</code> \u4e2d\u7684 <code>equals</code> \u7684\u5b9e\u73b0\u662f\uff1a</p> <pre><code>public class Object {\n......\npublic boolean equals(Object obj) {\nreturn (this == obj);\n}\n......\n}\n</code></pre> <p>\u53ef\u89c1\uff0c\u5982\u679c\u6ca1\u6709\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199 <code>equals</code>\uff0c\u9ed8\u8ba4\u7684 <code>equals</code> \u662f\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u5f15\u7528\u662f\u5426\u76f8\u540c\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5728 <code>Employee</code> \u7c7b\u4e2d\u91cd\u5199 <code>equals</code> \u65b9\u6cd5\u7684\u4f8b\u5b50\uff1a</p> <pre><code>public class Employee {\nprivate String name;\nprivate double salary;\nLocalDate hireDay;\n......\npublic boolean equals(Object otherObject) {\nif (this == otherObject) // \u5148\u6bd4\u8f83\u5f15\u7528\u662f\u5426\u76f8\u7b49\nreturn true;\nif (otherObject == null) // \u7136\u540e\u5224\u65ad otherObject \u662f\u5426\u4e3a null \nreturn false;\n\n// \u5982\u679c\u6240\u6709\u7684\u5b50\u7c7b\u90fd\u6709\u76f8\u540c\u7684\u76f8\u7b49\u6027\u8bed\u4e49\uff0c\u5c31\u4f7f\u7528 instanceof \u68c0\u6d4b\n// \u8fd9\u79cd\u60c5\u51b5\u4e0b\u5e94\u8be5\u5c06 equals \u65b9\u6cd5\u8bbe\u7f6e\u4e3a final \n// if (!(otherObject instanceof Employee))\n//     return false;\n// \u8fd9\u91cc\u56e0\u4e3a equals \u7684\u8bed\u4e49\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u6539\u53d8\uff0c\u6240\u4ee5\u7528\u4e86 getClass \u68c0\u6d4b\nif (getClass() != otherObject.getClass()) // \u5224\u65ad\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u7c7b\nreturn false;\n\nEmployee other = (Employee) otherObject; // \u5f3a\u5236\u8f6c\u6362\nreturn Objects.equals(name, other.name) // \u7136\u540e\u6bd4\u8f83\u6240\u6709\u53d8\u91cf\u662f\u5426\u76f8\u7b49\n&amp;&amp; salary == other.salary\n&amp;&amp; Objects.equals(hireDay, other.hireDay);\n}\n......\n}\n</code></pre> <p>\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u901a\u5e38\u4e0d\u4f1a\u7528 <code>a.equals(b)</code> \u6765\u5224\u65ad\u4e24\u8005\u662f\u5426\u662f\u5426\u76f8\u7b49\uff0c\u56e0\u4e3a <code>a</code> \u53ef\u80fd\u4e3a <code>null</code>\u3002\u901a\u5e38\u4f7f\u7528 <code>Objects</code> \u7c7b\u5c01\u88c5\u7684 <code>equals</code> \u9759\u6001\u65b9\u6cd5\uff0c\u5b83\u7684\u5b9e\u73b0\u662f\uff1a</p> <pre><code>public final class Objects {\n......\npublic static boolean equals(Object a, Object b) {\nreturn (a == b) || (a != null &amp;&amp; a.equals(b));\n}\n......\n}\n</code></pre> <p>\u53ef\u89c1\uff0c<code>Objects.equals()</code> \u4f1a\u5148\u5224\u65ad <code>a == null</code> \u7684\u60c5\u51b5\uff0c\u7136\u540e\u518d\u8c03\u7528 <code>a.equals(b)</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#hashcode","title":"hashCode \u65b9\u6cd5","text":"<p><code>Object.hashCode()</code> \u7528\u4e8e\u8fd4\u56de\u4e00\u4e2a <code>int</code> \u503c\u4f5c\u4e3a\u54c8\u5e0c\u503c\u3002\u5728\u6ca1\u6709\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u7528\u5bf9\u8c61\u7684\u5b58\u50a8\u5730\u5740\u8ba1\u7b97\u51fa\u4e00\u4e2a\u54c8\u5e0c\u503c\u3002</p> <p>\u4f7f\u7528 <code>HashMap</code> \u65f6\uff0c\u4f1a\u7528\u5230 <code>hashCode()</code> \u8ba1\u7b97\u51fa\u6765\u7684\u503c\u4f5c\u4e3a\u7d22\u5f15\u3002\u5982\u679c\u8981\u7528 <code>HashMap</code>\uff0c\u9664\u4e86\u91cd\u5199 <code>hashCode()</code> \u4e4b\u5916\uff0c\u901a\u5e38\u8fd8\u9700\u8981\u91cd\u5199 <code>equals</code> \u65b9\u6cd5\uff0c\u54c8\u5e0c\u8868\u63d2\u5165\u503c\u65f6\u9996\u5148\u5224\u65ad <code>hashCode</code> \u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u518d\u7528 <code>equals()</code> \u6765\u5224\u65ad\u4e24\u4e2a\u7d22\u5f15\u662f\u5426\u76f8\u7b49\u3002\u5982\u679c\u54c8\u5e0c\u503c\u4e0d\u7b49\uff0c\u5219\u8fd9\u4e24\u4e2a\u7d22\u5f15\u4e00\u5b9a\u4e0d\u7b49\u3002</p> <p>\u53ef\u4ee5\u501f\u52a9 <code>Objects.hash()</code> \u65b9\u6cd5\u6765\u8ba1\u7b97 <code>hashCode()</code>\uff0c\u4f8b\u5982\uff1a</p> <pre><code>class Employee {\nprivate String name;\nprivate double salary;\nLocalDate hireDay;\nprivate int[] a;\n\n......\npublic int hashCode() {\nreturn Objects.hash(name, salary, hireDay, Arrays.hashCode(a));\n}\n......\n}\n</code></pre> <p><code>Objects.hash()</code> \u63a5\u53d7\u53ef\u53d8\u957f\u5ea6\u7684\u53c2\u6570\uff0c\u4f1a\u7ec4\u5408\u6240\u6709\u53c2\u6570\u8ba1\u7b97\u54c8\u5e0c\u503c\u3002\u5982\u679c\u5b9e\u4f8b\u5b58\u5728\u6570\u7ec4\u7c7b\u578b\u7684\u5b57\u6bb5\uff0c\u4f7f\u7528 <code>Ayyays.hashCode()</code> \u8ba1\u7b97\u6570\u7ec4\u7684\u54c8\u5e0c\u503c\u3002</p> <p>\u901a\u5e38\u4e5f\u4e0d\u4f7f\u7528 <code>a.hashCode()</code> \u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u56e0\u4e3a <code>a</code> \u53ef\u80fd\u4e3a <code>null</code>\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>Objects.hashCode()</code> \u65b9\u6cd5\uff0c\u5f53 <code>a==null</code> \u65f6\u4f1a\u8fd4\u56de <code>0</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#tostring","title":"toString \u65b9\u6cd5","text":"<p><code>Object.toString()</code> \u65b9\u6cd5\u5c06\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u5316\u6210 <code>String</code>\uff0c\u9ed8\u8ba4\u7684\u5b9e\u73b0\u4e3a\uff1a</p> <pre><code>public class Object {\n......\npublic String toString() {\nreturn getClass().getName() + \"@\" + Integer.toHexString(hashCode());\n}\n......\n}\n</code></pre> <p>\u5176\u4e2d <code>getClass().getName()</code> \u8868\u793a\u6240\u5c5e\u7c7b\u540d\u7684\u5b57\u7b26\u4e32\uff0c<code>Integer.toHexString()</code> \u5c06\u4e00\u4e2a\u6570\u5b57\u8f6c\u5316\u6210 <code>16</code> \u8fdb\u5236\u4e32\uff0c<code>hashCode()</code> \u5219\u662f <code>Object.hashCode()</code>\uff0c\u5982\u679c\u6ca1\u6709\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199 <code>hashCode()</code>\uff0c\u5c31\u662f\u4f7f\u7528\u5b58\u50a8\u5730\u5740\u8ba1\u7b97\u54c8\u5e0c\u503c\u3002</p> <p><code>toString()</code> \u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u7279\u6027\uff1a\u5f53\u5bf9\u8c61\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u901a\u8fc7 <code>+</code> \u62fc\u63a5\uff0c\u6216\u8005\u5c06\u5bf9\u8c61\u5355\u72ec\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 <code>System.out.println()</code> \u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528 <code>toString()</code> \u65b9\u6cd5\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#arraylist","title":"\u52a8\u6001\u6570\u7ec4 ArrayList","text":""},{"location":"dev/java/CoreJava/ch05/#_7","title":"\u5b9a\u4e49","text":"<p>\u4e0b\u9762\u4e09\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\u5b9a\u4e49 <code>ArrayList</code>:</p> <pre><code>ArrayList&lt;Employee&gt; a = new ArrayList&lt;Employee&gt;();\nvar b = new ArrayList&lt;Employee&gt;(); // \u4f7f\u7528 var \u81ea\u52a8\u63a8\u5bfc\u53d8\u91cf\u7c7b\u578b\nArrayList&lt;Employee&gt; c = new ArrayList&lt;&gt;(); // \u7b2c\u4e00\u4e2a &lt;&gt; \u6709\u7c7b\u578b\uff0c\u540e\u9762\u53ef\u4ee5\u4e0d\u586b\n</code></pre> <p>\u4f7f\u7528 <code>ensureCapacity()</code> \u65b9\u6cd5\u53ef\u4ee5\u5206\u914d\u5bb9\u91cf\uff0c\u7c7b\u4f3c\u4e8e <code>C++</code> \u4e2d <code>vector</code> \u7684 <code>reserve()</code>\u3002</p> <pre><code>ArrayList&lt;Employee&gt; a = new ArrayList&lt;Employee&gt;();\na.ensureCapacity(100);\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u76f4\u63a5\u5206\u914d\u5bb9\u91cf\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7b49\u4ef7\u4e8e\uff1a</p> <pre><code>ArrayList&lt;Employee&gt; a = new ArrayList&lt;Employee&gt;(100);\n</code></pre> <p><code>java</code> \u4e0d\u80fd\u67e5\u770b <code>ArrayList</code> \u7684\u5bb9\u91cf\uff0c\u53ea\u80fd\u4f7f\u7528 <code>size()</code> \u67e5\u770b\u5927\u5c0f\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>trimToSize()</code> \u5c06\u5bb9\u91cf\u7f29\u51cf\u5230\u5f53\u524d\u7684\u5927\u5c0f\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#_8","title":"\u589e\u5220\u6539\u67e5","text":"<p><code>ArrayList</code> \u4e0d\u80fd\u4f7f\u7528\u4e2d\u62ec\u53f7 <code>[]</code> \u6765\u8bbf\u95ee\u548c\u4fee\u6539\u5143\u7d20\u3002</p> <ul> <li><code>boolean add(T obj)</code>\uff1a\u5728\u672b\u5c3e\u8ffd\u52a0\u4e00\u4e2a\u5143\u7d20\u3002\u6c38\u8fdc\u8fd4\u56de <code>true</code>\u3002</li> <li><code>void add(int index, T obj)</code>\uff1a\u5728<code>index</code> \u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\u3002</li> <li><code>T set(int index, T obj)</code>\uff1a\u66f4\u6539 <code>index</code> \u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u8fd4\u56de\u539f\u5148\u5728 <code>index</code> \u7684\u5143\u7d20\u3002</li> <li><code>T get(int index)</code>\uff1a\u67e5\u8be2 <code>index</code> \u4f4d\u7f6e\u7684\u5143\u7d20\u3002</li> <li><code>T remove(int index)</code>\uff1a\u5220\u9664 <code>index</code> \u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u8fd4\u56de\u539f\u5148\u5728 <code>index</code> \u7684\u5143\u7d20\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch05/#_9","title":"\u5bf9\u8c61\u5305\u88c5\u5668\u4e0e\u81ea\u52a8\u88c5\u7bb1","text":"<p><code>ArrayList</code> \u7684\u5b58\u653e\u7c7b\u578b\u5fc5\u987b\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u5b58\u653e\u57fa\u672c\u7c7b\u578b <code>ArrayList&lt;int&gt;</code> \u662f\u4e0d\u884c\u7684\u3002\u9700\u8981\u4f7f\u7528\u5305\u88c5\u5668\uff0c\u4f8b\u5982 <code>Integer</code>\u3001<code>Long</code>\u3001<code>Float</code>\u3001<code>Double</code>\u3001<code>Short</code>\u3001<code>Byte</code>\u3001<code>Character</code> \u548c <code>Boolean</code>\uff08\u524d6\u4e2a\u7c7b\u6d3e\u751f\u4e8e\u516c\u5171\u7684\u8d85\u7c7b <code>Number</code>\uff09\u3002\u5305\u88c5\u5668\u7c7b\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5373\u4e00\u65e6\u6784\u9020\u4e86\u5305\u88c5\u5668\uff0c\u5c31\u4e0d\u5141\u8bb8\u66f4\u6539\u5305\u88c5\u5728\u5176\u4e2d\u7684\u503c\u3002\u540c\u65f6\uff0c\u5305\u88c5\u5668\u7c7b\u8fd8\u662f <code>final</code>\uff0c\u4e0d\u80fd\u6d3e\u751f\u5b83\u4eec\u7684\u5b50\u7c7b\u3002</p> <p>\u8bbf\u95ee\u5305\u88c5\u5668\u7684\u503c\u9700\u8981\u4f7f\u7528\u5305\u88c5\u5668\u7684\u65b9\u6cd5\uff0c\u4e0d\u8fc7\uff0c\u5728\u4f7f\u7528<code>ArrayList</code> \u7b49\u6570\u636e\u7ed3\u6784\u65f6\u4f1a\u81ea\u52a8\u5c06\u6211\u4eec\u7684\u8bed\u6cd5\u53d8\u6362\u6210\u8c03\u7528\u5305\u88c5\u5668\u65b9\u6cd5\u7684\u5f62\u5f0f\uff0c\u8fd9\u4e2a\u7279\u6027\u79f0\u4e3a <code>\u81ea\u52a8\u88c5\u7bb1</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#_10","title":"\u53d8\u957f\u53c2\u6570\u65b9\u6cd5","text":"<p>\u53ef\u4ee5\u7528 <code>T...</code> \u4f5c\u4e3a\u53d8\u957f\u6570\u7ec4\u4f20\u5165\u65b9\u6cd5\u4e2d\uff0c\u5728\u904d\u5386\u65f6\uff0c\u53ef\u4ee5\u7528 <code>for-each</code> \u8bed\u6cd5\u6216\u8005\u4e0b\u6807\u904d\u5386\u3002</p> <pre><code>public class Main {\npublic static int max(int... a) {\nint M = Integer.MIN_VALUE;\nSystem.out.printf(\"len = %d\\n\", a.length);\nfor (int x : a)\nif (x &gt; M)\nM = x;\nreturn M;\n}\npublic static void main(String[] args) {\nSystem.out.printf(\"max = %d\", max(2, 8, 5));\n}\n}\n</code></pre> <p><code>java</code> \u5141\u8bb8\u5c06\u6570\u7ec4\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f20\u7ed9\u6709\u53ef\u53d8\u53c2\u6570\u7684\u65b9\u6cd5\u3002</p>"},{"location":"dev/java/CoreJava/ch06/","title":"\u7b2c6\u7ae0 \u63a5\u53e3\u3001lambda\u8868\u8fbe\u5f0f\u4e0e\u5185\u90e8\u7c7b","text":""},{"location":"dev/java/CoreJava/ch06/#_1","title":"\u63a5\u53e3","text":"<p>\u5982\u679c\u5b9e\u73b0\u4e86\u67d0\u4e2a\u63a5\u53e3\uff0c\u5c31\u80fd\u4f7f\u7528\u8fd9\u4e2a\u63a5\u53e3\u7684\u65b9\u6cd5\u548c\u53d8\u91cf\u3002</p>"},{"location":"dev/java/CoreJava/ch06/#_2","title":"\u63a5\u53e3\u7684\u5c5e\u6027","text":"<ul> <li>\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u90fd\u662f <code>public</code>\uff0c\u4f46\u5b9a\u4e49\u65f6\u4e0d\u9700\u8981\u7279\u522b\u8bf4\u660e\u3002</li> <li>\u57fa\u4e8e\u4e0a\u4e00\u70b9\uff0c\u5982\u679c\u7236\u7c7b\u5b9e\u73b0\u4e86\u67d0\u4e2a\u63a5\u53e3\uff0c\u5219\u5b50\u7c7b\u4e5f\u76f8\u5f53\u4e8e\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u3002\u5982\u679c\u5b50\u7c7b\u5e0c\u671b\u6539\u53d8\u63a5\u53e3\u65b9\u6cd5\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u9009\u62e9\u8986\u76d6\u8fd9\u4e9b\u65b9\u6cd5\u3002</li> <li>\u63a5\u53e3\u4e0d\u80fd\u5b9a\u4e49\u53d8\u91cf\uff0c\u4f46\u53ef\u4ee5\u5b9a\u4e49\u5e38\u91cf\u3002\u67d0\u4e2a\u7c7b\u53ea\u8981\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u5c31\u81ea\u52a8\u83b7\u5f97\u63a5\u53e3\u4e2d\u7684\u5e38\u91cf\u3002\u5728\u7c7b\u4e2d\u8c03\u7528\u63a5\u53e3\u7684\u5e38\u91cf\u4e0d\u9700\u8981\u6307\u5b9a\u63a5\u53e3\u540d\u5b57\u3002</li> <li>\u63a5\u53e3\u7684\u5e38\u91cf\u90fd\u662f <code>public static final</code>\uff0c\u540c\u6837\u4e0d\u9700\u8981\u5728\u5b9a\u4e49\u65f6\u7279\u522b\u8bf4\u660e\u3002</li> <li>\u63a5\u53e3\u53ef\u4ee5\u6269\u5c55\u6210\u66f4\u9ad8\u7ea7\u7684\u63a5\u53e3\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch06/#_3","title":"\u9ed8\u8ba4\u65b9\u6cd5","text":"<p>\u63a5\u53e3\u53ef\u4ee5\u5b9a\u4e49\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a</p> <pre><code>public interface Collection {\nint size();\ndefault boolean empty() {return size() == 0;}\n}\n</code></pre> <p>\u9ed8\u8ba4\u65b9\u6cd5\u53ef\u4ee5\u4e0d\u5b9e\u73b0\u3002</p> <p>\u9ed8\u8ba4\u65b9\u6cd5\u7684\u4f5c\u7528\uff1a\u63d0\u4f9b\u517c\u5bb9\u6027\u3002\u5047\u8bbe <code>Bag</code> \u7c7b\u5b9e\u73b0\u4e86 <code>Collection</code> \u63a5\u53e3\uff0c<code>Collection</code> \u63a5\u53e3\u65b0\u589e\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u65b9\u6cd5\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u8fd9\u6837\u539f\u6709\u7684\u4ee3\u7801\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"dev/java/CoreJava/ch06/#_4","title":"\u89e3\u51b3\u9ed8\u8ba4\u65b9\u6cd5\u51b2\u7a81","text":"<p>\u8d85\u7c7b\u4e0e\u63a5\u53e3\u51b2\u7a81\uff0c\u8d85\u7c7b\u4f18\u5148\u3002\u63a5\u53e3\u4e0e\u63a5\u53e3\u51b2\u7a81\uff0c\u5fc5\u987b\u8986\u76d6\u89e3\u51b3\u51b2\u7a81\u3002</p> <ol> <li>\u8d85\u7c7b\u4f18\u5148\u89c4\u5219\uff1a\u5982\u679c\u5b50\u7c7b\u7ee7\u627f\u4e86\u8d85\u7c7b\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u63a5\u53e3\u4e2d\u6709\u65b9\u6cd5\uff08\u65e0\u8bba\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u4e3a\u9ed8\u8ba4\u65b9\u6cd5\uff09\u4e0e\u8d85\u7c7b\u4e2d\u7684\u65b9\u6cd5\u51b2\u7a81\uff0c\u5219\u8d85\u7c7b\u7684\u65b9\u6cd5\u4f18\u5148\u3002\u4f8b\u5982\uff1a <pre><code>interface myInterface {\ndefault void method() {\nSystem.out.println(\"Interface - method\");\n}\n}\n\nclass baseClass {\npublic void method() {\nSystem.out.println(\"baseClass - method\");\n}\n}\n\nclass childClass extends baseClass implements myInterface{}\n\npublic class Main {\npublic static void main(String[] args) {\nvar a = new childClass();\na.method(); // \u4f1a\u8f93\u51fa baseClass - method\n}\n}\n</code></pre></li> <li>\u63a5\u53e3\u51b2\u7a81\uff1a\u5982\u679c\u4e00\u4e2a\u63a5\u53e3\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u53e6\u4e00\u4e2a\u63a5\u53e3\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540c\u540d\u800c\u4e14\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u7684\u65b9\u6cd5\uff08\u65e0\u8bba\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u4e3a\u9ed8\u8ba4\u65b9\u6cd5\uff09\uff0c\u5fc5\u987b\u8986\u76d6\u8fd9\u4e2a\u65b9\u6cd5\u6765\u89e3\u51b3\u51b2\u7a81\u3002</li> </ol>"},{"location":"dev/java/CoreJava/ch06/#_5","title":"\u6807\u8bb0\u63a5\u53e3","text":"<p>\u67d0\u4e9b\u63a5\u53e3\u4e0d\u5305\u542b\u4efb\u4f55\u65b9\u6cd5\uff0c\u552f\u4e00\u7684\u4f5c\u7528\u662f\u5141\u8bb8\u5728\u7c7b\u578b\u67e5\u8be2\u7684\u8bed\u53e5\u4e2d\u4f7f\u7528 <code>instanceof</code>\u3002\u4f8b\u5982 <code>Cloneable</code> \u63a5\u53e3\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u4e0d\u9700\u8981\u5b9e\u73b0\u4efb\u4f55\u65b9\u6cd5\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u4f5c\u51fa\u6807\u8bb0\uff0c\u8bf7\u6c42\u514b\u9686\u65f6\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u68c0\u67e5\u578b\u5f02\u5e38\u3002</p> <p><code>Object</code> \u7c7b\u7684 <code>clone</code> \u65b9\u6cd5\u662f <code>protected</code>\uff0c\u56e0\u6b64\uff0c\u5373\u4f7f\u9ed8\u8ba4\u7684\u6d45\u62f7\u8d1d\u80fd\u591f\u6ee1\u8db3\u8981\u6c42\uff0c\u4e5f\u8981\u5c06 <code>clone</code> \u5b9a\u4e49\u4e3a <code>public</code>\uff0c\u518d\u8c03\u7528 <code>super.clone()</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch06/#lambda","title":"lambda \u8868\u8fbe\u5f0f","text":"<p><code>lambda</code> \u8868\u8fbe\u5f0f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u7c7b\u4f3c\u4e8e\u533f\u540d\u51fd\u6570\uff08\u4f46 <code>java</code> \u4e2d\u6ca1\u6709\u51fd\u6570\u7c7b\u578b \uff09\uff0c\u65b9\u4fbf\u5728\u4ee5\u540e\u4f7f\u7528\u3002</p>"},{"location":"dev/java/CoreJava/ch06/#_6","title":"\u51fd\u6570\u5f0f\u63a5\u53e3","text":"<p>\u6709\u4e9b\u63a5\u53e3\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0c\u8fd9\u79cd\u63a5\u53e3\u79f0\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u3002</p> <p>\u53ef\u4ee5\u5c06 <code>lambda</code> \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u67d0\u4e2a\u5b9e\u73b0\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5bf9\u8c61\u4f20\u5165\u53c2\u6570\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u521b\u5efa\u5bf9\u8c61\u7b49\u7e41\u7410\u7684\u6d41\u7a0b\u3002</p> <p>\u5728\u4f20\u5165 <code>lambda</code> \u8868\u8fbe\u5f0f\u65f6\uff0c\u53c2\u6570\u7684\u7c7b\u578b\u4ee5\u53ca\u8fd4\u56de\u7c7b\u578b\u90fd\u4f1a\u81ea\u52a8\u63a8\u5bfc\uff0c\u4f8b\u5982\uff1a</p> <ol> <li>\u5c06\u5b57\u7b26\u4e32\u6570\u7ec4\u6309\u5b57\u7b26\u4e32\u957f\u5ea6\u6392\u5e8f\uff0c<code>Arrays.sort()</code> \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a5\u6536\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>Comparable&lt;T&gt;</code> \u63a5\u53e3\u7684\u5bf9\u8c61\u3002 <pre><code>var planets = new String[] { \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\" };\nArrays.sort(planets, (x, y) -&gt; x.length() - y.length());\n</code></pre></li> <li>\u521b\u5efa\u5b9a\u65f6\u4efb\u52a1\uff0c<code>Timer()</code> \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a5\u6536\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>ActionListener</code> \u63a5\u53e3\u7684\u5bf9\u8c61\u3002 <pre><code>var timer = new Timer(1000, event -&gt; System.out.println(\"The time is \" + new Date()));\n</code></pre></li> <li><code>ArrayList</code> \u4e2d\u7684 <code>removeIf()</code> \u65b9\u6cd5\uff0c\u80fd\u591f\u6839\u636e\u6761\u4ef6\u5220\u9664\u5143\u7d20\uff0c\u5176\u53c2\u6570\u63a5\u6536\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>Predicate&lt;T&gt;</code> \u63a5\u53e3\u7684\u5bf9\u8c61\u3002 <pre><code>list.removeIf(e -&gt; e == null);\n</code></pre></li> <li><code>Supplier&lt;T&gt;</code> \u63a5\u53e3\u63d0\u4f9b\u4e86\u61d2\u8ba1\u7b97\u529f\u80fd\u3002 <pre><code>// \u53ea\u6709\u5728 null \u65f6\u624d\u6267\u884c\u7b2c\u4e8c\u4e2a\u53c2\u6570\nLocalDate hireDay = Objects.requireNonNullOrElseGet(day, () -&gt; new LocalDate(1970, 1, 1));\n</code></pre></li> </ol>"},{"location":"dev/java/CoreJava/ch06/#_7","title":"\u65b9\u6cd5\u5f15\u7528","text":"<p><code>lambda</code> \u8868\u8fbe\u5f0f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\u6210\u4e00\u4e2a\u65b9\u6cd5\u5f15\u7528\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u7528\u6cd5\uff1a</p> <ol> <li><code>object::instanceMethod</code>\uff0c\u4f8b\u5982\u5728\u521b\u5efa\u5b9a\u65f6\u4efb\u52a1\u7684\u53c2\u6570\u4e2d\u4f7f\u7528 <code>System.out::println</code>\uff1a <pre><code>var timer = new Timer(1000, System.out::println);\n</code></pre> <code>System.out::println</code> \u6709 10 \u4e2a\u91cd\u8f7d\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5339\u914d\u6700\u63a5\u8fd1\u7684\u91cd\u8f7d\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6700\u63a5\u8fd1\u7684\u662f <code>println(Object event)</code> \u7684\u65b9\u6cd5\uff0c\u76f8\u5f53\u4e8e\uff1a <pre><code>var timer = new Timer(1000, event -&gt; System.out.println(event));\n</code></pre></li> <li><code>Class::instanceMethod</code>\uff0c\u4f8b\u5982\u5728\u5bf9\u5b57\u7b26\u4e32\u6570\u7ec4\u6392\u5e8f\u65f6\uff0c\u60f3\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\uff1a <pre><code>var planets = new String[] { \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\" };\nArrays.sort(planets, String::compareToIgnoreCase);\n</code></pre> \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7b2c 1 \u4e2a\u53c2\u6570\u4f1a\u6210\u4e3a\u65b9\u6cd5\u7684\u9690\u5f0f\u53c2\u6570\uff0c\u76f8\u5f53\u4e8e\uff1a <pre><code>Arrays.sort(planets, (x, y) -&gt; x.compareToIgnoreCase(y));\n</code></pre></li> <li><code>Class::staticMethod</code>\uff0c\u4f8b\u5982 <code>Math::pow</code>\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6240\u6709\u7684\u53c2\u6570\u90fd\u4f1a\u4f20\u9012\u5230\u9759\u6001\u65b9\u6cd5\u5f53\u4e2d\uff0c\u76f8\u5f53\u4e8e <code>(x, y) -&gt; Math.pow(x, y)</code></li> </ol> Info <p>\u6ce8\u610f\uff0c\u53ea\u6709\u5f53 <code>lambda</code> \u8868\u8fbe\u5f0f\u7684\u7ed3\u6784\u65f6\u53ea\u8c03\u7528\u4e00\u4e2a\u65b9\u6cd5\u800c\u4e0d\u505a\u5176\u4ed6\u64cd\u4f5c\u65f6\uff0c\u624d\u80fd\u628a lambda \u8868\u8fbe\u5f0f\u91cd\u5199\u4e3a\u65b9\u6cd5\u5f15\u7528\u3002\u4f8b\u5982: <pre><code>s -&gt; s.length() == 0\n</code></pre> \u8fd9\u91cc\u9664\u4e86\u4e00\u4e2a\u65b9\u6cd5\u8c03\u7528\u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u3002</p>"},{"location":"dev/java/CoreJava/ch06/#_8","title":"\u53d8\u91cf\u4f5c\u7528\u57df","text":"<ul> <li><code>lambda</code> \u8868\u8fbe\u5f0f\u53ef\u4ee5\u81ea\u52a8\u6355\u83b7\u5916\u56f4\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff08\u4e0d\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u6355\u83b7\uff09\u3002</li> <li><code>lambda</code> \u8868\u8fbe\u5f0f\u53ea\u80fd\u5f15\u7528\u4e0d\u4f1a\u6539\u53d8\u7684\u53d8\u91cf\uff0c\u88ab\u6355\u83b7\u7684\u53d8\u91cf\u65e2\u4e0d\u80fd\u5728\u5185\u90e8\u6539\u53d8\uff0c\u4e5f\u4e0d\u80fd\u5728\u5916\u90e8\u6539\u53d8\uff0c\u5426\u5219\u62a5\u9519\u3002</li> <li>\u5728 <code>lambda</code> \u8868\u8fbe\u5f0f\u4e2d\u58f0\u660e\u4e0e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u540c\u540d\u7684\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u662f\u4e0d\u5408\u6cd5\u7684\u3002</li> <li>\u5728 <code>lambda</code> \u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528 <code>this</code> \u5173\u952e\u5b57\u65f6\uff0c\u662f\u6307\u521b\u5efa\u8fd9\u4e2a <code>lambda</code> \u8868\u8fbe\u5f0f\u7684\u65b9\u6cd5\u7684 <code>this</code> \u53c2\u6570\u3002\u4f8b\u5982\uff1a</li> </ul> <pre><code>public class Application {\npublic void init()\n{\nActionListener liStener = event -&gt; {\nSystem.out.println(this.toString());\n......\n};\n......\n}\n}\n</code></pre> <p>\u8868\u8fbe\u5f0f <code>this .toString()</code> \u4f1a\u8c03\u7528 <code>Application</code> \u5bf9\u8c61\u7684 <code>toString</code> \u65b9\u6cd5\uff0c\u800c\u4e0d\u662f <code>ActionListener</code> \u5b9e\u4f8b\u7684\u65b9\u6cd5\u3002</p>"},{"location":"dev/java/CoreJava/ch07/","title":"\u7b2c7\u7ae0 \u5f02\u5e38\u3001\u65ad\u8a00\u548c\u65e5\u5fd7","text":"<p><code>Java</code> \u4e2d\u6709 3 \u79cd\u5904\u7406\u7cfb\u7edf\u9519\u8bef\u7684\u673a\u5236\uff1a</p> <ul> <li>\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002</li> <li>\u4f7f\u7528\u65ad\u8a00\u3002</li> <li>\u65e5\u5fd7\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch07/#_1","title":"\u629b\u51fa\u5f02\u5e38","text":""},{"location":"dev/java/CoreJava/ch07/#_2","title":"\u58f0\u660e\u68c0\u67e5\u578b\u5f02\u5e38","text":"<p>\u6d3e\u751f\u4e8e <code>Error</code> \u7c7b\u6216 <code>RuntimeException</code> \u7c7b\u7684\u6240\u6709\u5f02\u5e38\u79f0\u4e3a\u975e\u68c0\u67e5\u578b\u5f02\u5e38\uff0c\u6240\u6709\u5176\u4ed6\u7684\u5f02\u5e38\u79f0\u4e3a \u68c0\u67e5\u578b\u5f02\u5e38\u3002</p> <p>\u4e0b\u9762 4 \u79cd\u60c5\u51b5\u4f1a\u629b\u51fa\u5f02\u5e38\uff1a</p> <ol> <li>\u8c03\u7528\u4e86\u4e00\u4e2a\u629b\u51fa\u68c0\u67e5\u578b\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c <code>FileInputStream</code> \u6784\u9020\u5668\u3002</li> <li>\u68c0\u6d4b\u5230\u4e00\u4e2a\u9519\u8bef\uff0c\u5e76\u4e14\u5229\u7528 <code>throw</code> \u8bed\u53e5\u629b\u51fa\u4e00\u4e2a\u68c0\u67e5\u578b\u5f02\u5e38\u3002</li> <li> <p>\u7a0b\u5e8f\u9519\u8bef\uff0c\u4f8b\u5982\uff0c<code>a[-1]=0</code> \u4f1a\u629b\u51fa\u4e00\u4e2a\u975e\u68c0\u67e5\u578b\u5f02\u5e38 <code>ArrayIndexOutOfBoundsException</code></p> </li> <li> <p><code>Java</code> \u865a\u62df\u673a\u6216\u8fd0\u884c\u65f6\u5e93\u51fa\u73b0\u5185\u90e8\u9519\u8bef\u3002</p> </li> </ol> <p>\u4e00\u4e2a\u65b9\u6cd5\u5fc5\u987b\u58f0\u660e\u6240\u6709\u53ef\u80fd\u629b\u51fa\u7684\u68c0\u67e5\u578b\u5f02\u5e38\uff08\u4e5f\u5c31\u662f\u524d\u4e24\u79cd\u60c5\u51b5\uff09\uff0c\u56e0\u4e3a\u5982\u679c\u5904\u7406\u5668\u6ca1\u6709\u6355\u83b7\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5f53\u524d\u6267\u884c\u7684\u7ebf\u7a0b\u5c31\u4f1a\u7ec8\u6b62\u3002\u5982\u679c\u5728\u65b9\u6cd5\u4e2d\u6ca1\u6709\u58f0\u660e\u6240\u6709\u53ef\u80fd\u53d1\u751f\u7684\u68c0\u67e5\u578b\u5f02\u5e38\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u53d1\u51fa\u4e00\u4e2a\u9519\u8bef\u6d88\u606f\u3002</p>"},{"location":"dev/java/CoreJava/ch07/#_3","title":"\u4f7f\u7528\u65ad\u8a00","text":"<p>\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u65ad\u8a00\uff1a</p> <ul> <li>\u65ad\u8a00\u68c0\u67e5\u53ea\u662f\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u9636\u6bb5\u6253\u5f00\u3002</li> <li>\u65ad\u8a00\u5931\u8d25\u65f6\uff0c\u7a0b\u5e8f\u7684\u884c\u4e3a\u662f\u96be\u4ee5\u9884\u6599\u7684\u3002</li> </ul> <p>\u901a\u5e38\u4f7f\u7528\u7684\u65ad\u8a00\u5b8c\u6210 \u53c2\u6570\u68c0\u67e5 \u548c \u63d0\u4f9b\u5047\u8bbe\u6587\u6863</p>"},{"location":"dev/java/CoreJava/ch08/","title":"\u7b2c8\u7ae0 \u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1","text":""},{"location":"dev/java/CoreJava/ch08/#_1","title":"\u5b9a\u4e49\u7b80\u5355\u6cdb\u578b\u7c7b","text":"<p>\u4e0b\u9762\u4ee3\u7801\u5b9e\u73b0\u4e86 <code>C++</code> \u4e2d\u7684\u6a21\u677f\u7c7b <code>pair</code>\uff1a</p> <pre><code>class Pair&lt;F extends Comparable&lt;F&gt;, S extends Comparable&lt;S&gt;&gt; implements Comparable&lt;Pair&lt;F, S&gt;&gt; {\npublic F first = null;\npublic S second = null;\n\npublic Pair(F f, S s) {\nfirst = f;\nsecond = s;\n}\n\n@Override\npublic int compareTo(Pair&lt;F, S&gt; o) {\nint d = first.compareTo(o.first);\nreturn d != 0 ? d : second.compareTo(o.second);\n}\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch08/#_2","title":"\u6cdb\u578b\u65b9\u6cd5","text":"<p>\u4e0b\u9762\u65b9\u6cd5\u662f\u4e00\u4e2a\u6cdb\u578b\u65b9\u6cd5\uff0c\u8fd4\u56de\u4efb\u610f\u7c7b\u578b\u6570\u7ec4\u7684\u4e2d\u95f4\u5143\u7d20\uff1a</p> <pre><code>public static &lt;T&gt; T getMiddle(T[] a)\n{return a[a.length / 2];}\n</code></pre> <p>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u6cdb\u578b\u65b9\u6cd5\u65f6\u53ef\u4ee5\u7701\u7565\u5177\u4f53\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u4f1a\u81ea\u52a8\u63a8\u5012\u5e76\u5339\u914d\u3002</p>"},{"location":"dev/java/CoreJava/ch08/#_3","title":"\u7c7b\u578b\u53d8\u91cf\u7684\u9650\u5b9a","text":"<p>\u5728\u5b9a\u4e49\u6cdb\u578b\u7684\u4f4d\u7f6e\u53ef\u4ee5\u53ef\u4ee5\u5bf9\u6cdb\u578b\u8fdb\u884c\u9650\u5b9a\uff0c\u4f8b\u5982\u53ef\u4ee5\u58f0\u660e\u6cdb\u578b\u5fc5\u987b\u662f\u5b9e\u73b0\u67d0\u4e2a\u63a5\u53e3\u3002</p> <p>\u4e0b\u9762\u7684\u4f8b\u5b50\u662f\u4e00\u4e2a\u6c42\u51fa\u6570\u7ec4\u4e2d\u6700\u5c0f\u548c\u6700\u5927\u5143\u7d20\u7684\u6cdb\u578b\u65b9\u6cd5\uff0c\u5176\u4e2d\u9650\u5b9a\u4e86\u6cdb\u578b\u53ea\u80fd\u662f\u5b9e\u73b0\u4e86 <code>Comparable</code> \u63a5\u53e3\u7684\u7c7b\uff1a</p> <pre><code>class ArrayAlg {\npublic static &lt;T extends Comparable&gt; Pair&lt;T, T&gt; minmax(T[] a) {\nif (a == null || a.length == 0)\nreturn null;\nT m = a[0], M = a[0];\nfor (int i = 1; i &lt; a.length; i++) {\nif (a[i].compareTo(m) &lt; 0)\nm = a[i];\nelse if (a[i].compareTo(M) &gt; 0)\nM = a[i];\n}\nreturn new Pair&lt;&gt;(m, M);\n}\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch08/#java-c","title":"Java \u6cdb\u578b\u548c C++ \u6a21\u677f\u7c7b\u7684\u533a\u522b","text":"<ul> <li><code>Java</code> \u6cdb\u578b\u53ef\u4ee5\u5bf9\u6cdb\u578b\u7684\u7c7b\u578b\u52a0\u4ee5\u9650\u5236\uff0c\u800c <code>C++</code> \u4e0d\u884c\u3002</li> <li><code>Java</code> \u865a\u62df\u673a\u6ca1\u6709\u6cdb\u578b\u7c7b\u578b\u5bf9\u8c61\uff0c\u7c7b\u578b\u53d8\u91cf\u4f1a\u88ab\u201c\u64e6\u9664\u201d\uff0c\u5e76\u66ff\u6362\u4e3a\u9650\u5b9a\u7c7b\u578b\uff08\u5982\u679c\u662f\u65e0\u9650\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u5219\u66ff\u6362\u4e3a <code>Object</code>\uff09\u3002\u800c <code>C++</code> \u4f1a\u4e3a\u6bcf\u4e2a\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u4ea7\u751f\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5bfc\u81f4\u201c\u6a21\u677f\u4ee3\u7801\u81a8\u80c0\u201d\u3002</li> <li><code>Java</code> \u4e2d\u4e0d\u80fd\u7528\u57fa\u672c\u7c7b\u578b\u5b9e\u4f8b\u5316\u7c7b\u578b\u53c2\u6570\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch08/#_4","title":"\u6cdb\u578b\u7684\u9650\u5236\u4e0e\u5c40\u9650\u6027","text":"<ol> <li> <p>\u4e0d\u80fd\u7528\u57fa\u672c\u7c7b\u578b\u5b9e\u4f8b\u5316\u7c7b\u578b\u53c2\u6570     \u7c7b\u578b\u4f1a\u88ab\u64e6\u9664\uff0c\u64e6\u9664\u4e4b\u540e\u7684\u7c7b\u578b\uff08\u4f8b\u5982 <code>Object</code> \uff09\u4e0d\u80fd\u5b58\u50a8 <code>int</code> \u7b49\u57fa\u672c\u7c7b\u578b\u3002</p> </li> <li> <p>\u8fd0\u884c\u65f6\u7c7b\u578b\u67e5\u8be2\u53ea\u9002\u7528\u4e8e\u539f\u59cb\u7c7b\u578b\u3002      \u4e0d\u80fd\u4f7f\u7528 <code>instanceof</code> \u67e5\u8be2\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u67d0\u4e2a\u6cdb\u578b\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f7f\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u6765\u67e5\u8be2\uff0c\u5219\u4f1a\u5f97\u5230\u4e00\u4e2a\u8b66\u544a\u3002      \u5bf9\u6cdb\u578b\u53d8\u91cf\u4f7f\u7528 <code>getClass</code> \u603b\u662f\u8fd4\u56de\u539f\u59cb\u7c7b\u578b\u3002</p> </li> <li> <p>\u4e0d\u80fd\u4f7f\u7528 <code>new</code> \u5b9e\u4f8b\u5316\u4e00\u4e2a\u53c2\u6570\u5316\u7c7b\u578b\u7684\u6570\u7ec4\u3002</p> <p>\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u5c31\u662f\u975e\u6cd5\u7684\uff1a <pre><code>var table = new Pair&lt;String, String&gt;[10]; // \u9519\u8bef\n</code></pre> <pre><code>!!! note \"\u6ce8\u610f\"\n\n    \u58f0\u660e `Pair&lt;String, String&gt;[]` \u662f\u5408\u6cd5\u7684\uff0c\u4ec5\u4ec5\u662f\u4e0d\u80fd\u7528 Pair&lt;String, String&gt;[10] \u521d\u59cb\u5316\u8fd9\u4e2a\u53d8\u91cf\u3002\n</code></pre></p> </li> <li> <p>\u53d8\u957f\u53c2\u6570\u4e0e\u6cdb\u578b\u5171\u7528\u8b66\u544a</p> <p>\u4f1a\u5bfc\u81f4\u5806\u6c61\u67d3\uff0c\u56e0\u6b64\u4f1a\u5f97\u5230\u4e00\u4e2a\u8b66\u544a\u3002</p> <pre><code>public static &lt;T&gt; T getMiddle(T... a) //\u8b66\u544a\n{return a[a.length / 2];}\n</code></pre> <p>\u53ef\u4ee5\u6539\u6210\u6570\u7ec4\uff1a <pre><code>public static &lt;T&gt; T getMiddle(T[] a)\n{return a[a.length / 2];}\n</code></pre></p> </li> <li> <p>\u4e0d\u80fd\u5b9e\u4f8b\u5316\u7c7b\u578b\u53d8\u91cf</p> <p>\u4e0d\u80fd\u5728\u7c7b\u4f3c <code>new T(...)</code> \u7684\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u7c7b\u578b\u53d8\u91cf <pre><code>public Pair() {first = new T(); second = new U();} // \u9519\u8bef\n</code></pre></p> <p>\u8fd9\u540c\u6837\u662f\u56e0\u4e3a\u7c7b\u578b\u88ab\u64e6\u9664\u540e <code>T()</code> \u5c06\u53d8\u6210 <code>Object()</code>\u3002</p> <p>\u89e3\u51b3\u7684\u529e\u6cd5\u662f\u8ba9\u8c03\u7528\u8005\u63d0\u4f9b\u4e00\u4e2a\u6784\u9020\u5668\u8868\u8fbe\u5f0f\u3002</p> </li> <li> <p>\u4e0d\u80fd\u6784\u9020\u6cdb\u578b\u6570\u7ec4\u3002</p> <pre><code>T[] mm = new T[2]; // \u9519\u8bef\n</code></pre> </li> <li> <p>\u4e0d\u80fd\u4f7f\u7528\u5e26\u6709\u7c7b\u578b\u53d8\u91cf\u7684\u9759\u6001\u5b57\u6bb5\u548c\u65b9\u6cd5\u3002</p> <pre><code>public class Singleton&lt;T&gt; {\nprivate static T singleInstance; // \u9519\u8bef\n\npublic static T getSingleInstance() // \u9519\u8bef\n{}\n}\n</code></pre> </li> <li> <p>\u80fd\u4e0d\u80fd\u629b\u51fa\u6216\u6355\u83b7\u6cdb\u578b\u7c7b\u7684\u5b9e\u4f8b\u3002</p> <p>\u6cdb\u578b\u7c7b\u6269\u5c55 <code>Throwable</code> \u662f\u4e0d\u5408\u6cd5\u7684\u3002</p> </li> </ol>"},{"location":"dev/java/CoreJava/ch08/#_5","title":"\u6cdb\u578b\u7c7b\u578b\u7684\u7ee7\u627f\u89c4\u5219","text":"<ul> <li>\u65e0\u8bba <code>S</code> \u548c <code>T</code> \u6709\u4ec0\u4e48\u5173\u7cfb\uff0c<code>Pair&lt;T, T&gt;</code> \u548c <code>Pair&lt;S, S&gt;</code> \u4e4b\u95f4\u90fd\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\u3002</li> <li>\u6cdb\u578b\u7c7b\u53ef\u4ee5\u6269\u5c55\u6216\u5b9e\u73b0\u5176\u4ed6\u7684\u6cdb\u578b\u7c7b\u3002\u4f8b\u5982 <code>ArrayList&lt;T&gt;</code> \u5b9e\u73b0\u4e86 <code>List&lt;T&gt;</code> \u63a5\u53e3\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2a <code>ArrayList&lt;Manager&gt;</code> \u53ef\u4ee5\u8f6c\u6362\u4e3a\u4e00\u4e2a <code>List&lt;Manger&gt;</code>\uff0c\u4f46\u662f\uff0c\u5373\u4f7f <code>Manager</code> \u662f <code>Employee</code> \u7684\u5b50\u7c7b\uff0c\u4f46 <code>ArrayList&lt;Manager&gt;</code> \u4e5f\u4e0d\u662f\u4e00\u4e2a <code>ArrayList&lt;Employee&gt;</code> \u6216\u8005 <code>List&lt;Employee&gt;</code>\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch08/#_6","title":"\u901a\u914d\u7b26\u7c7b\u578b","text":"<ul> <li><code>? extend Employee</code> \u8868\u793a <code>Employee</code> \u6216 <code>Employee</code> \u7684\u5b50\u7c7b\u3002\u5728\u7c7b\u578b\u53c2\u6570\u4e2d\u4f7f\u7528 <code>? extend</code> \u7684\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528\u5176\u4e2d\u7684\u8bbf\u95ee\u5668\u65b9\u6cd5\uff0c\u4f46\u4e0d\u80fd\u4f7f\u7528\u66f4\u6539\u5668\u65b9\u6cd5\u3002</li> <li><code>? super Manager</code> \u8868\u793a <code>Manager</code> \u6216 <code>Manager</code> \u7684\u5b50\u7c7b\u3002\u5728\u7c7b\u578b\u53c2\u6570\u4e2d\u4f7f\u7528 <code>? super</code> \u7684\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528\u5176\u4e2d\u7684\u66f4\u6539\u5668\u65b9\u6cd5\uff0c\u4f46\u4e0d\u80fd\u4f7f\u7528\u8bbf\u95ee\u5668\u65b9\u6cd5\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch09/","title":"\u7b2c9\u7ae0 \u96c6\u5408","text":""},{"location":"dev/java/CoreJava/ch09/#_1","title":"\u96c6\u5408\u6846\u67b6","text":""},{"location":"dev/java/CoreJava/ch09/#_2","title":"\u63a5\u53e3\u4e4b\u95f4\u7684\u5173\u7cfb","text":""},{"location":"dev/java/CoreJava/ch09/#_3","title":"\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb","text":""},{"location":"dev/java/CoreJava/ch09/#_4","title":"\u5177\u4f53\u96c6\u5408","text":"<code>Java</code> \u96c6\u5408\u7c7b\u578b \u5e95\u5c42\u6570\u636e\u7ed3\u6784 <code>ArrayList</code> \u52a8\u6001\u6570\u7ec4 <code>Linkedlist</code> \u53cc\u5411\u94fe\u8868 <code>ArrayDeque</code> \u53cc\u7aef\u961f\u5217\uff08\u5faa\u73af\u6570\u7ec4\u5b9e\u73b0\uff09 <code>HashSet</code> \u54c8\u5e0c\u96c6\u5408 <code>TreeSet</code> \u7ea2\u9ed1\u6811 <code>EnumSet</code> \u5305\u542b\u679a\u4e3e\u7c7b\u578b\u503c\u7684\u96c6\u5408 <code>LinkedHashSet</code> \u54c8\u5e0c\u96c6\u5408\uff08\u94fe\u8868\u5b9e\u73b0\uff09 <code>PriorityQueeu</code> \u4f18\u5148\u961f\u5217 <code>HashMap</code> \u54c8\u5e0c\u8868 <code>TreeMap</code> \u7ea2\u9ed1\u6811 <code>EnumMap</code> \u952e\u53ea\u5c5e\u4e8e\u679a\u4e3e\u7c7b\u578b\u503c\u7684\u8868 <code>LinkedHashMap</code> \u54c8\u5e0c\u8868\uff08\u8282\u70b9\u95f4\u94fe\u8868\u8fde\u63a5\uff0c\u53ef\u4ee5\u8bb0\u4f4f\u63d2\u5165\u987a\u5e8f\uff09 <code>WeakhashMap</code> \u54c8\u5e0c\u8868\uff08\u503c\u6ca1\u6709\u5916\u90e8\u5f3a\u5f15\u7528\u65f6\u4f1a\u88ab\u5783\u573e\u56de\u6536\uff09 <code>IdentityHashMap</code> \u54c8\u5e0c\u8868\uff08\u4f7f\u7528 <code>==</code> \u6bd4\u8f83\u952e\uff09"},{"location":"dev/java/CoreJava/ch09/#_5","title":"\u94fe\u8868","text":""},{"location":"dev/java/CoreJava/ch09/#iterator","title":"\u901a\u7528\u8fed\u4ee3\u5668\uff1aIterator","text":"<ul> <li>\u53ea\u6709\u5b9e\u73b0\u4e86 <code>Iterable</code> \u63a5\u53e3\u7684\u7c7b\u624d\u80fd <code>for-each</code> \u904d\u5386\uff0c<code>Iterable</code> \u63a5\u53e3\u6709 <code>iterator()</code> \u65b9\u6cd5\u8fd4\u56de\u8fed\u4ee3\u5668\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u7528\u8fed\u4ee3\u5668\u904d\u5386\u3002</li> <li><code>LinkedList</code> \u548c <code>ArrayList</code> \u7684 <code>Iterator</code> \u4f4d\u4e8e\u5143\u7d20\u4e4b\u95f4\u7684 \u95f4\u9699 (\u5305\u62ec\u4e24\u7aef\u5143\u7d20\u7684\u5de6\u53f3)\u3002</li> <li><code>hasNext()</code> \u65b9\u6cd5\u8fd4\u56de\u662f\u5426\u6709\u4e0b\u4e00\u4e2a\u95f4\u9699\u3002</li> <li><code>next()</code> \u65b9\u6cd5\u4f1a\u8fd4\u56de\u5f53\u524d\u8fed\u4ee3\u5668\u7684\u95f4\u9699\u53f3\u4fa7\u7684\u5143\u7d20\u7684\u503c\uff0c\u540c\u65f6\u5c06\u8fed\u4ee3\u5668\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u95f4\u9699\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch09/#listiterator","title":"\u94fe\u8868\u4e13\u7528\u8fed\u4ee3\u5668\uff1aListIterator","text":"<ul> <li><code>ListIterator</code> \u7ee7\u627f\u81ea <code>Iterator</code>\uff0c\u57fa\u4e8e\u53cc\u5411\u94fe\u8868\u7684\u7279\u6027\uff0c\u6269\u5c55 <code>Iterator</code> \u6ca1\u6709\u5b9e\u73b0\u7684\u529f\u80fd\u3002</li> <li><code>hasPrevious</code>  \u65b9\u6cd5\u8fd4\u56de\u662f\u5426\u6709\u4e0a\u4e00\u4e2a\u95f4\u9699\u3002</li> <li><code>previous()</code> \u65b9\u6cd5\u4f1a\u8fd4\u56de\u5f53\u524d\u8fed\u4ee3\u5668\u7684\u95f4\u9699\u5de6\u4fa7\u7684\u5143\u7d20\u7684\u503c\uff0c\u540c\u65f6\u5c06\u8fed\u4ee3\u5668\u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a\u95f4\u9699\u3002</li> <li><code>set()</code> \u65b9\u6cd5\u53ef\u4ee5\u4fee\u6539 <code>next</code> \u6216 <code>previous</code> \u8bbf\u95ee\u7684\u4e0a\u4e00\u4e2a\u5143\u7d20\u3002</li> <li><code>ListIterator</code> \u652f\u6301\u67e5\u8be2\u5f53\u524d\u8fed\u4ee3\u5668\u7684\u95f4\u9699\u5de6\u53f3\u4e24\u4fa7\u5143\u7d20\u7684\u7d22\u5f15\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch09/#_6","title":"\u52a8\u6001\u6570\u7ec4","text":"<p><code>ArrayList</code> \u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u5982\u679c\u8981\u7ebf\u7a0b\u5b89\u5168\u7684\u52a8\u6001\u6570\u7ec4\uff0c\u7528 <code>Vector</code></p>"},{"location":"dev/java/CoreJava/ch09/#_7","title":"\u54c8\u5e0c\u8868","text":"<p>\u54c8\u5e0c\u8868\u7684 <code>K</code> \u5fc5\u987b\u91cd\u5199 <code>hashCode()</code> \u65b9\u6cd5\u548c <code>equals()</code> \u65b9\u6cd5\u3002\u6700\u597d\u52a0\u4e0a <code>@override</code> \u6807\u8bb0\u63d0\u9192\u81ea\u5df1\u3002</p> <ul> <li>HashMap\u6e90\u7801\u5206\u6790</li> </ul>"},{"location":"dev/java/CoreJava/ch09/#_8","title":"\u7ea2\u9ed1\u6811","text":"<p>\u4f7f\u7528\u7ea2\u9ed1\u6811 <code>TreeSet</code> \u548c <code>TeeeMap</code> \u7684 <code>K</code> \u5fc5\u987b\u5b9e\u73b0 <code>Comparable&lt;T&gt;</code> \u63a5\u53e3\uff0c\u6216\u8005 <code>Comparator</code> \u63a5\u53e3\u3002</p>"},{"location":"dev/java/CoreJava/ch09/#_9","title":"\u961f\u5217","text":"<p>\u961f\u5217 <code>Queue&lt;T&gt;</code> \u548c\u53cc\u7aef\u961f\u5217 <code>Deque&lt;T&gt;</code> \u662f\u63a5\u53e3\uff0c<code>ArrayDeQue&lt;T&gt;</code> \u548c <code>LinkedList&lt;T&gt;</code> \u90fd\u5b9e\u73b0\u4e86\u8fd9\u4e24\u4e2a\u63a5\u53e3\uff0c\u5176\u4e2d <code>ArrayDeque&lt;T&gt;</code> \u662f\u57fa\u4e8e\u5faa\u73af\u961f\u5217\u7684\u5b9e\u73b0\uff0c<code>LinkedList&lt;T&gt;</code> \u662f\u57fa\u4e8e\u53cc\u5411\u94fe\u8868\u7684\u5b9e\u73b0\u3002 </p> <p>\u961f\u5217\u7684\u65b9\u6cd5\u53ca\u5176\u6bd4\u8f83\uff1a</p> \u65b9\u6cd5\u540d \u63cf\u8ff0 \u5f02\u5e38\u884c\u4e3a <code>boolean add(E)</code> \u5c06\u5143\u7d20 <code>E</code> \u5165\u961f \u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38 <code>E remove()</code> \u5c06\u961f\u5934\u5143\u7d20\u51fa\u961f\u5e76\u8fd4\u56de \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38 <code>E element()</code> \u8fd4\u56de\u961f\u5934\u5143\u7d20 \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38 <code>boolean offer(E)</code> \u5c06\u5143\u7d20 <code>E</code> \u5165\u961f \u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u4f1a\u8fd4\u56de <code>false</code> <code>E poll()</code> \u5c06\u961f\u5934\u5143\u7d20\u51fa\u961f\u5e76\u8fd4\u56de \u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u4f1a\u8fd4\u56de <code>null</code> <code>E peek()</code> \u8fd4\u56de\u961f\u5934\u5143\u7d20 \u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u4f1a\u8fd4\u56de <code>null</code>"},{"location":"dev/java/CoreJava/ch09/#_10","title":"\u4f18\u5148\u961f\u5217","text":"<p>\u548c\u7ea2\u9ed1\u6811\u4e00\u6837\uff0c \u5fc5\u987b\u5b9e\u73b0 <code>Comparable&lt;T&gt;</code> \u63a5\u53e3\uff0c\u6216\u8005 <code>Comparator</code> \u63a5\u53e3\u3002</p>"},{"location":"dev/java/CoreJava/ch09/#treemap-hashmap","title":"TreeMap \u548c HashMap \u8865\u5145","text":"<ul> <li><code>Java</code> \u7684\u7ea2\u9ed1\u6811\u8fed\u4ee3\u5668\u4e0d\u592a\u7075\u6d3b\uff0c\u4e0d\u80fd\u50cf <code>C++ STL</code> \u90a3\u6837\u4e8c\u5206\u51fa\u8fed\u4ee3\u5668\uff0c\u53ea\u80fd\u4e8c\u5206\u51fa\u952e\u503c\u5bf9\u3002\u800c\u4e14\u5728\u8fed\u4ee3\u4e4b\u524d\u5c31\u8981\u60f3\u6e05\u695a\u5230\u5e95\u662f\u53ea\u8981\u503c\u8fd8\u662f\u952e\u503c\u90fd\u8981\u3002</li> <li>\u4e24\u79cd <code>Map</code> \u90fd\u4e0d\u80fd\u7528\u8303\u56f4 <code>for</code>\uff0c\u53ef\u4ee5\u7528 <code>forEach()</code> \u65b9\u6cd5\uff0c\u53c2\u6570\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u4f8b\u5982 <code>map.forEach((k, v) -&gt; System.out.println(\"key=\" + k + \", value=\" + v));</code> \u6216\u8005\u5f97\u5230\u89c6\u56fe\u518d\u5f00\u59cb\u679a\u4e3e\u3002</li> <li>\u4e0d\u80fd\u50cf <code>C++</code> \u4e2d <code>map[key]++</code>\uff0c\u8fd9\u79cd\u60c5\u51b5\u8981\u7528 <code>merge()</code> \u65b9\u6cd5\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch09/#_11","title":"\u7b97\u6cd5","text":""},{"location":"dev/java/CoreJava/ch09/#_12","title":"\u6392\u5e8f","text":"<p><code>Arrays.sort()</code> \u7528\u4e8e\u5bf9\u6570\u7ec4\u6392\u5e8f\uff0c\u800c\u5982\u679c\u8981\u5bf9 <code>ArrayList</code> \u6216\u8005 <code>LinkedList</code> \u6392\u5e8f\uff0c\u5219\u9700\u8981\u8c03\u7528\u5bf9\u8c61\u7684 <code>sort()</code> \u65b9\u6cd5\u3002</p> <p><code>sort()</code> \u65b9\u6cd5\u662f\u7a33\u5b9a\u6392\u5e8f\u3002</p> <p>\u524d\u7f6e\u4ee3\u7801\uff1a\u4e00\u4e2a\u7b80\u5355\u7684 <code>Pair</code> \u6cdb\u578b\u7c7b</p> <pre><code>class Pair&lt;F extends Comparable&lt;F&gt;, S extends Comparable&lt;S&gt;&gt; implements Comparable&lt;Pair&lt;F, S&gt;&gt; {\nprivate F first;\nprivate S second;\n\npublic Pair(F f, S s) {first = f; second = s;}\n\npublic F getFirst() {return first;}\n\npublic S getSecond() {return second;}\n\npublic void setFirst(F f) {first = f;}\n\npublic void setSecond(S s) {second = s;}\n\n@Override\npublic int compareTo(Pair&lt;F, S&gt; o) {\nint d = first.compareTo(o.first);\nreturn d != 0 ? d : second.compareTo(o.second);\n}\n\n@Override\npublic String toString() {return \"[\" + first + \", \" + second + \"]\";}\n}\npublic class Main {\npublic static void main(String[] args) {\nArrayList&lt;Pair&lt;Integer, Integer&gt;&gt; a = new ArrayList&lt;&gt;();\n... // \u7ed9 a \u6dfb\u52a0\u6570\u636e\n}\n}\n</code></pre> <p>\u4e0b\u9762\u5f00\u59cb\u4ecb\u7ecd <code>a.sort()</code> \u65b9\u6cd5\uff0c\u51fd\u6570\u53c2\u6570\u63a5\u53d7\u4e00\u4e2a <code>Comparator</code> \u63a5\u53e3\uff1a</p> <pre><code>// \u4e0d\u8981\u7528 a.sort(null), \u7528 Comparator.naturalOrder() \u53ef\u4ee5\u63d0\u9192\u662f\u5426\u5b9e\u73b0\u4e86 Comparable \u63a5\u53e3\na.sort(Comparator.naturalOrder()); // \u7528 compareTo() \u6bd4\u8f83\na.sort(Comparator.reverseOrder()); // \u9006\u5e8f\na.sort(Comparator.comparing(Pair::getSecond)); // \u7528 getSecond() \u6bd4\u8f83\na.sort(Comparator.comparing(Pair::getSecond, Comparator.reverseOrder())); // \u7528 getSecond() \u6bd4\u8f83\uff0c\u9006\u5e8f\na.sort(Comparator.comparing(Pair&lt;Integer, Integer&gt;::getSecond, Comparator.reverseOrder())\n.thenComparing(Pair::getFirst)); // \u5148\u6bd4\u8f83 getSecond() \u964d\u5e8f\uff0c\u5982\u679c\u76f8\u540c\u5c31\u6bd4\u8f83 getFirst() \u5347\u5e8f \u6ce8\u610f\u8fd9\u79cd\u60c5\u51b5\u8981\u6ce8\u660e Pair\u7c7b\u578b\n\na.sort(Comparator.comparing(p -&gt; p.getFirst() + p.getSecond())); // \u4f7f\u7528 lambda \u8868\u8fbe\u5f0f\u6bd4\u8f83 getFirst() + getSecond()\n</code></pre>"},{"location":"dev/java/CoreJava/ch09/#_13","title":"\u6d17\u724c","text":"<p>\u4f7f\u7528 <code>Collections.shuffle()</code> \u5bf9 <code>ArrayList</code> \u7c7b\u578b\u968f\u673a\u6253\u4e71\uff1a <pre><code>var numbers = new ArrayList&lt;Integer&gt;();\nfor (int i = 1; i &lt;= 49; i++)\nnumbers.add(i);\nCollections.shuffle(numbers);\n</code></pre></p>"},{"location":"dev/java/CoreJava/ch09/#_14","title":"\u4e8c\u5206\u67e5\u627e","text":"<p><code>Collections.binarySearch()</code> \u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u51fa\u73b0\u5728\u8868\u4e2d\uff1a</p> <pre><code>var numbers = new ArrayList&lt;Integer&gt;();\nfor (int i = 0; i &lt;= 13; i++)\nnumbers.add(i);\nfor (int i = 15; i &lt;= 49; i++)\nnumbers.add(i);\nint pos = Collections.binarySearch(numbers, 14) // pos = -14\nSystem.out.println(pos);\n</code></pre> <p>\u5982\u679c\u8fd4\u56de\u8d1f\u6570\u8868\u793a\u67e5\u8be2\u5931\u8d25\uff0c<code>-pos-1</code> \u8868\u793a\u8fd9\u4e2a\u5143\u7d20\u5e94\u8be5\u63d2\u5165\u7684\u4f4d\u7f6e\u3002</p> <p>\u5982\u679c\u8fd4\u56de\u8bc1\u4e66\u8868\u793a\u67e5\u8be2\u6210\u529f\uff0c<code>pos</code> \u8868\u793a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002</p> <p><code>Java</code> \u4e2d\u6ca1\u6709\u7c7b\u4f3c <code>C++</code> \u7684 <code>lower+bound()</code> \u65b9\u6cd5\u3002</p>"},{"location":"dev/java/CoreJava/ch12/","title":"Ch12","text":""},{"location":"dev/java/CoreJava/ch12/#_1","title":"\u4f7f\u7528\u591a\u7ebf\u7a0b","text":"<p>\u7ebf\u7a0b\u7c7b\u578b\u4e3a <code>Thread()</code>\uff0c\u6784\u9020\u5668\u63a5\u53d7\u4e00\u4e2a <code>Runnable</code> \u63a5\u53e3\u3002</p> <p><code>Runnable</code> \u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u5176\u4e2d\u7684 <code>void run()</code> \u65b9\u6cd5\u3002</p> <p>\u7ebf\u7a0b\u5efa\u7acb\u540e\uff0c\u8c03\u7528 <code>start()</code> \u65b9\u6cd5\u8fd0\u884c\u3002</p>"},{"location":"dev/java/CoreJava/ch12/#_2","title":"\u7ebf\u7a0b\u72b6\u6001","text":"<p>\u53ef\u4ee5\u8fd0\u884c <code>getState()</code> \u65b9\u6cd5\u83b7\u5f97\u7ebf\u7a0b\u7684\u5f53\u524d\u72b6\u6001\u3002</p> <ul> <li>New\uff08\u65b0\u5efa\uff09\uff1a\u4f7f\u7528 <code>new</code> \u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u65f6\uff0c\u8fd9\u4e2a\u7ebf\u7a0b\u8fd8\u6ca1\u6709\u5f00\u59cb\u8fd0\u884c\u3002</li> <li>Runnable\uff08\u53ef\u8fd0\u884c\uff09\uff1a\u8c03\u7528 <code>start</code> \u65b9\u6cd5\u4e4b\u540e\uff0c\u7ebf\u7a0b\u5904\u4e8e \u53ef\u8fd0\u884c \u72b6\u6001\u3002\u4e00\u4e2a \u53ef\u8fd0\u884c \u7684\u7ebf\u7a0b\u53ef\u80fd\u6b63\u5728\u8fd0\u884c\u4e5f\u53ef\u80fd\u6ca1\u6709\u8fd0\u884c\u3002</li> <li>Blocked\uff08\u963b\u585e\uff09\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u53d6\u4e00\u4e2a\u5185\u90e8\u7684\u5bf9\u8c61\u9501\uff0c\u800c\u8fd9\u4e2a\u9501\u76ee\u524d\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5360\u6709\uff0c\u6b64\u65f6\uff0c\u8be5\u7ebf\u7a0b\u5c31\u4f1a\u88ab \u963b\u585e\u3002</li> <li>Waiting\uff08\u7b49\u5f85\uff09\uff1a\u5f53\u7ebf\u7a0b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u5ea6\u5668\u51fa\u73b0\u4e00\u4e2a\u6761\u4ef6\u65f6\uff0c\u4f1a\u8fdb\u5165 \u7b49\u5f85 \u72b6\u6001</li> <li>Timed waiting\uff08\u8ba1\u65f6\u7b49\u5f85\uff09\uff1a\u4e00\u4e9b\u65b9\u6cd5\u6709\u8d85\u65f6\u53c2\u6570\uff0c\u4f1a\u8ba9\u7ebf\u7a0b\u8fdb\u5165 \u8ba1\u65f6\u7b49\u5f85 \u72b6\u6001\u3002</li> <li>Terminated\uff08\u7ec8\u6b62\uff09\uff1a\u5982\u679c <code>run</code>\u65b9\u6cd5\u6b63\u5e38\u9000\u51fa\uff0c\u4f1a\u5bfc\u81f4\u7ebf\u7a0b \u81ea\u7136\u7ec8\u6b62\u3002\u5982\u679c\u5728\u8fd0\u884c\u671f\u95f4\u6709\u4e00\u4e2a\u6ca1\u6709\u6355\u83b7\u7684\u5f02\u5e38\uff0c\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u610f\u5916\u7ec8\u6b62\u3002</li> </ul>"},{"location":"dev/java/SourceCode/HashMap/","title":"HashMap\u6e90\u7801\u5206\u6790","text":""},{"location":"dev/java/SourceCode/HashMap/#_1","title":"\u672f\u8bed\u8bf4\u660e","text":"\u672f\u8bed \u8bf4\u660e \u8282\u70b9 \u54c8\u5e0c\u8868\u4e2d\u7684\u4e00\u5bf9 <code>&lt;key, value&gt;</code> \u54c8\u5e0c\u503c \u7528 <code>hash(key)</code> \u8868\u793a <code>key</code> \u7684\u54c8\u5e0c\u503c\u4ee4<code>int h = key.hashCode();</code> \u5219 <code>hash(key) = h ^ (h &gt;&gt;&gt; 16)</code> \u6876 \u76f8\u540c\u54c8\u5e0c\u503c\u7684\u8282\u70b9\u653e\u5728\u540c\u4e00\u4e2a\u6876\u4e2d\u3002 \u6876\u6570\u7ec4 \u591a\u4e2a\u6876\u7528\u6570\u7ec4\u8868\u793a\uff1a<code>Node&lt;K,V&gt;[] table</code> \u6876\u4e0b\u6807 \u8282\u70b9 <code>&lt;key, value&gt;</code> \u7684\u6876\u4e0b\u6807\u4e3a\uff1a <code>hash(key) % table.length</code> \u5bb9\u91cf \u6876\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u8868\u7684\u5927\u5c0f \u8868\u4e2d\u5b58\u50a8\u7684\u8282\u70b9\u6570\u91cf \u88c5\u586b\u56e0\u5b50 \u56fa\u5b9a\u503c\uff0c\u7528\u4e8e\u8ba1\u7b97\u6269\u5bb9\u9608\u503c\u3002\u6269\u5bb9\u9608\u503c = \u88c5\u586b\u56e0\u5b50 * \u5bb9\u91cf \u6269\u5bb9\u9608\u503c \u5982\u679c\u8868\u7684\u5927\u5c0f\u8d85\u8fc7\u4e86\u6269\u5bb9\u9608\u503c\uff0c\u5c31\u8fdb\u884c\u6269\u5bb9\u3002 \u6269\u5bb9 \u6269\u5145\u6876\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u6269\u5bb9\u4f1a\u5bfc\u81f4\u8282\u70b9\u7684\u4f4d\u7f6e\u53d1\u751f\u6539\u53d8\u3002"},{"location":"dev/java/SourceCode/HashMap/#_2","title":"\u7701\u6d41\u7248","text":"<ul> <li> <p>\u5e95\u5c42\u6570\u636e\u7ed3\u6784\uff1a\u6570\u7ec4 + \u94fe\u8868/\u7ea2\u9ed1\u6811</p> </li> <li> <p>\u9ed8\u8ba4\u88c5\u586b\u56e0\u5b50\uff1a\\(0.75\\)</p> </li> <li> <p>\u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\uff1a\\(16\\)</p> </li> <li> <p>\u94fe\u8868\u7ec4\u7ec7\u6210\u7ea2\u9ed1\u6811\u7684\u6761\u4ef6\uff1a\u5bb9\u91cf \\(\\ge 64\\) \u4e14 \u94fe\u8868\u957f\u5ea6 \\(\\ge 8\\)</p> </li> <li> <p>\u6269\u5bb9\u673a\u5236\uff1a\\(2\\) \u500d\u6269\u5bb9\uff0c\u4f1a\u5c06\u4e00\u4e2a\u6876\u7684\u8282\u70b9\u5206\u5230\u4e24\u4e2a\u6876\u4e2d\uff08\u8bc1\u660e\u89c1 \u524d\u7f6e\u77e5\u8bc6 \uff09</p> </li> <li> <p>\u6269\u5bb9\u6761\u4ef6\uff1a</p> <ul> <li> <p>\u6dfb\u52a0\u5143\u7d20\u65f6\u8868\u4e3a\u7a7a\u3002</p> </li> <li> <p>\u6dfb\u52a0\u5143\u7d20\u540e \u94fe\u8868\u957f\u5ea6 \\(\\ge 8\\) \u4e14 \u5bb9\u91cf \\(&lt; 64\\)</p> </li> <li>\u6dfb\u52a0\u5143\u7d20\u540e \u8868\u5927\u5c0f \\(&gt;\\) \u6269\u5bb9\u9608\u503c</li> </ul> </li> <li> <p>\u7ea2\u9ed1\u6811\u9000\u5316\u6210\u94fe\u8868\u7684\u6761\u4ef6\uff1a\u5728\u6269\u5bb9\u65f6\uff0c\u7ea2\u9ed1\u6811\u5206\u6210 \\(2\\) \u4e2a\u5b50\u94fe\uff0c\u5982\u679c \u5b50\u94fe\u957f\u5ea6 \\(\\le 6\\)\uff0c\u5219\u9000\u5316\u6210\u94fe\u8868\u3002\u5426\u5219\u4fdd\u6301\u7ea2\u9ed1\u6811\u3002</p> </li> </ul>"},{"location":"dev/java/SourceCode/HashMap/#_3","title":"\u5b57\u6bb5\u8bf4\u660e","text":""},{"location":"dev/java/SourceCode/HashMap/#_4","title":"\u5e38\u91cf\u5b57\u6bb5","text":"<pre><code>public class HashMap&lt;K,V&gt; extends AbstractMap&lt;K,V&gt;\n=implements Map&lt;K,V&gt;, Cloneable, Serializable {\nstatic final float DEFAULT_LOAD_FACTOR = 0.75f; // \u9ed8\u8ba4\u88c5\u586b\u56e0\u5b50\nstatic final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // \u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\nstatic final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30; // \u6700\u5927\u5bb9\u91cf\nstatic final int TREEIFY_THRESHOLD = 8; // \u94fe\u8868\u957f\u5ea6\u5927\u4e8e 8 \u65f6\u6269\u5bb9\u6216\u5c06\u94fe\u8868\u7ec4\u7ec7\u6210\u7ea2\u9ed1\u6811\nstatic final int MIN_TREEIFY_CAPACITY = 64; // \u5bb9\u91cf\u5c0f\u4e8e 64 \u5c31\u6269\u5bb9\uff0c\u5426\u5219\u7ec4\u7ec7\u6210\u7ea2\u9ed1\u6811\nstatic final int UNTREEIFY_THRESHOLD = 6; // \u7ea2\u9ed1\u6811\u5206\u88c2\u7684\u5b50\u94fe\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e 6 \u5219\u9000\u5316\u6210\u94fe\u8868\n}\n</code></pre>"},{"location":"dev/java/SourceCode/HashMap/#_5","title":"\u53d8\u91cf\u5b57\u6bb5","text":"<pre><code>public class HashMap&lt;K,V&gt; extends AbstractMap&lt;K,V&gt;\n=implements Map&lt;K,V&gt;, Cloneable, Serializable {\ntransient Node&lt;K,V&gt;[] table; // \u6876\uff0c\u7528\u6570\u7ec4\u8868\u793a\nfinal float loadFactor; // \u88c5\u586b\u56e0\u5b50\nint threshold; // \u6570\u7ec4\u672a\u5206\u914d\u65f6 threshold \u8868\u793a\u521d\u59cb\u5bb9\u91cf\uff0c\u6570\u7ec4\u7b2c\u4e00\u6b21\u5206\u914d\u540e\uff0cthreshold \u8868\u793a\u6269\u5bb9\u9608\u503c\nint size; // \u8868\u5927\u5c0f\n}\n</code></pre>"},{"location":"dev/java/SourceCode/HashMap/#_6","title":"\u6e90\u7801\u5206\u6790","text":""},{"location":"dev/java/SourceCode/HashMap/#_7","title":"\u6784\u9020\u5668","text":"<p>\u53ef\u4ee5\u6307\u5b9a\u7684\u91cf\u53ea\u6709 2 \u4e2a\uff1a\u521d\u59cb\u5bb9\u91cf\u548c\u88c5\u8f7d\u56e0\u5b50\u3002</p> <ul> <li><code>initialCapacity</code> \uff1a\u8868\u793a\u521d\u59cb\u5bb9\u91cf\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u4e3a \\(16\\)</li> <li><code>loadFactor</code> \uff1a\u8868\u793a\u88c5\u586b\u56e0\u5b50\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u4e3a \\(0.75\\)</li> </ul> <pre><code>public HashMap(int initialCapacity, float loadFactor) {\nif (initialCapacity &lt; 0)\nthrow new IllegalArgumentException(\"Illegal initial capacity: \" +\ninitialCapacity);\nif (initialCapacity &gt; MAXIMUM_CAPACITY)\ninitialCapacity = MAXIMUM_CAPACITY;\nif (loadFactor &lt;= 0 || Float.isNaN(loadFactor))\nthrow new IllegalArgumentException(\"Illegal load factor: \" +\nloadFactor);\n// \u524d\u9762\u90fd\u662f\u53c2\u6570\u5224\u65ad \u4e0b\u9762\u8fdb\u884c\u8d4b\u503c\nthis.loadFactor = loadFactor;\nthis.threshold = tableSizeFor(initialCapacity); // \u521d\u59cb\u5bb9\u91cf\u4e0b\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8einitialCapacity\u7684 2 \u7684\u5e42\n}\n</code></pre>"},{"location":"dev/java/SourceCode/HashMap/#_8","title":"\u6269\u5bb9","text":"<p>\u7531\u4e0a\u4e00\u8282\u53ef\u77e5\uff0c\u6dfb\u52a0\u5143\u7d20\u65f6\u4e09\u79cd\u60c5\u51b5\u4f1a\u5bfc\u81f4\u6269\u5bb9\uff1a</p> <ul> <li> <p>\u6dfb\u52a0\u5143\u7d20\u65f6\u8868\u4e3a\u7a7a\u3002</p> </li> <li> <p>\u6dfb\u52a0\u5143\u7d20\u540e \u94fe\u8868\u957f\u5ea6 \\(\\ge 8\\) \u4e14 \u5bb9\u91cf \\(&lt; 64\\)</p> </li> <li>\u6dfb\u52a0\u5143\u7d20\u540e \u8868\u5927\u5c0f \\(&gt;\\) \u6269\u5bb9\u9608\u503c</li> </ul>"},{"location":"dev/java/SourceCode/HashMap/#_9","title":"\u524d\u7f6e\u77e5\u8bc6","text":"<p><code>HashMap</code> \u7684\u6269\u5bb9\u662f \\(2\\) \u500d\u6269\u5bb9\uff0c\u5047\u8bbe\u5f53\u524d\u5bb9\u91cf\u4e3a \\(C\\)\uff0c\u5bf9\u4e8e\u7b2c \\(j\\) \u4e2a\u6876\uff0c\u5176\u4e2d\u7684\u8282\u70b9\u6ee1\u8db3\uff1a</p> \\[ hash(key) \\equiv j \\bmod C \\] <p>\u8fd9\u8868\u660e\uff1a</p> \\[ hash(key) = j + KC \\] <p>\u8003\u8651 \\(K\\) \u7684\u5947\u5076\u6027\uff0c\u4e0d\u96be\u53d1\u73b0\uff1a</p> \\[ \\left\\{\\begin{matrix}  hash(key) &amp; \\equiv&amp; j &amp;     \\bmod 2C, &amp; K \\% 2 = 0  \\\\   hash(key) &amp; \\equiv&amp; j + C &amp; \\bmod 2C, &amp; K \\% 2 = 1 \\end{matrix}\\right. \\] <p>\u7ed3\u8bba\uff1a\u5728\u6269\u5bb9\u540e\uff0c\u7b2c \\(j\\) \u4e2a\u6876\u7684\u8282\u70b9\u8981\u4e48\u4ecd\u7136\u5728\u7b2c \\(j\\) \u4e2a\u6876\uff0c\u8981\u4e48\u5728\u7b2c \\(j + C\\) \u4e2a\u6876\u3002</p> <p>\u5728\u540e\u9762\u7684\u6e90\u7801\u4e2d\uff0c\u79f0\u7b2c \\(j\\) \u4e2a\u6876\u7684\u94fe\u4e3a <code>lo</code>\uff0c\u7b2c \\(j+C\\) \u4e2a\u6876\u4e3a <code>hi</code></p>"},{"location":"dev/java/SourceCode/HashMap/#_10","title":"\u6e90\u7801\u5206\u6790","text":"<pre><code>final Node&lt;K,V&gt;[] resize() {\n// oldTab \u6269\u5bb9\u524d\u6876\u6570\u7ec4\n// oldCap \u6269\u5bb9\u524d\u5bb9\u91cf\n// oldThr \u6269\u5bb9\u524d\u88c5\u586b\u56e0\u5b50(\u5982\u679c\u5bb9\u91cf\u4e3a0\uff0c\u5219 oldThr \u8868\u793a\u521d\u59cb\u521d\u59cb\u5bb9\u91cf)\n// newCap \u6269\u5bb9\u540e\u5bb9\u91cf\n// newThr \u6269\u5bb9\u540e\u88c5\u586b\u56e0\u5b50\nNode&lt;K,V&gt;[] oldTab = table;\nint oldCap = (oldTab == null) ? 0 : oldTab.length;\nint oldThr = threshold;\nint newCap, newThr = 0;\nif (oldCap &gt; 0) { // \u5982\u679c\u6269\u5bb9\u524d\u6876\u6570\u7ec4\u975e\u7a7a\nif (oldCap &gt;= MAXIMUM_CAPACITY) { threshold = Integer.MAX_VALUE; // \u5982\u679c\u5bb9\u91cf\u8fbe\u5230\u4e0a\u9650\uff0c\u4ec5\u8c03\u6574\u88c5\u586b\u56e0\u5b50\nreturn oldTab;\n}\nelse if ((newCap = oldCap &lt;&lt; 1) &lt; MAXIMUM_CAPACITY &amp;&amp;\noldCap &gt;= DEFAULT_INITIAL_CAPACITY)\nnewThr = oldThr &lt;&lt; 1; // \u4e24\u500d\u6269\u5bb9\n}\nelse if (oldThr &gt; 0) // \u5982\u679c\u5bb9\u91cf\u4e3a0\uff0c\u5219 oldThr \u8868\u793a\u521d\u59cb\u521d\u59cb\u5bb9\u91cf\nnewCap = oldThr; // \u6309\u7167\u521d\u59cb\u5bb9\u91cf\u6269\u5bb9\nelse {               // \u5982\u679c oldThr \u4e3a 0\nnewCap = DEFAULT_INITIAL_CAPACITY; // \u6309\u7167\u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\u6269\u5bb9\nnewThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); // \u8ba1\u7b97\u88c5\u586b\u56e0\u5b50\n}\n// \u4e0a\u9762\u7684\u5206\u652f\u4f1a\u8ba1\u7b97\u51fa newCap \u548c newThr\nif (newThr == 0) {\nfloat ft = (float)newCap * loadFactor; // \u8ba1\u7b97\u88c5\u586b\u56e0\u5b50\nnewThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (float)MAXIMUM_CAPACITY ?\n(int)ft : Integer.MAX_VALUE);\n}\nthreshold = newThr;\n@SuppressWarnings({\"rawtypes\",\"unchecked\"})\nNode&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])new Node[newCap];\ntable = newTab;\nif (oldTab != null) {\n// \u904d\u5386\u65e7\u7684\u6876\u6570\u7ec4\nfor (int j = 0; j &lt; oldCap; ++j) {\nNode&lt;K,V&gt; e;\nif ((e = oldTab[j]) != null) {\noldTab[j] = null; // \u8bbe\u7f6e\u6210 null\uff0ce \u5f80\u540e\u79fb\u52a8\u4e4b\u540e\u5c31\u4f1a\u5783\u573e\u56de\u6536\nif (e.next == null) // \u5982\u679c\u8fd9\u6761\u94fe\u53ea\u6709 1 \u4e2a\u5143\u7d20\uff0c\u76f4\u63a5\u653e\u5230\u65b0\u6876\u4e2d\nnewTab[e.hash &amp; (newCap - 1)] = e;\nelse if (e instanceof TreeNode)\n((TreeNode&lt;K,V&gt;)e).split(this, newTab, j, oldCap); // \u5c06\u7ea2\u9ed1\u6811\u5206\u88c2\u5230 2 \u4e2a\u6876\u4e2d\uff0c\u7b49\u4f1a\u5c55\u5f00\u8bb2\nelse { // preserve order\nNode&lt;K,V&gt; loHead = null, loTail = null;\nNode&lt;K,V&gt; hiHead = null, hiTail = null;\nNode&lt;K,V&gt; next;\n// \u904d\u5386\u8fd9\u6761\u94fe\u7684\u6240\u6709\u8282\u70b9\ndo {\nnext = e.next;\n// \u7b2c oldCap \u4f4d\u80fd\u68c0\u9a8c\u51fa K % C \u662f 0 \u8fd8\u662f 1\nif ((e.hash &amp; oldCap) == 0) {\nif (loTail == null)\nloHead = e;\nelse\nloTail.next = e;\nloTail = e; // \u5176\u5b9e\u5c31\u662f\u5c3e\u63d2\u6cd5\n}\nelse {\nif (hiTail == null)\nhiHead = e;\nelse\nhiTail.next = e;\nhiTail = e;\n}\n} while ((e = next) != null);\nif (loTail != null) {\nloTail.next = null;\nnewTab[j] = loHead;\n}\nif (hiTail != null) {\nhiTail.next = null;\nnewTab[j + oldCap] = hiHead;\n}\n}\n}\n}\n}\nreturn newTab;\n}\n</code></pre> <p>\u6b63\u5982\u524d\u7f6e\u77e5\u8bc6\u4e2d\u6240\u63a8\u5bfc\u7684\u4e00\u6837\uff0c\u6269\u5bb9\u5b9e\u9645\u5c31\u662f\u5c06\u7b2c \\(j\\) \u6761\u4e2a\u6876\u7684\u94fe\u8868\u62c6\u6210 \\(j\\) \u548c \\(j + C\\) \u7684\u4e24\u4e2a\u6876\u7684\u94fe\u8868\u3002\u800c\u5982\u679c\u7b2c \\(j\\) \u4e2a\u6876\u662f\u7ea2\u9ed1\u6811\uff0c\u5219\u4f7f\u7528 <code>split(this, newTab, j, oldCap)</code> \u8fdb\u884c\u5206\u88c2\u3002</p> <pre><code>final void split(HashMap&lt;K,V&gt; map, Node&lt;K,V&gt;[] tab, int index, int bit) {\nTreeNode&lt;K,V&gt; b = this;\nTreeNode&lt;K,V&gt; loHead = null, loTail = null;\nTreeNode&lt;K,V&gt; hiHead = null, hiTail = null;\nint lc = 0, hc = 0; // \u6811\u5206\u88c2\u65f6\u8fd8\u9700\u8981\u7edf\u8ba1\u94fe\u8868\u957f\u5ea6\n// \u904d\u5386\u7ea2\u9ed1\u6811\u7684\u6240\u6709\u70b9\uff0c\nfor (TreeNode&lt;K,V&gt; e = b, next; e != null; e = next) {\nnext = (TreeNode&lt;K,V&gt;)e.next;\ne.next = null;\nif ((e.hash &amp; bit) == 0) {\nif ((e.prev = loTail) == null)\nloHead = e;\nelse\nloTail.next = e;\nloTail = e;\n++lc; // \u7528\u5c3e\u63d2\u6cd5\u5206\u6210 2 \u6761\u94fe\uff0c\u540c\u65f6\u7edf\u8ba1\u957f\u5ea6\n}\nelse {\nif ((e.prev = hiTail) == null)\nhiHead = e;\nelse\nhiTail.next = e;\nhiTail = e;\n++hc;\n}\n}\n\nif (loHead != null) {\nif (lc &lt;= UNTREEIFY_THRESHOLD) // \u5982\u679c\u5b50\u94fe\u7684\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e6\uff0c\u9000\u5316\u6210\u94fe\u8868\ntab[index] = loHead.untreeify(map);\nelse { // \u5426\u5219\uff0c\u8fd9\u6761\u94fe\u4ecd\u7136\u4fdd\u6301\u6210\u7ea2\u9ed1\u6811\ntab[index] = loHead;\nif (hiHead != null) // (else is already treeified)\nloHead.treeify(tab);\n}\n}\nif (hiHead != null) {\nif (hc &lt;= UNTREEIFY_THRESHOLD)\ntab[index + bit] = hiHead.untreeify(map);\nelse {\ntab[index + bit] = hiHead;\nif (loHead != null)\nhiHead.treeify(tab);\n}\n}\n}\n</code></pre>"},{"location":"dev/java/SourceCode/HashMap/#_11","title":"\u67e5\u627e\u5143\u7d20","text":"<pre><code>public V get(Object key) {\nNode&lt;K,V&gt; e;\nreturn (e = getNode(hash(key), key)) == null ? null : e.value;\n}\n</code></pre> <p>\u5c01\u88c5\u5728 <code>getNode()</code> \u4e2d, \u4ee3\u7801\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u65e0\u975e\u5c31\u662f\u627e\u5230\u7b2c\u51e0\u4e2a\u6876\uff0c\u7136\u540e\u5728\u94fe\u8868\u6216\u8005\u7ea2\u9ed1\u6811\u4e2d\u67e5\u627e\u662f\u5426\u6709\u76f8\u540c\u7684 <code>key</code> \u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>final Node&lt;K,V&gt; getNode(int hash, Object key) {\nNode&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; int n; K k;\nif ((tab = table) != null &amp;&amp; (n = tab.length) &gt; 0 &amp;&amp;\n(first = tab[(n - 1) &amp; hash]) != null) {\nif (first.hash == hash &amp;&amp;\n((k = first.key) == key || (key != null &amp;&amp; key.equals(k))))\nreturn first;\nif ((e = first.next) != null) {\nif (first instanceof TreeNode)\nreturn ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key);\ndo {\nif (e.hash == hash &amp;&amp;\n((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))\nreturn e;\n} while ((e = e.next) != null);\n}\n}\nreturn null;\n}\n</code></pre>"},{"location":"dev/java/SourceCode/HashMap/#_12","title":"\u5220\u9664\u5143\u7d20","text":"<pre><code>public V remove(Object key) {\nNode&lt;K,V&gt; e;\nreturn (e = removeNode(hash(key), key, null, false, true)) == null ?\nnull : e.value;\n}\n</code></pre> <p>\u5c01\u88c5\u5728 <code>removeNode()</code> \u4e2d\uff0c\u67e5\u627e\u5143\u7d20\u7684\u90e8\u5206\u548c\u4e4b\u524d\u4e00\u6837\uff0c\u4e3b\u8981\u5173\u6ce8\u5220\u9664\u7684\u90e8\u5206\u3002</p> <pre><code>final Node&lt;K,V&gt; removeNode(int hash, Object key, Object value,\nboolean matchValue, boolean movable) {\nNode&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, index;\nif ((tab = table) != null &amp;&amp; (n = tab.length) &gt; 0 &amp;&amp;\n(p = tab[index = (n - 1) &amp; hash]) != null) {\nNode&lt;K,V&gt; node = null, e; K k; V v;\nif (p.hash == hash &amp;&amp;\n((k = p.key) == key || (key != null &amp;&amp; key.equals(k))))\nnode = p;\nelse if ((e = p.next) != null) {\nif (p instanceof TreeNode)\nnode = ((TreeNode&lt;K,V&gt;)p).getTreeNode(hash, key);\nelse {\ndo {\nif (e.hash == hash &amp;&amp;\n((k = e.key) == key ||\n(key != null &amp;&amp; key.equals(k)))) {\nnode = e;\nbreak;\n}\np = e;\n} while ((e = e.next) != null);\n}\n}\n// \u4e0a\u9762\u5c31\u662f\u67e5\u627e\u5143\u7d20\uff0c\u5c06\u5f85\u5220\u9664\u7684\u5143\u7d20\u8d4b\u503c\u7ed9 node\nif (node != null &amp;&amp; (!matchValue || (v = node.value) == value ||\n(value != null &amp;&amp; value.equals(v)))) {\nif (node instanceof TreeNode) // \u5982\u679c\u5728\u7ea2\u9ed1\u6811\u4e2d\u5c31\u7528\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u65b9\u6cd5\n((TreeNode&lt;K,V&gt;)node).removeTreeNode(this, tab, movable);\n// p \u662f node \u7684\u524d\u4e00\u4e2a\u8282\u70b9\nelse if (node == p)  // \u5982\u679c node \u662f\u94fe\u8868\u5934\u8282\u70b9\ntab[index] = node.next;\nelse\np.next = node.next; ++modCount;\n--size; afterNodeRemoval(node); // \u56de\u8c03\u51fd\u6570\nreturn node;\n}\n}\nreturn null;\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u5220\u9664\u8282\u70b9\u4e5f\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u6ca1\u6709\u7f29\u5bb9\u7684\u673a\u5236\u3002</p>"},{"location":"essay/","title":"\u968f\u7b14","text":"<p>\u70b9\u51fb\u5de6\u4fa7\u6309\u94ae\u6253\u5f00\u6587\u7ae0</p> <p>\u5373\u5c06\u66f4\u65b0: - \u6211\u76842022\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386</p>"},{"location":"essay/diary/2023-10/","title":"\u65e5\u8bb0 | 2023-10","text":""},{"location":"essay/diary/2023-10/#231011","title":"231011","text":"<p>\u6628\u665a\uff08\u5927\u698223\u70b9\uff09\u5728\u5207\u6362\u7535\u8111\u7684\u97f3\u9891\u8f93\u51fa\u65f6\u610f\u5916\u53d1\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u8bbe\u5907:</p> <p> </p> \u8fd9\u662f\u8c01\u7684\u8bbe\u5907\uff1f\uff1f <p>\u6211\u820d\u53cb\u6ca1\u6709HomePod\uff0c\u6240\u4ee5\u63a8\u65ad\u8fd9\u662f\u9694\u58c1\u67d0\u4e2a\u5bdd\u5ba4\u7684\u3002\u53c8\u56e0\u4e3a\u5317\u90ae\u7684WIFI\u662fAC+AP\uff0cHomePod\uff08\u82f9\u679c\u81ea\u5bb6\u7684\u97f3\u54cd\uff09\u652f\u6301\u540c\u4e00\u4e2a\u7f51\u7edc\u4e0b\u9694\u7a7a\u64ad\u653e\uff0c\u6240\u4ee5\u51fa\u73b0\u5728\u4e86\u6211\u7684\u7535\u8111\u4e2d\u3002</p> <p>\u4e8e\u662f\u6211\u51b3\u5b9a\u76ae\u4e00\u4e0b......</p> <p>\u662f\u7684\uff0c\u6211\u8fde\u4e0a\u4e86\u8fd9\u4e2aHomePod\uff0c\u5e76\u4e14\u7279\u610f\u7ed9\u4ed6\u64ad\u653e\u4e86\u4e00\u66f2\u300a\u70dfdistance\u300b\u3002</p> <p>\u8fde\u4e0a\u4e4b\u540e\u53d1\u73b0\u58f0\u97f3\u4e0d\u5927\uff08\u6bd5\u7adf\u662f\u5728\u9694\u58c1\uff09\uff0c\u4e8e\u662f\u6211\u628a\u97f3\u91cf\u52a0\u5230\u4e86\u6700\u5927\u3002</p> <p>\u7136\u540e\u6211\u9690\u9690\u7ea6\u7ea6\u542c\u5230\u4e86\u300a\u70dfdistance\u300b\u7684\u58f0\u97f3\uff08\u8fd8\u6709\u9694\u58c1\u4f20\u6765\u7684\u201c\u5367\u69fd\u201d\uff09\uff0c\u6ee1\u610f\u7684\u5173\u6389\u4e86\u97f3\u4e50\u3002\uff08\u5927\u6982\u64ad\u653e\u4e8610s\uff0c\u6015\u88ab\u6253\uff09\u3002</p> <p>\u7761\u524d\u548c\u820d\u53cb\u8bb2\u4e86\u8fd9\u4ef6\u4e8b\u4e4b\u540e\u6211\u8fd8\u662f\u5f88\u96be\u5d29\uff0c\u8eba\u5728\u5e8a\u4e0a\u7b11\u51fa\u58f0......</p> <p>\u4eca\u5929\u4e2d\u5348\u53d1\u73b0\u8fd9\u4e2aHomePod\u628a\u5c40\u57df\u7f51\u8fde\u63a5\u7684\u6743\u9650\u6539\u6389\u4e86\ud83d\ude02\ud83d\ude02\ud83d\ude02</p> <p> </p>"},{"location":"essay/diary/2023-10/#231013","title":"231013","text":"<p>\u6700\u8fd1\u6bcf\u9694\u534a\u4e2a\u6708\u4f1a\u5931\u7720\u4e00\u6b21\uff0c\u7761\u7684\u597d\u96be\u53d7......</p> <p>\u4e2d\u5348\u4e0a\u8bfe\u56de\u6765\u5e94\u8be5\u53ea\u7761\u4e8640\u5206\u949f\u3002</p> <p>\u65b9\u73ed\uff08\u4e00\u95e8\u8bfe\uff09\u597d\u70e6\u554a\uff0c\u4eca\u5929\u660e\u660e\u53ef\u4ee56\u70b9\u4e0b\u8bfe\u7684\uff0c\u4e3a\u4ec0\u4e48\u8981\u62d6\u52306\u70b930\uff1f</p> <p>\u98df\u5802\u6ca1\u83dc\u4e86\uff0c\u6253\u7b97\u9a91\u8f66\u53bb\u5403\u996d\u3002\u7ed3\u679c\u4eca\u5929\u5468\u4e94\uff0c\u6821\u5185\u4e00\u8f86\u7f8e\u56e2\u90fd\u6ca1\u4e86\uff01\u786c\u662f\u8d70\u5230\u7269\u7f8e\u4e86\u3002\u3002\u3002</p> <p>\u9ea6\u9ea6\u7684\u65b0\u54c1\u9ebb\u9171\u829d\u58eb\u8fd8\u884c\uff0c\u4f46\u662f\u672c\u8d28\u8fd8\u662f\u677f\u70e7\u52a0\u4e86\u70b9\u9171\uff0c\u5403\u591a\u4e86\u80af\u5b9a\u662f\u4f1a\u817b\u7684\u3002\uff08\u611f\u8c22\u592b\u592b\u7684m\u5361\uff09</p> <p>\u7f8e\u56e2\u7684\u8f66\u7b50\u6709\u4e00\u53e5\u8bdd\u201c\u8bf7\u4e0d\u8981\u5728\u8f66\u7b50\u91cc\u5750\u4eba\u201d\u3002 emmmm...</p> <p>\u4e3a\u4ec0\u4e48\u4eac\u4e1c7\u70b940\u5c31\u5173\u95e8\u4e86\uff1f\uff08\u5176\u4ed6\u90fd\u662f8\u70b9\uff09</p> <p>\u56de\u5230\u5bbf\u820d\u88ab\u8001\u8c2d\u786c\u62c9\u7740\u53bb\u64cd\u573a\u953b\u70bc\u4e86\u4e00\u4f1a...\u817f\u66f4\u9178\u4e86\uff01</p> <p>\u65e9\u70b9\u4f11\u606f\uff01</p>"},{"location":"essay/diary/2023-10/#231024","title":"231024","text":"<p>\u770b\u4e86\u4e00\u4e0b\u65e5\u671f\uff0c\u4eca\u5929\u7adf\u7136\u662f\u7a0b\u5e8f\u5458\u8282\uff01\uff1f</p> <p>\u4e2d\u5348\u7761\u89c9\u7684\u65f6\u5019\u505a\u4e86\u4e00\u4e2a\u5f88\u795e\u5947\u7684\u68a6\uff0c\u6211\u68a6\u5230\u6211\u5728\u505a\u82f1\u8bed\u9605\u8bfb\uff08\u597d\u50cf\u662f\u9ad8\u4e2d\uff0c\u53c8\u597d\u50cf\u662f\u5927\u5b66\uff09\uff0c\u795e\u5947\u7684\u662f\u6709\u4e00\u90e8\u5206\u82f1\u6587\u81ea\u52a8\u53d8\u6210\u4e86\u4e2d\u6587\u7684\u7ffb\u8bd1\uff0c\u5c31\u50cf\u6211\u5e73\u5e38\u4f7f\u7528\u6d4f\u89c8\u5668\u7684\u7ffb\u8bd1\u4e00\u6837\u3002\u7136\u540e\uff0c\u5728\u68a6\u4e2d\u6211\u5c1d\u8bd5\u5c06\u7ffb\u8bd1\u5173\u6389\uff0c\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u5173\u95ed\u6210\u529f\uff0c\u539f\u6587\u53c8\u53d8\u6210\u4e86\u82f1\u6587\uff0c\u540e\u9762\u600e\u4e48\u5173\u4e5f\u5173\u4e0d\u6389\uff0c\u5168\u90fd\u53d8\u6210\u4e86\u4e2d\u6587...</p> <p>\u4e0d\u8fc7...\u4e3a\u4ec0\u4e48\u6211\u60f3\u5173\u6389\u7ffb\u8bd1\u5462\uff1f\u53ef\u80fd\u662f\u5e73\u5e38\u6211\u5728\u7ffb\u8bd1\u5b8c\u4e4b\u540e\u4e60\u60ef\u5207\u56de\u539f\u6587\u5bf9\u7167\u7740\u770b\u770b\uff1f</p>"},{"location":"essay/diary/2023-12/","title":"\u65e5\u8bb0 | 2023-12","text":""},{"location":"essay/diary/2023-12/#231206","title":"231206","text":"<p>\u597d\u4e45\u6ca1\u770b\u6d77\u8d3c\u738b\u4e86\uff0c\u4e0b\u8f7d\u4e86 \\(12\\) \u96c6\u4e00\u76f4\u6ca1\u65f6\u95f4\u770b\uff0c\u4eca\u665a\u770b\u4e2a\u75db\u5feb\uff01</p> <p>\u660e\u5e74\u6691\u5047\u4e00\u5b9a\u8981\u53bb\u5b9e\u4e60\uff01</p>"},{"location":"essay/diary/2023-12/#231211","title":"231211 \u7b2c\u4e00\u6b21\u89c1\u5230\u96ea","text":"<p>\u6628\u665a\u820d\u53cb\u56de\u6765\u7684\u65f6\u5019\u8bf4\u5916\u9762\u4e0b\u96ea\u4e86\u3002</p> <p>\u4eca\u5929\u662f\u5468\u4e00\uff0c\u6709\u65e9\u516b\uff0c\\(7\\) \u70b9\u9192\u6765\u7684\u65f6\u5019\u5f80\u9633\u53f0\u4e00\u770b\uff0c\u53d1\u73b0\u5730\u4e0a\u96ea\u7691\u7691\u4e00\u7247\uff0c\u600e\u4e48\u8bf4\u5462\uff0c\u90a3\u79cd\u611f\u89c9\u5f88\u5947\u5999\uff1f\u987a\u624b\u5c31\u62ff\u624b\u673a\u62cd\u4e0b\u6765\u7136\u540e\u53d1\u4e86\u670b\u53cb\u5708\uff08\u6211\u5df2\u7ecf\u8bb0\u4e0d\u5f97\u591a\u4e45\u6ca1\u53d1\u670b\u53cb\u5708\u4e86...\uff09\u3002</p> <p>\u51fa\u95e8\u7684\u65f6\u5019\u8e29\u5728\u5730\u4e0a\u4e5f\u5f88\u5947\u5999\uff0c\u6709\u70b9\u6ed1\uff0c\u4e5f\u6709\u70b9\u8f6f\u3002\u8def\u4e0a\u62ff\u624b\u673a\u62cd\u7167\u7684\u540c\u5b66\u6570\u4e0d\u80dc\u6570\u3002</p> <p>\u8fd8\u770b\u5230\u626b\u96ea\u7684\u5de5\u4f5c\u4eba\u5458\u3002</p> <p>\u552f\u4e00\u4ee4\u6211\u6bd4\u8f83\u8be7\u5f02\u7684\u662f\u4e0b\u96ea\u7684\u65f6\u5019\u4e0d\u662f\u5f88\u51b7\uff0c\u548c\u524d\u51e0\u5929\u5dee\u4e0d\u591a\u3002</p>"},{"location":"essay/diary/2023-12/#231216","title":"231216 \u5bd2\u51b7\u8bb0\u5fc6","text":"<p>\u636e\u8bf4\u4eca\u5e74\u662f\u534e\u5317\u5730\u533a \\(70\\) \u591a\u5e74\u6765\u7684\u5386\u53f2\u6700\u4f4e\u6e29\uff08\u8db3\u8db3 \\(-17^{\\circ}\\) \uff09\uff0c\u800c\u6211\u4f5c\u4e3a\u4e00\u4e2a\u5728\u5357\u65b9\u751f\u6d3b\u4e86 \\(20\\) \u591a\u5e74\u7684\u4eba\uff0c\u5728\u5317\u4eac\u89c1\u5230\u4e86\u4eba\u751f\u7684\u7b2c\u4e00\u6b21\u96ea\u3002</p> <p>\u5927\u5b66\u4ee5\u524d\u6211\u4e00\u76f4\u5728\u5e7f\u4e1c\u5c45\u4f4f\uff0c\u51e0\u4e4e\u6ca1\u6709\u611f\u53d7\u8fc7\u5bd2\u51b7\u3002\u53ea\u8bb0\u5f97\u5728\u521d\u4e2d\u7684\u67d0\u4e00\u5e74\uff0c\u5e7f\u4e1c\u6709\u4e00\u6b21\u5bd2\u6f6e\uff0c\u5f53\u65f6\u7684\u6e29\u5ea6\u4e5f\u5fd8\u8bb0\u4e86\uff0c\u53cd\u6b63\u591a\u7a7f\u51e0\u4ef6\u8863\u670d\u5c31\u6297\u8fc7\u53bb\u4e86\uff0c\u5370\u8c61\u4e2d\u90a3\u662f\u6211\u7b2c\u4e00\u6b21\u7a7f\u79cb\u88e4\uff0c\u6b64\u540e\u5728\u5e7f\u4e1c\u5c31\u6ca1\u9047\u5230\u90a3\u4e48\u51b7\u7684\u573a\u666f\u4e86\u3002</p> <p>\u672c\u79d1\u671f\u95f4\u5462\uff0c\u6211\u53bb\u4e86\u91cd\u5e86\u3002\u91cd\u5e86\u5f88\u6e7f\u51b7\uff0c\u6bcf\u5e74 \\(10\\) \u6708\u5f00\u59cb\uff0c\u6574\u5929\u90fd\u5728\u4e0b\u96e8\uff0c\u4e00\u4e2a\u6708\u51e0\u4e4e\u6ca1\u6709\u51e0\u5929\u6674\u7684\uff0c\u6c14\u6e29\u4e0b\u964d\u7684\u975e\u5e38\u5feb\uff0c\u6700\u4f4e\u80fd\u5230 \\(0^{\\circ}\\)\u3002\u5728\u4e0a\u5927\u5b66\u4e4b\u524d\u6211\u7684\u5bf9\u8863\u670d\u7684\u8ba4\u77e5\u662f\u6ca1\u6709\u7fbd\u7ed2\u670d\u7684\uff0c\u6bd5\u7adf\u5e7f\u4e1c\u7684\u51ac\u5929\u968f\u4fbf\u7a7f\u4e00\u4ef6\u5916\u5957\u5c31\u591f\u4e86\uff0c\u5728\u91cd\u5e86\u4e5f\u662f\u6211\u7b2c\u4e00\u6b21\u63a5\u89e6\u7fbd\u7ed2\u670d\uff08\u5305\u62ec\u7fbd\u7ed2\u670d\u7684\u53c2\u6570\uff09\uff0c\u51ac\u5929\u7a7f\u79cb\u88e4\u4e5f\u662f\u6807\u914d\u3002\u6b64\u5916\uff0c\u91cd\u5e86\u867d\u7136\u6ca1\u6709\u6696\u6c14\uff0c\u4f46\u7a7a\u8c03\u5e26\u6709\u5236\u70ed\u529f\u80fd\uff0c\u81ea\u4e60\u7684\u65f6\u5019\u6211\u901a\u5e38\u90fd\u4f1a\u9009\u62e9\u5c0f\u6559\u5ba4\uff0c\u8fd9\u6837\u6696\u6c14\u5f00\u8d77\u6765\u975e\u5e38\u6696\u548c\u3002</p> <p>\u4eca\u5e74\u662f\u6211\u7b2c\u4e00\u5e74\u6765\u5317\u4eac\u8bfb\u7814\uff0c\u7b2c\u4e00\u5e74\u5c31\u89c1\u5230\u4e86\u96ea\u3002\u5317\u4eac\u5f88\u5e72\uff0c\u4e5f\u5f88\u51b7\uff0c\u6240\u4ee5\u6211\u4e70\u4e86\u4e00\u4ef6\u975e\u5e38\u539a\u7684\u7fbd\u7ed2\u670d\uff0c\u8fd9\u4ef6\u8863\u670d\u6297\u98ce\u6027\u80fd\u4e5f\u5f88\u68d2\uff0c\u5728\u7fbd\u7ed2\u670d\u5185\u90e8\u4e0d\u9700\u8981\u7a7f\u5f88\u591a\u5c31\u4fdd\u6696\u3002\u6240\u4ee5\u6211\u8ba4\u4e3a\uff1a\u6e7f\u51b7\u5730\u533a\uff08\u4f8b\u5982\u91cd\u5e86\u4ee5\u53ca\u5e7f\u4e1c\uff09\u8981\u591a\u7a7f\u8863\u670d\uff0c\u800c\u50cf\u5317\u4eac\u8fd9\u79cd\u5e72\u51b7\u5730\u533a\uff0c\u6700\u91cd\u8981\u7684\u662f\u5916\u5957\u8981\u539a\uff0c\u4e5f\u8981\u80fd\u9632\u98ce\u3002</p> <p>\u5317\u4eac\u98ce\u771f\u7684\u5f88\u5927\uff0c\u5927\u6982\u5728 \\(10\\) \u6708\u7684\u65f6\u5019\u6211\u53d1\u73b0\u9a91\u8f66\u65f6\u624b\u5f88\u51b7\uff0c\u4e8e\u662f\u4e70\u4e86\u4e00\u4e2a\u624b\u5957\u3002\u800c\u5230\u73b0\u5728\u8fd9\u79cd\u6c14\u6e29\uff0c\u5373\u4f7f\u7a7f\u4e0a\u624b\u5957\u4e5f\u8981\u628a\u624b\u63e3\u5728\u515c\u91cc\u624d\u884c\u3002</p> <p>\u8fd9\u51e0\u5929\u7684\u6e29\u5ea6\u771f\u7684\u5f88\u53ef\u6015\uff0c\u8ba9\u6211\u5b8c\u5168\u4e27\u5931\u4e86\u5916\u51fa\u7684\u6b32\u671b\u3002\u597d\u5728\u5bbf\u820d\u6709\u6696\u6c14\uff0c\u55ef\uff0c\u6696\u6c14\u771f\u723d\uff01</p>"},{"location":"essay/diary/2023-12/#231222","title":"231222 \u51ac\u81f3","text":"<p>\u5dee\u4e0d\u591a\u51ac\u81f3\uff0c\u4e00\u65e9\u4e00\u665a\u8fd8\u662f\u6709\u96e8......</p>"},{"location":"essay/diary/2023-12/#231231-goodbye-2023","title":"231231 Goodbye 2023","text":"<p>\u200b   \u6700\u8fd1\u5230\u4e86\u8003\u8bd5\u5468\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5317\u90ae\u5728 \\(1\\) \u6708 \\(2\\) \u53f7\u7ed9\u6211\u5b89\u6392\u4e86\u4e24\u573a\u8003\u8bd5\uff09\u4e00\u76f4\u5728\u590d\u4e60\uff0c\u6240\u4ee5\u6ca1\u6709\u53d1\u535a\u5ba2\u3002\u5176\u5b9e\u6211\u5df2\u7ecf\u79ef\u538b\u4e86\u597d\u51e0\u4e2a\u65b0\u7684\u5185\u5bb9\u4e86\uff0c\u4f46\u662f\u4e00\u76f4\u6ca1\u6709\u65f6\u95f4\u7f16\u8f91\uff0c\u7b49\u8003\u8bd5\u8fc7\u4e86\u518d\u66f4\u65b0\u5427\u3002</p> <p>\u200b   \u62ac\u5934\u4e00\u770b\u65f6\u95f4\uff0c\u518d\u8fc7\u4e00\u4f1a \\(2023\\) \u5c31\u7ed3\u675f\u4e86\uff0c\\(2023\\) \u5bf9\u6211\u6765\u8bf4\u662f\u4ec0\u4e48\u5462\uff1f\u6700\u91cd\u8981\u7684\u4e8b\u5c31\u662f\u4ece\u672c\u79d1\u5b66\u6821\u6bd5\u4e1a\uff0c\u79bb\u5f00\u4e86\u5f85\u4e86 \\(4\\) \u5e74\u7684\u91cd\u5e86\uff0c\u6765\u5230\u5317\u4eac\u8bfb\u7814\u4e86\u5427\u3002</p> <p>\u200b   \u867d\u7136\u7ecf\u5386\u8fc7\u8bb8\u591a\u6b21\u4e0e\u597d\u53cb\u7684\u5206\u522b\uff0c\u603b\u8be5\u662f\u6709\u70b9\u5fc3\u7406\u5efa\u8bbe\uff0c\u4e0d\u81f3\u4e8e\u5728\u5206\u522b\u7684\u65f6\u5019\u54ed\u51fa\u6765\u3002\u4f46\u662f\uff0c\u548c\u672c\u79d1\u820d\u53cb\u7684\u5206\u522b\u4ecd\u7136\u8ba9\u6211\u6709\u70b9\u5fc3\u9178\u3002\u6211\u53ea\u89c9\u5f97\u6bd5\u4e1a\u5b63\u65f6\u95f4\u8fc7\u7684\u5f88\u5feb\uff0c\u6bd5\u7adf\uff0c\u8fd9\u53ef\u80fd\u662f\u6211\u4eec\u6b64\u751f\u4ec5\u6709\u7684\u53ef\u4ee5\u6beb\u65e0\u987e\u8651\u7684\u73a9\u800d\u7684\u65f6\u95f4\u3002\u6b64\u540e\uff0c\u5927\u5bb6\u5306\u5306\u627e\u5de5\u4f5c\uff0c\u6709\u4eba\u53bb\u53e6\u4e00\u57ce\u5e02\u8bfb\u7814\uff0c\u6709\u4eba\u5728\u5bb6\u590d\u4e60\u4e8c\u6218......\u800c\u6211\u6c89\u6d78\u5728\u8fd9\u79cd\u79bb\u522b\u7684\u4f24\u611f\u4e4b\u4e2d\uff0c\u76f4\u5230 \\(9\\) \u6708\uff0c\u6211\u5f00\u542f\u4e86\u53e6\u4e00\u6bb5\u6821\u56ed\u65f6\u5149\u3002</p> <p>\u200b   </p> <p>\u200b   \\(2023\\) \u5bf9\u6211\u6765\u8bf4\u6216\u8bb8\u662f\u4e00\u4e2a\u4e0d\u65ad\u575a\u5b9a\u81ea\u5df1\u4fe1\u5ff5\u7684\u5e74\u4efd\uff0c\u5728\u8fd9\u4e00\u5e74\uff0c\u6211\u60f3\u4e86\u5f88\u591a\uff0c\u5305\u62ec\u6211\u7684\u8fc7\u53bb\u3001\u6211\u7684\u73b0\u5728\u4ee5\u53ca\u6211\u7684\u672a\u6765\u3002\u6211\u4e0d\u65ad\u7684\u8c03\u6574\u81ea\u5df1\u7684\u89c2\u5ff5\uff0c\u5305\u62ec\u81ea\u5df1\u672a\u6765\u5de5\u4f5c\u7684\u60f3\u6cd5\u3001\u751f\u6d3b\u4e60\u60ef\u7684\u6539\u53d8......\u4e5f\u8bb8\u662f\u4e34\u8fd1\u6bd5\u4e1a\uff0c\u4e5f\u8bb8\u662f\u5927\u5b66\u56db\u5e74\u6709\u6240\u6210\u957f\uff0c\u5bf9\u672a\u6765\u7684\u89c4\u5212\u4f3c\u4e4e\u6108\u53d1\u6e05\u6670......</p>"},{"location":"essay/diary/2024-04/","title":"\u65e5\u8bb0 | 2024-04","text":""},{"location":"essay/diary/2024-04/#240401","title":"240401 \u6062\u590d\u72b6\u6001\u7684\u7b2c\u4e00\u5929","text":"<p>\u524d\u51e0\u5929\u611f\u5192\u4e86\uff0c\u5230\u4eca\u5929\u8fd8\u5269\u4e0b\u4e00\u70b9\u54b3\u55fd\u3002\u5230\u4e86\u4eca\u5929\u4e0b\u5348\uff0c\u7761\u4e86\u4e24\u5c0f\u65f6\uff0c\u9192\u6765\u7684\u65f6\u5019\u611f\u89c9\u975e\u5e38\u723d\u3002</p> <p>\u8fc7\u53bb\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u611f\u89c9\u72b6\u6001\u975e\u5e38\u5dee\uff0c\u5bfc\u81f4\u5b66\u4e60\u7684\u6548\u7387\u4e5f\u4e0b\u964d\uff0c\u535a\u5ba2\u4e5f\u4e0d\u600e\u4e48\u66f4\u65b0\u4e86\u3002\u4e0a\u4e2a\u6708\u89c1\u8bc6\u4e86\u8bb8\u591a\u4e8b\u60c5\uff08\u4e3b\u8981\u662f\u8eab\u8fb9\u4eba\u8003\u7814\u3001\u5de5\u4f5c\u76f8\u5173\u7684\u4e8b\u60c5\uff09\u4f7f\u6211\u5927\u53d7\u9707\u64bc\uff0c\u5e0c\u671b\u5728\u8fd9\u6b21\u611f\u5192\u597d\u4e86\u4e4b\u540e\uff0c\u80fd\u591f\u91cd\u65b0\u56de\u5230\u6700\u4f73\u7684\u72b6\u6001\u3002</p>"},{"location":"essay/diary/2024-04/#240402","title":"240402 \u6709\u5173\u9003\u907f\u5b66\u4e60\u7684\u6377\u5f84","text":"<p>\u7a81\u7136\u53d1\u73b0\u81ea\u5df1\u7684\u4e00\u4e2a\u7279\u8d28\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5728\u5b66\u4e60\u4e0a\u6211\u4e0d\u4f1a\u5c1d\u8bd5\u8d70\u6377\u5f84\u3002\u4f8b\u5982\uff0c\u5c3d\u7ba1\u6709\u67d0\u4ef6\u4e8b\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4f46\u5982\u679c\u8e0f\u8e0f\u5b9e\u5b9e\u505a\u4e0b\u6765\u786e\u5b9e\u662f\u6709\u6240\u6536\u83b7\u7684\uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4f1a\u9009\u62e9\u5b66\u4e60\u7136\u540e\u5b8c\u6210\u4ed6\u3002\u5f53\u7136\uff0c\u6211\u77e5\u9053\u5f88\u591a\u4eba\u4f1a\u9009\u62e9\u4e00\u4e9b\u6295\u673a\u53d6\u5de7\u7684\u529e\u6cd5\u6765\u5b8c\u6210\u3002</p> <p>\u6211\u575a\u4fe1\u8fd9\u79cd\u6295\u673a\u53d6\u5de7\u7684\u65b9\u5f0f\u662f\u5f97\u4e0d\u5230\u6536\u83b7\u7684\u3002\u53ef\u80fd\u8fd9\u662f\u6211\u957f\u671f\u4ee5\u6765\u5f62\u6210\u7684\u4e00\u79cd\u7279\u8d28\u3002\u3002</p>"},{"location":"essay/diary/2024-04/#240409","title":"240409","text":"<p>\u804a\u804a\u81ea\u5df1\uff1a</p> <ul> <li>\u5b8c\u6210\u4e86 cmu-15445 \u7684\u7b2c\u4e00\u4e2a\u5b9e\u9a8c\uff0c\u611f\u89c9\u6b63\u53cd\u9988\u8fd8\u662f\u5f88\u8db3\u7684\u3002</li> <li>\u4eca\u665a\u548c\u672c\u79d1\u820d\u53cb\u4e0d\u77e5\u9053\u4e3a\u5565\u804a\u5230\u4e86\u5927\u4e00\u7684\u65f6\u5019\u5bbf\u820d\u5f88\u70c2\uff0c\u5f88\u96be\u60f3\u8c61\u6211\u5f53\u65f6\u662f\u600e\u4e48\u575a\u6301\u4e0b\u6765\u4e86\u3002\u5168\u6851\u56de\u4e86\u4e00\u53e5\uff0c\u201c\u56e0\u4e3a2020\u5e74\u75ab\u60c5\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u4f4f\u4e86\u4e00\u5b66\u671f\u201d\uff0c\u968f\u540e\u6211\u604d\u7136\u5927\u609f\u3002\uff08ps..\u5927\u4e00\u7684\u5bbf\u820d\u771f\u7684\u5f88\u70c2\u5f88\u70c2\uff09</li> </ul> <p>\u804a\u804a\u5176\u4ed6\u4e8b\uff1a</p> <ul> <li>\u6700\u8fd1\u8003\u7814\u5f00\u59cb\u8c03\u5242\uff0c\u6211\u7b2c\u4e00\u6b21\u610f\u8bc6\u5230\u73b0\u5728\u8003\u7814\u5230\u5e95\u6709\u591a\u5377\uff0c\u4ee5\u524d\u7684\u65f6\u5019\u53ef\u80fd\u53ea\u662f\u770b\u5230\u62a5\u5f55\u6bd4\uff0c\u6ca1\u6709\u4e00\u4e2a\u76f4\u89c2\u7684\u611f\u53d7\u3002\u53ef\u662f\u770b\u7740\u8eab\u8fb9\u7684\u540c\u5b66\uff0c\u4e00\u6218\u4e8c\u6218\u5931\u5229\uff0c\u8c03\u5242\u4e5f\u969c\u788d\u91cd\u91cd\u7684\u65f6\u5019\uff0c\u6211\u624d\u6709\u76f4\u89c2\u7684\u611f\u53d7...</li> <li>\u6700\u8fd1\u5317\u90ae\u4eba\u8bba\u575b\u53c8\u4f20\u51fa\u4e00\u4e2a\u5bfc\u5e08\u7684\u9006\u5929\u4e8b\u8ff9...\u4e0d\u65ad\u53d1\u9175\u4e4b\u540e...\u73b0\u5728\u5fae\u535a\u597d\u50cf\u5230\u70ed\u641c\u524d\u5341\u4e86\uff0c\u800c\u8fd9\u4ec5\u4ec5\u53ea\u7528\u4e86\u4e00\u4e2a\u4e0b\u5348\u3002</li> </ul>"},{"location":"essay/diary/2024-04/#240412","title":"240412","text":"<ul> <li>\u4eca\u5929\u9ad8\u4e2d\u540c\u5b66\u8c03\u5242\u590d\u8bd5\u88ab\u5237\u4e86\uff0c\u665a\u4e0a\u770b\u5230\u4ed6\u6d88\u606f\u7684\u65f6\u5019\u6211\u7684\u5fc3\u4e5f\u5f88\u96be\u53d7\uff0c\u592a\u4e0d\u5bb9\u6613\u4e86\uff0c\u548c\u4ed6\u804a\u4e86\u5f88\u591a\uff0c\u4ece\u9ad8\u4e2d\u804a\u5230\u4e86\u5927\u5b66......</li> </ul>"},{"location":"essay/diary/2024-04/#240423","title":"240423","text":"<p>\u4eca\u5929\u6709\u4e24\u4ef6\u86ee\u79bb\u8c31\u7684\u4e8b\u60c5\u3002</p> <p>\u6709\u4e00\u95e8\u8bfe\u7ed3\u8bfe\u8003\u8bd5\uff0c\u4e0b\u5348 \\(1\\) \u70b9\u5f00\u8003...\u65e9\u4e0a\u6709\u4e00\u95e8\u65e9\u516b\u8bfe\uff0c\u4e0a\u5b8c\u56de\u5bbf\u820d\u4e4b\u540e\u611f\u89c9\u592a\u56f0\u4e86\uff0c\u5403\u4e86\u4e2a\u725b\u5976\u9762\u5305\u7136\u540e \\(10\\) \u70b9\u5de6\u53f3\u5c31\u8eba\u4e0b\u7761\u89c9\u4e86\uff08\u6309\u7167\u6211\u4ee5\u5f80\u7684\u60c5\u51b5\uff0c\\(11:30\\) \u7684\u65f6\u5019\u4f1a\u81ea\u7136\u9192\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u8bbe\u7f6e\u95f9\u949f\uff09\u3002</p> <p>\u7ed3\u679c\u9192\u6765\u7684\u65f6\u5019\u662f \\(12:47\\)\uff0c\u6b64\u65f6\u8ddd\u79bb\u5f00\u8003\u53ea\u5269 \\(13\\) \u5206\u949f......</p> <p>\u76f4\u63a5\u5c31\u80cc\u4e0a\u4e66\u5305\u53bb\u8003\u8bd5\u4e86\uff0c\u8003\u8bd5\u7ed3\u675f\u6211\u624d\u5c06\u5c06\u5199\u5b8c\uff08\u8fd8\u597d\u6ca1\u6709\u7761\u8fc7\uff09\u3002</p> <p>\u53e6\u4e00\u4ef6\u79bb\u8c31\u7684\u4e8b\u548c\u7ec4\u4f1a\u8bb2\u8bba\u6587\u6709\u5173\u3002</p> <p>\u660e\u5929\u8f6e\u5230\u6211\u8bb2\u8bba\u6587\uff0c\u6211\u5230\u665a\u4e0a\u7684\u65f6\u5019\u5dee\u4e0d\u591a\u628a PPT \u505a\u5b8c\u4e86\uff0c\u6b64\u65f6\u6211\u624d\u5f97\u77e5\u8fd9\u7bc7\u8bba\u6587\u4e0a\u5b66\u671f \\(10\\) \u6708\u7684\u65f6\u5019\u540c\u95e8\u8bb2\u8fc7\u8fd9\u7bc7\uff08\u8fc7\u53bb\u592a\u4e45\u6211\u771f\u5fd8\u4e86\uff09\u3002\u6b64\u65f6\u6211\u4e0d\u5f97\u4e0d\u653e\u5f03\u6b64\u524d\u7684\u6240\u6709\u8fdb\u5ea6\uff0c\u53e6\u627e\u4e86\u4e00\u7bc7\u8bba\u6587\u3002\u91cd\u65b0\u627e\u4e86\u4e00\u7bc7\u6709\u70b9\u96be\u7684\u8bba\u6587\uff0c\u770b\u4e86\u5f88\u4e45\u770b\u4e0d\u61c2\u554a\uff0c\u770b\u5230\u534a\u591c \\(2\\) \u70b9\u949f\u624d\u5c06\u5c06\u770b\u660e\u767d\uff08\u7b97\u662f\u5bf9\u6211\u65e9\u4e0a\u90a3\u6ce2\u56de\u7b3c\u89c9\u7684\u60e9\u7f5a......\uff09</p> <p>\u8eba\u4e0a\u5e8a\u7684\u65f6\u5019\u6211\u65e0\u6bd4\u5e0c\u671b\u660e\u5929\u7684\u7ec4\u4f1a\u63a8\u8fdf\uff08\u56e0\u4e3a PPT \u8fd8\u6ca1\u505a\uff09\u3002</p>"},{"location":"essay/diary/2024-04/#240424","title":"240424","text":"<p>\u65e9\u4e0a\u8d77\u6765\uff08\\(9\\) \u70b9\u9192\u7684\uff09\u7684\u65f6\u5019\u770b\u4e86\u5fae\u4fe1\uff0c\u4eca\u5929\u7ec4\u4f1a\u771f\u63a8\u8fdf\u4e86\uff0c\u8fd8\u6709\u4e00\u5929\u7684\u65f6\u95f4\u770b\u8bba\u6587\u548c\u505a PPT\u3002</p>"},{"location":"essay/diary/2024-04/#240425","title":"240425","text":"<p>\u5927\u6982\u5728\u4e0b\u5348\u7ec4\u4f1a\u5f00\u8bb2\u4e4b\u524d\u6781\u9650\u5b8c\u6210\u4e86 PPT\uff0c\u4e0d\u8fc7\u8fd9\u7bc7\u8bba\u6587\u672c\u8eab\u8d28\u91cf\u4e0d\u662f\u5f88\u9ad8\uff0c\u4ee5\u540e\u5c3d\u91cf\u907f\u514d\u627e\u8fd9\u4e2a\u4f1a\u8bae\u7684\u8bba\u6587\u4e86\u3002</p> <p>\u603b\u7b97\u71ac\u8fc7\u53bb\u4e86\uff0c\u4e2d\u5348\u6ca1\u7761\u89c9\uff0c\u665a\u4e0a\u5403\u5b8c\u996d\u4e4b\u540e\u4e0a\u5e8a\u8eba\u4e86\u4e00\u5c0f\u65f6\u3002</p> <p>\u7136\u540e\u5f00\u59cb\u505a CMU-15445\uff0c\u5bf9\u4e86\u4e00\u665a\u4e0a\u7684\u62cd\uff0c\u6700\u540e\u4fee\u4e86 \\(2\\) \u4e2a\u5c0f bug \u7136\u540e\u5c31\u901a\u5173\u4e86\u3002</p> <p>\u660e\u5929\u770b\u770b LeaderBoard \u80fd\u4e0d\u80fd\u4f18\u5316\u4e00\u4e0b\u3002</p>"},{"location":"essay/diary/2024-04/#240426","title":"240426","text":"<p>\u60f3\u4e86\u4e00\u4e2a\u4e0b\u5348\u7684\u4f18\u5316\u624b\u6bb5\uff0c\u6700\u540e\u5237\u5230 \\(129\\) \u540d\u7684\u4f4d\u7f6e\u3002</p> <p>\u5185\u5fc3\u8fd8\u662f\u6709\u4e00\u4e9b\u60f3\u6cd5\u7684\u6ca1\u6709\u7528\u4ee3\u7801\u5b9e\u73b0\u7684\uff08\u6bd4\u5982\u7c92\u5ea6\u66f4\u7ec6\u7684\u9501\u3001\u5e76\u53d1\u5904\u7406\u7b49\uff09\u3002</p> <p>\u4e0d\u8fc7\u6211\u89c9\u5f97\u6211\u7684\u60f3\u6cd5\u90fd\u6bd4\u8f83 Naive\uff0c\u611f\u89c9\u8fd8\u662f\u5148\u628a\u540e\u9762\u7684\u505a\u5b8c\uff0c\u591a\u770b\u70b9\u5f00\u6e90\u4ee3\u7801\u518d\u56de\u5934\u5ba1\u89c6\u81ea\u5df1\u7684\u60f3\u6cd5\u3002</p>"},{"location":"essay/diary/2024-05/","title":"\u65e5\u8bb0 | 2024-05","text":""},{"location":"essay/diary/2024-05/#240506","title":"240506","text":"<p>\u4e94\u4e00\u5047\u671f\u7ed3\u675f\u7684\u7b2c\u4e00\u5929\uff08\u4e94\u4e00\u5b9e\u9a8c\u5ba4\u9879\u76ee\u592a\u5fd9\u4e86\uff0c\u5c31\u6ca1\u6709\u66f4\u65b0\u65e5\u5fd7\uff09</p> <p>\u4eca\u5929\u665a\u996d\u53bb\u5b66\u4e00\u6253\u4e86\u8fa3\u5b50\u9e21\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u4eca\u5929\u7684\u8fa3\u5b50\u9e21\u505a\u7684\u771f\u7684\u5f88\u597d\u5403\uff0c\u800c\u4e14\u963f\u59e8\u4eba\u4e5f\u7279\u522b\u597d\u7ed9\u6211\u6253\u4e86\u7279\u522b\u591a\uff0c\u76f4\u63a5\u5403\u6491\u4e86\u3002\u3002\u641e\u5f97\u6211\u4e00\u76f4\u5230\u665a\u4e0a \\(10\\) \u70b9\u8fd8\u6709\u5f88\u6491\u7684\u611f\u89c9...</p>"},{"location":"others/","title":"\u9648\u88d5\u6770\u7684\u4e2a\u4eba\u7f51\u7ad9","text":"<p>https://codezhxs.github.io</p> <p>\u6709\u65f6\u95f4\u7684\u8bdd\u66f4\u65b0:</p> <ul> <li> \u8001\u9ad8\u7684\u5317\u4eac\u7f8e\u98df\u63a2\u5e97\u8bb0\u5f55</li> <li> \u6211\u7684\u88c5\u673a\u914d\u7f6e</li> <li> \u5982\u4f55\u8d2d\u4e70\u7279\u4ef7\u673a\u7968</li> </ul>"},{"location":"others/BJ_food/","title":"\u5317\u4eac\u5e72\u996d\u53c2\u8003\u8868","text":"<p>\u8001\u9ad8\uff0c\u6211\u6700\u5e38\u770b\u7684\u7f8e\u98df\u535a\u4e3b\uff0c\u5e38\u9a7b\u5317\u4eac\uff0c\u62cd\u4e86\u5f88\u591a\u5317\u4eac\u7f8e\u98df\u63a2\u5e97\u7684\u89c6\u9891\u3002\u6070\u597d\u6211\u5728\u5317\u4eac\u8bfb\u7814\uff0c\u96be\u514d\u5c11\u4e0d\u4e86\u548c\u540c\u5b66\u670b\u53cb\u5403\u996d\uff0c\u56e0\u6b64\u5c06\u8001\u9ad8\u89c6\u9891\u4e2d\u7684\u9910\u9986\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u4f9b\u81ea\u5df1\u6216\u4ed6\u4eba\u67e5\u9605\u3002</p> <ul> <li>\u6309\u7167\u83dc\u7cfb\u5206\u7c7b\u3002</li> <li>\u70b9\u51fb\u9910\u9986\u540d\u53ef\u76f4\u8fbe\u8001\u9ad8\u7684B\u7ad9\u89c6\u9891\u3002\u7531\u4e8e\u6211\u65f6\u95f4\u6709\u9650\uff0c\u8bb8\u591a\u5e97\u94fa\u6ca1\u6709\u54c1\u5c1d\u8fc7\uff0c\u5efa\u8bae\u5728\u51b3\u5b9a\u53bb\u67d0\u4e00\u5bb6\u5e97\u4e4b\u524d\u70b9\u8fdb\u89c6\u9891\u94fe\u63a5\uff0c\u53c2\u7167\u8001\u9ad8\u4ee5\u53ca\u8bc4\u8bba\u533a\u7684\u8bc4\u4ef7\u51b3\u5b9a\u3002</li> <li>\u6709  \u56fe\u6807\u8868\u793a\u6211\u5403\u8fc7\uff0c\u4f1a\u7559\u4e0b\u77ed\u8bc4\u3002</li> <li>\u672c\u8d34\u7684\u9910\u5385\u5217\u8868\u52a8\u6001\u5220\u9664\uff0c\u88ab\u5220\u9664\u7684\u9910\u5385\u5728 \u8fd9\u91cc \u3002</li> <li>\u5982\u679c\u60a8\u53bb\u8fc7\u5176\u4e2d\u7684\u5e97\u94fa\uff0c\u53ef\u4ee5\u544a\u8bc9\u6211\u7528\u9910\u7684\u4f53\u9a8c\u5982\u4f55\uff0c\u6211\u4f1a\u5c06\u8bc4\u4ef7\u9644\u5728\u8868\u4e2d\u3002</li> </ul>"},{"location":"others/BJ_food/#_1","title":"\u4eac\u83dc","text":"<p>\u5305\u62ec\u5317\u4eac\u83dc\u3001\u519c\u5bb6\u83dc\u3001\u70e4\u9e2d\u3001\u6dae\u8089\u7b49\u3002</p> \u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u4fbf\u5b9c\u574a \u8fde\u9501  23.09.29\u4e16\u7eaa\u91d1\u6e90\u5e97 \u8bb0\u5f97\u5728 <code>\u7f8e\u5473\u4e0d\u7528\u7b49</code> \u53d6\u53f7\uff0c\u4ef7\u683c\u5c0f\u8d35\uff0c\u5473\u9053\u4e0d\u9519\u3002 \u56db\u5b63\u6c11\u798f \u8fde\u9501 \u5168\u805a\u5fb7 \u8fde\u9501 \u4eff\u81b3\u996d\u5e84 \u897f\u57ce\u533a\u4e1c\u57ce\u533a \u9e3f\u5bbe\u697c \u671d\u9633\u533a\u897f\u57ce\u533a \u6d77\u7897\u5c45 \u6d77\u6dc0\u533a\u4e1c\u57ce\u533a \u540c\u548c\u5c45 \u8fde\u9501 \u63d0\u7763 \u8fde\u9501 \u82b1\u5bb6\u6021\u56ed \u8fde\u9501 \u5c0f\u8363\u9152\u5bb6 \u671d\u9633\u533a \u5927\u9e2d\u68a8 \u8fde\u9501 \u5c0f\u540a\u68a8\u6c64 \u8fde\u9501 \u665f\u6c38\u5174 \u6d77\u6dc0\u533a\u671d\u9633\u533a \u8363\u5e9c\u5bb4 \u95e8\u5934\u6c9f \u7f8a\u5927\u7237\u6dae\u8089 \u6d77\u6dc0\u533a\u671d\u9633\u533a \u5317\u5e73\u697c \u8fde\u9501 \u65b0\u62fe\u7396 \u65b0\u4eac\u83dc \u671d\u9633\u533a \u4e09\u6e05\u8c2d\u70e7\u9e45 \u671d\u9633\u533a ---"},{"location":"others/BJ_food/#_2","title":"\u7ca4\u83dc","text":"<p>\u5305\u62ec\u7ca4\u83dc\u3001\u6e2f\u5f0f\u8336\u9910\u5385\u3001\u6f6e\u6c55\u83dc\u7b49\u3002</p> \u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u7ca4\u5c0f\u9986 \u4e1c\u57ce\u533a \u8521\u6f9c\u6e2f\u5f0f\u70b9\u5fc3 \u8fde\u9501 \u9676\u9676\u5c45 \u671d\u9633\u533a\u897f\u57ce\u533a \u91d1\u9f0e\u8f69 \u8fde\u9501 \u5317\u4eac\u53a8\u623f \u671d\u9633\u533a \u5229\u82d1 \u4e1c\u57ce\u533a\u671d\u9633\u533a \u4e00\u697c\u4e00\u996d\u5e97 \u6d77\u6dc0\u533a\u671d\u9633\u533a \u80a5\u798f\u62cd\u6863 \u8fde\u9501 \u6f6e\u5802 \u671d\u9633\u533a\u897f\u57ce\u533a"},{"location":"others/BJ_food/#_3","title":"\u5ddd\u83dc","text":"<p>\u5305\u62ec\u5ddd\u83dc\u3001\u81ea\u8d21\u76d0\u5e2e\u83dc\u3001\u6c34\u716e\u9c7c\u7b49\u3002</p> \u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u5b9c\u5bbe\u62db\u5f85\u6240 \u897f\u57ce\u533a  23.10.01 \u56fd\u5e86\u4eba\u5f88\u591a\uff0c\u7b49\u4e86\u4e24\u5c0f\u65f6\uff0c\u51fa\u54c1\u7565\u6709\u964d\u4f4e\uff0c\u603b\u4f53\u6ee1\u610f\u3002 23.12.02 \u4eca\u5929\u51fa\u54c1\u5f88\u4e0d\u9519\uff0c\u6240\u6709\u83dc\u54c1\u90fd\u6ee1\u610f\u3002\u9700\u8981\u4e0b\u534814:00\u4e4b\u540e\u7ebf\u4e0b\u53d6\u53f7\uff0c\u665a\u4e0a\u624d\u4e0d\u7528\u7b49\u5f88\u4e45\u3002 \u5929\u4e0b\u76d0 \u4e1c\u57ce\u533a  23.10.21 \u6bd4\u8f83\u6b63\u5b97\u7684\u5ddd\u83dc\uff0c\u9ec4\u6c0f\u725b\u8089\u597d\u5403\uff0c\u4eba\u5747100\u3002 \u9ebb\u516d\u8bb0 \u8fde\u9501 \u4fcf\u6c5f\u5357 \u8fde\u9501 \u9526\u5e9c\u76d0\u5e2e \u8fde\u9501 \u4e09\u6837\u83dc \u8fde\u9501 \u7709\u5dde\u4e1c\u5761 \u8fde\u9501 \u5ce8\u7709\u9152\u5bb6 \u8fde\u9501 \u8d21\u9662\u8700\u697c \u5ddd\u529e\u9910\u5385 \u4e1c\u57ce\u533a \u65b0\u5ddd\u529e\u9910\u5385 \u671d\u9633\u533a \u56db\u5ddd\u996d\u5e97 \u8fde\u9501 \u8bb8\u5bb6\u83dc \u671d\u9633\u533a \u6cf8\u5dde\u5e7a\u59b9\u79c1\u623f\u83dc \u671d\u9633\u533a \u9f99\u4eba\u5c45 \u6c34\u716e\u9c7c \u8fde\u9501"},{"location":"others/BJ_food/#_4","title":"\u6e58\u83dc","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u6f47\u6e58\u9601 \u8fde\u9501  23.09.23\u5317\u82d1\u5e97 \u5f88\u4e0d\u9519\uff0c\u4ef7\u683c\u8fd8\u884c\uff0c\u670d\u52a1\u4e5f\u68d2\u3002 \u9690\u53a8 \u671d\u9633\u533a\u5927\u5174\u533a \u8d39\u5927\u53a8\u8fa3\u6912\u7092\u8089 \u8fde\u9501"},{"location":"others/BJ_food/#_5","title":"\u6c5f\u6d59\u83dc","text":"<p>\u5305\u62ec\u6dee\u626c\u83dc\u3001\u82cf\u83dc\u3001\u6d59\u6c5f\u83dc\u3001\u7ecd\u5174\u83dc\u7b49\u3002</p> \u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u677e\u9e64\u697c\u8001\u9ad8\u4e8c\u63a2\u677e\u9e64\u697c \u8fde\u9501 \u82cf\u5e2e\u8881 \u8fde\u9501 \u9f0e\u6cf0\u4e30 \u8fde\u9501 \u6dee\u626c\u5e9c \u4e1c\u57ce\u533a\u897f\u57ce\u533a \u5c0f\u53a8\u5a18 \u671d\u9633\u533a \u5916\u5a46\u5bb6 \u8fde\u9501 \u7eff\u8336\u9910\u5385 \u8fde\u9501 \u6842\u6ee1\u9647 \u8fde\u9501 \u5357\u4eac\u5927\u724c\u6863 \u8fde\u9501 \u7389\u534e\u53f0\u996d\u5e84 \u897f\u57ce\u533a\u671d\u9633\u533a \u6d59\u6c5f\u98df\u5e9c \u671d\u9633\u533a \u51b6\u6625 \u897f\u57ce\u533a \u6e38\u56ed\u4eac\u68a6 \u671d\u9633\u533a\u4e1c\u57ce\u533a \u7ecd\u5341\u4e09 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_6","title":"\u9c81\u83dc","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u6cf0\u4e30\u697c \u897f\u57ce\u533a  23.09.05 \u611f\u89c9\u4e00\u822c\uff0c\u4ef7\u683c\u7565\u8d35\uff0c\u4e0b\u6b21\u70b9\u4e00\u4efd\u5e72\u70b8\u4e38\u5b50\u8bd5\u8bd5\u3002 \u8403\u534e\u697c \u8fde\u9501 \u4e1c\u5174\u697c \u8fde\u9501 \u4e30\u6cfd\u56ed \u8fde\u9501 \u805a\u5fb7\u697c\u996d\u5e84 \u671d\u9633\u533a \u5317\u4eac\u67f3\u6cc9\u5c45 \u897f\u57ce\u533a \u9c81\u91c7 \u671d\u9633\u533a\u6d77\u6dc0\u533a"},{"location":"others/BJ_food/#_7","title":"\u95fd\u83dc","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u8386\u7530\u9910\u5385\u8001\u9ad8\u4e8c\u63a2\u8386\u7530\u9910\u5385 \u8fde\u9501 \u516b\u95fd\u98df\u5e9c \u671d\u9633\u533a"},{"location":"others/BJ_food/#_8","title":"\u4e91\u5357\u83dc","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u4e91\u6d77\u80b4 \u8fde\u9501 \u4e00\u5750\u4e00\u5fd8 \u671d\u9633\u533a \u4e91\u817e\u98df\u5e9c \u4e1c\u57ce\u533a \u8774\u8776\u6cc9\u5bbe\u9986 \u897f\u57ce\u533a"},{"location":"others/BJ_food/#_9","title":"\u9762\u9986","text":"\u5e97\u540d \u7c7b\u522b \u4f4d\u7f6e \u8bc4\u4ef7 \u8001\u5f20\u725b\u8089\u9762 \u725b\u8089\u9762 \u8fde\u9501 \u677e\u9e64\u697c\u82cf\u5f0f\u6c64\u9762 \u82cf\u5f0f\u6c64\u9762 \u6d77\u6dc0\u533a \u5473\u5343\u62c9\u9762 \u65e5\u5f0f\u62c9\u9762 \u8fde\u9501 A+Cafe \u521b\u610f\u9762 \u671d\u9633\u533a \u91cc\u9762 \u521b\u610f\u9762 \u671d\u9633\u533a \u535a\u591a\u4e00\u5e78\u820d \u65e5\u5f0f\u62c9\u9762 \u897f\u57ce\u533a\u671d\u9633\u533a \u8001\u5317\u4eac\u67f4\u6c0f \u725b\u8089\u9762 \u671d\u9633\u533a\u4e30\u53f0\u533a \u91cd\u5e86\u52c7\u76db\u725b\u8089\u9762 \u725b\u8089\u9762 \u671d\u9633\u533a \u80d6\u59b9\u9762\u5e84 \u5ddd\u6e1d\u9762 \u8fde\u9501 \u65e5\u51fa\u62c9\u9762 \u6e05\u6c64\u9762 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_10","title":"\u5c0f\u5403","text":"\u5e97\u540d \u7c7b\u522b \u4f4d\u7f6e \u8bc4\u4ef7 \u96c6\u5ba4 \u8584\u997c \u671d\u9633\u533a \u5143\u53e4\u4e91\u5883 \u751c\u54c1 \u671d\u9633\u533a Shake Shack \u6c49\u5821 \u8fde\u9501 \u6cb3\u6cbf\u8089\u997c \u5317\u4eac\u8089\u997c \u897f\u57ce\u533a\u4e1c\u57ce\u533a \u559c\u9f0e\u6d77\u80c6\u6c34\u997a \u6c34\u997a \u671d\u9633\u533a \u949f\u4e45\u592b\u80a0\u7c89\u738b \u80a0\u7c89 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_11","title":"\u5176\u4ed6","text":"\u5e97\u540d \u7c7b\u522b \u4f4d\u7f6e \u8bc4\u4ef7 \u9e7f\u6e2f\u5c0f\u9547 \u53f0\u6e7e\u83dc \u8fde\u9501 \u5c0f\u653e\u725b\u7092\u83dc\u9986 \u591a\u79cd\u83dc\u7cfb \u8fde\u9501 \u9e21\u5764\u8336\u5ba4 \u6d77\u5357\u9e21\u996d \u671d\u9633\u533a \u7802\u9505\u5c45 \u7802\u9505 \u8fde\u9501 \u897f\u8d1d\u839c\u9762\u6751 \u897f\u5317\u83dc \u8fde\u9501 \u5ea6\u5c0f\u6708 \u53f0\u6e7e\u83dc \u6d77\u6dc0\u533a\u671d\u9633\u533a \u8001\u897f\u5b89\u996d\u5e84 \u897f\u5317\u83dc \u8fde\u9501 \u706b\u70e7\u4e91 \u50a3\u65cf\u83dc \u671d\u9633\u533a \u5c0f\u5fbd\u821f \u5fbd\u83dc \u671d\u9633\u533a \u664b\u9633\u996d\u5e84 \u5c71\u897f\u83dc \u6d77\u6dc0\u533a\u897f\u57ce\u533a \u534a\u5929\u5996 \u70e4\u9c7c \u8fde\u9501 \u66b9\u7f57\u6cf0 \u6cf0\u56fd\u83dc \u671d\u9633\u533a \u529f\u5fb7\u6797\u7d20\u83dc\u996d\u5e84 \u7d20\u83dc \u4e1c\u57ce\u533a \u674f\u82b1\u5802 \u9655\u897f\u83dc \u8fde\u9501 \u8001\u5409\u5802 \u6caa\u83dc \u8fde\u9501 \u9e21\u8bb0\u9910\u5ba4 \u9e21\u9505 \u671d\u9633\u533a \u58ee\u58ee\u9152\u9986 \u4e2d\u897f\u7ed3\u5408 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_12","title":"\u897f\u9910","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u725b\u6392\u5bb6 \u8fde\u9501 \u5b89\u59ae\u610f\u5927\u5229\u9910\u5385 \u8fde\u9501 \u8428\u8389\u4e9a \u8fde\u9501 23.12.18\u660c\u5e73\u56de\u9f99\u89c2\u5e97 \u53ef\u80fd\u4e4b\u524d\uff08\u5728\u5176\u4ed6\u57ce\u5e02\uff09\u5403\u591a\u4e86\uff0c\u6ca1\u6709\u611f\u89c9\u5f88\u51fa\u5f69\u3002 THE TACO BAR \u671d\u9633\u533a\u4e1c\u57ce\u533a \u610f\u5e93 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_13","title":"\u65e5\u6599","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u718a\u4e5f\u725b\u5e97 \u4e1c\u57ce\u533a \u80dc\u535a\u6bbf \u8fde\u9501 \u9e1f\u5c6f \u671d\u9633\u533a \u5c06\u592a\u65e0\u4e8c \u8fde\u9501"},{"location":"others/BJ_food_delete/","title":"BJ food delete","text":"\u5e97\u540d \u7c7b\u522b \u5220\u9664\u7406\u7531 \u9ed1\u5929\u9e45 \u897f\u9910 \u6ca1\u5728\u5730\u56fe\u4e2d\u627e\u5230\u3002 \u4e5d\u672c\u5c45\u9152\u5c4b \u65e5\u6599 \u8d27\u4e0d\u5bf9\u677f\uff0c\u516c\u4f17\u53f7\u53d1\u6587\u5634\u786c\u3002"},{"location":"others/Hongya_cave/","title":"Some Photes of Hongya Cave","text":"<p>The photos I took in 2023.06.</p> <p></p> <p>Here are some photos I found on the Internet,  you can see Hongya Cave from different perspectives Through them.</p> <p></p> <p></p> <p></p>"},{"location":"others/latex/","title":"LaTeX \u5e38\u7528\u7b26\u53f7\u6574\u7406","text":"<p>\u7b14\u8005\u975e\u6570\u5b66\u7cfb\uff0c\u6574\u7406 LaTeX \u7b26\u53f7\u4ec5\u4ec5\u4e3a <code>Markdown</code> \u516c\u5f0f\u7f16\u8f91\u9700\u8981\uff0c\u5b58\u5728\u4e0d\u59a5\u4e4b\u5904 (\u771f\u7684\u5b58\u5728)\u3002</p> <p>\u53c2\u8003\u6587\u732e\u5df2\u5217\u4e8e\u6587\u672b\uff0c\u5176\u4e2d\u5305\u542b\u5b8c\u6574\u7684 <code>Latex\u7b26\u53f7\u516c\u5f0f\u8868</code>\u3002</p> <p>\u672c\u6587\u968f\u7b14\u8005\u4f7f\u7528\u4e0d\u65ad\u66f4\u65b0, \u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\u3002</p> <p>latex\u516c\u5f0f\u5728\u7ebf\u7f16\u8f91\u5668(\u542b\u6a21\u7248)</p>"},{"location":"others/latex/#_1","title":"\u5e0c\u814a\u5b57\u6bcd","text":"Name Display Capital Case Display Var Case Display <code>\\alpha</code> \\(\\alpha\\) <code>A</code> \\(A\\) <code>\\beta</code> \\(\\beta\\) <code>B</code> \\(B\\) <code>\\gamma</code> \\(\\gamma\\) <code>\\Gamma</code> \\(\\Gamma\\) <code>\\theta</code> \\(\\theta\\) <code>\\Theta</code> \\(\\Theta\\) <code>\\vartheta</code> \\(\\vartheta\\) <code>\\mu</code> \\(\\mu\\) <code>M</code> \\(M\\) <code>\\delta</code> \\(\\delta\\) <code>\\Delta</code> \\(\\Delta\\) <code>\\epsilon</code> \\(\\epsilon\\) <code>E</code> \\(E\\) <code>\\varepsilon</code> \\(\\varepsilon\\) <code>\\sigma</code> \\(\\sigma\\) <code>\\Sigma</code> \\(\\Sigma\\) <code>\\varsigma</code> \\(\\varsigma\\) <code>\\pi</code> \\(\\pi\\) <code>\\Pi</code> \\(\\Pi\\) <code>\\varpi</code> \\(\\varpi\\) <code>\\omega</code> \\(\\omega\\) <code>\\Omega</code> \\(\\Omega\\) <code>\\xi</code> \\(\\xi\\) <code>\\Xi</code> \\(\\Xi\\) <code>\\zeta</code> \\(\\zeta\\) <code>Z</code> \\(Z\\) <code>\\chi</code> \\(\\chi\\) <code>X</code> \\(X\\) <code>\\rho</code> \\(\\rho\\) <code>P</code> \\(P\\) <code>\\varrho</code> \\(\\varrho\\) <code>\\phi</code> \\(\\phi\\) <code>\\Phi</code> \\(\\Phi\\) <code>\\varphi</code> \\(\\varphi\\) <code>\\eta</code> \\(\\eta\\) <code>H</code> \\(H\\) <code>\\lambda</code> \\(\\lambda\\) <code>\\Lambda</code> \\(\\Lambda\\) <code>\\kappa</code> \\(\\kappa\\) <code>K</code> \\(K\\) <code>\\nu</code> \\(\\nu\\) <code>N</code> \\(N\\) <code>\\upsilon</code> \\(\\upsilon\\) <code>\\Upsilon</code> \\(\\Upsilon\\) <code>\\psi</code> \\(\\psi\\) <code>\\Psi</code> \\(\\Psi\\) <code>\\tau</code> \\(\\tau\\) <code>T</code> \\(T\\) <code>\\iota</code> \\(\\iota\\) <code>I</code> \\(I\\) <code>\\omicron</code> \\(\\omicron\\) <code>O</code> \\(O\\) <p>\u6709\u4ee3\u7801\u7684\u5927\u5199\u5e0c\u814a\u5b57\u6bcd\uff0c\u76f4\u63a5\u6572\u83b7\u5f97\u6b63\u4f53\uff0c\u4f7f\u7528<code>\\var</code>\u524d\u7f00\u8f6c\u5316\u4e3a\u659c\u4f53</p> <p>\u5982\uff1a<code>\\Gamma</code> \\(\\Gamma\\)\uff08\u6b63\uff09 <code>\\varGamma</code> \\(\\varGamma\\)\uff08\u659c\uff09</p> <p>\u6ca1\u6709\u4ee3\u7801\u7684\u5927\u5199\u5e0c\u814a\u5b57\u6bcd\uff0c\u76f4\u63a5\u6572\u5f97\u659c\u4f53\uff0c\u4f7f\u7528<code>\\text</code>\u547d\u4ee4\u8f6c\u5316\u4e3a\u6b63\u4f53</p> <p>\u5982\uff1a<code>T</code> \\(T\\)\u76f4\u63a5\u6572\uff08\u659c\uff09 <code>\\text T</code> \\(\\text T\\)\uff08\u6b63\uff09</p> <p>\uff08\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>\\rm</code>\u5c06\u4e0b\u4e00\u4e2a\u5355\u8bcd\u53d8\u6b63\uff0c<code>\\text T</code>\u7684\u4f5c\u7528\u8303\u56f4\u53ea\u662f\u4e0b\u4e00\u4e2a\u5b57\u6bcd\uff1b\u53ef\u4ee5\u5c1d\u8bd5\u52a0<code>{}</code>\uff09</p>"},{"location":"others/latex/#_2","title":"\u8fd0\u7b97","text":""},{"location":"others/latex/#_3","title":"\u7b80\u5355\u8fd0\u7b97","text":"Type Typeset <code>+</code> \\(+\\) <code>-</code> \\(-\\) <code>\\pm</code> \\(\\pm\\) <code>\\mp</code> \\(\\mp\\) <code>\\times</code> \\(\\times\\) <code>\\cdot</code> \\(\\cdot\\) <code>\\div</code> \\(\\div\\) <code>\\bmod</code> \\(\\bmod\\) <code>\\oplus</code> \\(\\oplus\\) <code>\\cap</code> \\(\\cap\\) <code>\\cup</code> \\(\\cup\\) <code>\\wedge</code> <code>\\land</code> \\(\\land\\) <code>\\vee</code> <code>\\lor</code> \\(\\lor\\) <code>\\ast</code> \\(\\ast\\) <code>\\det</code> \\(\\det\\)"},{"location":"others/latex/#_4","title":"\u590d\u6742\u8fd0\u7b97","text":"Type Typeset <code>\\sqrt{abc}</code> \\(\\sqrt{abc}\\) <code>\\sqrt[n]{abc}</code> \\(\\sqrt[n]{abc}\\) <code>\\frac{abc}{xyz}</code> \\(\\frac{abc}{xyz}\\) <code>\\int_{a}^{b}</code> \\(\\int_{a}^{b}\\) <code>\\iiint_{a}^{b}</code> \\(\\iiint_{a}^{b}\\) <code>\\oint_{a}^{b}</code> \\(\\oint_{a}^{b}\\) <code>\\frac{\\mathrm{d} y}{\\mathrm{d} x}</code> \\(\\frac{\\mathrm{d} y}{\\mathrm{d} x}\\) <code>\\frac{\\mathrm{d}^{n} y}{\\mathrm{d} x^{n}}</code> \\(\\frac{\\mathrm{d}^{n} y}{\\mathrm{d} x^{n}}\\) <code>\\frac{\\partial f}{\\partial x}</code> \\(\\frac{\\partial f}{\\partial x}\\) <code>\\frac{\\partial ^{n} f}{\\partial x^{n}}</code> \\(\\frac{\\partial ^{n} f}{\\partial x^{n}}\\) <code>\\sum_{i=1}^{n}</code> \\(\\sum_{i=1}^{n}\\) <code>\\prod_{i=1}^{n}</code> \\(\\prod_{i=1}^{n}\\) <code>\\bigcap_{i=1}^{n}</code> \\(\\bigcap_{i=1}^{n}\\) <code>\\bigcup_{i=1}^{n}</code> \\(\\bigcup_{i=1}^{n}\\) <p>(\u60f3\u8981\u8ba9\u89d2\u6807\u51fa\u73b0\u5728\u6b63\u4e0a\u548c\u6b63\u4e0b\u65b9\uff0c\u4f7f\u7528\u5757\u7ea7\u516c\u5f0f\u800c\u4e0d\u662f\u884c\u5185\u516c\u5f0f)</p>"},{"location":"others/latex/#_5","title":"\u51fd\u6570","text":"Type Typeset <code>\\arccos</code> \\(\\arccos\\) <code>\\arcsin</code> \\(\\arcsin\\) <code>\\arctan</code> \\(\\arctan\\) <code>\\cos</code> \\(\\cos\\) <code>\\cosh</code> \\(\\cosh\\) <code>\\cot</code> \\(\\cot\\) <code>\\lg</code> \\(\\lg\\) <code>\\ln</code> \\(\\ln\\) <code>\\log</code> \\(\\log\\) <code>\\sin</code> \\(\\sin\\) <code>\\sinh</code> \\(\\sinh\\) <code>\\tan</code> \\(\\tan\\) <code>\\tanh</code> \\(\\tanh\\)"},{"location":"others/latex/#_6","title":"\u6781\u9650\u8fd0\u7b97\u7b26","text":"Type Typeset <code>\\lim</code> \\(\\lim\\) <code>\\inf</code> \\(\\inf\\) <code>\\sup</code> \\(\\sup\\) <code>\\min</code> \\(\\min\\) <code>\\max</code> \\(\\max\\)"},{"location":"others/latex/#_7","title":"\u7b26\u53f7","text":"<p>\u4e00\u4e9b\u952e\u76d8\u4e0a\u53ef\u76f4\u63a5\u6572\u51fa\u7684\u7b26\u53f7\uff0c\u524d\u9762\u52a0<code>\\</code>\u5373\u53ef\u3002</p> <p>\u5982\uff1a<code>\\%</code> \\(\\to \\%\\) <code>\\_</code> \\(\\to \\_\\)</p>"},{"location":"others/latex/#_8","title":"\u70b9\u7f00","text":"Type Typeset <code>a^2</code> \\(a^2\\) <code>a_1</code> \\(a_1\\) <code>\\bar{a}</code> \\(\\bar{a}\\) <code>\\dot{a}</code> \\(\\dot{a}\\) <code>\\ddot{a}</code> \\(\\ddot{a}\\) <code>\\vec{a}</code> \\(\\vec{a}\\) <code>\\hat{a}</code> \\(\\hat{a}\\) <code>\\tilde{a}</code> \\(\\tilde{a}\\) <code>\\mathring{a}</code> \\(\\mathring{a}\\) <code>f^{''}</code> \\(f^{''}\\) <code>90^\\circ</code> \\(90^\\circ\\) <code>\\overset{\\frown}\\psi</code> \\(\\overset{\\frown}\\psi\\) <code>\\overset{?}{=}</code> \\(\\overset{?}{=}\\) <code>\\overset{ping}{\u62fc}\\overset{yin}{\u97f3}</code> \\(\\overset{ping}{\u62fc}\\overset{yin}{\u97f3}\\) <code>\\overset{\u306f\u3044}{\u5165}\u308b</code> \\(\\overset{\u306f\u3044}{\u5165}\u308b\\) <code>\\underset{t\\in R}{max}</code> \\(\\underset{t\\in R}{max}\\)"},{"location":"others/latex/#_9","title":"\u4e8c\u5143\u5173\u7cfb","text":"Type Typeset <code>&lt;</code> \\(&lt;\\) <code>&gt;</code> \\(&gt;\\) <code>\\le</code> \\(\\le\\) <code>\\ge</code> \\(\\ge\\) <code>\\leqslant</code> \\(\\leqslant\\) <code>\\geqslant</code> \\(\\geqslant\\) <code>=</code> \\(=\\) <code>\\ne</code> \\(\\ne\\) <code>:</code> \\(:\\) <code>\\in</code> \\(\\in\\) <code>\\notin</code> \\(\\notin\\) <code>\\ni</code> <code>\\owns</code> \\(\\ni\\) <code>\\ll</code> \\(\\ll\\) <code>\\gg</code> \\(\\gg\\) <code>\\sim</code> \\(\\sim\\) <code>\\approx</code> \\(\\approx\\) <code>\\cong</code> \\(\\cong\\) <code>\\equiv</code> \\(\\equiv\\) <code>\\subset</code> \\(\\subset\\) <code>\\supset</code> \\(\\supset\\) <code>\\subseteq</code> \\(\\subseteq\\) <code>\\subsetneqq</code> \\(\\subsetneqq\\) <code>\\perp</code> \\(\\perp\\) <code>\\parallel</code> \\(\\parallel\\) <code>\\mid</code> \\(\\mid\\) <code>\\propto</code> \\(\\propto\\)"},{"location":"others/latex/#miscellaneous-symbols","title":"Miscellaneous Symbols","text":"Type Typeset <code>\\therefore</code> \\(\\therefore\\) <code>\\because</code> \\(\\because\\) <code>\\ell</code> \\(\\ell\\) <code>\\partial</code> \\(\\partial\\) <code>\\infty</code> \\(\\infty\\) <code>\\varnothing</code> \\(\\varnothing\\) <code>\\emptyset</code> \\(\\emptyset\\) <code>\\forall</code> \\(\\forall\\) <code>\\exists</code> \\(\\exists\\) <code>\\triangle</code> \\(\\triangle\\) <code>\\angle</code> \\(\\angle\\) <code>\\surd</code> \\(\\surd\\) <code>\\nabla</code> \\(\\nabla\\) <code>\\neg</code> <code>\\lnot</code> \\(\\neg\\) <code>\\ldots</code> \\(\\ldots\\) <code>\\cdots</code> \\(\\cdots\\) <code>\\vdots</code> \\(\\vdots\\) <code>\\ddots</code> \\(\\ddots\\) <code>\\S</code> \\(\\S\\)"},{"location":"others/latex/#_10","title":"\u5a31\u4e50","text":"Type Typeset <code>\\spadesuit</code> \\(\\spadesuit\\) <code>\\heartsuit</code> \\(\\heartsuit\\) <code>\\diamondsuit</code> \\(\\diamondsuit\\) <code>\\clubsuit</code> \\(\\clubsuit\\)"},{"location":"others/latex/#_11","title":"\u7bad\u5934","text":"Type Typeset <code>\\to</code> <code>\\rightarrow</code> \\(\\to\\) <code>\\leftarrow</code> \\(\\leftarrow\\) <code>\\Rightarrow</code> \\(\\Rightarrow\\) <code>\\Leftarrow</code> \\(\\Leftarrow\\) <code>\\Longrightarrow</code> \\(\\Longrightarrow\\) <code>\\Longleftarrow</code> \\(\\Longleftarrow\\) <code>\\Leftrightarrow</code> \\(\\Leftrightarrow\\) <code>\\iff</code> <code>\\Longleftrightarrow</code> \\(\\iff\\)"},{"location":"others/latex/#_12","title":"\u5305\u88f9\u7ed3\u6784","text":"Type Typeset <code>\\overrightarrow{AB}</code> \\(\\overrightarrow{AB}\\) <code>\\overline{AB}</code> \\(\\overline{AB}\\) <code>\\underline{abc}</code> \\(\\underline{abc}\\) <code>\\tilde{abc}</code> \\(\\tilde{abc}\\) <code>\\widetilde{abc}</code> \\(\\widetilde{abc}\\) <code>\\overbrace{abc}</code> \\(\\overbrace{abc}\\) <code>\\underbrace{abc}</code> \\(\\underbrace{abc}\\)"},{"location":"others/latex/#_13","title":"\u62ec\u53f7","text":""},{"location":"others/latex/#_14","title":"\u666e\u901a\u62ec\u53f7","text":"Type Typeset <code>(</code> <code>)</code> \\((\\quad)\\) <code>[</code> <code>]</code> \\([\\quad]\\) <code>\\lbrace</code> <code>\\rbrace</code> \\(\\lbrace\\quad\\rbrace\\) <code>\\langle</code> <code>\\rangle</code> \\(\\langle\\quad\\rangle\\) <p>\u4f7f\u7528<code>\\left \\(</code>\u548c<code>\\right \\}</code>\u6253\u51fa\u5927\u7684\u5305\u88f9\u62ec\u53f7. \u7528<code>.</code>\u4ee3\u66ff\u62ec\u53f7\u53ef\u4ee5\u7a7a\u51fa\u6765\u4e00\u534a\u7684\u62ec\u53f7</p>"},{"location":"others/latex/#_15","title":"\u7edd\u5bf9\u503c/\u53d6\u6a21","text":"<p><code>\\left | a \\right |</code> \\(\\left | a \\right |\\) <code>\\left \\| \\vec{a} \\right \\|</code> \\(\\left \\| \\vec{a} \\right \\|\\)</p>"},{"location":"others/latex/#_16","title":"\u5411\u91cf","text":"Type Typeset <code>\\begin{matrix} a&amp;b \\\\ c&amp;d \\end{matrix}</code> \\(\\begin{matrix}a&amp;b\\\\c&amp;d\\end{matrix}\\) <code>\\begin{pmatrix} a&amp;b \\\\ c&amp;d \\end{pmatrix}</code> \\(\\begin{pmatrix}a&amp;b\\\\c&amp;d\\end{pmatrix}\\) <code>\\begin{bmatrix} a&amp;b \\\\ c&amp;d \\end{bmatrix}</code> \\(\\begin{bmatrix}a&amp;b\\\\c&amp;d\\end{bmatrix}\\) <code>\\begin{Bmatrix} a&amp;b \\\\ c&amp;d \\end{Bmatrix}</code> \\(\\begin{Bmatrix}a&amp;b\\\\c&amp;d\\end{Bmatrix}\\) <code>\\begin{vmatrix} a&amp;b \\\\ c&amp;d \\end{vmatrix}</code> \\(\\begin{vmatrix}a&amp;b\\\\c&amp;d\\end{vmatrix}\\) <code>\\begin{Vmatrix} a&amp;b \\\\ c&amp;d \\end{Vmatrix}</code> \\(\\begin{Vmatrix}a&amp;b\\\\c&amp;d\\end{Vmatrix}\\) <p>\u4e24\u4fa7\u62ec\u53f7\u4e5f\u53ef\u4ee5\u7528 <code>\\left</code> <code>\\right</code>+\u62ec\u53f7 \u6765\u5305\u88f9</p> <p>\u589e\u5e7f\u77e9\u9635</p> <pre><code>\\left[\n    \\begin{array}{cc|c}\n      1 &amp; 2 &amp; 3 \\\\\n      4 &amp; 5 &amp; 6\n    \\end{array}\n\\right]\n</code></pre> \\[ \\left[     \\begin{array}{cc|c}       1 &amp; 2 &amp; 3 \\\\       4 &amp; 5 &amp; 6     \\end{array} \\right] \\]"},{"location":"others/latex/#_17","title":"\u65b9\u7a0b\u7ec4","text":"<pre><code>\\left\\{\n\\begin{array}{c}\n    a_{11}x_1+a_{12}x_2+\\cdots+a_{1n}x_n=b_1 \\\\\n    a_{21}x_1+a_{22}x_2+\\cdots+a_{2n}x_n=b_2 \\\\\n    \\vdots \\\\\n    a_{n1}x_1+a_{n2}x_2+\\cdots+a_{nn}x_n=b_n\n\\end{array}\n\\right.\n</code></pre> \\[ \\left\\{ \\begin{array}{c}     a_{11}x_1+a_{12}x_2+\\cdots+a_{1n}x_n=b_1 \\\\     a_{21}x_1+a_{22}x_2+\\cdots+a_{2n}x_n=b_2 \\\\     \\vdots \\\\     a_{n1}x_1+a_{n2}x_2+\\cdots+a_{nn}x_n=b_n \\end{array} \\right. \\]"},{"location":"others/latex/#_18","title":"\u6587\u6863\u5e03\u5c40","text":""},{"location":"others/latex/#_19","title":"\u7a7a\u683c","text":"Name Type Typeset <code>aa</code> \\(aa\\) interword space <code>a\\ a</code> \\(a\\ a\\) 1 em <code>a\\quad a</code> \\(a\\quad a\\) 2 em <code>a\\qquad a</code> \\(a\\qquad a\\)"},{"location":"others/latex/#_20","title":"\u7d27\u7f29","text":"Name Type Typeset <code>aa</code> \\(aa\\) thinspace <code>a\\!a</code> \\(a\\!a\\) medspcae <code>a\\negmedspace a</code> \\(a\\negmedspace a\\) thickspace <code>a\\negthickspace a</code> \\(a\\negthickspace a\\)"},{"location":"others/latex/#_21","title":"\u5b57\u53f7","text":"Type Typeset <code>text</code> \\(text\\) <code>\\tiny text</code> \\(\\tiny text\\) <code>\\small text</code> \\(\\small text\\) <code>\\normalsize text</code> \\(\\normalsize text\\) <code>\\large text</code> \\(\\large text\\) <code>\\huge text</code> \\(\\huge text\\)"},{"location":"others/latex/#_22","title":"\u5b57\u4f53","text":"Type Typeset <code>\\mathbf{A}</code> \\(\\mathbf{A}\\) <code>\\mathcal{A}</code> \\(\\mathcal{A}\\) <code>\\mathit{A}</code> \\(\\mathit{A}\\) <code>\\mathrm{A}</code> \\(\\mathrm{A}\\) <code>\\mathsf{A}</code> \\(\\mathsf{A}\\) <code>\\mathtt{A}</code> \\(\\mathtt{A}\\) <code>\\mathbb{A}</code> \\(\\mathbb{A}\\) <code>\\mathfrak{A}</code> \\(\\mathfrak{A}\\) <code>\\mathscr{A}</code> \\(\\mathscr{A}\\)"},{"location":"others/latex/#_23","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u767e\u5ea6\u6587\u5e93 | Latex\u7b26\u53f7\u5bf9\u5e94\u8868</p> <p>\u767e\u5ea6\u6587\u5e93 | LaTeX Symbols\u7b26\u53f7</p> <p>CSDN | Markdown\u4e2dLatex \u6570\u5b66\u516c\u5f0f\u57fa\u672c\u8bed\u6cd5</p> <p>CSDN | \u6700\u5168 Markdown + Latex \u7f16\u5199\u6280\u5de7</p> <p>CSDN | LaTeX\u6570\u5b66\u7b26\u53f7\u603b\u7ed3</p> <p>\u7b80\u4e66 | LaTeX \u5bfc\u6570\u76f8\u5173\u7b26\u53f7</p>"},{"location":"others/pc/","title":"\u6211\u7684PC\u914d\u7f6e","text":"<p>\u4eca\u5e74\u53cc\u5341\u4e00\u914d\u4e86\u53f0\u5f0f\u673a\uff0c\u914d\u4e3b\u673a\u4e4b\u524d\u505a\u4e86\u5f88\u591a\u529f\u8bfe\uff0c\u5b66\u4e60\u5230\u8bb8\u591a\u3002\u6574\u4f53\u914d\u4e0b\u6765\u8fd8\u662f\u5f88\u6ee1\u610f\u7684\u3002</p>"},{"location":"others/pc/#_1","title":"\u4e3b\u673a\u914d\u7f6e","text":"<p>\u4e3b\u673a\u90e8\u5206\uff0c\u5728\u8d2d\u4e70\u524d\u6211\u7684\u9884\u671f\u662f\uff1a</p> <ul> <li>\u9884\u7b97\u5728 10000 \u4ee5\u5185\u3002</li> <li>\u6ca1\u6709\u5149\u6548\u3001\u7eaf\u767d\u7b49\u5916\u89c2\u9700\u6c42\u3002</li> <li>\u6bcf\u4e2a\u90e8\u5206\u90fd\u8ffd\u6c42\u6027\u4ef7\u6bd4\uff0c\u4e0d\u7528\u592a\u597d\uff0c\u4e5f\u4e0d\u80fd\u592a\u4e10\u3002</li> </ul> <p>\u7531\u4e8e\u662f\u5728\u53cc\u5341\u4e00\u671f\u95f4\uff0c\u90fd\u662f\u6298\u6263\u4ef7\u8d2d\u5165\uff0c\u52a0\u4e0a\u6211\u6ca1\u6709\u592a\u591a\u7684\u9644\u52a0\u9700\u6c42\uff0c\u6700\u7ec8\u53ea\u82b1\u4e86 8000 \u5de6\u53f3\u3002</p> \u578b\u53f7 \u8d2d\u4e70\u6e20\u9053 \u4ef7\u683c CPU R5 7500F \u76d2\u88c5 \u4eac\u4e1c\u81ea\u8425 1000 \u4e3b\u677f \u534e\u64ce B650M-H/M.2 \u4eac\u4e1c\u81ea\u8425 635 \u663e\u5361 \u4e03\u5f69\u8679 4070 Ultra W \u5929\u732b\u81ea\u8425 4099 \u5185\u5b58 \u5149\u5a01 \u5929\u7b56 \u6d77\u529b\u58ebA D5 C32 6400 16G*2 \u4eac\u4e1c\u81ea\u8425 537 \u786c\u76d8 \u6d77\u529b\u58eb P41 2T \u4eac\u4e1c\u81ea\u8425 829 \u6563\u70ed \u5229\u6c11 PA120 SE \u9ed1\u8272 \u4eac\u4e1c\u81ea\u8425 119 \u7535\u6e90 \u5148\u9a6c \u9ed1\u6d1e 750W \u9ed1\u8272 \u4eac\u4e1c\u81ea\u8425 413 \u673a\u7bb1 \u4e54\u601d\u4f2f D30 \u9ed1\u8272 \u4eac\u4e1c\u81ea\u8425 319 \u603b\u8ba1 7951"},{"location":"others/pc/#cpu","title":"CPU","text":"<p>\u56e0\u4e3a\u6211\u6709\u8d85\u9891\u9700\u6c42\uff0c\u4ef7\u683c\u5dee\u4e0d\u591a\u7684\u53ea\u6709 AMD \u7684 7500F\uff08\u53cc\u5341\u4e00\u76d2\u88c5 1000\uff09 \u548c Intel \u7684 13600KF\uff08\u53cc\u5341\u4e00\u6563\u7247 1600\uff09\uff0c\u4f46\u662f\u8fd9\u4e00\u4ee3 13600KF \u4e0d\u652f\u6301 B \u7cfb\u5217\u4e3b\u677f\u8d85\u9891\uff08\u5e76\u4e14 13600KF \u642d\u914d B \u677f\u6709\u4e00\u4e9b\u7535\u538b\u95ee\u9898\uff09\uff0c\u5982\u679c\u8981\u8d85\u9891\u7684\u8bdd\u9700\u8981\u4e0a Z790 \u4e3b\u677f\uff0c\u6700\u4fbf\u5b9c\u7684 Z790M \u5927\u6982 1100\uff0c\u8fd9\u6837\u5c31\u8981\u591a\u82b1 1000 \u5de6\u53f3\u3002 7500F \u4fbf\u5b9c\u5f88\u591a\uff0c\u5e76\u4e14\u8d85\u9891\u4e4b\u540e\u7684\u6027\u80fd\u548c\u4e0d\u8d85\u9891\u7684 13600KF \u5df2\u7ecf\u5dee\u4e0d\u591a\u4e86\u3002\u56e0\u6b64\u6700\u7ec8\u9009\u62e9\u7684\u662f 7500F\u3002</p>"},{"location":"others/pc/#_2","title":"\u4e3b\u677f","text":"<p>\u8981\u8d85\u9891\u5c31\u53ea\u80fd\u9009 B650\uff0c\u8fd9\u4e00\u4ee3 B650 \u4f9b\u7535\u975e\u5e38\u5927\u65b9\uff0c\u5982\u679c\u9009 B650M \u4e2d\u7aef\u4e3b\u677f\uff08\u4f8b\u5982 \u9ed1\u6f6e\u98ce\u66b4\u3001\u91cd\u70ae\u624b\u3001\u8feb\u51fb\u70ae\u7b49\uff09\u8fde\u9876\u7ea7\u7684 CPU \u4e5f\u5e26\u7684\u52a8\uff0c\u518d\u8fc7\u51e0\u5e74\u4e5f\u6709\u4f59\u91cf\u5347\u7ea7 CPU\u3002\u4e0d\u8fc7\u6211\u5e76\u4e0d\u6253\u7b97\u4fdd\u7559\u5347\u7ea7\u7684\u7a7a\u95f4\uff0c\u8fd9\u5957\u7535\u8111\u77ed\u671f\u4e4b\u5185\u4e0d\u4f1a\u66f4\u6362\u786c\u4ef6\uff0c\u5c31\u6ca1\u5fc5\u8981\u591a\u82b1\u94b1\u4e70\u4e2d\u7aef\u4e3b\u677f\u4e86\u3002\u5373\u4f7f\u662f\u6700\u4f4e\u7aef\u7684 B650M \u4e5f\u5e26\u7684\u52a8 7500F\u3002\u5728\u5bf9\u6bd4\u4e86\u4e3b\u6d41\u54c1\u724c\u7684 B650M \u4f4e\u7aef\u4e3b\u677f\u4e4b\u540e\uff0c\u6211\u9009\u62e9\u7684\u662f \u534e\u64ce B650M-H/M.2\uff0c\u4f18\u70b9\u662f\u4fbf\u5b9c\u800c\u4e14\u6269\u5c55\u6027\u4e0d\u9519\uff0c\u9884\u7559\u4e86 wifi \u63a5\u53e3\uff0c\u53cc m.2\uff08\u4e00\u4e2apcie 5.0\u548c\u4e00\u4e2a4.0\uff0c\u4ec5\u6b64\u4e00\u5bb6\uff09\uff0c\u7f3a\u70b9\u7684\u8bdd\u5c31\u662f\u4e0d\u80fd\u73a9\u706f\uff0c\u7f51\u53e3\u53ea\u6709 1G \u5e26\u5bbd\u800c\u4e0d\u662f 2.5G\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u63a5\u53d7\u3002</p> <p>\u7531\u4e8e\u4e3b\u677f\u9884\u7559\u4e86 wifi \u63a5\u53e3\uff0c\u6240\u4ee5\u6211\u8fd8\u5728\u6dd8\u5b9d\u4e0a\u4e70\u4e86 AX210 \u65e0\u7ebf\u7f51\u5361\u548c\u5929\u7ebf\u5957\u88c5\uff0c\u5927\u6982 100 \u5757\u94b1\u3002</p>"},{"location":"others/pc/#_3","title":"\u663e\u5361","text":"<p>\u867d\u7136\u663e\u5361\u82af\u7247\u6709 AMD\u3001Intel \u4ee5\u53ca Nvidia \u4e09\u5bb6\uff0c\u4f46\u6700\u4e3b\u6d41\u7684\u8fd8\u662f Nvidia\u3002\u7531\u4e8e\u6211\u60f3\u73a9 4k \u753b\u8d28\u7684\u6e38\u620f\uff0c\u5e76\u4e14\u9884\u7b97\u6240\u9650\uff0c\u57fa\u672c\u53ea\u6709 4070 \u4e00\u4e2a\u9009\u62e9\u3002\u5728\u663e\u5361\u5177\u4f53\u578b\u53f7\u7684\u9009\u62e9\u4e0a\uff0c\u7531\u4e8e\u4e10\u5361\u53ef\u80fd\u6709\u566a\u97f3\u3001\u6563\u70ed\u3001\u6027\u80fd\u91ca\u653e\u7b49\u95ee\u9898\uff0c\u56e0\u6b64\u6211\u6392\u9664\u4e86\u6240\u6709\u7684 4070 \u4e10\u5361\uff0c\u53ea\u8003\u8651\u4e2d\u7aef\u6216\u8005\u4e2d\u9ad8\u7aef\u7684 4070\u3002\u7136\u540e\u5c31\u662f\u770b\u54ea\u4e2a\u6298\u6263\u529b\u5ea6\u5927\u4e70\u54ea\u4e2a\uff0c\u4e70 \u4e03\u5f69\u8679 4070 Ultra W \u4ec5\u4ec5\u662f\u56e0\u4e3a\u6298\u6263\u6bd4\u8f83\u591a\u3002\u5b9e\u9645\u5230\u4e86\u4e2d\u7aef\u663e\u5361\u90fd\u5dee\u4e0d\u592a\u591a\u3002</p>"},{"location":"others/pc/#_4","title":"\u5185\u5b58","text":"<p>\u56e0\u4e3a\u6709\u5f00\u865a\u62df\u673a\u4ee5\u53ca\u5076\u5c14\u5145\u5f53\u670d\u52a1\u5668\u7528\u7684\u9700\u6c42\uff0c\u5e76\u4e14\u5927\u5185\u5b58\u81ea\u7136\u662f\u66f4\u723d\uff0c\u6240\u4ee5\u6211\u9700\u8981 32G \u5185\u5b58\u3002\u76ee\u524d\u4e3b\u8981\u6709 DDR4 \u548c DDR5 \u4e24\u79cd\u5185\u5b58\uff0cDDR5 \u6280\u672f\u6bd4\u8f83\u65b0\u3002\u9664\u4e86\u5bb9\u91cf\u4e4b\u5916\uff0c\u5185\u5b58\u6761\u7684\u7a33\u5b9a\u6027\u548c\u6027\u80fd\u53d6\u51b3\u4e8e\u9897\u7c92\uff0c\u76ee\u524d\u6027\u80fd\u4e0d\u9519\u4e14\u6027\u4ef7\u6bd4\u9ad8\u7684\u5c31\u662f \u6d77\u529b\u58eb A-die \u9897\u7c92\uff0c\u9897\u7c92\u76f8\u540c\u7684\u4ea7\u54c1\u5b9e\u8d28\u90fd\u5dee\u4e0d\u591a\u3002\u7531\u4e8e \u5149\u5a01 \u5929\u7b56 \u6d77\u529b\u58ebA D5 C32 6400 16G*2 \u53cc\u5341\u4e00\u6253\u6298\u6bd4\u8f83\u72e0\uff0c\u5e76\u4e14\u6027\u80fd\u53c2\u6570\u7b26\u5408\u6211\u7684\u9884\u671f\uff0c\u6beb\u65e0\u7591\u95ee\u5e94\u8be5\u9009\u62e9\u5b83\u3002</p>"},{"location":"others/pc/#_5","title":"\u786c\u76d8","text":"<p>\u5728\u786c\u76d8\u5927\u5c0f\u4e0a\uff0c\u6211\u9700\u8981\u81f3\u5c11 2T \u7684\u786c\u76d8\u7a7a\u95f4\u3002\u62e5\u6709\u72ec\u7acb\u7f13\u5b58\u7684\u56fa\u6001\u786c\u76d8\u8bfb\u5199\u901f\u5ea6\u66f4\u5feb\uff0c\u8fd9\u4e5f\u662f\u5fc5\u8981\u6761\u4ef6\u3002\u6b64\u5916\uff0c\u62e5\u6709\u539f\u5382\u9897\u7c92\u6280\u672f\u7684\u54c1\u724c\u66f4\u52a0\u7a33\u5b9a\u597d\u7528\uff0c\u56e0\u6b64\u6211\u53ea\u8003\u8651\u8fd9\u4e9b\u54c1\u724c\uff1a</p> <ul> <li>\u4f4e\u7aef\u54c1\u724c\uff1a\u4e1c\u829d\u7684\u94e0\u4fa0\u3001\u95ea\u8fea\u7684\u897f\u6570\uff1b</li> <li>\u4e2d\u7aef\u54c1\u724c\uff1a\u957f\u6c5f\u5b58\u50a8\u7684\u81f4\u949b\uff1b</li> <li>\u9ad8\u7aef\u54c1\u724c\uff1a\u4e09\u661f\u548c\u6d77\u529b\u58eb\u3002</li> </ul> <p>\u8fd1 1 \u5e74\u6765\u56fa\u6001\u786c\u76d8\u4ef7\u683c\u4e0b\u964d\u5f88\u591a\uff0c\u5c24\u5176\u662f\u5728\u4eca\u5e74\u7684 618 \u8fbe\u5230\u4e86\u5386\u53f2\u6700\u4f4e\u70b9\u3002\u56fa\u6001\u786c\u76d8\u5728\u4eca\u5e74 618 \u7684\u65f6\u5019\u4ef7\u683c\u8dcc\u6210\u767d\u83dc\u4ef7\uff0c\u4f46\u5728\u4eca\u5e74 9 \u6708\u5f00\u59cb\u53c8\u518d\u5ea6\u4e0a\u6da8\uff08\u4f46\u76f8\u6bd4 1 \u5e74\u524d\u7684\u4ef7\u683c\u8fd8\u662f\u4fbf\u5b9c\u4e86\u5f88\u591a\uff09\uff0c\u4eca\u5e74\u53cc\u5341\u4e00\u56fa\u6001\u786c\u76d8\u4ef7\u683c\u666e\u904d\u4e0d\u5982 618\u3002\u5728 \u6d77\u529b\u58eb P41 2T \u9996\u53d1\u5f53\u5929\uff0c\u6211\u5bf9\u6bd4\u4e86\u540c\u6027\u80fd\u56fa\u6001\u786c\u76d8\u7684\uff08\u5bf9\u6bd4\u4e09\u661f 990Pro\u548c SOLIDIGM P44 Pro\uff09618 \u4ef7\u683c\uff0c\u6beb\u65e0\u7591\u95ee\u9009\u62e9\u4e86\u8fd9\u5757\u9876\u7ea7 PCIE 4.0 \u56fa\u6001\u786c\u76d8\u3002</p> <p>\u7531\u4e8e\u4e3b\u677f\u6709 2 \u4e2a m.2 \u56fa\u6001\u63d2\u69fd\uff0c\u800c\u6211\u76ee\u524d\u53ea\u7528\u4e86\u4e00\u4e2a\uff0c\u4ee5\u540e\u4f1a\u518d\u4e70\u4e00\u5757 2T \u7684\u3002</p>"},{"location":"others/pc/#_6","title":"\u6563\u70ed","text":"<p>7500F \u7684\u529f\u8017\u4e0d\u7b97\u9ad8\uff0c\u5982\u679c\u4e0d\u8d85\u9891\u7684\u8bdd\u5355\u5854\u98ce\u51b7\u8db3\u591f\u3002\u800c\u5982\u679c\u8d85\u9891\u7684\u8bdd\u5219\u5e94\u8be5\u9009\u62e9\u53cc\u5854\u98ce\u51b7\u3002\u6027\u4ef7\u6bd4\u8f83\u9ad8\u7684\u53cc\u5854\u98ce\u51b7\u5c31\u662f \u5229\u6c11 PA120 SE\u3002</p> <p>\u9664\u4e86\u6563\u70ed\u4e4b\u5916\uff0c\u6211\u8fd8\u8d2d\u4e70\u4e86 3 \u628a\u5229\u6c11\u7684 C12C \u4f5c\u4e3a\u673a\u7bb1\u98ce\u6247\uff081 \u628a 17 \u5143\uff09\uff0c\u6b64\u5916\uff0c7500F \u76d2\u88c5\u4e5f\u9001\u4e86\u4e00\u4e2a\u6563\u70ed\u5668\u548c\u4e00\u628a\u98ce\u6247\uff0c\u98ce\u6247\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u673a\u7bb1\u98ce\u6247\u4f7f\u7528\u3002</p>"},{"location":"others/pc/#_7","title":"\u7535\u6e90","text":"<p>\u7535\u6e90\u74e6\u6570 = 160 + CPU \u529f\u8017 + \u663e\u5361\u529f\u8017\u3002 </p> <p>40 \u7cfb\u663e\u5361\u548c AMD 7000 \u7cfb\u5217\u7684 CPU \u7684\u529f\u8017\u90fd\u5f88\u4e0d\u9519\uff0c\u6211\u8fd9\u5957\u914d\u7f6e\u4f7f\u7528 650W \u7535\u6e90\u4e5f\u7ef0\u7ef0\u6709\u4f59\u3002\u5728\u7535\u6e90\u7684\u9009\u62e9\u4e0a\u9762\uff0c\u7531\u4e8e\u6211\u4e0d\u60f3\u4f7f\u7528\u592a\u8fc7\u6742\u724c\u7684\u7535\u6e90\uff0c\u51fa\u4e8e\u6027\u4ef7\u6bd4\u7684\u8003\u8651\u4e5f\u6ca1\u5fc5\u8981\u4e70\u592a\u9ad8\u7aef\u7684\u54c1\u724c\uff0c\u53ef\u4ee5\u9009\u62e9\u7684\u6709\u5229\u6c11 TG \u7cfb\u5217\u3001\u5148\u9a6c \u9ed1\u94bb\u7cfb\u5217\u7b49\uff0c\u6700\u7ec8\u8003\u8651\u5230\u7535\u6e90\u7684\u9759\u97f3\u9700\u6c42\uff0c\u9009\u62e9\u7684\u662f \u5148\u9a6c \u9ed1\u6d1e 750W \uff0c\u4e4b\u6240\u4ee5\u4e70 750W \u662f\u56e0\u4e3a\u8fd9\u4e2a\u7cfb\u5217\u6700\u4f4e\u53ea\u6709 750W\u3002</p>"},{"location":"others/pc/#_8","title":"\u673a\u7bb1","text":"<p>\u673a\u7bb1\u53ea\u8981\u80fd\u653e\u4e0b\u6240\u6709\u7684\u786c\u4ef6\u5c31\u53ef\u4ee5\u3002\u5269\u4e0b\u7684\u90fd\u662f\u989d\u5916\u7684\u505a\u5de5\u3001\u5916\u89c2\u3001\u5927\u5c0f\u3001\u62d3\u5c55\u6027\u3001\u6563\u70ed\u3001\u6613\u62c6\u6027\u7b49\u8003\u91cf\u3002</p> <p>\u6700\u7ec8\u9009\u62e9\u7684\u673a\u7bb1\u662f \u4e54\u601d\u4f2f D30 \u9ed1\u8272\uff0c\u5404\u65b9\u9762\u505a\u5de5\u4e0d\u9519\uff0c\u800c\u4e14\u4f53\u79ef\u4e0d\u7b97\u5f88\u5927\uff0c\u6700\u5438\u5f15\u6211\u7684\u529f\u80fd\u662f\u53ef\u4ee5\u53d8\u6362\u5de6\u53f3\u4fa7\u900f\u677f\uff0c\u975e\u5e38\u9002\u5408\u6211\u5728\u5bbf\u820d\u684c\u9762\u7684\u6446\u653e\u3002\u7f3a\u70b9\u662f\u4ef7\u683c\u7a0d\u5fae\u8d35\u4e86\u4e00\u4e9b\u3002</p>"},{"location":"others/pc/#_9","title":"\u5916\u8bbe","text":"<p>\u7531\u4e8e\u5728\u4e3b\u673a\u90e8\u5206\u6211\u5e76\u82b1\u5b8c\u6ca1\u6709\u5168\u90e8\u7684\u9884\u7b97\uff0810000\uff09\uff0c\u4e3b\u8981\u539f\u56e0\u662f CPU \u548c\u4e3b\u677f\u5e76\u6ca1\u6709\u9009\u62e9\u4e00\u5f00\u59cb\u7684 13600KF + Z790M\uff0c\u56e0\u800c\u7701\u4e0b\u5927\u7ea6 1200\uff0c\u6240\u4ee5\u6211\u52a0\u5728\u4e86\u5916\u8bbe\u4e0a\uff0c\u5bf9\u4e8e\u5916\u8bbe\u7684\u9884\u7b97\u662f 3000 \u5757\u3002</p> \u578b\u53f7 \u8d2d\u4e70\u6e20\u9053 \u4ef7\u683c \u663e\u793a\u5668 \u4f18\u6d3e VG2481-4K \u4eac\u4e1c\u81ea\u8425 1999 \u9f20\u6807 \u7f57\u6280\uff08G\uff09 PRO X SUPERLIGHT\uff08GPW2\uff09 \u4eac\u4e1c\u81ea\u8425 559 \u952e\u76d8 \u9ad8\u65af HS 87T \u9ed1\u66dc TTC\u91d1\u7c89\u8f74v2 \u4eac\u4e1c\u81ea\u8425 239"},{"location":"others/pc/#_10","title":"\u663e\u793a\u5668","text":"<p>\u5728\u663e\u793a\u5668\u7684\u9009\u8d2d\u4e0a\uff0c\u7531\u4e8e\u9664\u4e86\u4e3b\u673a\u4f7f\u7528\u4e4b\u5916\uff0c\u6211\u8fd8\u8981\u5916\u63a5 Mac\uff0c\u56e0\u6b64\u6211\u7684\u9700\u6c42\u662f\uff1a</p> <ul> <li>\u663e\u793a\u5668\u5fc5\u987b\u4e0e Mac \u7684\u8272\u5f69\u5c3d\u91cf\u63a5\u8fd1\uff08\u5426\u5219\u5916\u63a5 Mac \u65f6\u6709\u8f83\u5927\u53cd\u5dee\uff09\u3002</li> <li>24 \u5bf8\u5927\u5c0f\uff0c 4K \u5206\u8fa8\u7387\uff08\u8fd9\u4e2a\u53c2\u6570\u7684 PPI \u503c \u63a5\u8fd1 Mac \u7684 PPI\uff0c\u5728\u5916\u63a5\u65f6\u66f4\u52a0\u6613\u4e8e\u4f7f\u7528\uff09\u3002</li> <li>\u652f\u6301 type-c \u8f93\u51fa\uff0c\u4ee5\u53ca\u53cd\u5411\u5145\u7535\u3002</li> <li>3000 \u4ee5\u5185\u3002</li> </ul> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u8981\u6c42\u90fd\u662f\u5916\u63a5 Mac \u7684\u9700\u6c42\uff0c\u800c\u7b26\u5408\u8fd9\u4e9b\u6761\u4ef6\u7684\u663e\u793a\u5668\u51e0\u4e4e\u53ea\u6709\u4e00\u53f0\uff1a\u4f18\u6d3e VG2481-4K\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u663e\u793a\u5668\u6211\u5728\u56fd\u5e86\u8282\u4e4b\u524d\u5c31\u5df2\u7ecf\u4e70\u4e86\uff0c24 \u5bf8\u7684 4K\u5c4f\u4f53\u9a8c\u4e0b\u6765\u662f\u975e\u5e38\u6ee1\u610f\u7684\uff0c\u6027\u4ef7\u6bd4\u4e0d\u9519\u3002</p>"},{"location":"others/pc/#_11","title":"\u9f20\u6807","text":"<p>\u6211\u5bf9\u4e8e\u9f20\u6807\u7684\u8981\u6c42\u662f\uff1a</p> <ul> <li>\u6807\u51c6\u9f20\u6807\u5f62\u72b6\u3002</li> <li>\u91cd\u91cf\u5c3d\u53ef\u80fd\u8f7b\u3002</li> <li>\u5177\u5907\u7a33\u5b9a\u7684\u65e0\u7ebf\u529f\u80fd\u3002\u65e0\u7ebf\u7684\u4ea7\u54c1\u8ba9\u6211\u5feb\u4e50\u3002</li> <li>500 \u4ee5\u5185\u3002</li> </ul> <p>\u5728\u5bf9\u6bd4\u4e86\u591a\u6b3e\u4ea7\u54c1\u4e4b\u540e\uff0c\u6700\u7ec8\u9009\u62e9\u7684\u662f \u7f57\u6280\uff08G\uff09 PRO X SUPERLIGHT\uff08GPW2\uff09\uff0c\u4e0d\u8fc7\u4ef7\u683c\u8d85\u4e8660\u5757\u3002\u8fd9\u6b3e\u9f20\u6807\u7b26\u5408\u6211\u7684\u6240\u6709\u9700\u6c42\uff0c\u4f7f\u7528\u4f53\u9a8c\u4e0a\u7684\u8bdd\uff0c\u4e2d\u89c4\u4e2d\u77e9\u7684\u4e00\u6b3e\u9f20\u6807\uff0c\u6ca1\u6709\u7f3a\u70b9\u3002</p>"},{"location":"others/pc/#_12","title":"\u952e\u76d8","text":"<p>\u6211\u5bf9\u4e8e\u952e\u76d8\u7684\u8981\u6c42\u662f\uff1a</p> <ul> <li>400 \u4ee5\u5185\u3002</li> <li>87\u914d\u5217\u3002\u56e0\u4e3a 104 \u914d\u5217\u5c0f\u952e\u76d8\u90e8\u5206\u4f1a\u6321\u4f4f\u9f20\u6807\uff0c\u800c 75 \u914d\u5217\u7684\u53f3 shift \u6309\u952e\u4e0d\u5b8c\u6574\uff0c\u8fd9\u662f\u6211\u975e\u5e38\u8ba8\u538c\u7684\u8bbe\u8ba1\u3002</li> <li>\u652f\u6301\u4e09\u6a21\u3002\u65e0\u7ebf\u7684\u4ea7\u54c1\u8ba9\u6211\u5feb\u4e50\u3002</li> <li>\u652f\u6301\u70ed\u63d2\u62d4\u3001PBT \u5de5\u827a\u3002</li> <li>\u673a\u68b0\u952e\u76d8\uff0c\u9002\u5408\u6253\u5b57\u7684\u8f74\u4f53\u3002\u56e0\u4e3a\u5e73\u65f6\u6211\u8fd8\u662f\u7528\u952e\u76d8\u6253\u5b57\u6bd4\u8f83\u591a\uff0c\u73a9 3A \u6e38\u620f\u7684\u8bdd\u53ef\u4ee5\u7528\u624b\u67c4\u3002</li> <li>\u4f4e\u4e8e 18 mm \u7684\u524d\u9ad8\u3002\u524d\u9ad8\u8fc7\u9ad8\u624b\u4f1a\u975e\u5e38\u7d2f\u3002</li> </ul> <p>\u5b9e\u9645\u4e0a\u8fd9\u51e0\u5e74\u56fd\u4ea7\u673a\u68b0\u952e\u76d8\u975e\u5e38\u5185\u5377\uff0c\u8bb8\u591a\u5728\u4ee5\u524d\u52a8\u8f84 600 \u4ef7\u4f4d\u624d\u6709\u7684\u529f\u80fd\u73b0\u5728\u5df2\u7ecf\u4e0b\u653e\u5230\u4e86 300 \u4ef7\u4f4d\u751a\u81f3\u66f4\u4f4e\u3002\u5e76\u4e14\u5386\u7ecf\u4e86\u6570\u6b21\u5bf9\u6bd4-\u9009\u8d2d-\u4f53\u9a8c-\u9000\u8d27\u7684\u8fc7\u7a0b\u4e4b\u540e\uff08\u56e0\u4e3a\u6211\u5bf9\u952e\u76d8\u975e\u5e38\u6311\uff0c\u6240\u4ee5\u4e00\u5171\u4e70\u4e86 3 \u6b3e\u4e0d\u540c\u7684\u952e\u76d8\uff0c\u4e0d\u6ee1\u610f\u7684\u90fd\u9000\u8d27\u4e86\uff09\uff0c\u6700\u7ec8\u6211\u9009\u62e9\u7684\u662f \u9ad8\u65af HS 87T \u9ed1\u66dc TTC\u91d1\u7c89\u8f74v2\uff0c\u8fd9\u6b3e\u952e\u76d8\u7b26\u5408\u4e0a\u8ff0\u6240\u6709\u8981\u6c42\uff0c\u5e76\u4e14\u8f74\u4f53\u7684\u6253\u5b57\u624b\u611f\u975e\u5e38\u4e0d\u9519\u3002\u6211\u7684\u8d2d\u5165\u4ef7\u683c\u662f 369\uff0c\u4e0d\u8fc7\u5728\u4ef7\u4fdd\u671f\u95f4\u8fd9\u6b3e\u952e\u76d8\u7591\u4f3c\u51fa\u73b0\u4e34\u65f6\u5de5\u4ef7\u683c\uff0c\u8ba9\u6211\u4ef7\u4fdd\u6210\u529f\u3002</p>"},{"location":"others/pc/#_13","title":"\u81ea\u95ee\u81ea\u7b54","text":""},{"location":"others/pc/#_14","title":"\u914d\u53f0\u5f0f\u7684\u7528\u9014\u662f\u4ec0\u4e48","text":"<ol> <li>\u73a9\u6e38\u620f\uff1a\u672c\u79d1\u7684\u65f6\u5019\u7528\u7684\u662f Mac\uff0c\u6253\u4e0d\u4e86\u6e38\u620f\uff0c\u57fa\u672c\u5c31\u662f\u5728 switch \u4e0a\u73a9\u6e38\u620f\uff0cswitch \u6e38\u620f\u90fd\u73a9\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u56e0\u6b64\u840c\u751f\u4e86\u7ec4\u88c5\u53f0\u5f0f\u673a\uff0c\u4f53\u9a8c pc \u7aef\u6e38\u620f\u7684\u60f3\u6cd5\u3002</li> <li>\u5f00\u53d1\u9700\u6c42\uff1a\u6211\u7684 Mac \u53ea\u6709 16GB \u5185\u5b58\uff0c\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5e76\u4e0d\u591f\u7528\u3002\u6211\u9700\u8981\u66f4\u5927\u7684\u5185\u5b58\u6765\u6ee1\u8db3\u5f00\u53d1\u9700\u6c42\u3002\u6b64\u5916\uff0c\u591a\u4e00\u53f0\u7535\u8111\u5c31\u80fd\u5e72\u66f4\u591a\u4e8b\u60c5\uff0c\u4f8b\u5982\u5f53\u670d\u52a1\u5668\u4e4b\u7c7b\u7684\u3002</li> <li>\u5c1d\u8bd5\u88c5\u673a\uff1a\u4e4b\u524d\u6ca1\u6709\u81ea\u5df1\u88c5\u8fc7\u4e3b\u673a\uff0c\u60f3\u81ea\u5df1\u88c5\u4e00\u4e0b\u7535\u8111\u3002</li> </ol>"},{"location":"others/pc/#_15","title":"\u53f0\u5f0f\u673a\u653e\u5728\u5b9e\u9a8c\u5ba4\u8fd8\u662f\u5bbf\u820d","text":"<p>\u5bbf\u820d\u3002\u5317\u90ae\u5bbf\u820d\u633a\u5bbd\u655e\uff0c\u4e0b\u684c\u591f\u5927\uff0c\u56e0\u6b64\u5165\u4f4f\u7684\u7b2c\u4e00\u5929\u5c31\u51b3\u5b9a\u653e\u5728\u5bbf\u820d\u3002\u81f3\u4e8e\u5b9e\u9a8c\u5ba4\u5de5\u4f4d\u7528 Mac \u5c31\u597d\uff0c\u53cd\u6b63 Mac \u4e0d\u91cd\u3002</p>"},{"location":"others/pc/#_16","title":"\u6ca1\u6709\u8003\u8651\u6e38\u620f\u672c\u5417","text":"<p>\u5b8c\u5168\u6ca1\u6709\u3002\u6e38\u620f\u672c\u7684\u6027\u80fd\u548c\u4e3b\u673a\u662f\u65e0\u6cd5\u6bd4\u8f83\u7684\uff0c\u5e76\u4e14\u6211\u6ca1\u6709\u5728\u5047\u671f\u5c06\u6e38\u620f\u672c\u5e26\u56de\u5bb6\u7684\u9700\u6c42\uff0c\u5373\u4f7f\u4e70\u4e86\u6e38\u620f\u672c\u4e5f\u4e0d\u4f1a\u5e26\u56de\u5bb6\uff0c\u6240\u4ee5\u5c06\u4e3b\u673a\u56fa\u5b9a\u5728\u5bbf\u820d\u662f\u6700\u597d\u7684\u3002</p>"},{"location":"others/pc/#_17","title":"\u53ef\u4ee5\u7167\u7740\u6211\u7684\u914d\u7f6e\u4e70\u540c\u6b3e\u5417","text":"<p>\u4e0d\u53ef\u4ee5\uff0c\u539f\u56e0\u5982\u4e0b\uff1a</p> <ol> <li>\u7535\u5b50\u4ea7\u54c1\u7684\u8fed\u4ee3\u66f4\u65b0\u5f88\u5feb\uff0c\u53ef\u80fd\u6211\u4e70\u7684\u65f6\u5019\u5177\u6709\u6027\u4ef7\u6bd4\u7684\u4ea7\u54c1\uff0c\u968f\u7740\u65b0\u4ea7\u54c1\u7684\u53d1\u5e03\u6216\u8005\u5e02\u573a\u4ef7\u683c\u7684\u53d8\u52a8\u5931\u53bb\u6027\u4ef7\u6bd4\u3002</li> <li>DIY \u4e3b\u673a\u6700\u91cd\u8981\u7684\u5c31\u662f\u9002\u5408\u81ea\u5df1\uff0c\u660e\u786e\u81ea\u5df1\u6709\u54ea\u65b9\u9762\u7684\u9700\u6c42\uff0c\u9009\u8d2d\u6070\u5f53\u7684\u786c\u4ef6\u662f\u6700\u91cd\u8981\u7684\u3002</li> </ol> <p>\u642d\u914d\u4e3b\u673a\u914d\u4ef6\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u5c31\u662f\u60f3\u6e05\u695a\u81ea\u5df1\u7684\u9700\u6c42\u7684\u8fc7\u7a0b\uff0c\u6709\u6240\u53d6\u820d\u624d\u80fd\u642d\u914d\u51fa\u9002\u5408\u81ea\u5df1\u7684\u4e3b\u673a\u3002</p> <p>\u5982\u679c\u6709\u4e3b\u673a\u642d\u914d\u65b9\u9762\u7684\u95ee\u9898\uff0c\u6211\u975e\u5e38\u4e50\u610f\u89e3\u7b54\u4f60\u7684\u95ee\u9898\u3002</p>"}]}