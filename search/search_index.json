{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9648\u88d5\u6770\u7684\u4e2a\u4eba\u7f51\u7ad9","text":"<p>https://codezhxs.github.io</p> <p>\u4f60\u597d!!</p> <p>\u70b9\u51fb\u4e0a\u65b9\u7684  \u6309\u94ae\u5207\u6362\u591c\u95f4\u6a21\u5f0f</p> <p>\u5982\u679c\u6709\u7a7a\u6211\u4f1a\u66f4\u65b0\u535a\u5ba2\u5feb\u6377\u952e\u8bf4\u660e -&gt; \u53c2\u8003\u6587\u6863</p> <p>\u6700\u8fd1\u66f4\u65b0\uff1a</p> <ul> <li>(20231009) \u300aJava\u6838\u5fc3\u6280\u672f\u300b\u7b14\u8bb0 \u7b2c5\u7ae0</li> <li>(20231005) \u300aJava\u6838\u5fc3\u6280\u672f\u300b\u7b14\u8bb0 \u7b2c4\u7ae0</li> <li>(20231004) \u5317\u4eac\u5e72\u996d\u53c2\u8003\u8868</li> <li>(20230928) \u300aJava\u6838\u5fc3\u6280\u672f\u300b\u7b14\u8bb0 \u7b2c3\u7ae0</li> <li>(20230927) \u300aJava\u6838\u5fc3\u6280\u672f\u300b\u7b14\u8bb0 \u7b2c2\u7ae0</li> </ul>"},{"location":"algorithm/","title":"\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e9b\u7b97\u6cd5\u9898\u89e3","text":"<p>\u76ee\u524d\u968f\u7f18\u66f4\u65b0abc\u9898\u89e3...</p>"},{"location":"algorithm/#_2","title":"\u8c22\u8c22","text":""},{"location":"algorithm/AtCoder/abc308/","title":"ABC308(A-G)","text":"<p>AtCoder Beginner Contest 308 - AtCoder</p> <p>\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u573a\uff0c\u53ea\u6709G\u9898\u7684\u5c0f\u7ed3\u8bba\u548c\u8fb9\u754c\u5904\u7406\u82b1\u4e86\u4e00\u70b9\u65f6\u95f4\u3002</p>"},{"location":"algorithm/AtCoder/abc308/#a-new-scheme","title":"A - New Scheme","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(8\\) \u7684\u5e8f\u5217 \\(A = (A_1,A_2,...,A_8)\\) \uff0c\u5224\u65ad\u5e8f\u5217\u662f\u5426\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6</p> <ul> <li>\u5e8f\u5217\u662f\u5426\u5355\u8c03\u9012\u589e\uff0c\u5373\u662f\u5426\u6ee1\u8db3 \\(A_1 \u2264 A_2 \u2264\\  ... \u2264 A_8\\)</li> <li>\u5e8f\u5217\u7684\u6bcf\u4e2a\u503c\u662f\u5426\u5728 \\([100, 675]\\) \u7684\u8303\u56f4\u5185\u3002</li> <li>\u5e8f\u5217\u7684\u6bcf\u4e2a\u503c\u662f\u5426\u662f \\(25\\) \u7684\u500d\u6570\u3002</li> </ul> <p>\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\u5219\u8f93\u51fa <code>Yes</code>\uff0c\u5426\u5219\u8f93\u51fa <code>No</code></p> <p>\u76f4\u63a5\u6a21\u62df</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    int a[10], pre = 0;\n    bool f = 1;\n    for(int i = 0; i &lt; 8; i++)\n    {\n        cin &gt;&gt; a[i];\n        if(a[i] &lt; pre || a[i] &lt; 100 || a[i] &gt; 675 || a[i] % 25)\n            f = 0;\n        pre = a[i];\n    }\n    if(f)\n        puts(\"Yes\");\n    else\n        puts(\"No\");\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#b-default-price","title":"B - Default Price","text":"<p>\u4f60\u5728\u9910\u5385\u70b9\u4e86 \\(N\\) \u4e2a\u83dc\uff0c\u6bcf\u4e2a\u83dc\u7684\u540d\u5b57\u7528\u5b57\u7b26\u4e32 \\(C_i\\) \u8868\u793a\u3002\u83dc\u5355\u4e2d\u6709 \\(M\\) \u79cd\u83dc\uff0c\u7b2c \\(i\\) \u79cd\u83dc\u7684\u540d\u5b57\u662f \\(D_i\\) \uff0c\u4ef7\u683c\u662f \\(P_i\\) \uff0c\u6709\u4e00\u4e9b\u83dc\u7684\u540d\u5b57\u6ca1\u6709\u5728\u83dc\u5355\u4e2d\uff0c\u4ef7\u683c\u662f \\(P_0\\) \uff0c\u95ee\uff1a\u4f60\u9700\u8981\u652f\u4ed8\u591a\u5c11\u94b1\u3002</p> <p>\u54c8\u5e0c\u8868\u5373\u53ef</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;unordered_map&gt;\n\nusing namespace std;\n\nint main()\n{\n    int n, m, p0, x;\n    cin &gt;&gt; n &gt;&gt; m;\n    vector&lt;string&gt; a(n), b(m);\n    for(int i = 0; i &lt; n; i++)\n        cin &gt;&gt; a[i];\n    for(int i = 0; i &lt; m; i++)\n        cin &gt;&gt; b[i];\n    cin &gt;&gt; p0;\n    unordered_map&lt;string, int&gt; p;\n    for(int i = 0; i &lt; m; i++)\n    {\n        cin &gt;&gt; x;\n        p[b[i]] = x;\n    }\n    int sum = 0;\n    for(int i = 0; i &lt; n; i++)\n    {\n        if(p.count(a[i]))\n            sum += p[a[i]];\n        else\n            sum += p0;\n    }\n    cout &lt;&lt; sum &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#c-standings","title":"C - Standings","text":"<p>\u6709 \\(N\\) \u4e2a\u4eba\uff0c\u6bcf\u4eba\u6709 \\(A_i\\) \u548c \\(B_i\\) \u5c5e\u6027\uff0c\u6309\u7167\u6bcf\u4e2a\u4eba\u7684 \\(\\large \\frac{A_i}{A_i+B_i}\\) \u964d\u5e8f\u6392\u5e8f\uff0c\u5982\u679c \\(\\large \\frac{A_i}{A_i+B_i}\\) \u76f8\u540c\u5219\u6309\u7167\u7f16\u53f7\u5347\u5e8f\u6392\u5217\uff0c\u8f93\u51fa\u6392\u5217\u540e\u7684\u7f16\u53f7\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\n\nint n;\n\nstruct Node {\n    int id;\n    LL a, s;\n    bool operator &gt; (const Node &amp;y) const\n    {\n        LL m1 = a * y.s, m2 = y.a * s;\n        if(m1 != m2)\n            return m1 &gt; m2;\n        return id &lt; y.id;\n    }\n}p[maxn];\n\nint main()\n{\n    cin &gt;&gt; n;\n    for(int i = 0; i &lt; n; i++)\n    {\n        p[i].id = i + 1;\n        cin &gt;&gt; p[i].a &gt;&gt; p[i].s;\n        p[i].s += p[i].a;\n    }\n    sort(p, p+n, greater&lt;Node&gt;());\n    for(int i = 0; i &lt; n; i++)\n        cout &lt;&lt; p[i].id &lt;&lt; ' ';\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#d-snuke-maze","title":"D - Snuke Maze","text":"<p>\u6709\u4e00\u4e2a \\(H \\times M\\) \u7684\u4e8c\u7ef4\u5730\u56fe\uff0c\u5730\u56fe\u4e0a\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u3002\u4f60\u53ef\u4ee5\u8fdb\u884c <code>\u4e0a\u4e0b\u5de6\u53f3</code> \u7684\u79fb\u52a8\uff0c\u5728\u79fb\u52a8\u65f6\uff0c\u9700\u9075\u5faa <code>snuke</code> \u7684\u987a\u5e8f\uff0c\u5373\uff1a\u5982\u679c\u4f60\u76ee\u524d\u7684\u6240\u5728\u5b57\u7b26\u662f <code>s</code>\uff0c\u4e0b\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f <code>n</code>\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff08\u53ef\u4ee5\u5faa\u73af\uff0c\u5373 <code>e</code> \u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u662f <code>s</code>\uff09\u3002</p> <p>\u521d\u59cb\u65f6\u4f60\u7684\u4f4d\u7f6e\u662f \\((1, 1)\\) \uff0c\u95ee\uff1a\u80fd\u4e0d\u80fd\u8d70\u5230 \\((H, M)\\) \uff0c\u5982\u679c\u80fd\u5219\u8f93\u51fa <code>Yes</code> \u5426\u5219\u8f93\u51fa <code>No</code></p> <p>\u76f4\u63a5dfs</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 510;\nchar g[maxn][maxn];\nbool vis[maxn][maxn];\nint n, m;\nchar ne[300];\n\nint dr[] = {-1, 1, 0, 0};\nint dc[] = {0, 0, -1, 1};\n\nbool inlim(int r, int c)\n{return r &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; c &gt;= 0 &amp;&amp; c &lt; m;}\n\nvoid dfs(int r, int c)\n{\n    vis[r][c] = 1;\n    char nch = ne[g[r][c]];\n    for(int i = 0; i &lt; 4 &amp;&amp; !vis[n-1][m-1]; i++)\n    {\n        int nr = r + dr[i], nc = c + dc[i];\n        if(!inlim(nr, nc))\n            continue;\n        if(!vis[nr][nc] &amp;&amp; g[nr][nc] == nch)\n            dfs(nr, nc);\n    }\n}\n\nint main()\n{\n    ne['s'] = 'n';\n    ne['n'] = 'u';\n    ne['u'] = 'k';\n    ne['k'] = 'e';\n    ne['e'] = 's';\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 0; i &lt; n; i++)\n        cin &gt;&gt; g[i];\n    dfs(0, 0);\n    if(vis[n-1][m-1])\n        puts(\"Yes\");\n    else\n        puts(\"No\");\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#e-mex","title":"E - MEX","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5e8f\u5217 \\(A\\) \uff0c\\(A\\) \u4e2d\u7684\u503c\u662f \\(0\\) \uff0c\\(1\\) \uff0c\\(2\\) \uff0c\u540c\u65f6\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5b57\u7b26\u4e32 \\(S\\) \uff0c\\(S\\) \u4e2d\u7684\u5b57\u7b26\u662f \\(M\\) \uff0c\\(E\\) \uff0c\\(X\\) </p> <p>\u6c42\u51fa\u6240\u6709\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u4e09\u5143\u7ec4 \\(mex(A_i, A_j, A_k)\\) \u503c\u7684\u548c\uff0c</p> <ul> <li>\\(1 \u2264 i &lt; j &lt; k \u2264 N\\)</li> <li>\\(S_iS_jS_k=\\) <code>MEX</code></li> </ul> <p>\\(mex(A_i, A_j, A_k)\\) \u8868\u793a\u6ca1\u6709\u51fa\u73b0\u5728 \\((A_i, A_j, A_k)\\) \u4e2d\u7684\u6700\u5c0f\u975e\u8d1f\u6574\u6570\u503c\u3002</p> <p>\u5206<code>0</code>, <code>1</code>, <code>2</code>\u5904\u7406\u4e00\u4e2a\u524d\u7f00\u548c\u8bb0\u5f55 <code>M</code> \u7684\u6570\u91cf\uff0c<code>M[i][0]</code> \u8868\u793a\u524d <code>i</code> \u4e2a\u5b57\u7b26\u4e2d\u5bf9\u5e94\u6570\u5b57\u662f <code>0</code> \u7684\u5b57\u7b26 <code>M</code> \u7684\u6570\u91cf\uff0c\u5176\u4f59\u540c\u7406\uff0c\u518d\u5904\u7406\u51fa <code>X</code> \u7684\u540e\u7f00\u548c\u3002\u7136\u540e\u679a\u4e3e\u4e2d\u95f4\u7684 <code>E</code> \uff0c\u5206\u60c5\u51b5\u7d2f\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint mex[3][3][3], n, a[maxn], M[maxn][3], X[maxn][3];\nchar s[maxn];\n\nint main()\n{\n    for(int i = 0; i &lt; 3; i++)\n        for(int j = 0; j &lt; 3; j++)\n            for(int k = 0; k &lt; 3; k++)\n                for(int x = 0; x &lt;= 3; x++)\n                    if(x != i &amp;&amp; x != j &amp;&amp; x != k)\n                    {\n                        mex[i][j][k] = x;\n                        break;\n                    }\n    cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; i++)\n        scanf(\"%d\", &amp;a[i]);\n    scanf(\"%s\", s+1);\n    for(int i = 1; i &lt;= n; i++)\n    {\n        for(int j = 0; j &lt; 3; j++)\n            M[i][j] = M[i-1][j];\n        if(s[i] == 'M')\n            M[i][a[i]]++;\n    }\n    for(int i = n; i; i--)\n    {\n        for(int j = 0; j &lt; 3; j++)\n            X[i][j] = X[i+1][j];\n        if(s[i] == 'X')\n            X[i][a[i]]++;\n    }\n    LL ans = 0;\n    for(int i = 1; i &lt;= n; i++)\n    {\n        if(s[i] == 'E')\n        {\n            int y = a[i];\n            for(int x = 0; x &lt; 3; x++)\n                for(int z = 0; z &lt; 3; z++)\n                    ans += (LL)mex[x][y][z] * M[i][x] * X[i][z];\n        }\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#f-vouchers","title":"F - Vouchers","text":"<p>\u6709 \\(N\\) \u4e2a\u5546\u54c1\uff0c\u7b2c \\(i\\) \u4e2a\u5546\u54c1\u7684\u4ef7\u683c\u662f \\(P_i\\) \u5143\u3002\u6709 \\(M\\) \u5f20\u4f18\u60e0\u5238\uff0c\u7b2c \\(i\\) \u5f20\u4f18\u60e0\u5238\u662f\u6ee1 \\(L_i\\) \u51cf \\(D_i\\) \u5143\u7684\u3002\u6bcf\u4e00\u4e2a\u5546\u54c1\u53ea\u80fd\u7528\u4e00\u5f20\u4f18\u60e0\u5238\uff0c\u6bcf\u4e00\u5f20\u4f18\u60e0\u5238\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u4e14\u53ea\u80fd\u5bf9\u4e00\u4e2a\u5546\u54c1\u4f7f\u7528\u3002\u95ee\uff1a\u5c06\u8fd9 \\(N\\) \u4e2a\u5546\u54c1\u5168\u90e8\u4e70\u4e0b\uff0c\u6700\u5c11\u9700\u8981\u82b1\u591a\u5c11\u94b1\uff1f</p> <p>\u8d2a\u5fc3\uff0c\u5c06\u5546\u54c1\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u4f18\u60e0\u5238\u6309\u7167 \\(L_i\\) \u6392\u5e8f\uff0c\u7528\u4e00\u4e2a\u5927\u9876\u5806\u6309\u7167 \\(D\\) \u7684\u503c\u7ef4\u62a4\u5f53\u524d\u53ef\u7528\u7684\u4f18\u60e0\u5238\uff0c\u4ece\u5c0f\u5230\u5927\u626b\u63cf\u5546\u54c1\uff0c\u6bcf\u6b21\u8d2d\u4e70\u5546\u54c1\u65f6\u5f39\u51fa\u4f18\u60e0\u529b\u5ea6\u6700\u5927\u7684\u4f18\u60e0\u5238\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(NlogN + MlogM)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nint p[maxn], n, m;\n\nstruct Node{\n    int l, d;\n    bool operator &lt; (const Node &amp;y) const\n    {return l &lt; y.l;}\n}c[maxn];\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 0; i &lt; n; i++)\n        scanf(\"%d\", &amp;p[i]);\n    for(int i = 0; i &lt; m; i++)\n        scanf(\"%d\", &amp;c[i].l);\n    for(int i = 0; i &lt; m; i++)\n        scanf(\"%d\", &amp;c[i].d);\n    sort(p, p+n);\n    sort(c, c+m);\n    priority_queue&lt;int&gt; heap;\n    LL sum = 0;\n    for(int i = 0, j = 0; i &lt; n; i++)\n    {\n        while(j &lt; n &amp;&amp; c[j].l &lt;= p[i])\n            heap.push(c[j++].d);\n        if(!heap.empty())\n        {\n            p[i] -= heap.top();\n            heap.pop();\n        }\n        sum += p[i];\n    }\n    cout &lt;&lt; sum &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc308/#g-minimum-xor-pair-query","title":"G - Minimum Xor Pair Query","text":"<p>\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u6709\u4e09\u79cd\u64cd\u4f5c:</p> <ul> <li><code>1 x</code> \uff1a\u4ece\u96c6\u5408\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6570 <code>x</code></li> <li><code>2 x</code> \uff1a\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u4e00\u4e2a\u6570 <code>x</code></li> <li><code>3</code> \uff1a\u67e5\u8be2\u96c6\u5408\u4e2d\u6700\u5c0f\u7684\u5f02\u6216\u70b9\u5bf9\u7684\u503c\u3002</li> </ul> <p>\u7ed3\u8bba\u9898\uff1a\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684\u5f02\u6216\u70b9\u5bf9\uff0c\u4e00\u5b9a\u6765\u81ea\u4e8e\u5c06\u6570\u7ec4\u6392\u5e8f\u540e\u67d0\u4e00\u5bf9\u76f8\u90bb\u7684\u6570\u3002</p> <p>\u8bc1\u660e\u5982\u4e0b\uff1a\u8003\u8651\u4e09\u4e2a\u6570\u7684\u60c5\u51b5 \\(x \u2264 y \u2264 z\\) \uff0c\u53ea\u9700\u8981\u8bc1\u660e \\(min(x \\oplus y, y \\oplus z) &lt; x \\oplus z\\)</p> <p>\u5047\u8bbe \\(x\\) \u548c \\(z\\) \u7684\u6700\u9ad8\u7684\u4e0d\u540c\u4f4d\u662f\u7b2c \\(k\\) \u4f4d\uff08\u4ece\u53f3\u5f00\u59cb\u7b97\uff0c\u53f3\u8fb9\u662f\u7b2c \\(0\\) \u4f4d\uff09\uff0c\u7531\u4e8e \\(x \u2264 z\\) \uff0c\u56e0\u6b64 \\(z\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(1\\) \uff0c\\(x\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(0\\) \uff0c\u6b64\u65f6\u6709 \\(x \\oplus z \u2265 2^{k}\\)</p> <p>\u5bf9\u4e8e \\(y\\) \u7684\u7b2c \\(k+1\\) \u4f4d\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0c\\(y\\) \u7684\u5206\u5e03\u60c5\u51b5\u4e00\u5b9a\u4e0e \\(x\\) \u548c \\(z\\) \u7684\u60c5\u51b5\u76f8\u540c\uff08\u5426\u5219\u5c31\u4e0e \\(x \u2264 y \u2264 z\\) \u77db\u76fe\uff09\u3002</p> <p>\u8003\u8651 \\(y\\) \u7684\u7b2c \\(k\\) \u4f4d\uff1a</p> <ul> <li>\u82e5 \\(y\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(0\\) \uff0c\u5219\u6709 \\(x \\oplus y &lt; 2^{k}\\)</li> <li>\u82e5 \\(y\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(1\\) \uff0c\u5219\u6709 \\(y \\oplus z &lt; 2^{k}\\)</li> </ul> <p>\u56e0\u6b64\u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u6709 \\(min(x \\oplus y, y \\oplus z) &lt; x \\oplus z\\) \uff0c\u8bc1\u6bd5\u3002</p> <p>\u7ef4\u62a4\u6709\u5e8f\u7684\u6570\u7ec4\uff0c\u5f53\u7136\u4f7f\u7528 <code>set</code> \u5b9e\u73b0\u4e86\uff0c\u5f53\u7136\u672c\u9898\u6709\u91cd\u590d\u503c\uff0c\u6240\u4ee5\u8981\u7528 <code>multiset</code>\uff0c\u5f00\u4e00\u4e2a <code>num</code> \u7ef4\u62a4\u6570\u5b57\u7684\u96c6\u5408\uff0c\u7136\u540e\u5f00\u4e00\u4e2a <code>val</code> \u7ef4\u62a4\u6240\u6709\u76f8\u90bb\u7684\u5f02\u6216\u503c\u3002\u5bf9\u4e8e\u4e09\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u6dfb\u52a0 <code>x</code> \uff1a\u5047\u8bbe\u6dfb\u52a0\u540e <code>num</code> \u4e2d\u6709 <code>pre \u2264 x \u2264 ne</code>\uff0c\u6dfb\u52a0\u540e <code>(pre, ne)</code> \u4e0d\u518d\u76f8\u90bb\uff0c\u5728 <code>val</code> \u4e2d\u5220\u6389 <code>(pre, ne)</code> \u7684\u5f02\u6216\u503c\uff0c\u540c\u65f6\u6dfb\u52a0 <code>(pre, x)</code> \u548c <code>(x, ne)</code> \u7684\u5f02\u6216\u503c\u3002</li> <li>\u5220\u9664 <code>x</code> \uff1a\u5047\u8bbe\u5220\u9664\u524d <code>num</code> \u4e2d\u6709 <code>pre \u2264 x \u2264 ne</code>\uff0c\u5220\u9664\u540e <code>(pre, x)</code> \u548c <code>(x, ne)</code> \u4e0d\u518d\u76f8\u90bb\uff0c\u5220\u9664\u5176\u5f02\u6216\u503c\uff0c\u540c\u65f6\u6dfb\u52a0 <code>(pre, ne)</code> \u7684\u5f02\u6216\u503c\u3002</li> <li>\u67e5\u8be2\uff1a\u7531\u4e8e <code>val</code> \u4e5f\u662f <code>multiset</code>\uff0c\u76f4\u63a5\u8f93\u51fa <code>begin</code> \u8fed\u4ee3\u5668\u503c\u3002</li> </ul> <p>\u4e09\u79cd\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f \\(O(logN)\\)\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(qlogN)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\nmultiset&lt;int&gt; num, val;\n\nint main()\n{\n    int q, op, x;\n    multiset&lt;int&gt;::iterator pre, ne;\n    cin &gt;&gt; q;\n    while(q--)\n    {\n        scanf(\"%d\", &amp;op);\n        if(op == 1)\n        {\n            scanf(\"%d\", &amp;x);\n            pre = ne = num.upper_bound(x);\n            bool pf = 0, nf = 0;\n            if(ne != num.end())\n                val.insert(x ^ *ne), nf = 1;\n            if(pre != num.begin())\n            {\n                pre--;\n                val.insert(*pre ^ x);\n                pf = 1;\n            }\n            if(pf &amp;&amp; nf)\n                val.erase(val.find(*pre ^ *ne));\n\n            num.insert(x);\n        }\n        else if(op == 2)\n        {\n            scanf(\"%d\", &amp;x);\n            pre = ne = num.find(x);\n            bool pf = 0, nf = 0;\n            if(pre != num.begin())\n            {\n                pf = 1;\n                pre--;\n                val.erase(val.find(*pre ^ x));\n            }\n            ne++;\n            if(ne != num.end())\n            {\n                val.erase(val.find(x ^ *ne));\n                nf = 1;\n            }\n            if(pf &amp;&amp; nf)\n                val.insert(*pre ^ *ne);\n            num.erase(num.find(x));\n        }\n        else\n            cout &lt;&lt; *val.begin() &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/","title":"ABC309(A-F)","text":"<p>Denso Create Programming Contest 2023 (AtCoder Beginner Contest 309) - AtCoder</p> <p>G\u7684 <code>\u5bb9\u65a5</code> + <code>dp</code> \u4e0d\u4f1a\u634f\uff0c\u9e3d\u4e86...</p>"},{"location":"algorithm/AtCoder/abc309/#a-nine","title":"A - Nine","text":"<p>\u6709\u4e00\u4e2a \\(3 \\times 3\\) \u7684\u7f51\u683c\uff1a\\(\\begin{matrix} 1 &amp; 2 &amp; 3\\\\  4 &amp; 5 &amp; 6\\\\  7 &amp; 8 &amp; 9  \\end{matrix}\\) \uff0c\u7ed9\u4f60\u4e24\u4e2a\u6570\uff0c\u5224\u65ad\u8fd9\u4e24\u4e2a\u6570\u662f\u5426\u540c\u4e00\u884c\u4e14\u76f8\u90bb\u3002</p> <p>\u6c42\u51fa\u884c\u5217\u5373\u53ef...</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    int a, b, ra, rb, ca, cb;\n    cin &gt;&gt; a &gt;&gt; b;\n    a--, b--;\n    ra = a / 3, rb = b / 3;\n    ca = a % 3, cb = b % 3;\n    if(ra == rb &amp;&amp; abs(ca-cb) &lt;= 1)\n        cout &lt;&lt; \"Yes\" &lt;&lt; endl;\n    else\n        cout &lt;&lt; \"No\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#b-rotate","title":"B - Rotate","text":"<p>\u7ed9\u4f60\u4e00\u4e2a \\(N \\times N\\) \u7684\u77e9\u9635\uff0c\u5c06\u77e9\u9635\u56db\u5468\u7684\u5143\u7d20\u987a\u65f6\u9488\u8f6c\u52a8\u4e00\u6b65\uff0c\u8f93\u51fa\u8f6c\u52a8\u540e\u7684\u77e9\u9635\u3002</p> <p>\u76f4\u63a5\u6a21\u62df\u5373\u53ef</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n;\nchar g[maxn][maxn];\n\nint main()\n{\n    cin &gt;&gt; n;\n    for(int i = 0; i &lt; n; i++)\n        cin &gt;&gt; g[i];\n    int t = g[0][n-1];\n    for(int j = n-1; j; j--)\n        g[0][j] = g[0][j-1];\n    for(int i = 0; i &lt; n-1; i++)\n        g[i][0] = g[i+1][0];\n    for(int j = 0; j &lt; n-1; j++)\n        g[n-1][j] = g[n-1][j+1];\n    for(int i = n; i; i--)\n        g[i][n-1] = g[i-1][n-1];\n    g[1][n-1] = t;\n    for(int i = 0; i &lt; n; i++)\n        cout &lt;&lt; g[i] &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#c-medicine","title":"C - Medicine","text":"<p>\u6709 \\(N\\) \u79cd\u836f\uff0c\u6bcf\u4e00\u79cd\u836f\u6709\u4e24\u4e2a\u5c5e\u6027 \\(a_i\\) \u548c \\(b_i\\) \uff0c\u8868\u793a\u4ece\u7b2c \\(1\\) \u5929\u5230\u7b2c \\(a_i\\) \u5929\u90fd\u9700\u8981\u670d\u7528 \\(b_i\\) \u7247\u8fd9\u79cd\u836f\u3002\u95ee\uff0c\u4ece\u54ea\u4e00\u5929\u5f00\u59cb\uff0c\u6bcf\u5929\u670d\u7528\u836f\u7684\u6570\u91cf\u5c0f\u4e8e\u7b49\u4e8e \\(K\\) \uff1f</p> <p>\u5148\u6c42\u51fa \\(sum = \\sum a_i\\) \u7136\u540e\u6309\u7167 \\(a_i\\) \u6392\u5e8f\u3002\u4ece\u5c0f\u5230\u5927\u626b\u4e00\u904d\uff0c\u540c\u4e00\u5929\u7ed3\u675f\u7684\u836f\u5c31\u540c\u65f6\u51cf\u6389\uff0c\u76f4\u5230 \\(sum \u2264 K\\)\uff0c\u8f93\u51fa\u7b54\u6848\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 3E5 + 10;\nLL sum, ans, k, n;\nstruct Node\n{\n    LL a, b;\n    bool operator &lt; (const Node &amp;y) const\n    {return a &lt; y.a;}\n}m[maxn];\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; k;\n    for(int i = 0; i &lt; n; i++)\n        scanf(\"%lld %lld\", &amp;m[i].a, &amp;m[i].b), sum += m[i].b;\n    sort(m, m+n);\n    int i = 0;\n    while(i &lt; n &amp;&amp; sum &gt; k)\n    {\n        ans = m[i].a;\n        while(i &lt; n &amp;&amp; m[i].a == ans)\n            sum -= m[i++].b;\n    }\n    cout &lt;&lt; ans + 1 &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#d-add-one-edge","title":"D - Add One Edge","text":"<p>\u6709\u4e00\u4e2a \\(N_1 + N_2\\) \u4e2a\u70b9\uff0c\\(M\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8fd9\u4e2a\u56fe\u6709\u5982\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u8be5\u56fe\u7531\u5b50\u56fe \\(A\\) \u548c \u5b50\u56fe \\(B\\) \u7ec4\u6210\uff0c\u5b50\u56fe \\(A\\) \u4e2d\u70b9\u7684\u7f16\u53f7\u4e3a \\(1 \u2264 u \u2264 N_1\\)\uff0c \u5b50\u56fe \\(B\\) \u4e2d\u70b9\u7684\u7f16\u53f7\u4e3a \\(N_1 + 1 \u2264 v \u2264 N_1 + N_2\\)</li> <li>\u5b50\u56fe \\(A\\) \u662f\u4e00\u4e2a\u8054\u901a\u56fe\uff0c\u5b50\u56fe \\(B\\) \u4e5f\u662f\u4e00\u4e2a\u8054\u901a\u56fe\u3002</li> <li>\u5b50\u56fe \\(A\\) \u4e0e\u5b50\u56fe \\(B\\) \u4e0d\u8fde\u901a</li> </ul> <p>\u73b0\u5728\uff0c\u8bf7\u4f60\u5728\u5b50\u56fe \\(A\\) \u4e2d\u9009\u62e9\u4e00\u4e2a\u70b9 \\(u\\) \uff0c\u5728\u5b50\u56fe \\(B\\) \u4e2d\u9009\u62e9\u4e00\u4e2a\u70b9 \\(v\\) \uff0c\u7136\u540e\u6dfb\u52a0\u4e00\u6761\u8fb9 \\((u, v)\\) \uff0c\u4f7f\u5f97\u70b9 \\(1\\) \u5230 \u70b9 \\(N_1 + N_2\\) \u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5927\u5316\u3002</p> <p>\u5bf9\u70b9 \\(1\\) <code>bfs</code>\u4e00\u6b21\uff0c\u7136\u540e\u5bf9\u70b9 \\(N_1 + N2\\) <code>bfs</code> \u4e00\u6b21\uff0c \\(d\\) \u8868\u793a\u8ddd\u79bb\u6570\u7ec4\uff0c\u7b54\u6848\u5c31\u662f \\(max(d_1, d_2, \\ ...\\ d_{N_1}) + max(d_{N_1 + 1}, d_{N_1+2}, \\ ...\\ d_{N_1 + N_2}) + 1\\) </p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nconst int maxn = 3E5 + 10;\nconst int maxm = 6E5 + 10;\nconst int inf = 0x3f3f3f3f;\nint n1, n2, m;\nint head[maxn], ne[maxm], edge[maxm], idx = 1, dis[maxn];\nvoid add(int u, int v)\n{\n    edge[idx] = v;\n    ne[idx] = head[u];\n    head[u] = idx++;\n}\n\nvoid bfs(int s)\n{\n    dis[s] = 0;\n    queue&lt;int&gt; q;\n    q.push(s);\n    while(!q.empty())\n    {\n        int u = q.front();\n        int d = dis[u];\n        q.pop();\n        for(int i = head[u]; i; i = ne[i])\n        {\n            int v = edge[i];\n            if(dis[v] == inf)\n                dis[v] = d + 1, q.push(v);\n        }\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; m;\n    for(int u, v; m--;)\n        scanf(\"%d %d\", &amp;u, &amp;v), add(u, v), add(v, u);\n    memset(dis, 0x3f, sizeof dis);\n    bfs(1);\n    for(int i = 1; i &lt;= n1; i++)\n        m = max(m, dis[i]);\n    int ans = m + 1;\n    bfs(n1+n2);\n    m = 0;\n    for(int i = n1+1; i &lt;= n1 + n2; i++)\n        m = max(m, dis[i]);\n    ans += m;\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#e-family-and-insurance","title":"E - Family and Insurance","text":"<p>\u4e00\u4e2a\u5bb6\u65cf\u6709 \\(N\\) \u4e2a\u4eba\uff0c\u8fd9\u4e2a\u5bb6\u65cf\u7684\u5173\u7cfb\u53ef\u4ee5\u770b\u4f5c\u4e00\u68f5\u6811\uff0c\u6839\u7ed3\u70b9\u662f \\(1\\) \uff0c\u5bf9\u4e8e \\(i \u2265 2\\) \uff0c\\(i\\) \u7684\u7236\u4eb2\u662f \\(p_i\\) \u3002\u8fd9\u4e2a\u5bb6\u65cf\u4e70\u4e86 \\(M\\) \u4efd\u4fdd\u9669\uff0c\u6bcf\u4efd\u4fdd\u9669\u7684\u53c2\u6570\u662f \\(x_i\\) \u548c \\(y_i\\) \uff0c\u8868\u793a \\(x_i\\) \u7ed9\u4ed6\u81ea\u5df1\u4ee5\u53ca\u4ed6\u7684 \\(y_i\\) \u4ee3\u540e\u4ee3\u8d2d\u4e70\u4e86\u4fdd\u9669\u3002\u95ee\uff1a\u8fd9\u4e2a\u5bb6\u65cf\u4e2d\u6709\u591a\u5c11\u4eba\u6709\u4fdd\u9669\uff1f</p> <p>\u5047\u8bbe \\(x_i\\) \u7ed9\u4ed6\u81ea\u5df1\u4ee5\u53ca\u4ed6\u7684 \\(y_i\\) \u4ee3\u540e\u4ee3\u8d2d\u4e70\u4e86\u4fdd\u9669\uff0c\u76f8\u5f53\u4e8e \\(x_i\\) \u7684\u6240\u6709\u513f\u5b50\u90fd\u4e70\u4e86 \\(y_i-1\\) \u4fdd\u9669\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4 \\(g\\) \uff0c\\(g[u]\\) \u8868\u793a \\(u\\) \u8d2d\u4e70\u7684\u4fdd\u9669\u7684\u4ee3\u6570\uff0c\\(-1\\) \u8868\u793a\u6ca1\u6709\u8d2d\u4e70\u4fdd\u9669\uff0c\u591a\u4e2a\u4fdd\u9669\u51b2\u7a81\u65f6\uff0c\u80af\u5b9a\u662f\u4fdd\u7559\u4ee3\u6570\u8f83\u591a\u7684\u90a3\u4e00\u4efd\u3002</p> <p>\u8bfb\u53d6\u5b8c\u6570\u636e\u540e\uff0c\u4ece\u6839\u7ed3\u70b9\u5f00\u59cb <code>dfs</code>\uff0c\u5982\u679c \\(g[u] \u2265 0\\) \u5219\u5411\u4e0b\u4f20\u64ad\u65f6\u53ef\u4ee5\u628a \\(g[u]-1\\) \u4f20\u64ad\u7ed9\u513f\u5b50\u7ed3\u70b9\uff0c\u53ea\u9700\u4e00\u904d <code>dfs</code> \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nconst int maxn = 3E5 + 10;\nconst int inf = 0x3f3f3f3f;\nint n, m, ans;\nint head[maxn], ne[maxn], edge[maxn], idx = 1, g[maxn];\nvoid add(int u, int v)\n{\n    edge[idx] = v;\n    ne[idx] = head[u];\n    head[u] = idx++;\n}\n\nvoid dfs(int u)\n{\n    if(g[u] == -1)\n    {\n        for(int i = head[u]; i; i = ne[i])\n            dfs(edge[i]);\n    }\n    else\n    {\n        ans++;\n        for(int i = head[u]; i; i = ne[i])\n        {\n            int v = edge[i];\n            g[v] = max(g[v], g[u]-1);\n            dfs(v);\n        }\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    memset(g, -1, sizeof g);\n    for(int i = 2, p; i &lt;= n; ++i)\n        scanf(\"%d\", &amp;p), add(p, i);\n    for(int x, y; m--; )\n        scanf(\"%d %d\", &amp;x, &amp;y), g[x] = max(g[x], y);\n    dfs(1);\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc309/#f-box-in-box","title":"F - Box in Box","text":"<p>\u6709 \\(N\\) \u4e2a\u957f\u5bbd\u9ad8\u4e3a \\(x_i \\times y_i \\times z_i\\) \u7684\u7bb1\u5b50\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u8f6c\u52a8\u7bb1\u5b50\uff0c\u95ee\uff1a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u7bb1\u5b50\u4e25\u683c\u6bd4\u53e6\u4e00\u4e2a\u7bb1\u5b50\u5927\uff1f</p> <p>\u663e\u7136\uff0c\u6bcf\u4e2a\u7bb1\u5b50\u90fd\u8981\u8f6c\u6210 \\(x_i \u2264 y_i \u2264 z_i\\) \u7684\u5f62\u5f0f\u3002</p> <p>\u5148\u8003\u8651\u4e8c\u7ef4\u7684\u5f62\u5f0f\u600e\u4e48\u505a\uff0c\u7b49\u4ef7\u4e8e\uff0c\u5e73\u9762\u5185\u6bcf\u4e2a\u70b9 \\((x_i, y_i)\\) \u6ee1\u8db3  \\(x_i \u2264 y_i\\) \uff0c\u95ee\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u5728\u53e6\u4e00\u4e2a\u70b9\u7684\u53f3\u4e0a\u65b9\u3002</p> <p>\u5c06\u70b9\u6309 \\(x\\) \u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u65b0\u626b\u5230\u7684\u70b9\u7684 \\(x\\) \u5750\u6807\u4e00\u5b9a\u6bd4\u4e4b\u524d\u7684\u5927\uff0c\u540c\u65f6\u8bb0\u5f55\u4e4b\u524d\u626b\u8fc7\u7684 \\(y\\) \u7684\u6700\u5c0f\u503c \\(y_i\\)\uff0c\u76f4\u63a5\u6bd4\u8f83\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4fdd\u8bc1 \\(y\\) \u5750\u6807\u4e5f\u6bd4\u4ed6\u5927\uff0c\u8fb9\u626b\u8fb9\u66f4\u65b0 \\(y_i\\) \u5373\u53ef\u3002</p> <p>\u4f46\u8fd9\u6837\u8fd8\u9700\u8003\u8651 \\(x\\) \u5750\u6807\u76f8\u7b49\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8bf4 \\(x_i = x_j\\) \u4e14 \\(y_i &lt; y_j\\) \u7684\u60c5\u51b5\uff0c\u60c5\u51b5\u4e0b \\(y_i\\) \u4e0d\u80fd\u76f4\u63a5\u7528\u4e8e \\(y_j\\) \u7684\u6bd4\u8f83\u3002\u4f46\u5982\u679c\u6392\u5e8f\u7684\u65f6\u5019\u6211\u4eec\u5bf9\u4e8e\u76f8\u540c\u7684 \\(x\\) \u65f6\uff0c\u6309\u7167 \\(y\\) \u7684\u964d\u5e8f\u6765\u6392\uff0c\u90a3\u4e48\u8bbf\u95ee\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u4e0d\u4f1a\u6709 \\(x_i = x_j\\) \u4e14 \\(y_i &lt; y_j\\) \u7684\u60c5\u51b5\u53d1\u751f\u4e86\u3002</p> <p>\u4e8c\u7ef4\u672c\u8d28\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u201c\u6700\u53f3\u4e0b\u201d\u7684\u70b9\uff0c\u4e09\u7ef4\u540c\u7406\uff0c\u968f\u7740 \\(x\\) \u5750\u6807\u7684\u589e\u957f\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5de6\u4e0b\u7684\u51f8\u5305\u3002\u51f8\u5305\u5b9e\u9645\u662f\u70b9\u7684\u96c6\u5408\uff0c\u5728\u51f8\u5305\u4e2d\u540c\u6837\u7684 \\(y\\) \u5750\u6807\u6211\u4eec\u9009\u62e9 \\(z\\) \u8f83\u5c0f\u7684\u90a3\u4e2a\u70b9\uff0c\u5e76\u4e14\u7531\u4e8e\u662f\u5de6\u4e0b\u7684\u51f8\u5305\uff0c\u4e0d\u5b58\u5728 \\(y_i \u2264 y_j\\) \u4e14 \\(z_i \u2264 z_j\\) \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u9009\u524d\u4e00\u4e2a\u70b9\u66f4\u4f18\u3002 </p> <p>\u626b\u5230\u67d0\u4e2a\u70b9 \\(j\\) \u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u6211\u4eec\u5148\u6309 \\(x\\) \u6392\u5e8f\uff0c\u6240\u4ee5\u51f8\u5305\u4e2d\u7684\u70b9\u4e00\u5b9a\u6ee1\u8db3 \\(x_i &lt; x_j\\) \uff0c\u63a5\u4e0b\u6765\u5728\u51f8\u5305\u4e2d\u4e8c\u5206\u51fa\u7b2c\u4e00\u4e2a \\(y_i &lt; y_j\\) \uff0c\u6839\u636e\u51f8\u5305\u7684\u6027\u8d28\uff0c \\(y_i\\) \u5bf9\u5e94\u7684 \\(z_i\\) \u4e5f\u662f\u6700\u5c0f\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u6bd4\u8f83\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u7528 \\(y_j\\) \u548c \\(z_j\\) \u7684\u503c\u66f4\u65b0\u51f8\u5305\u5373\u53ef\u3002\u7528\u4e00\u4e2a <code>map&lt;int, int&gt;</code> \u7ef4\u62a4\u51f8\u5305\u5c31\u80fd\u5b9e\u73b0\u4ee5\u4e0a\u64cd\u4f5c\uff0c<code>key</code> \u5bf9\u5e94 \\(y\\) \u7684\u503c\uff0c<code>value</code> \u5bf9\u5e94 \\(z\\) \u7684\u503c\u3002 \u540c\u6837\u7684\uff0c\u4e3a\u4e86\u9632\u6b62\u76f8\u540c\u7684 \\(x\\) \u7684\u60c5\u51b5\uff0c\u5f53 \\(x\\) \u76f8\u540c\u65f6\u6309\u7167 \\(y\\) \u7684\u964d\u5e8f\u6765\u6392\u5373\u53ef\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u66f4\u65b0\u51f8\u5305\u65f6\uff0c\u5bf9\u540e\u7eed\u7684\u70b9\u4e5f\u8981\u68c0\u67e5\uff0c\u4fdd\u8bc1map\u6ee1\u8db3\u51f8\u5305\u7684\u6027\u8d28\uff0c\u7531\u4e8e\u6bcf\u4e2a\u70b9\u81f3\u591a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u6bcf\u6b21\u4e8c\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(logn)\\) \uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(nlogn)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;map&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nbool cmp(const vector&lt;int&gt; &amp;x, const vector&lt;int&gt; &amp;y)\n{\n    if(x[0] != y[0])\n        return x[0] &lt; y[0];\n    return x[1] &gt; y[1];\n}\n\nint main()\n{\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;vector&lt;int&gt;&gt; a(n, vector&lt;int&gt;(3));\n    for(int i = 0; i &lt; n; i++)\n    {\n        scanf(\"%d %d %d\", &amp;a[i][0], &amp;a[i][1], &amp;a[i][2]);\n        sort(a[i].begin(), a[i].end());\n    }\n    sort(a.begin(), a.end(), cmp);\n    bool f = 0;\n    map&lt;int, int&gt; h;\n    h[0] = 1E9;\n    h[1E9+1] = 0;\n\n    for(int i = 0; i &lt; n &amp;&amp; !f; i++)\n    {\n        int y = a[i][1], z = a[i][2];\n        auto it = h.lower_bound(y), pre = it;\n        pre--;\n        if(z &gt; pre -&gt; second)\n        {\n            f = 1;\n            break;\n        }\n        else if(z == pre -&gt; second)\n            continue;\n        else if(it -&gt; first != y || it -&gt; second &gt; z)\n        {\n            h[y] = z;\n            pre++;\n            it = pre;\n            it++;\n            while(it -&gt; second &gt;= z)\n            {\n                pre = it;\n                it++;\n                h.erase(pre);\n            }\n        }\n    }\n    if(f)\n        cout &lt;&lt; \"Yes\" &lt;&lt; endl;\n    else\n        cout &lt;&lt; \"No\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/","title":"ABC310(A-F)","text":"<p>freee Programming Contest 2023\uff08AtCoder Beginner Contest 310\uff09 - AtCoder</p> <p>\u8fd9\u573a\u8d28\u91cf\u5f88\u9ad8\uff0c\u7136\u800c\u5b98\u65b9\u89e3\u7b54\u5f88\u591a\u5730\u65b9\u8bb2\u7684\u4e0d\u662f\u5f88\u6e05\u695a\u3002</p>"},{"location":"algorithm/AtCoder/abc310/#a-order-something-else","title":"A - Order Something Else","text":"<p>\u4e00\u79cd\u5546\u54c1\u6709\u4e24\u79cd\u8d2d\u4e70\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\u4ee5 \\(p\\) \u5143\u76f4\u63a5\u8d2d\u4e70\uff0c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\u5148\u5728\u7ed9\u5b9a\u7684 \\(n\\) \u79cd\u6346\u7ed1\u5546\u54c1\u4e2d\u4e70\u4e00\u4e2a\uff0c\u7136\u540e\u4ee5 \\(q\\) \u5143\u7684\u4f18\u60e0\u4ef7\u8d2d\u4e70\u3002\u8f93\u51fa\u8d2d\u4e70\u8be5\u5546\u54c1\u7684\u6700\u4f4e\u4ef7\u683c\u3002</p> <p>\u627e\u51fan\u4e2a\u6346\u7ed1\u5546\u54c1\u4e2d\u7684\u6700\u4f4e\u4ef7\uff0c\u7136\u540e\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint n, p, q, x, m = 1E9;\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; p &gt;&gt; q;\n    while(n--)\n    {\n        cin &gt;&gt; x;\n        m = min(m, x);\n    }\n    cout &lt;&lt; min(m + q, p);\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#b-strictly-superior","title":"B - Strictly Superior","text":"<p>\u6709 \\(N\\) \u79cd\u529f\u80fd\u996e\u6599\uff0c\u6bcf\u4e00\u79cd\u529f\u80fd\u996e\u6599\u7684\u552e\u4ef7\u662f \\(P_i\\) , \u6bcf\u4e00\u79cd\u996e\u6599\u90fd\u5177\u6709 \\(C_i\\) \u79cd\u529f\u80fd\uff0c\u996e\u6599\u7684\u529f\u80fd\u7528\u6570\u5b57\u8868\u793a\u3002</p> <p>\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u79f0\u996e\u6599 \\(i\\) \u4e25\u683c\u597d\u4e8e\u996e\u6599 \\(j\\) \u3002</p> <ul> <li> <p>\\(P_i \u2264 P_j\\)</p> </li> <li> <p>\u996e\u6599 \\(i\\) \u62e5\u6709\u996e\u6599 \\(j\\) \u7684\u6240\u6709\u529f\u80fd\u3002</p> </li> <li>\\(P_i &lt; P_j\\) \u6216 \u996e\u6599 \\(i\\) \u81f3\u5c11\u5b58\u5728\u4e00\u79cd\u996e\u6599 \\(j\\) \u6240\u4e0d\u5177\u6709\u7684\u529f\u80fd\u3002</li> </ul> <p>\u5224\u65ad\u662f\u5426\u5b58\u5728\u996e\u6599 \\(i\\) \u4e25\u683c\u597d\u4e8e\u996e\u6599 \\(j\\) \uff0c\u82e5\u5b58\u5728\u5219\u8f93\u51fa <code>Yes</code> \u5426\u5219\u8f93\u51fa <code>No</code> </p> <p>\u6570\u636e\u8303\u56f4\uff1a \\(C_i, N \u2264 100\\)\uff0c\u996e\u6599\u7684\u529f\u80fd\u90fd\u662f1-100\u95f4\u7684\u6574\u6570\u3002</p> <p>\u6bcf\u79cd\u996e\u6599\u7684\u529f\u80fd\u7528\u4e00\u4e2abitset\u8868\u793a\uff0c\u4f4d\u8fd0\u7b97\u8ba1\u7b97\u5305\u542b\u5173\u7cfb\u3002</p> <p>\u7531\u4e8e \\(N\\) \u6bd4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u4e24\u5c42\u5faa\u73af\u76f4\u63a5\u5224\u65ad\uff0c\u8fd9\u91cc\u6211\u662f\u6309\u7167\u4ef7\u683c\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u626b\u4e00\u8f6e\u7684\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n#include &lt;bitset&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n, m;\n\nstruct Node {\n    int p;\n    bitset&lt;110&gt; st;  \n    bool operator &lt; (const Node &amp;y) const\n    {return p &lt; y.p;}\n    bool good(const Node &amp;y) const\n    {\n        if((st &amp; y.st) != y.st)\n            return 0;\n        if(p == y.p &amp;&amp; st == y.st)\n            return 0;\n        return 1;\n    }\n}a[maxn];\n\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    int c, x;\n    for(int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; a[i].p &gt;&gt; c;\n        while(c--)\n        {\n            cin &gt;&gt; x;\n            a[i].st[x] = 1;\n        }\n    }\n    sort(a, a+n);\n    bool flag = 0;\n    for(int i = 0; i &lt; n &amp;&amp; !flag; i++)\n    {\n        for(int j = i + 1; j &lt; n; j++)\n            if(a[i].good(a[j]))\n            {\n                flag = 1;\n                break;\n            }\n    }\n    if(flag)\n        cout &lt;&lt; \"Yes\";\n    else\n        cout &lt;&lt; \"No\";\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#c-reversible","title":"C - Reversible","text":"<p>\u6709 \\(N\\) \u4e2a\u5b57\u7b26\u4e32\uff0c\u7528 \\(R(S)\\) \u8868\u793a\u5b57\u7b26\u4e32 \\(S\\) \u7684\u53cd\u8f6c\u5b57\u7b26\u4e32\uff0c \u82e5\\(S_i == S_j\\) \u6216 \\(S_i == R(S_j)\\) \u5219\u79f0 \\(S_i\\) \u4e0e \\(S_j\\) \u662f\u672c\u8d28\u76f8\u540c\u7684\u3002</p> <p>\u6c42\u51fa \\(N\\) \u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\u4e32 \\(S_i\\)\uff0c\u53d6 \\(S_i\\) \u548c \\(R(S_i)\\) \u4e2d\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u4e00\u4e2a\u52a0\u5165\u54c8\u5e0c\u8868\u4e2d\uff0c\u6700\u7ec8\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u5c31\u662f\u7b54\u6848\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;unordered_set&gt;\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    string s, t;\n    unordered_set&lt;string&gt; vis;\n    cin &gt;&gt; n;\n    while(n--)\n    {\n        cin &gt;&gt; s;\n        t = s;\n        reverse(t.begin(), t.end());\n        vis.insert(s &lt; t ? s : t);\n    }\n    cout &lt;&lt; vis.size();\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#d-peaceful-teams","title":"D - Peaceful Teams","text":"<p>\u6709 \\(N\\) \u4e2a\u4eba\uff0c\u73b0\u5728\u9700\u8981\u5c06\u4ed6\u4eec\u5206\u6210 \\(T\\) \u7ec4\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u5c5e\u4e8e\u67d01\u7ec4\uff0c\u6bcf\u4e2a\u7ec4\u90fd\u81f3\u5c11\u8981\u67091\u4e2a\u4eba\u3002\u6b64\u5916\uff0c\u6709 \\(M\\) \u5bf9\u4eba\u7684\u5173\u7cfb\u662f\u4e0d\u597d\u7684\uff0c\u4e0d\u80fd\u5c06\u4e24\u4e2a\u5173\u7cfb\u4e0d\u597d\u7684\u4eba\u5206\u5230\u540c\u4e00\u7ec4\u4e2d\u3002</p> <p>\u95ee\uff1a\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u5206\u7ec4\u65b9\u5f0f\uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(T \u2264 N \u2264 10\\)</p> <p>\u9996\u5148\u8981\u660e\u767d\u5206\u7ec4\u65b9\u5f0f\u548c\u7ec4\u4e4b\u95f4\u6392\u5217\u7684\u987a\u5e8f\u662f\u65e0\u5173\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>{1, 4, 5}, {2, 3}</code> \u548c <code>{2, 3}, {1, 4, 5}</code> \u662f\u540c\u4e00\u79cd\u5206\u7ec4\u65b9\u5f0f\uff08\u56e0\u4e3a\u4ec5\u4ec5\u53ea\u6709\u7ec4\u4e4b\u95f4\u6392\u5217\u987a\u5e8f\u7684\u4e0d\u540c\uff09\u3002\u4e3a\u4e86\u786e\u5b9a\u987a\u5e8f\uff08\u5982\u540cC\u9898\u4e2d\u9009\u7528\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u4f5c\u4e3a\u4ee3\u8868\u4e00\u6837\uff09\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u6392\u5217\u987a\u5e8f\u4e5f\u9700\u8981\u786e\u5b9a\u4e00\u79cd\u4ee3\u8868\u987a\u5e8f\uff1a</p> <ul> <li>\u6bcf\u4e2a\u7ec4\u4e2d\u6700\u5c0f\u7684\u53f7\u7801\u4f5c\u4e3a\u8fd9\u4e2a\u7ec4\u7684\u4ee3\u8868\u53f7\u7801\uff0c\u4f8b\u5982{1, 4, 5}\u7684\u4ee3\u8868\u53f7\u7801\u662f1\uff0c{2, 3}\u7684\u4ee3\u8868\u53f7\u7801\u662f2</li> <li>\u4ee3\u8868\u53f7\u7801\u8d8a\u5c0f\u7684\u7ec4\uff0c\u987a\u5e8f\u8d8a\u9760\u524d</li> </ul> <p>\u4e0a\u8ff0\u89c4\u5219\u5c31\u80fd\u4fdd\u8bc1\u4e86\u4e0d\u540c\u7684\u6392\u5217\u987a\u5e8f\u5b9e\u9645\u5bf9\u5e94\u7684\u53ea\u6709\u4e00\u79cd\uff0c\u5728\u8ba1\u7b97\u5206\u7ec4\u65b9\u5f0f\u65f6\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e2a\u89c4\u5219\u5c31\u4e0d\u4f1a\u91cd\u590d\u3002</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u6c42\u89e3\u95ee\u9898\uff0c\u663e\u7136\uff0c\u7b2c1\u4e2a\u4eba\u4e00\u5b9a\u662f\u5728\u7b2c1\u7ec4\u7684\uff0c\u63a5\u4e0b\u6765\u4ece\u7b2c2\u4e2a\u4eba\u5f00\u59cb\uff1a\u8981\u4e48\u52a0\u5165\u4e4b\u524d\u5df2\u7ecf\u5efa\u7acb\u597d\u7684\u7ec4\uff0c\u8981\u4e48\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u7ec4\u3002\u82e5\u52a0\u5165\u67d0\u4e2a\u7ec4\u5fc5\u987b\u6ee1\u8db3\u7ec4\u5185\u76f8\u5bb9\uff0c\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff0c\u5373\uff1a\u5c06\u6bcf\u4e2a\u7ec4\u7684\u4eba\u5458\u5206\u5e03\u7528bit\u4e32\u8868\u793a\uff0c<code>group[i]</code>\u8868\u793a\u7b2c<code>i</code>\u4e2a\u7ec4\u6709\u54ea\u4e9b\u4eba\u7684bit\u4e32\u3002\u5f53\u524d\u7684\u4eba\u7528<code>cur</code>\u8868\u793a\uff0c<code>hate[cur]</code>\u8868\u793a\u4e0e\u7b2c<code>cur</code>\u4e2a\u4eba\u6709\u77db\u76fe\u7684\u4eba\u7684bit\u4e32\u3002\u82e5<code>(group[i] &amp; hate[cur])==0</code>\u8868\u793a<code>cur</code>\u53ef\u4ee5\u878d\u5165<code>group[i]</code>\u3002</p> <p>\u4e0a\u8ff0\u8fc7\u7a0bDFS\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(T*N!)\\)\uff0c\u7531\u4e8e\u6709\u526a\u679d\u4ee5\u53ca\u4f4d\u8fd0\u7b97\uff0c\u5b9e\u9645\u8fd9\u662f\u4e00\u4e2a\u5f88\u677e\u7684\u4e0a\u754c\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 11;\nint n, t, m, ans;\nint hate[maxn], group[maxn];\n\nvoid dfs(int cur, int g)\n{\n    if(n - cur + g &lt; t)//\u5982\u679c\u5206\u7ec4\u51d1\u4e0d\u9f50t\u4e2a\uff0c\u53ca\u65f6\u526a\u6389\n        return;\n    if(cur == n)\n    {\n        ans++;\n        return;\n    }\n    for(int i = 0; i &lt; g; i++)\n        if((group[i] &amp; hate[cur]) == 0)\n        {\n            group[i] ^= 1 &lt;&lt; cur;\n            dfs(cur+1, g);\n            group[i] ^= 1 &lt;&lt; cur;\n        }\n    if(g &lt; t)\n    {\n        group[g] = 1 &lt;&lt; cur;\n        dfs(cur+1, g+1);\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; t &gt;&gt; m;\n    for(int u, v; m--;)\n    {\n        cin &gt;&gt; u &gt;&gt; v;\n        u--, v--;\n        hate[v] |= 1 &lt;&lt; u;//u &lt; v \u53ea\u9700\u8003\u8651v\u8ba8\u538cu\n    }\n    dfs(0, 0);\n    cout &lt;&lt; ans;\n    return 0;\n}\n</code></pre> <p>\u4e0a\u9762\u7684dfs\u89e3\u6cd5\uff0c\u662f\u5bf9\u6bcf\u4e00\u4e2a\u4eba\u8003\u8651\u5206\u914d\u5230\u54ea\u4e00\u4e2a\u7ec4\u3002\u4e0b\u9762\u4ecb\u7ecd\u53e6\u4e00\u79cddp\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u76f4\u63a5\u6309\u4e00\u4e2a\u7ec4\u6765\u8003\u8651\u7684</p> <p>\\(dp[s][k]\\) : \u5c06bit\u4e32\u4e3a<code>s</code>\u7684\u8fd9\u4e9b\u4eba\u5206\u6210<code>k</code>\u7ec4\uff0c\u4e14\u524d<code>k</code>\u7ec4\u5df2\u7ecf\u56fa\u5b9a\u4e0b\u6765\uff08\u5373\uff1a\u4e0d\u518d\u5411\u524d<code>k</code>\u7ec4\u4e2d\u52a0\u4eba\uff09\u6709\u591a\u5c11\u79cd\u5206\u914d\u65b9\u5f0f\u3002</p> <p>\u8fd9\u91cc\u89e3\u91ca\u56fa\u5b9a\u7684\u542b\u4e49\uff0c\u5bf9\u4e8e<code>dp[s][k]</code>\u6765\u8bf4\uff0c<code>s</code>\u4e2d\u76841\u8868\u793a\u5df2\u7ecf\u5206\u5728\u524d<code>k</code>\u7ec4\u4e2d\u7684\u4eba\uff0c0\u8868\u793a\u672a\u5206\u7ec4\u7684\u4eba\uff0c\u7531\u4e8e\u8fd9\u91cc\u662f\u4e00\u6b21\u6027\u7684\u6309\u7ec4\u8003\u8651\uff0c\u6240\u4ee5\u662f\u628a\u82e5\u5e72\u4e2a\u672a\u5206\u7ec4\u76840\u7ec4\u6210\u7b2c<code>k+1</code>\u7ec4\uff0c\u800c\u4e0d\u662f\u628a\u8fd9\u4e9b\u672a\u5206\u7ec4\u76840\u52a0\u5165\u5230\u524dk\u7ec4\u4e2d(\u56e0\u4e3a\u524d<code>k</code>\u7ec4\u5df2\u7ecf\u56fa\u5b9a\u4e0b\u6765\u4e86\uff0c\u4e5f\u5c31\u662f\u5df2\u7ecf\u5206\u597d\u4e86)\u3002</p> <p>\u7531\u4e8e\u662f\u5206\u7ec4\u8003\u8651\u7684\uff0c\u8fd8\u8981\u5148\u9884\u5904\u7406\u51fa\u6765<code>ok</code>\u6570\u7ec4\uff0c<code>ok[s]</code>\u8868\u793abit\u4e32\u4e3as\u7684\u8fd9\u4e9b\u4eba\u80fd\u4e0d\u80fd\u5728\u4e00\u4e2a\u7ec4\u5f53\u4e2d\u3002</p> <p>dp\u8f6c\u79fb\u4e3a \\(dp[ns][k+1] += dp[s][k]\\), \u5176\u4e2d<code>ns</code>\u662f\u5305\u542b<code>s</code>\u4e14\u6bd4<code>s</code>\u66f4\u5927\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u5373<code>ns</code>\u662f<code>s</code>\u4e2d\u7684\u67d0\u4e9b0\u53d8\u62101\u4e4b\u540e\u5f62\u6210\u7684\u3002</p> <p>dp\u7684\u65f6\u5019\u8fd8\u8981\u8003\u8651\u5206\u7ec4\u987a\u5e8f\u7684\u4e00\u81f4\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>s</code>\u7684\u6700\u53f3\u8fb9\u7684\u90a3\u4e2a0\u4e00\u5b9a\u8981\u5305\u542b\u5728<code>k+1</code>\u7ec4\u5f53\u4e2d\uff0c\u8fd9\u91cc\u7684<code>beg</code>\u5c31\u662f\u8fd9\u4e2a\u4f5c\u7528\u3002</p> <p>\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(T * 3^N)\\)\uff0c\u5173\u4e8e\u8fd9\u79cd\u679a\u4e3e\u65b9\u5f0f\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u89c1\u8fd9\u7bc7\u535a\u5ba2\u4e8c\u8fdb\u5236\u96c6\u5408\u64cd\u4f5c</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxl = 1024 + 10;\nconst int maxn = 11;\nint n, t, m, len;\nbool ok[maxl];\nint hate[maxn], dp[maxl][maxn];\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; t &gt;&gt; m;\n    len = 1 &lt;&lt; n;\n    for(int u, v; m--;)\n    {\n        cin &gt;&gt; u &gt;&gt; v;\n        u--, v--;\n        hate[v] |= 1 &lt;&lt; u;\n    }\n    for(int s = 0; s &lt; len; s++)\n    {\n        int h = 0;\n        for(int i = 0; i &lt; n; i++)\n            if(s &gt;&gt; i &amp; 1)\n                h |= hate[i];\n        if(!(s &amp; h))\n            ok[s] = 1;//ok[s]\u8868\u793a\u72b6\u6001\u4e3as\u7684\u961f\u4f0d\u80fd\u5426\u76f8\u5bb9\n    }\n    dp[0][0] = 1;\n    for(int s = 0; s &lt; len; s++)\n    {\n        int beg = s | (s + 1);\n        for(int ns = beg; ns &lt; len; ++ns |= beg)\n            if(ok[s ^ ns])\n            {\n                for(int i = 0; i &lt; t; i++)\n                    dp[ns][i+1] += dp[s][i];\n            }\n    }\n    cout &lt;&lt; dp[len-1][t];\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#e-nand-repeatedly","title":"E - NAND repeatedly","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5e8f\u5217 \\(A = (A_0,\\ A_1,\\ ...\\ A_{N-1})\\) \uff0c\\(A_i\\)  \u7684\u503c\u4e3a<code>0</code>\u6216<code>1</code>\u3002\u5b9a\u4e49\u4e00\u79cd\u8fd0\u7b97\uff1a</p> \\[ f(i, j) = \\left\\{ \\begin{matrix} A_j&amp; \\quad (i=j) \\\\  f(i, j-1) \\ \\overline{\\land} \\ A_j &amp; \\quad (i &lt; j) \\end{matrix} \\right.\\] <p>\u5176\u4e2d \\(\\overline{\\land}\\) \u8868\u793a\u201c\u4e0e\u975e\u201d\u8fd0\u7b97\uff0c \u5373 \\(x \\overline{\\land} y = \\lnot(x \\land y)\\)\uff0c\\(0 \\overline{\\land} 0 = 1 \\quad 0 \\overline{\\land} 1 = 1 \\quad 1 \\overline{\\land} 0 = 1 \\quad 1 \\overline{\\land} 1 = 0\\)</p> <p>\u6c42\u51fa \\(\\sum\\limits_{i=0}^{N-1}\\sum\\limits_{j=i}^{N-1}f(i,j)\\)\u7684\u503c</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(N \u2264 10^6\\)</p> <p>\u4e0e\u975e\u8fd0\u7b97\u4e0d\u6ee1\u8db3\u7ed3\u5408\u7387\uff0c\u56e0\u6b64\u524d\u7f00\u548c\u4e4b\u7c7b\u7684\u65b9\u6cd5\u5931\u6548...\u66b4\u529b\u505a\u6cd5\u9700\u8981\\(O(N^2)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u8003\u8651 \\(dp[j]\\): \\(\\sum\\limits_{i=0}^{j}f(i,j)\\)\u7684\u503c\uff0c\u7531\u4e8e \\(f(i, j)\\) \u7684\u503c\u662f<code>0</code>\u6216<code>1</code>\uff0c\u56e0\u6b64\\(dp[j]\\) \u76f8\u5f53\u4e8e\u8bb0\u5f55\u4e86 \\(f(0, j)\\) \u5230 \\(f(j, j)\\) \u4e4b\u95f4<code>1</code>\u7684\u4e2a\u6570\uff0c\u5219 \\(j - dp[j]+1\\) \u76f8\u5f53\u4e8e0\u7684\u4e2a\u6570\u3002</p> <p>\u8003\u8651dp\u8f6c\u79fb\uff1a\u6839\u636e\u4e0e\u975e\u8fd0\u7b97\u7684\u6027\u8d28\uff0c</p> <ul> <li>\u82e5 \\(A_{j}\\) \u4e3a<code>0</code>\uff0c\u5219 \\(f(0, j-1)\\ \\overline{\\land} \\ A_{j}\\) \u5230 \\(f(j-1, j-1)\\ \\overline{\\land} \\ A_{j}\\) \u7684\u503c\u90fd\u662f<code>1</code></li> <li>\u82e5 \\(A_{j}\\) \u4e3a<code>1</code>\uff0c\u5219\u53ea\u6709\u524d<code>j-1</code>\u4e2a\u4e2d\u7684<code>0</code>\u624d\u80fd\u53d8\u6210<code>1</code>\uff0c\u6b64\u5916\u8fd8\u6709 \\(f(j,j)=A_{j}\\)\u672c\u8eab\u662f<code>1</code></li> </ul> <p>\u56e0\u6b64dp\u8f6c\u79fb\u5f0f\u4e3a\uff1a</p> \\[ dp[j] = \\left\\{\\begin{matrix}  j \\quad &amp;(A_j = 1)\\\\ j-dp[j-1]+1  \\quad &amp;(A_j = 1) \\end{matrix}\\right.  \\] <p>\u7531\u4e8e \\(dp[j+1]\\) \u53ea\u548c \\(dp[j]\\) \u6709\u5173\uff0c\u4e5f\u6ca1\u5fc5\u8981\u5f00\u6570\u7ec4\u4e86\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5373\u53ef\uff0c\u7b54\u6848\u5c31\u662f \\(\\sum dp[j]\\) \uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\ntypedef long long LL;\n\nint main()\n{\n    int n;\n    string s;\n    cin &gt;&gt; n &gt;&gt; s;\n    int dpj = s[0] - '0';\n    LL ans = dpj;\n    for(int j = 1; j &lt; n; j++)\n    {\n        if(s[j] - '0')\n            dpj = j + 1 - dpj;\n        else\n            dpj = j;\n        ans += dpj;\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc310/#f-make-10-again","title":"F - Make 10 Again","text":"<p>\u6709 \\(N\\) \u4e2a\u9ab0\u5b50\uff0c\u6bcf\u4e2a\u9ab0\u5b50\u90fd\u53ef\u4ee5\u7b49\u6982\u7387\u7684\u6254\u51fa \\([1, A_i]\\)\u4e4b\u95f4\u7684\u5176\u4e2d\u4e00\u4e2a\u6574\u6570\uff0c\\(N\\) \u4e2a\u9ab0\u5b50\u540c\u65f6\u6295\u63b7\uff0c\u6c42\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6982\u7387\uff1a</p> <ul> <li>\u81f3\u5c11\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u4ece\u4e2d\u6311\u9009\u4e00\u4e9b\u9ab0\u5b50\u7684\u70b9\u6570\u4e4b\u548c\u7b49\u4e8e10\u3002</li> </ul> <p>\u6c42\u51fa\u8fd9\u4e2a\u6982\u7387 mod <code>998244353</code> \u7684\u503c\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a</p> <p>\\(N \u2264 100\\)</p> <p>\\(A_i \u2264 10^6\\)</p> <p>\u7ecf\u5178\u7684\u6982\u7387dp\u3002\u56e0\u4e3a\u53ea\u8981\u51d1\u51fa<code>10</code>\uff0c\u53ea\u8003\u8651<code>0-10</code>\u70b9\u80fd\u4e0d\u80fd\u51d1\u51fa\uff0c\u7c7b\u4f3c\u80cc\u5305dp+\u72b6\u538bdp\u7684\u601d\u8def\uff0c\u9996\u5148\u5f15\u5165\u4e00\u4e2a\u53ef\u4ee5\u201c\u51d1\u51fa\u6765\u201d\u7684\u96c6\u5408\u7684\u6982\u5ff5\uff0c\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a11\u7684bit\u4e32\u8868\u793a\u5f53\u524d\u6211\u4eec\u80fd\u51d1\u51fa\u54ea\u4e9b\u6570\u5b57\uff0c\u663e\u7136\uff0c\u5728\u6240\u6709\u9ab0\u5b50\u8fd8\u6ca1\u6254\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u80fd\u51d1\u51fa<code>0</code>,\u56e0\u6b64\u8fd9\u4e2abit\u4e32\u7684\u503c\u4e3a<code>1(00000000001)</code>\uff0c\u5047\u8bbe\u7b2c\u4e00\u4e2a\u9ab0\u5b50\u4e22\u51fa\u4e86<code>2</code>\uff0c\u6211\u4eec\u5c31\u80fd\u51d1\u51fa<code>2</code>\u548c<code>0</code>\u5f53\u524dbit\u4e32\u503c\u5c31\u4e3a<code>5(0000000101)</code>\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u8003\u8651 \\(dp[i][s]\\) \uff1a\u524d<code>i</code>\u4e2a\u9ab0\u5b50\u7684\u6295\u63b7\u5b8c\u6210\u540e\uff0c\u5f53\u524d\u80fd\u51d1\u51fa\u6765\u7684\u6570\u5b57bit\u4e32\u4e3a<code>s</code>\u7684\u6982\u7387\u3002</p> <p>\u521d\u59cb\u65f6\uff0c<code>dp[0][1] = 1</code>\uff0c\u5176\u4f59\u4e3a<code>0</code></p> <p>dp\u7684\u8f6c\u79fb\u5c31\u662f\u679a\u4e3e\u7b2c<code>i</code>\u679a\u9ab0\u5b50\u4e22\u51fa\u4e86\u591a\u5c11\uff0c\u7136\u540e\u7528\u4f4d\u8fd0\u7b97\u66f4\u65b0\u96c6\u5408\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(2^{11}*N)\\)</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 110;\nconst int len = 1 &lt;&lt; 11;\nconst int mask = len - 1;\nconst LL mod = 998244353;\n\nvoid exgcd(LL a, LL b, LL &amp;x, LL &amp;y)\n{\n    if(!b)\n        x = 1, y = 0;\n    else\n        exgcd(b, a % b, y, x), y -= a / b * x;\n}\nLL getinv(LL a)\n{\n    LL x, y;\n    exgcd(a, mod, x, y);\n    return (x + mod) % mod;\n}\n\nint n, x;\nLL p;\nLL dp[maxn][len];\n\nint main()\n{\n    cin &gt;&gt; n;\n    dp[0][1] = 1;\n    for(int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; x;\n        p = getinv(x);\n        for(int s = 1; s &lt; len; s++)\n        {\n            if(!dp[i][s])\n                continue;\n            for(int k = 1; k &lt;= min(x, 10); k++)\n            {\n                int ns = s | (s &lt;&lt; k) &amp; mask;\n                dp[i+1][ns] += dp[i][s] * p;\n                dp[i+1][ns] %= mod;\n            }\n            if(x &gt; 10)\n            {\n                dp[i+1][s] += dp[i][s] * (p * (x - 10) % mod);\n                dp[i+1][s] %= mod;\n            }\n        }\n    }\n    LL ans = 0;\n    for(int s = 1 &lt;&lt; 10; s &lt; len; s++)\n        ans = (ans + dp[n][s]) % mod;\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/","title":"ABC311(A-G)","text":"<p>Toyota Programming Contest 2023#4\uff08AtCoder Beginner Contest 311\uff09 - AtCoder</p> <p>\u6bd4\u8f83\u8f7b\u677e\u7684\u4e00\u573a\uff0c\u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b</p>"},{"location":"algorithm/AtCoder/abc311/#a-first-abc","title":"A - First ABC","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u53ea\u542b\u6709<code>A</code>\u3001<code>B</code>\u3001<code>C</code>\u7684\u5b57\u7b26\u4e32 \\(S\\) \uff0c\u6bcf\u79cd\u5b57\u7b26\u4f1a\u51fa\u73b0\u81f3\u5c11\u4e00\u6b21\u3002\u6c42\u51fa \\(S\\) \u5305\u542b\u6bcf\u79cd\u5b57\u7b26\u7684\u6700\u77ed\u524d\u7f00\uff0c\u8f93\u51fa\u524d\u7f00\u957f\u5ea6\u3002</p> <p>\u626b\u4e00\u8f6e\uff0c\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\u5c31\u53ef\u4ee5\u4e86</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n, cnt[3];\nchar s[maxn];\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; s;\n    for(int i = 0; i &lt; n; i++)\n    {\n        cnt[s[i] - 'A']++;\n        if(cnt[0] &amp;&amp; cnt[1] &amp;&amp; cnt[2])\n        {\n            cout &lt;&lt; i + 1 &lt;&lt; endl;\n            break;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#b-vacation-together","title":"B - Vacation Together","text":"<p>\u6709 \\(N\\) \u4e2a\u4eba\uff0c\u6bcf\u4eba\u90fd\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(D\\) \u7684\u5b57\u7b26\u4e32 \\(S_i\\) \u8868\u793a\u4ed6\u63a5\u4e0b\u6765 \\(D\\) \u5929\u662f\u5426\u6709\u7a7a\u3002\u82e5 \\(S_{i,j}\\) \u662f<code>x</code>\u8868\u793a\u7b2c \\(i\\) \u4e2a\u4eba\u7684\u7b2c \\(j\\) \u5929\u6ca1\u7a7a\uff0c<code>o</code>\u5219\u8868\u793a\u6709\u7a7a\u3002</p> <p>\u8fd9 \\(N\\) \u4e2a\u4eba\u6253\u7b97\u627e\u4e00\u6bb5\u8fde\u7eed\u7684\uff0c\u4e14\u5927\u5bb6\u90fd\u6709\u7a7a\u7684\u65f6\u95f4\u51fa\u6765\u73a9\uff0c\u6c42\u51fa\u6700\u957f\u7684\u65f6\u95f4\u3002</p> <p><code>o</code>\u76f8\u5f53\u4e8e<code>1</code>\uff0c<code>x</code>\u76f8\u5f53\u4e8e<code>0</code>\uff0c\u7528<code>&amp;</code>\u8fd0\u7b97\u5408\u5e76\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u6ed1\u52a8\u7a97\u53e3\u53d6\u6700\u957f\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n, d;\nchar now[maxn], s[maxn];\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; d;\n    for(int i = 0; i &lt; d; i++)\n        now[i] = 'o';\n    for(int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; s;\n        for(int j = 0; j &lt; d; j++)\n            if(s[j] == 'x')\n                now[j] = 'x';\n    }\n    int ans = 0;\n    for(int i = 0; i &lt; d; i++)\n    {\n        if(now[i] == 'x')\n            continue;\n        int j = i;\n        while(j+1 &lt; d &amp;&amp; now[j+1] == 'o')\n            j++;\n        ans = max(ans, j - i + 1);\n        i = j+1;\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#c-find-it","title":"C - Find it!","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5177\u6709 \\(N\\) \u4e2a\u70b9\u3001\\(N\\) \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e14\u53ea\u6709\u4e00\u6761\u51fa\u8fb9\u3002\u540c\u65f6\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\)\u7684\u5e8f\u5217 \\(A\\)\uff0c\u7528 \\(A_i\\) \u8868\u793a\u6709\u4e00\u6761\u8fb9 \\((i, A_i)\\) \u4e14 \\(i \u2260 A_i\\)\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e\u56fe\u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u73af\uff0c\u627e\u51fa\u4efb\u610f\u4e00\u4e2a\u73af\uff0c\u9996\u5148\u8f93\u51fa\u73af\u7684\u957f\u5ea6\uff0c\u7136\u540e\u6309\u7167\u987a\u5e8f\u8f93\u51fa\u73af\u4e2d\u7684\u70b9\u3002</p> <p>\u73af\u5b58\u5728\u5176\u5b9e\u5f88\u597d\u8bc1\u660e\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u51fa\u8fb9\uff0c\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9\u5f00\u59cb\u4e00\u76f4\u8bbf\u95ee\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u70b9\u8bbf\u95ee\u6b21\u6570\u8d85\u8fc71\u6b21\u3002</p> <p>\u5047\u8bbe\u8bbf\u95ee\u987a\u5e8f\u4e3a \\(v_1v_2v_3...v_xv_{x+1}...v_{x+k}v_x\\) \uff0c\u5219 \\(v_xv_{x+1}...v_{x+k}v_x\\)\u5c31\u662f\u73af\u3002\u7528<code>ord</code>\u6570\u7ec4\u8bb0\u5f55\u8bbf\u95ee\u987a\u5e8f\uff0c<code>fir</code>\u6570\u7ec4\u8bb0\u5f55\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\u5373\u53ef\u5728 \\(O(n)\\) \u65f6\u95f4\u5b8c\u6210\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint n, A[maxn], ord[maxn], fir[maxn];\n\nint main()\n{\n    cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; i++)\n        scanf(\"%d\", &amp;A[i]);\n    int cur = 1, v = 1;\n    while(!fir[v])\n    {\n        fir[v] = cur;\n        ord[cur++] = v;\n        v = A[v];\n    }\n    printf(\"%d\\n\", cur-fir[v]);\n    for(int i = fir[v]; i &lt; cur; i++)\n        printf(\"%d \", ord[i]);\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#d-grid-ice-floor","title":"D - Grid Ice Floor","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635\uff0c<code>#</code>\u8868\u793a\u5ca9\u77f3\uff0c<code>.</code>\u8868\u793a\u51b0\u5757\u3002\u77e9\u9635\u4e0b\u6807\u4ece \\((1, 1)\\) \u5f00\u59cb\uff0c\u5730\u56fe\u7684\u56db\u5468\u4e00\u5b9a\u662f\u5ca9\u77f3\uff0c\u5ca9\u77f3\u4e0d\u53ef\u901a\u884c\uff0c\u4f60\u7684\u4eba\u7269\u521d\u59cb\u505c\u7559\u5728 \\((2, 2)\\) \u3002\u4eba\u7269\u6bcf\u6b21\u79fb\u52a8\u65f6\uff0c\u4ece\u4e0a\u4e0b\u5de6\u53f3\u9009\u62e9\u4e00\u4e2a\u65b9\u5411\uff0c\u4e00\u8def\u6ed1\u884c\uff0c\u76f4\u5230\u78b0\u5230\u5ca9\u77f3\uff0c\u5e76\u5728\u5ca9\u77f3\u524d\u9762\u7684\u51b0\u5757\u505c\u7559\uff0c\u7136\u540e\u5f00\u59cb\u4e0b\u4e00\u6b21\u79fb\u52a8\u3002\u6c42\u51fa\u4eba\u7269\u80fd\u7ecf\u8fc7\u7684\u51b0\u5757\u6570\u91cf\uff08\u505c\u7559\u4e5f\u7b97\u7ecf\u8fc7\uff09\u3002</p> <p>\u5f88\u57fa\u7840\u7684dfs</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 200 + 10;\nint n, m;\nchar g[maxn][maxn];\nbool vis[maxn][maxn], col[maxn][maxn];\nint dr[] = {-1, 1, 0, 0};\nint dc[] = {0, 0, -1, 1};\n\nvoid dfs(int r, int c)\n{\n    vis[r][c] = 1;\n    for(int i = 0; i &lt; 4; i++)\n    {\n        int nr = r, nc = c;\n        while(g[nr+dr[i]][nc+dc[i]] == '.')\n        {\n            nr += dr[i], nc += dc[i];\n            col[nr][nc] = 1;\n        }\n        if(!vis[nr][nc])\n            dfs(nr, nc);\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 0; i &lt; n; i++)\n        scanf(\"%s\", g[i]);\n    col[1][1] = 1;\n    dfs(1, 1);\n    int ans = 0;\n    for(int i = 0; i &lt; n; i++)\n        for(int j = 0; j &lt; m; j++)\n            ans += col[i][j];\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#e-defect-free-squares","title":"E - Defect-free Squares","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(H \\times W\\) \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u6709 \\(N\\) \u4e2a\u4f4d\u7f6e\u662f\u6d1e\uff0c\u7528 \\((r_i, c_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u6d1e\u7684\u4f4d\u7f6e</p> <p>\u95ee\uff1a\u77e9\u9635\u4e2d\u6709\u591a\u5c11\u4e2a\u6ca1\u6709\u6d1e\u7684\u6b63\u65b9\u5f62\uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1 \u2264 H,W \u2264 3000\\)</p> <p>\u9884\u5904\u7406\u51fa\u524d\u7f00\u548c\uff0c\u6b63\u65b9\u5f62\u7684\u548c\u4e3a0\u76f8\u5f53\u4e8e\u6ca1\u6709\u6d1e\u3002\u7136\u540e\u679a\u4e3e\u5de6\u4e0a\u89d2\uff0c\u5bf9\u4e8e\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\uff0c\u4e8c\u5206\u4e00\u4e2a\u6700\u5927\u503c\u51fa\u6765\uff0c\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u5c31\u662f\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5de6\u4e0a\u89d2\u7684\u4e2a\u6570\u3002\\(O(n^2logn)\\)\uff0c\u5e38\u6570\u8f83\u5c0f\uff0c\u6211\u505a\u7684\u65f6\u5019\u5c31\u662f\u4e8c\u5206\u8fc7\u7684\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 3010;\ntypedef long long LL;\nint n, m, s[maxn][maxn], k, len[maxn][maxn];\nint getsum(int r1, int c1, int r2, int c2)\n{return s[r2][c2] - s[r2][c1-1] - s[r1-1][c2] + s[r1-1][c1-1];}\nint check(int r, int c, int n)\n{return !getsum(r, c, r+n-1, c+n-1);}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n    while(k--)\n    {\n        int r, c;\n        scanf(\"%d %d\", &amp;r, &amp;c);\n        s[r][c] = 1;\n    }\n    for(int i = 1; i &lt;= n; i++)\n        for(int j = 1; j &lt;= m; j++)\n            s[i][j] += s[i-1][j] + s[i][j-1] - s[i-1][j-1];\n    int l, r;\n    LL ans = 0;\n    for(int i = 1; i &lt;= n; i++)\n        for(int j = 1; j &lt;= m; j++)\n        {\n            if(getsum(i, j, i, j) == 1)\n                continue;\n            l = max(1, len[i-1][j-1]-1);\n            r = min(n-i, m-j) + 1;\n            while(l &lt; r)\n            {\n                int x = (l + r + 1) / 2;\n                if(check(i, j, x))\n                    l = x;\n                else\n                    r = x - 1;\n            }\n            len[i][j] = l;\n            ans += l;\n        }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u8fd9\u91cc\u7528\u4e86<code>len</code>\u6570\u7ec4\uff0c<code>len[i][j]</code>\u8868\u793a\u4ee5<code>(i,j)</code>\u4e3a\u5de6\u4e0a\u89d2\u7684\u6ca1\u6709\u6d1e\u7684\u6b63\u65b9\u5f62\u7684\u6700\u5927\u8fb9\u957f\uff0c\u663e\u7136\uff0c<code>len[i][j]</code>\u4e0e<code>len[i-1][j-1]</code>\u662f\u6709\u5173\u7cfb\u7684\uff0c\u4e8c\u5206\u7684\u65f6\u5019\u7528<code>len</code>\u6570\u7ec4\u53ef\u4ee5\u66f4\u52a0\u7cbe\u51c6\u7684\u786e\u5b9a<code>l</code>\u7684\u4e0b\u754c\uff0c\u4f18\u5316\u4e86\u4e00\u70b9\u5e38\u6570\u3002</p> <p>\u4e0d\u8fc7\u65e2\u7136\u80fd\u60f3\u5230<code>len</code>\u4e4b\u95f4\u7684\u5173\u8054\uff0cdp\u51e0\u4e4e\u662f\u547c\u4e4b\u6b32\u51fa\u7684\uff0c\u53ea\u9700\u8981\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\\(dp[i][j]\\)\uff1a\u4ee5 \\((i, j)\\) \u4e3a\u53f3\u4e0b\u89d2\u7684\u6ca1\u6709\u6d1e\u7684\u6b63\u65b9\u5f62\u7684\u6700\u5927\u8fb9\u957f\u3002</p> <p>\u8f6c\u79fb\u4e5f\u6bd4\u8f83\u76f4\u89c2\uff0c\u5982\u56fe\uff0c<code>dp[i-1][j-1], dp[i-1][j], dp[i][j-1]</code>\u53e0\u52a0\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u5f97\u5230<code>dp[i][j]</code></p> <p></p> \\[ dp[i][j] = \\left\\{ \\begin{matrix} min(dp[i-1][j-1],\\ dp[i-1][j],\\ dp[i][j-1]) + 1 &amp; \\quad (hole[i][j] == 0) \\\\ 0 &amp; \\quad   (hole[i][j] == 1) \\end{matrix} \\right. \\] <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int maxn = 3010;\ntypedef long long LL;\nint n, m, k, dp[maxn][maxn];\nbool hole[maxn][maxn];\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n    while(k--)\n    {\n        int r, c;\n        scanf(\"%d %d\", &amp;r, &amp;c);\n        hole[r][c] = 1;\n    }\n    LL ans = 0;\n    for(int i = 1; i &lt;= n; i++)\n        for(int j = 1; j &lt;= m; j++)\n        {\n            dp[i][j] = hole[i][j] ? 0 : min(dp[i-1][j-1], min(dp[i][j-1], dp[i-1][j])) + 1;\n            ans += dp[i][j];\n        }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#f-yet-another-grid-task","title":"F - Yet Another Grid Task","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635\uff0c<code>#</code>\u8868\u793a\u9ed1\u8272\uff0c<code>.</code>\u8868\u793a\u767d\u8272\uff0c\u5982\u679c\u4e00\u4e2a\u77e9\u9635\u7684\u6240\u6709\u4f4d\u7f6e\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u79f0\u8fd9\u4e2a\u77e9\u9635\u662f\u7f8e\u4e3d\u7684\uff1a</p> <ul> <li>\u82e5 \\((i, j)\\) \u662f\u9ed1\u8272\uff0c\u4e14 \\((i+1, j)\\) \u5b58\u5728\uff0c\u5219 \\((i+1, j)\\) \u4e5f\u662f\u9ed1\u8272\u3002</li> <li>\u82e5 \\((i, j)\\) \u662f\u9ed1\u8272\uff0c\u4e14 \\((i+1, j+1)\\) \u5b58\u5728\uff0c\u5219 \\((i+1, j+1)\\) \u4e5f\u662f\u9ed1\u8272\u3002</li> </ul> <p>\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u5c06\u4efb\u610f\u591a\u4e2a\u767d\u8272\u67d3\u6210\u9ed1\u8272\uff0c\u6c42\u51fa\u80fd\u5c06\u56fe\u53d8\u6210\u7f8e\u4e3d\u7684\u67d3\u8272\u65b9\u6848\u6570\uff08mod <code>998244353</code>\uff09\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\u2264N,M\u22642000\\)</p> <p>\u501f\u9274\u4e86 \u8fd9\u4e2a\u9898\u89e3 \u7684\u505a\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u9ed1\u8272\u65b9\u5757\uff0c\u4f1a\u9650\u5236\u8fd9\u4e2a\u65b9\u5757\u53f3\u4e0b\u7684\u659c\u7ebf(\u4e5f\u5305\u62ec\u659c\u7ebf\u4ee5\u4e0b\u7684\u4f4d\u7f6e)\u90fd\u6d82\u6210\u9ed1\u8272\uff0c\u800c\u6709\u4e9b\u4f4d\u7f6e\u662f\u53d7\u5176\u4ed6\u9ed1\u8272\u5f71\u54cd\u5fc5\u987b\u6d82\u6210\u9ed1\u8272\uff0c\u6709\u7684\u4f4d\u7f6e\u662f\u81ea\u5df1\u624b\u52a8\u6d82\u9ed1\u7684(\u53ef\u9009)\u3002</p> <p>\u8003\u8651\u4ece\u5de6\u5f80\u53f3\u6d82\uff0c\u6bcf\u4e00\u5217\u53ea\u9700\u8981\u8003\u8651\u6700\u9ad8\uff08\u6ce8\uff1a\u884c\u53f7\u8d8a\u5c0f\u8d8a\u9ad8\uff0c\u5373\u7b2c0\u884c\u6700\u9ad8\uff09\u7684\u9ed1\u8272\u65b9\u5757\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6700\u9ad8\u7684\u9ed1\u8272\u65b9\u5757\u4e0b\u65b9\u7684\u65b9\u5757\u662f\u88ab\u5f3a\u5236\u6d82\u9ed1\u7684\u3002\u5047\u8bbe\u7b2c<code>c-1</code>\u5217\u6700\u9ad8\u7684\u9ed1\u8272\u65b9\u5757\u4f4d\u7f6e\u662f<code>r</code>\uff0c\u5219\uff08\u5728\u4e0d\u8003\u8651\u521d\u59cb\u7684\u9ed1\u8272\u65b9\u5757\u7684\u60c5\u51b5\u4e0b\uff09\u53ef\u4ee5\u5c06\u7b2c<code>c</code>\u5217\u7684\u6700\u9ad8\u9ed1\u8272\u65b9\u5757\u5b9a\u5728<code>0</code>\u5230<code>r+1</code>\u3002</p> <p>\u4e8e\u662f\u6709 \\(dp[c][r]\\) \uff1a\u524d \\(c\\) \u5217\u5df2\u7ecf\u6d82\u5b8c\uff0c\u4e14\u7b2c \\(c\\) \u5217\u6700\u9ad8\u7684\u9ed1\u8272\u65b9\u5757\u9ad8\u5ea6\u662f \\(r\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u8003\u8651 \\(dp[c][r]\\) \u53ef\u4ee5\u4ece\u54ea\u4e9b\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\uff0c\u82e5 $i+1 &lt; r $\uff0c\u6b64\u65f6 \\(dp[c-1][i]\\) \u662f\u4e0d\u80fd\u8f6c\u79fb\u5230 \\(dp[c][r]\\) \u7684\uff0c\u56e0\u4e3a \\((c-1, i)\\) \u662f\u9ed1\u8272\uff0c\u6240\u4ee5 \\((c, i+1)\\) \u4f1a\u88ab\u5f3a\u5236\u6d82\u6210\u9ed1\u8272\uff0c\u8fd9\u4e0e\u72b6\u6001\u7684\u5b9a\u4e49\u4e0d\u7b26\u3002\u82e5 \\(i + 1 \u2265 r\\) \uff0c\u6b64\u65f6\u7684 \\(dp[c-1][i]\\) \u53ef\u4ee5\u8f6c\u79fb\u5230 \\(dp[c][r]\\) \uff0c\u56e0\u4e3a\u53ef\u4ee5\u624b\u52a8\u5728 \u7b2c \\(c\\) \u5217 \u6d82\u8272\u4f7f\u5f97\u6700\u9ad8\u7684\u9ed1\u8272\u65b9\u5757\u9ad8\u5ea6\u662f \\(r\\)</p> <p>\u56e0\u6b64\u8f6c\u79fb\u4e3a \\(dp[c][r] = \\sum\\limits_{i=r-1}^{n}dp[c-1][i]\\)\uff0c\u5176\u4e2d \\(i = n\\) \u8868\u793a\u7b2c \\(c-1\\) \u5217\u5168\u662f\u767d\u8272\u7684\u60c5\u51b5\u3002</p> <p>\u5f53\u7136\uff0c\u4e0a\u9762\u7684\u8fd9\u4e2a\u8f6c\u79fb\u662f \\(O(n)\\) \u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f04\u4e2a\u524d\u7f00\u548c\uff0c\u4ece\u4e0b\u5f80\u4e0a\u679a\u4e3e\uff0c\u5c31\u80fd\u5728 \\(O(1)\\) \u7684\u65f6\u95f4\u8f6c\u79fb\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nconst int mod = 998244353;\nconst int maxn = 2010;\nint n, m;\nchar g[maxn][maxn];\nint dp[maxn][maxn], h[maxn];\n\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 0; i &lt; n; i++)\n        scanf(\"%s\", g[i]);\n    for(int j = 0; j &lt; m; j++)\n    {\n        h[j] = n;\n        for(int i = 0; i &lt; n; i++)\n            if(g[i][j] == '#')\n            {\n                h[j] = i;\n                g[i+1][j+1] = '#';\n                break;\n            }\n    }\n    for(int i = h[0]; ~i; i--)\n        dp[0][i] = dp[0][i+1] + 1;\n    for(int c = 1; c &lt; m; c++)\n        for(int r = h[c]; ~r; r--)\n            dp[c][r] = (dp[c][r+1] + dp[c-1][max(0, r-1)]) % mod;\n    cout &lt;&lt; dp[m-1][0] &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u6781\u81f4\u4f18\u5316\u7a7a\u95f4...</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nconst int mod = 998244353;\nint n, m;\n\nusing namespace std;\n\nint main()\n{\n    ios::sync_with_stdio(false);\n\n    cin &gt;&gt; n &gt;&gt; m;\n    vector&lt;int&gt; dp(n+2), h(m, n);\n    string s;\n    for(int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; s;\n        for(int j = 0; j &lt; m; j++)\n            if(s[j] == '#')\n                h[j] = min(h[j], i);\n    }\n    for(int i = h[0]; ~i; i--)\n        dp[i] = dp[i+1] + 1;\n    for(int c = 1; c &lt; m; c++)\n    {\n        for(int r = n; r &gt; h[c]; r--)\n            dp[r] = 0;\n        for(int r = h[c]; ~r; r--)\n            dp[r] = (dp[r+1] + dp[max(0, r-1)]) % mod;\n    }\n    cout &lt;&lt; dp[0] &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc311/#g-one-more-grid-task","title":"G - One More Grid Task","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635 \\(A\\) \uff0c\\(A\\) \u7684\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u3002\u7528 \\(R\\) \u8868\u793a \\(A\\) \u7684\u5b50\u77e9\u9635\uff0c\\(sum(R)\\) \u8868\u793a\u5b50\u77e9\u9635\u6240\u6709\u6570\u5b57\u4e4b\u548c\uff0c\\(min(R)\\) \u8868\u793a\u5b50\u77e9\u9635\u4e2d\u6700\u5c0f\u7684\u6570\u5b57\u3002\u5b9a\u4e49 \\(f(R) = sum(R) \\times min(R)\\)\uff0c\u5bf9\u4e8e \\(A\\) \u7684\u6240\u6709\u5b50\u77e9\u9635\uff0c\u6c42\u51fa\u6700\u5927\u7684 \\(f(R)\\)\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\u2264N,M,A_{i,j}\u2264300\\)</p> <p>\u9996\u5148\u56fa\u5b9a\u5b50\u77e9\u9635\u7684\u5de6\u53f3\u4e24\u8fb9 \\(l\\) \u548c \\(r\\) \uff0c\u7136\u540e\u7528 \\(O(n)\\) \u65f6\u95f4\u5904\u7406\u51fa\u4e24\u4e2a\u6570\u7ec4\uff1a</p> <p>\\(c_{l,r}[i] = min(a[i][l],\\ a[i][l+1]\\ ...\\ a[i][r])\\)</p> <p>\\(d_{l,r}[i] = a[i][l]+a[i][l+1] +\\ ...\\  + a[i][r]\\)</p> <p>\u63a5\u4e0b\u6765\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 \\(c\\) \u548c \\(d\\) \u6c42\u51fa \\((x, y)\\) \u4f7f\u5f97 \\(f(x, y) = min(c[x]...c[y]) \\times (d[x]+\\ ...\\ + d[y])\\) \u6700\u5927</p> <p>\u5148\u5c06 \\(d\\) \u5904\u7406\u6210\u524d\u7f00\u548c\u5f62\u5f0f\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a \\(c[i]=min(c[x]...c[y])\\) \u7684\u60c5\u51b5\uff0c\u7531\u4e8e \\(d\\) \u4e2d\u7684\u503c\u975e\u8d1f\uff0c\u5728\u6700\u5c0f\u503c\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u80af\u5b9a\u8d8a\u5927\u8d8a\u597d\uff0c \u56e0\u6b64 \\(c[i]=min(c[x]...c[y])\\) \u8bf4\u660e \\(c[i] &gt; c[x-1]\\) \u4e14 \\(c[i] &gt; c[y+1]\\)\uff0c\u8fd9\u5c31\u8f6c\u5316\u6210\u627e\u51fa \\(c\\) \u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u4e0a\u4e00\u4e2a\u3001\u4e0b\u4e00\u4e2a\u6bd4\u4ed6\u5c0f\u7684\u5143\u7d20\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u5728 \\(O(n)\\) \u7684\u65f6\u95f4\u89e3\u51b3\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^3)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 310;\nint n, m, a[maxn][maxn], c[maxn], um[maxn], d[maxn];\nLL ds[maxn];\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++)\n        for(int j = 1; j &lt;= m; j++)\n            scanf(\"%d\", &amp;a[i][j]);\n    LL ans = 0;\n    for(int l = 1; l &lt;= m; l++)\n    {\n        for(int i = 1; i &lt;= n; i++)\n            c[i] = 500, d[i] = 0;\n        for(int r = l; r &lt;= m; r++)\n        {\n            for(int i = 1; i &lt;= n; i++)\n                c[i] = min(c[i], a[i][r]), d[i] += a[i][r];\n            for(int i = 1; i &lt;= n; i++)\n                ds[i] = ds[i-1] + d[i];\n            stack&lt;int&gt; st;\n            for(int i = n; i; i--)\n            {\n                while(!st.empty() &amp;&amp; c[i] &lt; c[st.top()])\n                    um[st.top()] = i, st.pop();\n                st.push(i);\n            }\n            while(!st.empty())\n                um[st.top()] = 0, st.pop();\n            for(int i = n; i; i--)\n            {\n                while(!st.empty() &amp;&amp; c[st.top()] &gt;= c[i])\n                    st.pop();\n                int dm = st.empty() ? n : st.top() - 1;\n                ans = max(ans, (ds[dm]-ds[um[i]]) * c[i]);\n                st.push(i);\n            }\n        }\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/","title":"ABC312(A-F)","text":""},{"location":"algorithm/AtCoder/abc312/#a-chord","title":"A - Chord","text":"<p>\u5224\u65ad\u5b57\u7b26\u4e32 \\(S\\) \u662f\u5426\u7b49\u4e8e <code>ACE</code>, <code>BDF</code>, <code>CEG</code>, <code>DFA</code>, <code>EGB</code>, <code>FAC</code>,  <code>GBD</code> \u4e4b\u4e00</p> <p>\u76f4\u63a5\u5224\u65ad</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    string s;\n    cin &gt;&gt; s;\n    if(s == \"ACE\" || s == \"BDF\" || \n    s == \"CEG\" || s == \"DFA\" || s == \"EGB\" || s == \"FAC\" || s == \"GBD\")\n        puts(\"Yes\");\n    else\n        puts(\"No\");\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#b-tak-code","title":"B - TaK Code","text":"<p>\u6709\u4e00\u4e2a \\(N \\times M\\) \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u53ea\u6709 <code>#</code> \u6216 <code>.</code> \uff0c\u95ee\uff1a\u6709\u591a\u5c11\u4e2a\u5982\u4e0b\u5f62\u72b6\u7684 \\(9 \\times 9\\) \u5b50\u77e9\u9635</p> <pre><code>###.?????\n###.?????\n###.?????\n....?????\n?????????\n?????....\n?????.###\n?????.###\n?????.###\n</code></pre> <p>\u5176\u4e2d <code>?</code> \u53ef\u4ee5\u662f  <code>#</code> \u6216 <code>.</code></p> <p>\u76f4\u63a5\u679a\u4e3e\u5373\u53ef</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int maxn = 110;\nint n, m;\nchar s[maxn][maxn];\nbool check1(int r, int c)\n{\n    for(int i = 0; i &lt; 3; i++)\n        for(int j = 0; j &lt; 3; j++)\n            if(s[r][c] != '#')\n                return 0;\n    return 1;\n}\nbool check2(int r, int c)\n{\n    for(int i = 0; i &lt; 4; i++)\n        if(s[r-i][c] != '.' || s[r][c-i] != '.')\n            return 0;\n    return 1;\n}\nbool check3(int r, int c)\n{\n    for(int i = 0; i &lt; 4; i++)\n        if(s[r+i][c] != '.' || s[r][c+i] != '.')\n            return 0;\n    return 1;\n}\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++)\n        scanf(\"%s\", s[i]+1);\n    for(int i = 1; i+8 &lt;= n; i++)\n        for(int j = 1; j+8 &lt;= m; j++)\n            if(check1(i, j) &amp;&amp; check2(i+3, j+3) &amp;&amp; check3(i+5, j+5) &amp;&amp; check1(i+6, j+6))\n                printf(\"%d %d\\n\", i, j);\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#c-invisible-hand","title":"C - Invisible Hand","text":"<p>\u6709 \\(N\\) \u4e2a\u5356\u5bb6\u548c \\(M\\) \u4e2a\u4e70\u5bb6\uff0c\u6bcf\u4e2a\u5356\u5bb6\u90fd\u6709\u9884\u671f\u5356\u51fa\u4ef7\u683c \\(A_i\\) \uff0c\u5f53\u4ef7\u683c\u5927\u4e8e\u6216\u7b49\u4e8e \\(A_i\\) \u65f6\u5356\u5bb6\u624d\u613f\u610f\u5356\u51fa\u3002\u4e70\u4e2a\u4e70\u5bb6\u6709\u9884\u671f\u4e70\u5165\u4ef7\u683c \\(B_i\\) \uff0c\u5f53\u4ef7\u683c\u5c0f\u4e8e\u6216\u7b49\u4e8e \\(B_i\\) \u65f6\u4e70\u5bb6\u624d\u613f\u610f\u4e70\u5165\u3002\u627e\u51fa\u6700\u5c0f\u7684\u6570 \\(X\\) \uff0c\u4f7f\u5f97\u613f\u610f\u5356\u51fa\u7684\u4eba\u6570\u5927\u4e8e\u7b49\u4e8e\u613f\u610f\u4e70\u5165\u7684\u4eba\u6570\u3002</p> <p>\u4e8c\u5206\uff0c\u8bc1\u660e\u5355\u8c03\u6027\uff1a\u5982\u679c \\(X\\) \u7684\u503c\u8c03\u4f4e\uff0c\u5219\u5356\u5bb6\u4f1a\u53d8\u5c11\uff0c\u800c\u5356\u5bb6\u4f1a\u53d8\u591a\uff0c\u53cd\u4e4b\u540c\u7406\uff0c\u56e0\u6b64\u6ee1\u8db3\u5355\u8c03\u6027\u3002</p> <p>\u5bf9\u4e70\u5bb6\u548c\u5356\u5bb6\u7684\u4ef7\u683c\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\uff0ccheck\u7684\u65f6\u5019\u4e5f\u4e8c\u5206\u5c31\u80fd\u77e5\u9053\u6709\u591a\u5c11\u5356\u5bb6\u548c\u4e70\u5bb6\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int maxn = 2E5 + 10;\nint a[maxn], b[maxn], n, m;\n\nint check(int num)\n{\n    return lower_bound(a, a+n, num+1) - a &gt;= b + m - lower_bound(b, b+m, num);\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 0; i &lt; n; i++)\n        scanf(\"%d\", &amp;a[i]);\n    for(int i = 0; i &lt; m; i++)\n        scanf(\"%d\", &amp;b[i]);\n    sort(a, a+n);\n    sort(b, b+m);\n    int l = min(a[0], b[0]) - 1, r = max(a[n-1], b[m-1]) + 1;\n    while(l &lt; r)\n    {\n        int x = (l + r) / 2;\n        if(check(x))\n            r = x;\n        else\n            l = x + 1;\n    }\n    cout &lt;&lt; l &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u5982\u679c\u63a8\u4e00\u4e0b\u4f1a\u53d1\u73b0\u7b54\u6848\u4e00\u5b9a\u662f \\(A_i\\) \u6216 \\(B_i + 1\\)\uff0c\u8fdb\u4e00\u6b65\u53ef\u4ee5\u53c2\u8003 \u8fd9\u4e2a\u9898\u89e3 \uff0c\u5c06 \\(A_i\\) \u548c \\(B_i + 1\\) \u5408\u5e76\u7136\u540e\u6392\u5e8f\u76f4\u63a5\u8f93\u51fa \\(M-1\\) \u5143\u7d20\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O((N+M)log(N+M))\\)</p> <pre><code>N, M = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nprint(sorted(A + list(map(lambda x: x + 1, B)))[M - 1])\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#d-count-bracket-sequences","title":"D - Count Bracket Sequences","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5b57\u7b26\u4e32 \\(S\\) \uff0c\\(S\\) \u7531 <code>(</code>\uff0c <code>)</code> \u548c <code>?</code> \u7ec4\u6210\uff0c\u4f60\u9700\u8981\u5c06 <code>?</code> \u66ff\u6362\u6210 <code>(</code> \u6216 <code>)</code>\uff0c\u95ee\uff1a\u6709\u591a\u5c11\u79cd\u65b9\u6848\u80fd\u591f\u5c06 \\(S\\) \u66ff\u6362\u6210\u62ec\u53f7\u5339\u914d\u7684\u5b57\u7b26\u4e32\u3002\u7b54\u6848 \\(\\bmod 998244353\\)</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(N \u2264 3000\\)</p> <p>\u7ecf\u5178\u62ec\u53f7\u5339\u914d\u9898\uff0c<code>(</code> \u770b\u6210 <code>1</code> \uff0c<code>)</code> \u770b\u6210 <code>-1</code> \uff0c\u5408\u6cd5\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u524d\u7f00\u548c\u5927\u4e8e\u7b49\u4e8e <code>0</code></p> <p>\u5b9a\u4e49 \\(dp[i][j]\\) \uff1a\u524d \\(i\\) \u4e2a\u6570\u5b57\u4f7f\u5f97\u524d\u7f00\u548c\u4e3a \\(j\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u8f6c\u79fb\uff1a</p> \\[ dp[i][j] = \\left\\{  \\begin{matrix} dp[i-1][j-1], &amp; s[i]\\ ==\\ ( \\\\ dp[i-1][j+1], &amp; s[i]\\ ==\\ ) \\\\ dp[i-1][j-1] + dp[i-1][j+1], &amp; s[i]\\ ==\\ ? \\\\ \\end{matrix} \\right. \\] <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N^2)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nconst int maxn = 3010;\nconst int mod = 998244353;\nint n;\nchar s[maxn];\nint dp[maxn][maxn];\n\nint main()\n{\n    scanf(\"%s\", s+1);\n    n = strlen(s+1);\n    dp[0][0] = 1;\n    for(int i = 1; i &lt;= n; i++)\n    {\n        if(s[i] == '(')\n        {\n            for(int j = 1; j &lt;= n; j++)\n                dp[i][j] = (dp[i][j] + dp[i-1][j-1]) % mod;\n        }\n        else if(s[i] == ')')\n        {\n            for(int j = 0; j &lt; n; j++)\n                dp[i][j] = (dp[i][j] + dp[i-1][j+1]) % mod;\n        }\n        else\n        {\n            for(int j = 1; j &lt;= n; j++)\n                dp[i][j] = (dp[i][j] + dp[i-1][j-1]) % mod;\n            for(int j = 0; j &lt; n; j++)\n                dp[i][j] = (dp[i][j] + dp[i-1][j+1]) % mod;\n        }\n    }\n    cout &lt;&lt; dp[n][0] &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#e-tangency-of-cuboids","title":"E - Tangency of Cuboids","text":"<p>\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u6709 \\(N\\) \u4e2a \u4e92\u4e0d\u76f8\u4ea4\u7684\u957f\u65b9\u4f53\uff0c\u5982\u679c\u4e24\u4e2a\u957f\u65b9\u4f53\u6709\u4e00\u9762\u76f8\u90bb\uff0c\u5219\u79f0\u8fd9\u4e24\u4e2a\u957f\u65b9\u4f53\u76f8\u90bb\u3002\u8f93\u51fa\u6bcf\u4e2a\u957f\u65b9\u4f53\u4e0e\u5176\u4ed6\u957f\u65b9\u4f53\u76f8\u90bb\u7684\u6570\u91cf\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a</p> <ul> <li> <p>\\(1 \u2264 N \u2264 10^5\\)</p> </li> <li> <p>\\(0 \u2264 X, Y, Z \u2264 100\\)</p> </li> </ul> <p>\u7a7a\u95f4\u53ea\u6709 <code>100</code>\uff0c\u5206\u6210\u591a\u4e2a \\(1\\times1\\times1\\) \u7684\u5c0f\u65b9\u5757\u3002\u7531\u4e8e\u957f\u65b9\u4f53\u4e92\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5\u4e00\u4e2a\u5c0f\u65b9\u5757\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u957f\u65b9\u4f53\uff0c\u5982\u679c\u4e24\u4e2a\u5c0f\u65b9\u5757\u76f8\u90bb\uff0c\u5219\u8bf4\u660e\u5bf9\u5e94\u7684\u957f\u65b9\u4f53\u662f\u76f8\u90bb\u7684\u3002\u7528\u4e00\u4e2a <code>id[100][100][100]</code> \u8bb0\u5f55\u5c0f\u65b9\u5757\u7684\u5f52\u5c5e\uff0c\u7136\u540e\u904d\u5386\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86\u3002\u4f7f\u7528\u54c8\u5e0c\u8868\u8bb0\u5f55\u6bcf\u4e2a\u957f\u65b9\u4f53\u548c\u8c01\u76f8\u90bb\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_set&gt;\n\nusing namespace std;\n\nconst int maxx = 110;\nconst int maxn = 1E5 + 10;\nunordered_set&lt;int&gt; face[maxn];\nint id[maxx][maxx][maxx];\nint n;\n\nint main()\n{\n    cin &gt;&gt; n;\n    for(int i = 1, x1, y1, z1, x2, y2, z2; i &lt;= n; i++)\n    {\n        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; z1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; z2;\n        for(int x = x1; x &lt; x2; x++)\n            for(int y = y1; y &lt; y2; y++)\n                for(int z = z1; z &lt; z2; z++)\n                    id[x][y][z] = i;\n    }\n    for(int x = 0; x &lt; 100; x++)\n        for(int y = 0; y &lt; 100; y++)\n            for(int z = 0; z &lt; 100; z++)\n                if(id[x][y][z])\n                {\n                    if(id[x+1][y][z] &amp;&amp; id[x+1][y][z] != id[x][y][z])\n                    {\n                        face[id[x+1][y][z]].insert(id[x][y][z]);\n                        face[id[x][y][z]].insert(id[x+1][y][z]);\n                    }\n                    if(id[x][y+1][z] &amp;&amp; id[x][y+1][z] != id[x][y][z])\n                    {\n                        face[id[x][y+1][z]].insert(id[x][y][z]);\n                        face[id[x][y][z]].insert(id[x][y+1][z]);\n                    }\n                    if(id[x][y][z+1] &amp;&amp; id[x][y][z+1] != id[x][y][z])\n                    {\n                        face[id[x][y][z+1]].insert(id[x][y][z]);\n                        face[id[x][y][z]].insert(id[x][y][z+1]);\n                    }\n                }\n    for(int i = 1; i &lt;= n; i++)\n        cout &lt;&lt; face[i].size() &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#f-cans-and-openers","title":"F - Cans and Openers","text":"<p>\u6709 \\(N\\) \u4e2a\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u90fd\u6709\u4e00\u4e2a \\(X_i\\) \u5c5e\u6027\uff0c\u7269\u54c1\u6709\u4e09\u79cd\u7c7b\u578b\uff0c</p> <ul> <li>\u6613\u62c9\u7f50\uff1a\u83b7\u5f97\u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00\uff0c\u6253\u5f00\u4e4b\u540e\u83b7\u5f97 \\(X_i\\) \u7684\u5206\u6570\u3002</li> <li>\u5bc6\u5c01\u7f50\uff1a\u9700\u8981\u4f7f\u7528\u5f00\u7f50\u5668\u624d\u80fd\u6253\u5f00\uff0c\u6253\u5f00\u4e4b\u540e\u83b7\u5f97 \\(X_i\\) \u7684\u5206\u6570\u3002</li> <li>\u5f00\u7f50\u5668\uff1a\u7528\u4e8e\u6253\u5f00\u5bc6\u5c01\u7f50\uff0c\u53ef\u4ee5\u4f7f\u7528 \\(X_i\\) \u6b21\u3002</li> </ul> <p>\u95ee\uff1a\u4ece\u4e2d\u9009\u62e9 \\(M\\) \u4e2a\u7269\u54c1\uff0c\u6700\u591a\u80fd\u83b7\u5f97\u591a\u5c11\u5206\u6570\uff1f</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1 \u2264 M \u2264 N \u2264 2 \\times 10^5\\)</p> <p>\u663e\u7136\uff0c\u5bf9\u4e8e\u4e09\u79cd\u7269\u54c1\uff0c\u5728\u80fd\u9009\u62e9\u7684\u60c5\u51b5\u4e0b\uff0c\u90fd\u662f\u9009\u62e9 \\(X_i\\) \u8d8a\u5927\u7684\u8d8a\u597d\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u56fa\u5b9a\u6613\u62c9\u7f50\u7684\u6570\u91cf\uff0c \u5047\u8bbe\u5df2\u7ecf\u9009\u62e9\u4e86 \\(i\\) \u4e2a\u5206\u6570\u6700\u9ad8\u7684\u6613\u62c9\u7f50\uff0c\u90a3\u4e48\u5269\u4e0b\u7684 \\(M-i\\)  \u4e2a\u7269\u54c1\u5c31\u662f\u5bc6\u5c01\u7f50\u548c\u5f00\u7f50\u5668\uff0c\u6309\u7167\u4f18\u5148\u7ea7\u4e00\u4e2a\u4e00\u4e2a\u9009\u5373\u53ef\u3002</p> <p>\u8fd9\u6837\u7684\u8bdd\uff0c\u7b2c\u4e00\u5c42\u679a\u4e3e \\(i\\) \u9700\u8981\u904d\u5386 \\(M\\) \u6b21\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u9009\u62e9\u5269\u4e0b\u7684 \\(M-i\\) \u4e2a\u7269\u54c1\u4e5f\u9700\u8981 \\(M\\) \u6b21\uff0c\u8fd9\u6837\u80af\u5b9a\u8d85\u65f6\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e\u7269\u54c1\u4e4b\u95f4\u7684\u4f18\u5148\u7ea7\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u4e1c\u897f\u52a0\u901f\uff1a\u5177\u4f53\u6765\u8bf4\uff0c\u5f00\u4e24\u4e2a\u6570\u7ec4 <code>sa[]</code> \u548c <code>sb[]</code> \uff0c<code>sa[i]</code> \u8868\u793a\u9009\u62e9 <code>i</code> \u4e2a\u6613\u62c9\u7f50\u80fd\u83b7\u5f97\u7684\u6700\u9ad8\u5206\u6570\uff0c\u7531\u4e8e\u5206\u6570\u8d8a\u9ad8\u8d8a\u597d\uff0c\u56e0\u6b64\u6784\u9020 <code>sa[]</code> \u53ea\u9700\u8981\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u4ece\u9ad8\u5230\u4f4e\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u3002 <code>sb[j]</code> \u8868\u793a\u9009\u62e9 <code>j</code> \u4e2a\u5176\u4f59\u7269\u54c1\u80fd\u83b7\u5f97\u6700\u9ad8\u7684\u5206\u6570\uff0c\u6784\u9020 <code>sb[]</code> \u7684\u8fc7\u7a0b\u4e5f\u5f88\u7b80\u5355\uff0c\u624b\u4e0a\u6ca1\u6709\u5f00\u7f50\u5668\u5c31\u52a0\u4e00\u4e2a\uff0c\u5982\u679c\u6709\u5f00\u7f50\u5668\uff0c\u4e5f\u662f\u4ece\u5bc6\u5c01\u7f50\u5f53\u4e2d\u9009\u4e00\u4e2a\u5206\u6570\u6700\u9ad8\u7684\u52a0\u8d77\u6765\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nint main()\n{\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    vector&lt;LL&gt; a, b, c;\n    vector&lt;LL&gt; sa(n+1), sb(n+1);\n    for(int i = 0, t, x; i &lt; n; i++)\n    {\n        scanf(\"%d %d\", &amp;t, &amp;x);\n        if(t == 0)\n            a.push_back(x);\n        else if(t == 1)\n            b.push_back(x);\n        else\n            c.push_back(x);\n    }\n    sort(a.begin(), a.end(), greater&lt;LL&gt;());\n    sort(b.begin(), b.end());\n    sort(c.begin(), c.end());\n    for(int i = 0; i &lt; n; i++)\n        if(i &lt; a.size())\n            sa[i+1] = sa[i] + a[i];\n        else\n            sa[i+1] = sa[i];\n    for(int r = 0, i = 0; i &lt; n; i++)\n    {\n        if(b.empty())\n            sb[i+1] = sb[i];\n        else if(r == 0)\n        {\n            if(!c.empty())\n            {\n                r += c.back();\n                c.pop_back();\n            }\n            sb[i+1] = sb[i];\n        }\n        else\n        {\n            sb[i+1] = sb[i] + b.back();\n            b.pop_back();\n            r--;\n        }\n    }\n    LL ans = 0;\n    for(int i = 0; i &lt;= m; i++)\n        ans = max(ans, sa[i] + sb[m-i]);\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/AtCoder/abc312/#g-avoid-straight-line","title":"G - Avoid Straight Line","text":"<p>\u6709\u4e00\u68f5 \\(N\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6c42\u51fa\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u4e09\u5143\u7ec4 \\((i, j, k)\\) \u7684\u6570\u91cf\uff1a</p> <ul> <li>\\(1 \u2264 i &lt; j &lt; k \u2264 N\\)</li> <li>\u6811\u4e2d\u4e0d\u5b58\u5728\u5305\u542b \\(i\\) \uff0c\\(j\\) \uff0c\\(k\\) \u7684\u7b80\u5355\u8def\u5f84\u3002</li> </ul> <p>\u6570\u636e\u8303\u56f4\uff1a\\(N \u2264 2 \\times 10^5\\)</p> <p>\u53c2\u8003 \u8fd9\u4e2a\u9898\u89e3 \u7684\u601d\u8def</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 2E5 + 10;\nconst int maxm = 4E5 + 10;\nint n, sz[maxn];\nint head[maxn], ne[maxm], edge[maxm], idx = 1;\nvoid add(int u, int v)\n{\n    edge[idx] = v;\n    ne[idx] = head[u];\n    head[u] = idx++;\n}\n\nvoid dfs(int u, int fa)\n{\n    sz[u] = 1;\n    for(int i = head[u]; i; i = ne[i])\n    {\n        int v = edge[i];\n        if(v == fa)\n            continue;\n        dfs(v, u);\n        sz[u] += sz[v];\n    }\n}\n\nLL ans;\n\nvoid dfs2(int u, int fa)\n{\n    LL sum = 0;\n    for(int i = head[u]; i; i = ne[i])\n    {\n        int v = edge[i];\n        sum += sz[v];\n    }\n    for(int i = head[u]; i; i = ne[i])\n    {\n        int v = edge[i];\n        sum -= sz[v];\n        ans -= sz[v] * sum;\n    }\n    for(int i = head[u]; i; i = ne[i])\n    {\n        int v = edge[i];\n        if(v == fa)\n            continue;\n        sz[u] -= sz[v];\n        sz[v] += sz[u];\n        dfs2(v, u);\n        sz[v] -= sz[u];\n        sz[u] += sz[v];\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    ans = n * (n - 1ll) * (n - 2) / 6;\n    for(int m = n-1, u, v; m--; )\n    {\n        scanf(\"%d %d\", &amp;u, &amp;v);\n        add(u, v);\n        add(v, u);\n    }\n    dfs(1, 0);\n    dfs2(1, 0);\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"dev/","title":"\u5f00\u53d1","text":"<p>https://codezhxs.github.io</p> <p>\u4f60\u597d!!</p> <p>\u6b63\u5728\u9f9f\u901f\u66f4\u65b0:</p> <ul> <li>\u300aJava\u6838\u5fc3\u6280\u672f\u300b\u7b14\u8bb0</li> <li>\u8ba1\u7f51\u62fe\u9057\u4e0e\u516b\u80a1\u6587</li> <li>C\u7f51\u7edc\u7f16\u7a0b</li> </ul>"},{"location":"dev/myoj/","title":"hydro OJ\u8fd0\u7ef4","text":"<p>\u53c2\u8003\u6587\u6863</p>"},{"location":"dev/myoj/#_1","title":"\u7f51\u9875\u6ce8\u518c","text":"<pre><code># \u5173\u95ed\nhydrooj cli user setPriv 0 0\npm2 restart hydrooj\n</code></pre> <pre><code># \u542f\u52a8\nhydrooj cli user setPriv 0 8\npm2 restart hydrooj\n</code></pre>"},{"location":"dev/myoj/#_2","title":"\u4fee\u6539\u9875\u9762","text":"<p>\u5728URL\u524d\u52a0\u5165 <code>view-source:</code> \u67e5\u770b <code>data-page</code> \u7684\u503c\uff0c\u5728\u8fd9\u91cc\u627e\u5230\u5bf9\u5e94\u7684html\u6587\u4ef6</p> <p>cd\u5230 <code>~/.hydro/addons/addon/templates</code> \u8fdb\u884c\u4fee\u6539\u3002</p>"},{"location":"dev/java/CoreJava/ch02/","title":"\u7b2c2\u7ae0 Java\u7a0b\u5e8f\u8bbe\u8ba1\u73af\u5883","text":""},{"location":"dev/java/CoreJava/ch02/#jdk","title":"\u4e0b\u8f7dJDK","text":"<p>Latest Releases | Adoptium</p>"},{"location":"dev/java/CoreJava/ch02/#_1","title":"\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf","text":"<pre><code>export JAVA_HOME=/usr/local/jdk-11.0.20.1+1 #jdk\u5305\u7684\u4f4d\u7f6e\nexport PATH=$JAVA_HOME/bin:$PATH #\u6dfb\u52a0\u547d\u4ee4\u884c\u5de5\u5177\n\n# \u8fd9\u4e2a\u53d8\u91cf\u662f\u7528\u4e8e\u5168\u5c40\u7684\u5bfb\u627eCLASS\u7684\u8def\u5f84 \u4e0d\u5efa\u8bae\u5f00\u542f\n# export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n</code></pre> <pre><code>\u276f java --version\nopenjdk 11.0.20.1 2023-08-24\nOpenJDK Runtime Environment Temurin-11.0.20.1+1 (build 11.0.20.1+1)\nOpenJDK 64-Bit Server VM Temurin-11.0.20.1+1 (build 11.0.20.1+1, mixed mode)\n</code></pre>"},{"location":"dev/java/CoreJava/ch02/#_2","title":"\u7f16\u8bd1\u8fd0\u884c","text":"<p>\u901a\u5e38\u8ba4\u4e3a <code>java</code> \u662f\u4ecb\u4e8e <code>\u7f16\u8bd1\u578b</code> \u548c <code>\u89e3\u91ca\u578b</code> \u4e4b\u95f4\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>javac</code> \u547d\u4ee4\u5c06 <code>.java</code> \u6587\u4ef6\u7f16\u8bd1\u6210 <code>.class</code> \u6587\u4ef6\uff0c <code>.class</code> \u662f\u5b57\u8282\u7801\uff0c\u4e0d\u662f\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u800c\u662f\u8981\u4f7f\u7528 <code>java</code> \u547d\u4ee4\uff0c\u5c06 <code>.class</code> \u4ea4\u7ed9 <code>JVM</code> \u89e3\u91ca\u6267\u884c\u3002</p> <p>\u65b0\u5efa\u4e00\u4e2a <code>Hello.java</code> \u6587\u4ef6\uff1a</p> <pre><code>public class Hello {\n    public static void main(String[] args) \n    {\n        System.out.println(\"Hello, World!\");\n    }\n}\n</code></pre> <p>\u6267\u884c\u4ee5\u4e0b\u6307\u4ee4\uff1a</p> <pre><code>\u276f javac Hello.java\n\u276f ls\nHello.class  Hello.java\n\u276f java Hello      \nHello, World!\n</code></pre>"},{"location":"dev/java/CoreJava/ch02/#classpath","title":"CLASSPATH","text":"<p>\u4e0a\u9762\u7684\u7a0b\u5e8f\u867d\u7136\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>java</code> \u547d\u4ee4\u76f4\u63a5\u8fd0\u884c\uff1a</p> <pre><code>\u276f ls\nHello.java\n\u276f java Hello.java                   \nHello, World!\n</code></pre> <p>\u4f46\u662f\uff0c\u53ea\u6709\u5305\u542bmain\u51fd\u6570\u3001\u4e14\u7c7b\u4f9d\u8d56\u5173\u7cfb\u975e\u5e38\u7b80\u5355\u7684\u6587\u4ef6\u624d\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u90fd\u662f\u4f7f\u7528 <code>javac</code> \u547d\u4ee4\u751f\u6210 <code>.class</code> \u6587\u4ef6\uff0c\u7136\u540e\u7528 <code>java</code> \u547d\u4ee4\u6267\u884c\u3002</p> <p>\u5728\u4f7f\u7528 <code>javac</code> \u547d\u4ee4\u800c\u4e0d\u6307\u5b9a <code>-d</code> \u53c2\u6570\u65f6\uff0c\u751f\u6210\u7684 <code>.class</code> \u6587\u4ef6\u4f1a\u9ed8\u8ba4\u751f\u6210\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u3002\u6bd4\u8f83\u597d\u7684\u4e60\u60ef\u662f\u5c06\u9879\u76ee\u7684\u6e90\u4ee3\u7801\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u5f00\u5b58\u653e\uff0c\u53ef\u4ee5\u7528 <code>-d</code> \u53c2\u6570\u6307\u5b9a <code>.class</code> \u6587\u4ef6\u7684\u5b58\u653e\u7684\u8def\u5f84\uff0c\u4f8b\u5982\u8fd9\u4e2a\u9879\u76ee\u8def\u5f84\uff1a</p> <pre><code>.\n\u251c\u2500\u2500 bin\n\u251c\u2500\u2500 lib\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 Hello.java\n</code></pre> <p>\u5728\u8fd9\u4e2a\u9879\u76ee\u7ed3\u6784\u4e2d\uff0c<code>src</code> \u5b58\u653e\u6240\u6709\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c<code>bin</code> \u5b58\u653e\u6240\u6709 <code>.class</code> \u6587\u4ef6\u3002</p> <p>\u4f7f\u7528 <code>javac -d</code> \u5728\u6307\u5b9a\u76ee\u5f55\u4e2d\u751f\u6210 <code>.class</code> \u6587\u4ef6\uff1a</p> <pre><code>\u276f javac src/Hello.java -d bin/ \n</code></pre> <p>\u6b64\u65f6\u6587\u4ef6\u7ed3\u6784\u53d8\u6210</p> <pre><code>.\n\u251c\u2500\u2500 bin\n\u2502   \u2514\u2500\u2500 Hello.class\n\u251c\u2500\u2500 lib\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 Hello.java\n</code></pre> <p>\u53ef\u4ee5 <code>cd</code> \u5230 <code>bin</code> \u4e2d\u7136\u540e\u518d <code>java</code> \u6267\u884c\uff08\u6ce8\uff1a\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u662f\u4e0d\u80fd\u76f4\u63a5\u5728\u5916\u9762 <code>java bin/Hello</code> \u7684\uff0c\u539f\u56e0\u662f <code>java</code> \u547d\u4ee4\u4e25\u683c\u6309\u7167 <code>1\u7ea7\u5305\u540d/2\u7ea7\u5305\u540d/.../\u7c7b\u540d</code> \u7684\u683c\u5f0f\u89e3\u6790\uff0c\u6240\u4ee5\u8fd9\u6761\u547d\u4ee4\u4f1a\u5c06<code>bin/</code>\u89e3\u6790\u4e3a\u4e00\u4e2a\u5305(<code>package</code>)\u7684\u540d\u5b57, \u800c<code>Hello.java</code> \u4e2d\u5e76\u6ca1\u6709\u6ca1\u6709\u6307\u5b9a\u4efb\u4f55<code>package</code> \uff09\uff1a</p> <pre><code>\u276f cd bin\n\u276f java Hello\nHello, World!\n</code></pre> <p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u6307\u5b9a <code>CLASSPATH</code>\uff0c\u53ea\u9700\u8981\u5728\u6267\u884c <code>java</code> \u547d\u4ee4\u65f6\u589e\u52a0 <code>-cp</code> \u53c2\u6570\uff1a</p> <pre><code>\u276f java -cp bin Hello  \nHello, World!\n</code></pre> <p>\u4e0a\u8ff0\u6307\u4ee4\u6307\u5b9a\u4e86 <code>bin</code> \u4f5c\u4e3a <code>CLASSPATH</code> ,   \u8fd9\u6837\u5c31\u4f1a\u5728 <code>bin</code> \u76ee\u5f55\u4e0b\u5bfb\u627e <code>.class</code> \u6587\u4ef6\uff0c\u548b\u4e00\u770b\u8fd9\u79cd\u65b9\u5f0f\u548c <code>cd</code> \u6ca1\u6709\u533a\u522b\uff0c\u4f46\u662f\uff0c <code>-cp</code> \u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u8def\u5f84\u4f5c\u4e3a <code>CLASSPATH</code>\uff0c\uff08\u5728Linux\u4e2d\u53ef\u4ee5\u7528 <code>:</code> \u5c06\u591a\u4e2a\u8def\u5f84\u9694\u5f00\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u5168\u5c40\u7684 <code>CLASSPATH</code> \u73af\u5883\u53d8\u91cf\uff08\u4f46\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\uff09\u3002</p>"},{"location":"dev/java/CoreJava/ch02/#ide","title":"IDE \u5982\u4f55\u7b80\u5316\u4ee5\u4e0a\u6d41\u7a0b\uff1f","text":"<p>\u8bb8\u591a\u73b0\u4ee3\u7684 IDE \u53ef\u4ee5\u7b80\u5316\u4e0a\u8ff0\u7684\u6d41\u7a0b\uff0c\u4f8b\u5982\uff0c\u4e3a\u6bcf\u4e2a\u9879\u76ee\u6dfb\u52a0 <code>CLASSPATH</code>\uff0c\u5e76\u4e14\u968f\u7740\u6587\u4ef6\u7684\u6539\u52a8 <code>\u81ea\u52a8\u7f16\u8bd1</code>\uff0c\u76f8\u5f53\u4e8e\u5e2e\u6211\u4eec\u52a8\u6001\u7684\u6267\u884c <code>javac -d bin ...</code> \uff0c\u4e5f\u80fd <code>\u81ea\u52a8\u7ba1\u7406\u6587\u4ef6</code> \uff0c\u4f8b\u5982\u6e05\u7406\u4e0d\u518d\u4f9d\u8d56\u7684\u7c7b\u7b49\u3002\u6211\u4eec\u53ea\u9700\u8981\u70b9\u51fb <code>run</code> \u6309\u94ae\uff0c\u5c31\u4f1a\u81ea\u52a8\u6267\u884c <code>java -cp bin ...</code> \u7684\u547d\u4ee4\u3002\u5f53\u7136\uff0cIDE \u80fd\u505a\u7684\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u5e38\u89c1\u7684 <code>java</code> IDE \u6709 <code>IDEA</code>\u3001<code>Eclipse</code> \u7b49\uff0c\u4f7f\u7528 <code>VSCode</code> \u5e76\u914d\u7f6e\u4e00\u4e9b\u63d2\u4ef6\u4e5f\u53ef\u4ee5\u8fbe\u5230 IDE \u7684\u5f00\u53d1\u4f53\u9a8c\u3002</p>"},{"location":"dev/java/CoreJava/ch02/#jshell","title":"JShell","text":"<p>\u4ece <code>Java 9</code> \u5f00\u59cb\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 <code>jshell</code> \u5373\u53ef\u8fdb\u5165\u4ea4\u4e92\u5f0f\u7f16\u7a0b\u73af\u5883\uff1a</p> <pre><code>\u276f jshell\njshell&gt; \"Core Java\".length()\n$1 ==&gt; 9\njshell&gt; 5 * $1 - 3\n$2 ==&gt; 42\njshell&gt; int answer = 5 * $1 - 3\nanswer ==&gt; 42\njshell&gt; Math.log10(0.001)\n$4 ==&gt; -3.0\n</code></pre>"},{"location":"dev/java/CoreJava/ch03/","title":"\u7b2c3\u7ae0 Java\u7684\u57fa\u672c\u7a0b\u5e8f\u8bbe\u8ba1\u7ed3\u6784","text":"<p><code>Java</code> \u6ca1\u6709\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u7c7b\u578b\u6216\u53d8\u91cf\u7684\u5927\u5c0f\u3002</p>"},{"location":"dev/java/CoreJava/ch03/#_1","title":"\u6574\u578b","text":"\u7c7b\u578b \u5927\u5c0f byte 1\u5b57\u8282 short 2\u5b57\u8282 int 4\u5b57\u8282 long 8\u5b57\u8282 <ul> <li>\u6ca1\u6709\u65e0\u7b26\u53f7\u6574\u578b\u3002\u901a\u5e38\u4f7f\u7528<code>Byte.toUnsignedInt(b)</code> \u5c06\u4e00\u4e2a\u6709\u7b26\u53f7\u7684 <code>byte</code> \u7c7b\u578b <code>b</code> \u8f6c\u6362\u6210\u65e0\u7b26\u53f7\u7684 <code>int</code> \uff0c\u4ee5\u53ca <code>Integer.toUnsignedLong(i);</code> \u6765\u5c06\u4e00\u4e2a\u6709\u7b26\u53f7\u7684 <code>int</code> \u7c7b\u578b <code>i</code> \u8f6c\u6362\u6210\u65e0\u7b26\u53f7\u7684 <code>long</code> \u3002</li> <li>\u7c7b\u578b\u7684\u5927\u5c0f\u4e0e\u673a\u5668\u65e0\u5173\uff08<code>java</code> \u662f\u8de8\u5e73\u53f0\u7684\uff09\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch03/#char","title":"char\u7c7b\u578b","text":"<ul> <li><code>char</code> \u7c7b\u578b\u5360\u7528 <code>2</code> \u5b57\u8282\u3002</li> <li>\u53ef\u4ee5\u7528 <code>\\u</code> \u52a0\u4e0a <code>4</code> \u4e2a\u5341\u516d\u8fdb\u5236\u8868\u793a\u4e00\u4e2a <code>char</code>\u3002</li> <li>\u6709\u4e9b <code>Unicode</code> \u53ef\u4ee5\u7528\u4e00\u4e2a <code>char</code> \u503c\u63cf\u8ff0\uff082\u5b57\u8282\uff09\uff0c\u6709\u4e9b\u9700\u8981\u4e24\u4e2a <code>char</code> \u503c\uff084\u5b57\u8282\uff09\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch03/#unicodechar","title":"Unicode\u548cchar\u7c7b\u578b","text":"<ul> <li> <p><code>\u7801\u70b9(codepoint)</code> \u5c31\u662f\u4e00\u4e2a\u7f16\u7801\u8868\u4e2d\u67d0\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u4ee3\u7801\u503c\u3002<code>java</code> \u4f7f\u7528 <code>Unicode</code> \u7f16\u7801\u673a\u5236\u3002\u524d\u7f00 <code>U+</code> \u6765\u8868\u793a\u4e00\u4e2a <code>Unicode</code> \u5b57\u7b26\uff0c\u4f8b\u5982 <code>U+0041</code> \u5c31\u662f <code>'A'</code> \u7684\u7801\u70b9\u3002</p> </li> <li> <p><code>java</code> \u4f7f\u7528 <code>UTF-16</code> \u6765\u8868\u793a\u5b57\u7b26\uff0c\u8fd9\u79cd\u7f16\u7801\u65b9\u5f0f\u4f7f\u7528 <code>2</code> \u4e2a\u5b57\u8282\u6765\u8868\u793a\u5927\u591a\u6570\u5e38\u7528\u5b57\u7b26\uff0c\u5bf9\u4e8e\u5176\u4ed6\u4e0d\u592a\u5e38\u7528\u7684\u5b57\u7b26\u4f7f\u7528\u4f7f\u7528 <code>4</code> \u4e2a\u5b57\u8282\u8868\u793a\u3002</p> </li> <li> <p>\u6bcf <code>2</code> \u4e2a\u5b57\u8282\u79f0\u4e3a\u4e00\u4e2a <code>\u4ee3\u7801\u5355\u5143</code>(code unit) \uff0c\u5728 <code>java</code> \u4e2d\uff0c <code>char</code> \u7c7b\u578b\u63cf\u8ff0\u4e86 <code>UTF-16</code> \u7f16\u7801\u4e2d\u7684\u4e00\u4e2a\u4ee3\u7801\u5355\u5143\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5b57\u7b26\uff0c<code>char</code> \u53ef\u4ee5\u76f4\u63a5\u8868\u793a\uff0c\u4f46\u67d0\u4e9b\u5b57\u7b26\u9700\u8981\u4e24\u4e2a <code>char</code> \u624d\u80fd\u8868\u793a\u3002\u56e0\u6b64\uff0c\u4e0d\u5efa\u8bae\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528 <code>char</code> \u7c7b\u578b\u3002</p> </li> </ul>"},{"location":"dev/java/CoreJava/ch03/#boolean","title":"boolean\u7c7b\u578b","text":"<ul> <li>\u5728<code>java</code> \u4e2d\u96f6\u503c\u4e0d\u80fd\u89e3\u6790\u4e3a <code>false</code> \uff0c\u4f8b\u5982\u6574\u6570\u7684 <code>0</code>\uff0c\u5bf9\u8c61\u7684 <code>null</code> \u7b49\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch03/#_2","title":"\u5b57\u7b26\u4e32","text":"<p><code>java</code> \u4e2d\u7684\u5b57\u7b26\u4e32\u662f <code>String</code> \u7c7b\u578b\uff0c\u662f <code>Unicode</code> \u5b57\u7b26\u5e8f\u5217\u3002 </p> <ul> <li><code>.substring(l, r)</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a \\([l, r)\\) \u7684\u5b50\u4e32\u3002</li> <li><code>String</code> \u4e0d\u652f\u6301\u539f\u5730\u4fee\u6539\u3002\u5b57\u7b26\u4e32\u53d8\u91cf\u7684\u590d\u5236\u5b9e\u8d28\u662f\u5171\u4eab\u540c\u4e00\u6bb5\u5b57\u7b26\u4e32\u3002</li> <li>\u4e0d\u8981\u4f7f\u7528 <code>==</code> \u68c0\u6d4b\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u8fd9\u53ea\u80fd\u68c0\u6d4b\u4e24\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\u662f\u5426\u5171\u4eab\u540c\u4e00\u6bb5\u3002\u5982\u679c\u8981\u68c0\u6d4b\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u662f\u5426\u76f8\u7b49\uff0c\u8981\u7528 <code>.equals()</code> \u65b9\u6cd5\u3002<code>String</code> \u4e2d\u8fd8\u6709\u4e00\u4e2a <code>.compareTo()</code> \u65b9\u6cd5\u7c7b\u4f3c\u4e8e <code>C\u8bed\u8a00</code> \u4e2d\u7684 <code>strcmp()</code> \u51fd\u6570\u3002</li> <li>\u65b0\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f <code>null</code> \uff0c<code>null</code> \u8868\u793a\u6ca1\u6709\u5f15\u7528\u4efb\u4f55\u5bf9\u8c61\uff0c\u5e76\u4e0d\u662f\u7a7a\u4e32\u7684\u610f\u601d\u3002\u68c0\u6d4b\u7a7a\u4e32\u53ef\u4ee5\u7528 <code>.length() == 0</code> \u6216\u8005 <code>.equals(\"\")</code> \u3002</li> <li> <p><code>.length()</code> \u8fd4\u56de\u4ee3\u7801\u5355\u5143\uff08<code>char</code>\uff09\u7684\u6570\u91cf\uff0c<code>.codePointCount(l, r)</code> \u53ef\u4ee5\u8fd4\u56de \\([l, r)\\) \u7684\u7801\u70b9\uff08<code>Unicode</code>\uff09 \u7684\u6570\u91cf\u3002\u5bf9\u4e8e\u53ef\u80fd\u5b58\u5728 <code>4</code> \u5b57\u8282\u7684\u7801\u70b9\u7684\u5b57\u7b26\u4e32\uff0c\u904d\u5386\u65f6\u9700\u8981\u6ce8\u610f\u3002</p> </li> <li> <p><code>StringBuild</code> \u548c <code>StringBuffer</code> \u662f\u652f\u6301\u539f\u5730\u4fee\u6539\u7684\u5b57\u7b26\u4e32\u3002\u5176\u4e2d\uff0c<code>StringBuild</code> \u901f\u5ea6\u66f4\u5feb\uff0c\u4f46\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002<code>StringBuffer</code> \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p> </li> </ul>"},{"location":"dev/java/CoreJava/ch03/#_3","title":"\u65e5\u671f\u4e0e\u65f6\u95f4","text":"<p>\u5bf9\u4e8e\u65b0\u7684\u4ee3\u7801\uff0c\u5e94\u8be5\u4f7f\u7528 <code>java.time</code> \u5305\u6765\u8868\u793a\u65f6\u95f4\u70b9\u3002\u65e7\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u4f7f\u7528 <code>Date</code> \u7c7b\u6765\u8868\u793a\u65f6\u95f4\u70b9\u3002</p>"},{"location":"dev/java/CoreJava/ch03/#_4","title":"\u6570\u7ec4","text":"<ul> <li>\u5c06\u4e00\u4e2a\u6570\u7ec4\u53d8\u91cf\u8d4b\u7ed9\u53e6\u4e00\u4e2a\u6570\u7ec4\u53d8\u91cf\uff0c\u5b9e\u8d28\u662f\u5f15\u7528\u76f8\u540c\u7684\u6570\u7ec4\u5bf9\u8c61\u3002\u4e5f\u5c31\u662f <code>\u6d45\u62f7\u8d1d</code> \u3002 <code>\u6df1\u62f7\u8d1d</code> \u8981\u7528 <code>Arrays.copyOf()</code> \u65b9\u6cd5\u3002</li> <li><code>java</code> \u7684\u591a\u7ef4\u6570\u7ec4\u652f\u6301\u201c\u4e0d\u89c4\u5219\u201d\uff0c\u5e76\u4e0d\u8981\u6c42\u6bcf\u4e00\u884c\u90fd\u6709\u76f8\u540c\u7684\u5217\u6570\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch04/","title":"\u7b2c4\u7ae0 \u5bf9\u8c61\u4e0e\u7c7b","text":""},{"location":"dev/java/CoreJava/ch04/#_1","title":"\u5bf9\u8c61\u53d8\u91cf\u662f\u5f15\u7528","text":"<p><code>java</code> \u4e2d\u7684\u5bf9\u8c61\u53d8\u91cf\u7c7b\u4f3c\u4e8e <code>C++</code> \u4e2d\u7684\u5bf9\u8c61\u6307\u9488\uff0c\u5bf9\u8c61\u53d8\u91cf\u5b9e\u8d28\u662f\u5f15\u7528\u67d0\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u65b0\u5efa\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\u5fc5\u987b\u8981\u7528 <code>new \u6784\u9020\u51fd\u6570()</code> \u3002<code>java</code> \u4e2d\u4e0d\u80fd\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u672c\u8eab\uff0c\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u662f\u5728\u5806\u4e2d\u6784\u9020\u7684\u3002</p> <p>\u6784\u9020\u51fd\u6570\u603b\u662f\u4e0e <code>new</code> \u914d\u5408\u4f7f\u7528\uff0c\u4e0d\u80fd\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u8c03\u7528\u6784\u9020\u5668\u6765\u6253\u5230\u91cd\u65b0\u8bbe\u7f6e\u5b9e\u4f8b\u5b57\u6bb5\u7684\u76ee\u7684\u3002\u5982\u679c\u8981\u91cd\u8bbe\u5b9e\u4f8b\u5b57\u6bb5\uff0c\u8fd8\u662f\u9700\u8981\u914d\u5408 <code>new</code> \u4f7f\u7528\uff0c\u8fd9\u4f1a\u5f15\u7528\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002</p> <p>\u67d0\u4e9b\u7c7b\u7684\u5bf9\u8c61\u5e76\u4e0d\u4f7f\u7528\u6784\u9020\u51fd\u6570\u6765\u6784\u9020\uff0c\u800c\u662f\u4f7f\u7528 <code>\u9759\u6001\u5de5\u5382\u65b9\u6cd5</code> , \u4f8b\u5982<code>LocalDate</code>\u7c7b\uff08\u7528\u6765\u8868\u793a\u67d0\u4e2a\u65e5\u671f\uff09\u4f7f\u7528 <code>LocalDate.now()</code> \u548c <code>LocalDate.of()</code>\uff0c\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u76f4\u63a5\u5c31\u80fd\u83b7\u5f97\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff08\u4e0d\u9700\u8981 <code>new</code> \uff09\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#_2","title":"\u6784\u9020\u51fd\u6570","text":""},{"location":"dev/java/CoreJava/ch04/#_3","title":"\u9ed8\u8ba4\u5b57\u6bb5\u521d\u59cb\u5316","text":"<ul> <li>\u6570\u503c\u578b\u7684\u9ed8\u8ba4\u503c\u4e3a <code>0</code>\uff0c\u5e03\u5c14\u578b\u9ed8\u8ba4\u503c\u4e3a <code>false</code>\uff0c\u5bf9\u8c61\u5f15\u7528\u9ed8\u8ba4\u503c\u4e3a <code>null</code>\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u6784\u9020\u51fd\u6570\uff0c\u5219\u9ed8\u8ba4\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u5c06\u6240\u6709\u5b9e\u4f8b\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u5df2\u7ecf\u5199\u4e86\u81f3\u5c11\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5219\u4e0d\u4f1a\u63d0\u4f9b\u9ed8\u8ba4\u7684\u65e0\u53c2\u6570\u6784\u9020\u51fd\u6570\u3002</li> <li>\u5728\u6784\u9020\u51fd\u6570\u4e2d\u6ca1\u6709\u88ab\u8d4b\u503c\u7684\u5b57\u6bb5\u4f1a\u88ab\u8d4b\u4e3a\u9ed8\u8ba4\u503c\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch04/#_4","title":"\u91cd\u8f7d","text":"<p><code>java</code> \u652f\u6301\u91cd\u8f7d\u8bed\u6cd5\uff0c\u5305\u62ec\u6784\u9020\u51fd\u6570\u548c\u5176\u4ed6\u51fd\u6570\u90fd\u53ef\u4ee5\u91cd\u8f7d\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#null","title":"null \u503c\u5904\u7406","text":"<p>\u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\uff08\u800c\u4e0d\u8c03\u7528\u6784\u9020\u51fd\u6570\uff09\u4f1a\u5f97\u5230\u4e00\u4e2a <code>null</code> \u3002\u5bf9 <code>null</code> \u4f7f\u7528\u65b9\u6cd5\u4f1a\u4ea7\u751f\u5f02\u5e38\u3002</p> <p>\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u5bf9\u4f20\u5165\u7684\u53c2\u6570\u68c0\u67e5\uff0c\u5047\u8bbe\u6709\u8fd9\u6837\u7684\u7c7b\uff1a</p> <pre><code>class Employee {\n    private String name;\n    private double salary;\n    private LocalDate hireDay;\n}\n</code></pre> <p>\u5176\u4e2d <code>name</code> \u548c <code>hireDay</code> \u90fd\u6709\u53ef\u80fd\u4f20\u5165 <code>null</code> \u503c\u3002\u5bf9\u4e8e\u53ef\u80fd\u4f20\u5165\u7684 <code>null</code> \u503c\uff0c\u7b2c\u4e00\u79cd\u5904\u7406\u65b9\u6cd5\u662f\u8d4b\u4e00\u4e2a\u9ed8\u8ba4\u5bf9\u8c61\u53d8\u91cf\uff0c\u5728 <code>java 9</code> \u4e2d\uff0c <code>Objects</code> \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a <code>.requireNonNullElse()</code> \u65b9\u6cd5\uff08\u6240\u6709\u7c7b\u90fd\u6269\u5c55\u81ea <code>Objects</code> \u7c7b\uff09\uff1a</p> <pre><code>public Employee(String n, double s, int year, int month, int day) {\n    name = Objects.requireNonNullElse(n, \"unknown\");\n    ...\n}\n</code></pre> <p>\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5f53 <code>n == null</code> \u65f6\u4f1a\u8d4b\u9ed8\u8ba4\u503c <code>name = \"unknown\"</code> \u3002</p> <p>\u7b2c\u4e8c\u79cd\u5904\u7406\u662f\u501f\u52a9<code>.requireNonNull()</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728 <code>n == null</code> \u65f6\u629b\u51fa\u5f02\u5e38\uff1a</p> <pre><code>public Employee(String n, double s, int year, int month, int day) {\n    Objects.requireNonNull(n, \"The name cannot be null\");\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch04/#_5","title":"\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570","text":"<p>\u4f7f\u7528 <code>this</code> \u5173\u952e\u5b57\uff0c \u53ef\u4ee5\u5728\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff1a</p> <pre><code>public Employee(double s) {\n    // \u5047\u8bbe\u4e4b\u524d\u5b9a\u4e49\u4e86 Employee\uff08String n, double s\uff09\n    this(\"Employee #\" + nextId, s);\n    nextId++;\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch04/#final","title":"final","text":"<p>\u7c7b\u4f3c\u4e8e <code>C++</code> \u4e2d\u7684 <code>const</code>\uff0c\u7528\u6765\u8868\u793a\u5e38\u91cf\uff0c\u5b9a\u4e49\u540e\u4e0d\u53ef\u4fee\u6539\u3002</p> <pre><code>final int maxn = 1010; // \u4e0d\u80fd\u66f4\u6539\u7684\u5e38\u91cf\n</code></pre> <p>\u5b9e\u4f8b\u5b57\u6bb5\u5982\u679c\u8bbe\u7f6e\u4e3a <code>final</code> \uff0c\u5219\u5fc5\u987b\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e <code>final</code> \u5b57\u6bb5\u7684\u503c\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e4b\u540e\u4e0d\u80fd\u66f4\u6539\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#_6","title":"\u521d\u59cb\u5316\u5757","text":"<p>\u4e00\u5171\u6709\u4e09\u79cd\u521d\u59cb\u5316\u6570\u636e\u5b57\u6bb5\u7684\u65b9\u5f0f\uff0c\u6309\u7167\u987a\u5e8f\u4e3a\uff1a</p> <ol> <li>\u5728\u58f0\u660e\u65f6\u76f4\u63a5\u8d4b\u503c\u3002</li> <li>\u5728\u521d\u59cb\u5316\u5757\u4e2d\u8d4b\u503c\u3002</li> <li>\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8d4b\u503c\u3002</li> </ol> <p>\u5982\u679c\u6784\u9020\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u8c03\u7528\u4e86\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5219\u4f1a\u5148\u6267\u884c\u7b2c\u4e8c\u4e2a\u6784\u9020\u51fd\u6570\u3002\u5426\u5219\uff0c\u5148\u6267\u884c\u521d\u59cb\u5316\u5757\u3002\u521d\u59cb\u5316\u5757\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4f1a\u6309\u7167\u987a\u5e8f\u6267\u884c\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#_7","title":"\u9759\u6001\u5b57\u6bb5\u4e0e\u9759\u6001\u65b9\u6cd5","text":"<p><code>static</code> \u8868\u793a <code>\u9759\u6001\u5b57\u6bb5</code>\uff0c\u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u5171\u4eab\u540c\u4e00\u4e2a\u5b57\u6bb5\u3002<code>\u9759\u6001\u5b57\u6bb5</code> \u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u3002</p> <p>\u4f8b\u5982\u8981\u7ed9\u6bcf\u4e2a\u5458\u5de5\u5206\u914d\u4e00\u4e2a\u9012\u589e\u7684 <code>id</code>\uff0c\u5219 <code>nextID</code> \u53d8\u91cf\u7528\u4e8e\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u5206\u914d\u7684 <code>id</code> \u503c\u3002</p> <pre><code>class Employee {\n    private static int nextID = 1;\n    private int id;\n    public void setId() {\n        id = nextID++;\n    }\n}\n</code></pre> <p><code>static final</code> \u8868\u793a <code>\u9759\u6001\u5e38\u91cf</code>\uff0c\u4f8b\u5982 <code>Math.PI</code>\u3002</p> <p><code>\u9759\u6001\u65b9\u6cd5</code> \u662f\u6307\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 <code>Math.pow()</code> \u3002</p> <p><code>\u9759\u6001\u5de5\u5382\u65b9\u6cd5</code> \u662f\u6307\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\u7684\u6784\u9020\u51fd\u6570\uff0c\u4f8b\u5982 <code>LocalDate.now()</code> \u548c <code>LocalDate.of()</code> \u3002</p> <p><code>main()</code> \u51fd\u6570\u7684\u7f29\u5199\u662f <code>psvm</code> \uff0c\u5373 <code>public static void main(String[] args)</code>\u3002\u6bcf\u4e2a\u7c7b\u53ef\u4ee5\u6709\u4e00\u4e2a <code>main</code> \u51fd\u6570\uff0c\u7528\u4e8e\u5bf9\u7c7b\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002\u5355\u5143\u6d4b\u8bd5\u53ea\u4f1a\u8fd0\u884c\u5355\u72ec\u7684\u4e00\u4e2a <code>main</code> \u51fd\u6570\uff0c\u4f8b\u5982 <code>java Employee</code> \u5c31\u662f\u8fd0\u884c <code>Employee.class</code> \u7684 <code>main</code> \u51fd\u6570\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#java","title":"<code>java</code> \u7684\u53c2\u6570\u4f20\u9012\u662f\u6309\u503c\u5f15\u7528\u7684","text":"<p><code>java</code> \u53ea\u6709\u6309\u503c\u4f20\u9012\u53c2\u6570\u7684\u65b9\u5f0f\uff0c\u56e0\u6b64\uff1a</p> <ul> <li>\u65b9\u6cd5\u4e0d\u80fd\u4fee\u6539\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u53c2\u6570\uff08\u5373\u6570\u503c\u578b\u6216\u5e03\u5c14\u578b\uff09\u3002</li> <li>\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8\u5bf9\u8c61\u53c2\u6570\u7684\u72b6\u6001\u3002</li> <li>\u65b9\u6cd5\u4e0d\u80fd\u8ba9\u4e00\u4e2a\u5bf9\u8c61\u53c2\u6570\u5f15\u7528\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch04/#_8","title":"\u5305","text":""},{"location":"dev/java/CoreJava/ch04/#_9","title":"\u7c7b\u7684\u5bfc\u5165","text":"<p>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u4f7f\u7528\u6240\u5c5e\u5305\u4e2d\u7684\u6240\u6709\u7c7b\uff0c\u4ee5\u53ca\u5176\u4ed6\u5305\u4e2d\u7684\u516c\u5171\u7c7b\u3002</p> <p>\u6709\u4e24\u79cd\u65b9\u6cd5\u8bbf\u95ee\u5176\u4ed6\u5305\u4e2d\u7684\u516c\u5171\u7c7b\uff1a</p> <ol> <li>\u4f7f\u7528\u5b8c\u5168\u9650\u5b9a\u540d\uff0c\u4f8b\u5982\uff1a</li> </ol> <pre><code>java.time.LocalDate today = java.time.LocalDate.now();\n</code></pre> <ol> <li>\u4f7f\u7528 <code>import</code> \u5bfc\u5165\u6574\u4e2a\u5305\u6216\u8005\u7279\u5b9a\u7684\u7c7b\uff0c\u4f8b\u5982\uff1a</li> </ol> <pre><code>import java.time.LocalDate; //\u5bfc\u5165\u7279\u5b9a\u7684\u7c7b\n</code></pre> <p>\u6216\u8005\uff1a</p> <pre><code>import java.time.* //\u5bfc\u5165\u6574\u4e2a\u5305\n</code></pre> <p>\u6ce8\u610f\u53ea\u80fd\u4f7f\u7528\u4f7f\u7528 <code>*</code> \u5bfc\u5165\u4e00\u4e2a\u5305\uff0c\u4f8b\u5982\u4e0d\u80fd\u4f7f\u7528 <code>import java.*</code> \uff0c\u56e0\u4e3a <code>java.*</code> \u4e0d\u6b62\u4e00\u4e2a\u5305\u3002</p> <p><code>java</code> \u4e2d\u7684 <code>import</code> \u7c7b\u4f3c\u4e8e <code>C++</code> \u4e2d\u7684 <code>using namespace</code> \uff0c\u56e0\u4e3a <code>java</code> \u7f16\u8bd1\u5668\u53ef\u4ee5\u67e5\u770b\u5176\u4ed6\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u800c <code>C++</code> \u7f16\u8bd1\u5668\u4e0d\u884c\uff0c\u6240\u4ee5\u5728 <code>C++</code> \u4e2d\u9700\u8981\u4f7f\u7528 <code>#include</code> \u3002</p>"},{"location":"dev/java/CoreJava/ch04/#_10","title":"\u9759\u6001\u5bfc\u5165","text":"<p>\u4f7f\u7528 <code>import static</code> \u53ef\u4ee5\u5bfc\u5165\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u5b57\u6bb5\uff0c\u4f8b\u5982\uff1a</p> <pre><code>import static java.lang.Math.sqrt;\npublic class Main {\n    public static void main(String[] args) {\n        double ans = sqrt(2.0);\n        System.out.println(ans);\n    }    \n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch04/#_11","title":"\u5305\u8def\u5f84","text":"<p>\u5305\u548c\u76ee\u5f55\u8981\u5339\u914d\uff0c\u867d\u7136\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u4e0d\u68c0\u67e5\u76ee\u5f55\u7ed3\u6784\uff0c\u4f46\u662f\u865a\u62df\u673a\u8fd0\u884c\u65f6\u4f1a\u6309\u7167\u5305\u7684\u7ed3\u6784\u53bb\u5bfb\u627e\u7c7b\u3002\u6240\u4ee5\u63a8\u8350\u7684\u505a\u6cd5\u5c31\u662f\u6309\u7167\u5305\u7684\u7ed3\u6784\u8bbe\u7f6e\u6587\u4ef6\u7684\u7ed3\u6784\u3002</p>"},{"location":"dev/java/CoreJava/ch04/#jar","title":"JAR\u6587\u4ef6","text":"<p>\u53ef\u4ee5\u5c06 <code>.class</code> \u6587\u4ef6\u6253\u5305\u5728\u4e00\u4e2a <code>.jar</code> \u6587\u4ef6\u4e2d\uff0c <code>.jar</code> \u6587\u4ef6\u5b9e\u8d28\u5c31\u662f <code>.zip</code> \u6587\u4ef6\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4\u3001\u6539\u5584\u6027\u80fd\u3002</p> <p>\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u7684\u5e93\u6587\u4ef6\u65f6\uff0c\u901a\u5e38\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u6216\u8005\u591a\u4e2a <code>.jar</code> \u6587\u4ef6\u3002\u5728\u4ee5\u4e0b\u8fd9\u79cd\u9879\u76ee\u7ed3\u6784\u4e2d\uff0c\u901a\u5e38\u5c06<code>.jar</code> \u6587\u4ef6\u653e\u5728 <code>lib</code> \u6587\u4ef6\u5939\u4e2d\u3002</p> <pre><code>.\n\u251c\u2500\u2500 bin\n\u251c\u2500\u2500 lib\n\u2514\u2500\u2500 src\n</code></pre> <p>\u5728\u8fd0\u884c\u65f6\uff0c\u9700\u8981\u7528 <code>:</code>\u5c06 <code>lib</code> \u6587\u4ef6\u5939\u6dfb\u52a0\u5230 <code>CLASSPATH</code> \u4e2d\uff0c\u8fd9\u6837\u865a\u62df\u673a</p>"},{"location":"dev/java/CoreJava/ch04/#_12","title":"\u7c7b\u8bbe\u8ba1\u6280\u5de7","text":"<ol> <li>\u4e00\u5b9a\u8981\u4fdd\u8bc1\u6570\u636e\u79c1\u6709\u3002</li> <li>\u4e00\u5b9a\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u521d\u59cb\u5316\u3002</li> <li>\u4e0d\u8981\u5728\u7c7b\u4e2d\u4f7f\u7528\u8fc7\u591a\u7684\u57fa\u672c\u7c7b\u578b\uff08\u5f53\u57fa\u672c\u7c7b\u578b\u8fc7\u591a\u65f6\uff0c\u8003\u8651\u7528\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u66ff\u6362\u76f8\u5173\u7684\u5b57\u6bb5\uff09\u3002</li> <li>\u4e0d\u662f\u6240\u6709\u7684\u5b57\u6bb5\u90fd\u9700\u8981\u5355\u72ec\u7684\u8bbf\u95ee\u5668\u548c\u66f4\u6539\u5668\u3002</li> <li>\u5206\u89e3\u6709\u8fc7\u591a\u6307\u8d23\u7684\u7c7b\u3002</li> <li>\u7c7b\u540d\u548c\u65b9\u6cd5\u540d\u8981\u80fd\u591f\u4f53\u73b0\u5b83\u4eec\u7684\u529f\u80fd\u3002</li> <li>\u4f18\u5148\u4f7f\u7528\u4e0d\u53ef\u53d8\u7684\u7c7b\uff08\u4f8b\u5982 <code>LocalDate</code> \u7c7b\u5c31\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff09\u3002</li> </ol>"},{"location":"dev/java/CoreJava/ch05/","title":"\u7b2c5\u7ae0 \u7ee7\u627f","text":""},{"location":"dev/java/CoreJava/ch05/#_1","title":"\u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26","text":"<ul> <li><code>private</code> \uff1a\u4ec5\u5bf9\u672c\u7c7b\u53ef\u89c1\u3002</li> <li><code>public</code> \uff1a\u5bf9\u5916\u90e8\u53ef\u89c1\u3002</li> <li><code>protected</code> \uff1a\u5bf9\u672c\u5305\u548c\u6240\u6709\u5b50\u7c7b\u53ef\u89c1\u3002</li> <li><code>\u9ed8\u8ba4\uff08\u4e0d\u52a0\u4fee\u9970\u7b26\u7b26\uff09</code> \uff1a\u5bf9\u672c\u5305\u53ef\u89c1\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch05/#_2","title":"\u7ee7\u627f","text":""},{"location":"dev/java/CoreJava/ch05/#_3","title":"\u591a\u6001\u4e0e\u52a8\u6001\u7ed1\u5b9a","text":"<p>\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\u53ef\u4ee5\u6307\u793a\u591a\u79cd\u5b9e\u9645\u7c7b\u578b\u7684\u73b0\u8c61\u79f0\u4e3a <code>\u591a\u6001</code> \u3002</p> <p>\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u4e2d\uff0c <code>Employee</code> \u7c7b\u578b\u7684 <code>e</code> \u53d8\u91cf\u5373\u53ef\u6307\u793a <code>Employee</code> \u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u6307\u793a <code>Manager</code> \u7c7b\u578b\u3002\u53cd\u8fc7\u6765\u5219\u4e0d\u884c\uff0c\u5373\u5b50\u7c7b\u578b\u7684\u53d8\u91cf\u4e0d\u80fd\u6307\u793a\u7236\u7c7b\u578b\u3002</p> <pre><code>class Employee {\n    private String name;\n    public Employee(String n) {\n        name = n;\n    }\n    public String getName() {\n        return name;\n    }\n    public void printProfile() {\n        System.out.println(\"Employee: \" + getName());\n    }\n}\n\nclass Manager extends Employee {\n    public Manager(String n) {\n        super(n);\n    }\n    public void printProfile() {\n        System.out.println(\"Manager: \" + super.getName());\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        Employee e = new Employee(\"E1\");\n        e.printProfile(); // Employee: E1\n        e = new Manager(\"M1\"); // \u4e5f\u662f\u53ef\u4ee5\u7684\n        e.printProfile(); // Manager: M1\n    }\n}\n</code></pre> <p>\u8fd0\u884c\u65f6\uff0c\u4f8b\u5982<code>e.printProfile()</code>\uff0c <code>JVM</code> \u80fd\u591f\u6839\u636e <code>e</code> \u5b9e\u9645\u6307\u793a\u7684\u7c7b\u578b\u81ea\u52a8\u9009\u62e9\u9002\u5f53\u7684\u65b9\u6cd5\uff0c\u79f0\u4e3a <code>\u52a8\u6001\u7ed1\u5b9a</code> \u3002</p> <p>\u4e0e <code>\u52a8\u6001\u7ed1\u5b9a</code> \u76f8\u5bf9\u7684\u662f <code>\u9759\u6001\u7ed1\u5b9a</code>\uff0c<code>\u9759\u6001\u7ed1\u5b9a</code> \u7684\u65b9\u6cd5\u5728\u7f16\u8bd1\u671f\u95f4\u5c31\u80fd\u51c6\u786e\u7684\u77e5\u9053\u5e94\u8be5\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5\u3002<code>private</code> \u65b9\u6cd5\u3001<code>static</code> \u65b9\u6cd5\u3001<code>final</code> \u65b9\u6cd5\u4f1a\u4f7f\u7528 <code>\u9759\u6001\u7ed1\u5b9a</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#_4","title":"\u9759\u6001\u7ed1\u5b9a","text":""},{"location":"dev/java/CoreJava/ch05/#_5","title":"\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5","text":"<p>\u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u5b9a\u4e49\u4e0e\u7236\u7c7b\u540c\u540d\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code>\uff0c\u5219\u8c03\u7528\u7684\u5c31\u662f\u7236\u7c7b\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code>\u3002</p> <pre><code>class Employee {\n    public static int idx = 123;\n    public static void Hello() {\n        System.out.printf(\"Employee: Hello! idx = %d\\n\", idx);\n    }\n}\n\nclass Manager extends Employee {\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(Employee.idx); // 123\n        System.out.println(Manager.idx);  // 123\n        Employee.Hello(); // Employee: Hello! idx = 123\n        Manager.Hello();  // Employee: Hello! idx = 123\n    }\n}\n</code></pre> <p>\u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u548c\u7236\u7c7b\u540c\u540d\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code>\uff0c\u548c\u7236\u7c7b\u662f\u72ec\u7acb\u7684\uff0c\u6307\u5b9a\u5b50\u7c7b\u540d\u65f6\u4f1a\u8c03\u7528\u5b50\u7c7b\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code>\uff0c\u6307\u5b9a\u7236\u7c7b\u540d\u65f6\u4f1a\u8c03\u7528\u7236\u7c7b\u7684 <code>\u9759\u6001\u53d8\u91cf</code> \u6216 <code>\u9759\u6001\u65b9\u6cd5</code> \u3002</p> <pre><code>class Employee {\n    public static int idx = 123;\n    public static void Hello() {\n        System.out.printf(\"Employee: Hello! idx = %d\\n\", idx);\n    }\n}\n\nclass Manager extends Employee {\n    public static int idx = 456;\n    public static void Hello() {\n        System.out.printf(\"Manager: Hello! idx = %d\\n\", idx);\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(Employee.idx); // 123\n        System.out.println(Manager.idx);  // 456\n        Employee.Hello(); // Employee: Hello! idx = 123\n        Manager.Hello();  // Manager: Hello! idx = 456\n\n        Employee e = new Manager();\n        // static\u4e00\u5b9a\u662f\u9759\u6001\u7ed1\u5b9a\n        e.Hello(); // Employee: Hello! idx = 123\n    }\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch05/#final","title":"\u4f7f\u7528 final \u963b\u6b62\u7ee7\u627f","text":"<ul> <li><code>final</code> \u53ef\u4ee5\u9632\u6b62\u7c7b\u88ab\u6d3e\u751f\u6216\u65b9\u6cd5\u88ab\u91cd\u5199\u3002</li> <li>\u4e00\u4e2a <code>final</code> \u7c7b\u7684\u6240\u6709\u65b9\u6cd5\u4f1a\u81ea\u52a8\u6210\u4e3a <code>final</code> \u65b9\u6cd5\u3002</li> <li><code>final</code> \u65b9\u6cd5\u4f7f\u7528 <code>\u9759\u6001\u7ed1\u5b9a</code>\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch05/#private","title":"private","text":"<p>\u5b9a\u4e49\u548c\u7236\u7c7b\u540c\u540d\u5bf9 <code>\u79c1\u6709\u53d8\u91cf</code> \u6216 <code>\u79c1\u6709\u65b9\u6cd5</code> \u4e5f\u662f\u72ec\u7acb\u7684\u3002<code>\u79c1\u6709\u65b9\u6cd5</code>\u4e5f\u662f <code>\u9759\u6001\u7ed1\u5b9a</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#_6","title":"\u62bd\u8c61\u7c7b","text":"<p>\u4f7f\u7528 <code>abstract</code> \u5b9a\u4e49\u62bd\u8c61\u7c7b\u548c\u62bd\u8c61\u65b9\u6cd5\u3002</p> <pre><code>abstract class Person {\n    ...\n    public abstract String getDescription();\n}\n</code></pre> <p>\u62bd\u8c61\u65b9\u6cd5\u4e0d\u9700\u8981\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u53ea\u9700\u8981\u5728\u62bd\u8c61\u7c7b\u4e2d\u5b9a\u4e49\u3002\u5177\u4f53\u65b9\u6cd5\u7531\u7ee7\u627f\u4e86\u62bd\u8c61\u7236\u7c7b\u7684\u5b50\u7c7b\u5b9e\u73b0\u3002</p> <p>\u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u521b\u5efa\u4e00\u4e2a\u5177\u4f53\u5b50\u7c7b\u7684\u5bf9\u8c61\uff0c\u4f8b\u5982\uff1a</p> <pre><code>class Employee extends Person {\n    public String getDescription() {\n        return \"I am an Employee!\";\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        // \u4e0d\u80fd\u7528 Person p = new Person();\n        Person p = new Employee();\n        System.out.println(p.getDescription());\n    }\n}\n</code></pre>"},{"location":"dev/java/CoreJava/ch05/#object","title":"Object \u7c7b","text":"<p><code>Object</code> \u7c7b\u662f\u6240\u6709\u7c7b\u7684\u7236\u7c7b\u3002<code>Objects</code> \u662f <code>Object</code> \u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c<code>Objects</code> \u7c7b\u4e2d\u5305\u88c5\u4e86\u4e00\u4e9b\u9759\u6001\u65b9\u6cd5\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#equals","title":"equals \u65b9\u6cd5","text":"<p><code>Object.equals()</code> \u65b9\u6cd5\u7528\u4e8e\u68c0\u6d4b\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u7b49\u4e8e\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u3002\u5728 <code>Object</code> \u4e2d\u7684 <code>equals</code> \u7684\u5b9e\u73b0\u662f\uff1a</p> <pre><code>public class Object {\n    ......\n    public boolean equals(Object obj) {\n        return (this == obj);\n    }\n    ......\n}\n</code></pre> <p>\u53ef\u89c1\uff0c\u5982\u679c\u6ca1\u6709\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199 <code>equals</code>\uff0c\u9ed8\u8ba4\u7684 <code>equals</code> \u662f\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u5f15\u7528\u662f\u5426\u76f8\u540c\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5728 <code>Employee</code> \u7c7b\u4e2d\u91cd\u5199 <code>equals</code> \u65b9\u6cd5\u7684\u4f8b\u5b50\uff1a</p> <pre><code>public class Employee {\n    private String name;\n    private double salary;\n    LocalDate hireDay;\n    ......\n    public boolean equals(Object otherObject) {\n        if (this == otherObject) // \u5148\u6bd4\u8f83\u5f15\u7528\u662f\u5426\u76f8\u7b49\n            return true;\n        if (otherObject == null) // \u7136\u540e\u5224\u65ad otherObject \u662f\u5426\u4e3a null \n            return false;\n\n        // \u5982\u679c\u6240\u6709\u7684\u5b50\u7c7b\u90fd\u6709\u76f8\u540c\u7684\u76f8\u7b49\u6027\u8bed\u4e49\uff0c\u5c31\u4f7f\u7528 instanceof \u68c0\u6d4b\n        // if (!(otherObject instanceof Employee))\n        //     return false;\n        // \u8fd9\u91cc\u56e0\u4e3a equals \u7684\u8bed\u4e49\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u6539\u53d8\uff0c\u6240\u4ee5\u7528\u4e86 getClass \u68c0\u6d4b\n        if (getClass() != otherObject.getClass()) // \u5224\u65ad\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u7c7b\n            return false;\n\n        Employee other = (Employee) otherObject; // \u5f3a\u5236\u8f6c\u6362\n        return Objects.equals(name, other.name) // \u7136\u540e\u6bd4\u8f83\u6240\u6709\u53d8\u91cf\u662f\u5426\u76f8\u7b49\n                &amp;&amp; salary == other.salary\n                &amp;&amp; Objects.equals(hireDay, other.hireDay);\n    }\n    ......\n}\n</code></pre> <p>\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u901a\u5e38\u4e0d\u4f1a\u7528 <code>a.equals(b)</code> \u6765\u5224\u65ad\u4e24\u8005\u662f\u5426\u662f\u5426\u76f8\u7b49\uff0c\u56e0\u4e3a <code>x</code> \u53ef\u80fd\u4e3a <code>null</code>\u3002\u901a\u5e38\u4f7f\u7528 <code>Objects</code> \u7c7b\u5c01\u88c5\u7684 <code>equals</code> \u9759\u6001\u65b9\u6cd5\uff0c\u5b83\u7684\u5b9e\u73b0\u662f\uff1a</p> <pre><code>public final class Objects {\n    ......\n    public static boolean equals(Object a, Object b) {\n        return (a == b) || (a != null &amp;&amp; a.equals(b));\n    }\n    ......\n}\n</code></pre> <p>\u53ef\u89c1\uff0c<code>Objects.equals()</code> \u4f1a\u5148\u5224\u65ad <code>a == null</code> \u7684\u60c5\u51b5\uff0c\u7136\u540e\u518d\u8c03\u7528 <code>a.equals(b)</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#hashcode","title":"hashCode \u65b9\u6cd5","text":"<p><code>Object.hashCode()</code> \u7528\u4e8e\u8fd4\u56de\u4e00\u4e2a <code>int</code> \u503c\u4f5c\u4e3a\u54c8\u5e0c\u503c\u3002\u5728\u6ca1\u6709\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u7528\u5bf9\u8c61\u7684\u5b58\u50a8\u5730\u5740\u8ba1\u7b97\u51fa\u4e00\u4e2a\u54c8\u5e0c\u503c\u3002</p> <p>\u4f7f\u7528 <code>HashMap</code> \u65f6\uff0c\u4f1a\u7528\u5230 <code>hashCode()</code> \u8ba1\u7b97\u51fa\u6765\u7684\u503c\u4f5c\u4e3a\u7d22\u5f15\u3002\u5982\u679c\u8981\u7528 <code>HashMap</code>\uff0c\u901a\u5e38\u8fd8\u9700\u8981\u91cd\u5199 <code>equals</code> \u65b9\u6cd5\uff0c\u54c8\u5e0c\u8868\u63d2\u5165\u503c\u65f6\u9996\u5148\u5224\u65ad <code>hashCode</code> \u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u518d\u7528 <code>equals()</code> \u6765\u5224\u65ad\u4e24\u4e2a\u7d22\u5f15\u662f\u5426\u76f8\u7b49\u3002\u5982\u679c\u54c8\u5e0c\u503c\u4e0d\u7b49\uff0c\u5219\u8fd9\u4e24\u4e2a\u7d22\u5f15\u4e00\u5b9a\u4e0d\u7b49\u3002</p> <p>\u53ef\u4ee5\u501f\u52a9 <code>Objects.hash()</code> \u65b9\u6cd5\u6765\u8ba1\u7b97 <code>hashCode()</code>\uff0c\u4f8b\u5982\uff1a</p> <pre><code>class Employee {\n    private String name;\n    private double salary;\n    LocalDate hireDay;\n    private int[] a;\n\n    ......\n    public int hashCode() {\n        return Objects.hash(name, salary, hireDay, Arrays.hashCode(a));\n    }\n    ......\n}\n</code></pre> <p><code>Objects.hash()</code> \u63a5\u53d7\u53ef\u53d8\u957f\u5ea6\u7684\u53c2\u6570\uff0c\u4f1a\u7ec4\u5408\u6240\u6709\u53c2\u6570\u8ba1\u7b97\u54c8\u5e0c\u503c\u3002\u5982\u679c\u5b9e\u4f8b\u5b58\u5728\u6570\u7ec4\u7c7b\u578b\u7684\u5b57\u6bb5\uff0c\u4f7f\u7528 <code>Ayyays.hashCode()</code> \u8ba1\u7b97\u6570\u7ec4\u7684\u54c8\u5e0c\u503c\u3002</p> <p>\u901a\u5e38\u4e5f\u4e0d\u4f7f\u7528 <code>a.hashCode()</code> \u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u56e0\u4e3a <code>a</code> \u53ef\u80fd\u4e3a <code>null</code>\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>Objects.hashCode()</code> \u65b9\u6cd5\uff0c\u5f53 <code>a==null</code> \u65f6\u4f1a\u8fd4\u56de <code>0</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#tostring","title":"toString \u65b9\u6cd5","text":"<p><code>Object.toString()</code> \u65b9\u6cd5\u5c06\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u5316\u6210 <code>String</code>\uff0c\u9ed8\u8ba4\u7684\u5b9e\u73b0\u4e3a\uff1a</p> <pre><code>public class Object {\n    ......\n    public String toString() {\n        return getClass().getName() + \"@\" + Integer.toHexString(hashCode());\n    }\n    ......\n}\n</code></pre> <p>\u5176\u4e2d <code>getClass().getName()</code> \u8868\u793a\u6240\u5c5e\u7c7b\u540d\u7684\u5b57\u7b26\u4e32\uff0c<code>Integer.toHexString()</code> \u5c06\u4e00\u4e2a\u6570\u5b57\u8f6c\u5316\u6210 <code>16</code> \u8fdb\u5236\u4e32\uff0c<code>hashCode()</code> \u5219\u662f <code>Object.hashCode()</code>\uff0c\u5982\u679c\u6ca1\u6709\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199 <code>hashCode()</code>\uff0c\u5c31\u662f\u4f7f\u7528\u5b58\u50a8\u5730\u5740\u8ba1\u7b97\u54c8\u5e0c\u503c\u3002</p> <p><code>toString()</code> \u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u7279\u6027\uff1a\u5f53\u5bf9\u8c61\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u901a\u8fc7 <code>+</code> \u62fc\u63a5\uff0c\u6216\u8005\u5c06\u5bf9\u8c61\u5355\u72ec\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 <code>System.out.println()</code> \u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528 <code>toString()</code> \u65b9\u6cd5\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#arraylist","title":"\u52a8\u6001\u6570\u7ec4 ArrayList","text":""},{"location":"dev/java/CoreJava/ch05/#_7","title":"\u5b9a\u4e49","text":"<p>\u4e0b\u9762\u4e09\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\u5b9a\u4e49 <code>ArrayList</code>:</p> <pre><code>ArrayList&lt;Employee&gt; a = new ArrayList&lt;Employee&gt;();\nvar b = new ArrayList&lt;Employee&gt;(); // \u4f7f\u7528 var \u81ea\u52a8\u63a8\u5bfc\u53d8\u91cf\u7c7b\u578b\nArrayList&lt;Employee&gt; c = new ArrayList&lt;&gt;(); // \u7b2c\u4e00\u4e2a &lt;&gt; \u6709\u7c7b\u578b\uff0c\u540e\u9762\u53ef\u4ee5\u4e0d\u586b\n</code></pre> <p>\u4f7f\u7528 <code>ensureCapacity()</code> \u65b9\u6cd5\u53ef\u4ee5\u5206\u914d\u5bb9\u91cf\uff0c\u7c7b\u4f3c\u4e8e <code>C++</code> \u4e2d <code>vector</code> \u7684 <code>reserve()</code>\u3002</p> <pre><code>ArrayList&lt;Employee&gt; a = new ArrayList&lt;Employee&gt;();\na.ensureCapacity(100);\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u76f4\u63a5\u5206\u914d\u5bb9\u91cf\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7b49\u4ef7\u4e8e\uff1a</p> <pre><code>ArrayList&lt;Employee&gt; a = new ArrayList&lt;Employee&gt;(100);\n</code></pre> <p><code>java</code> \u4e0d\u80fd\u67e5\u770b <code>ArrayList</code> \u7684\u5bb9\u91cf\uff0c\u53ea\u80fd\u4f7f\u7528 <code>size()</code> \u67e5\u770b\u5927\u5c0f\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>trimToSize()</code> \u5c06\u5bb9\u91cf\u7f29\u51cf\u5230\u5f53\u524d\u7684\u5927\u5c0f\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#_8","title":"\u589e\u5220\u6539\u67e5","text":"<p><code>ArrayList</code> \u4e0d\u80fd\u4f7f\u7528\u4e2d\u62ec\u53f7 <code>[]</code> \u6765\u8bbf\u95ee\u548c\u4fee\u6539\u5143\u7d20\u3002</p> <ul> <li><code>boolean add(T obj)</code>\uff1a\u5728\u672b\u5c3e\u8ffd\u52a0\u4e00\u4e2a\u5143\u7d20\u3002\u6c38\u8fdc\u8fd4\u56de <code>true</code>\u3002</li> <li><code>void add(int index, T obj)</code>\uff1a\u5728<code>index</code> \u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\u3002</li> <li><code>T set(int index, T obj)</code>\uff1a\u66f4\u6539 <code>index</code> \u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u8fd4\u56de\u539f\u5148\u5728 <code>index</code> \u7684\u5143\u7d20\u3002</li> <li><code>T get(int index)</code>\uff1a\u67e5\u8be2 <code>index</code> \u4f4d\u7f6e\u7684\u5143\u7d20\u3002</li> <li><code>T remove(int index)</code>\uff1a\u5220\u9664 <code>index</code> \u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u8fd4\u56de\u539f\u5148\u5728 <code>index</code> \u7684\u5143\u7d20\u3002</li> </ul>"},{"location":"dev/java/CoreJava/ch05/#_9","title":"\u5bf9\u8c61\u5305\u88c5\u5668\u4e0e\u81ea\u52a8\u88c5\u7bb1","text":"<p><code>ArrayList</code> \u7684\u5b58\u653e\u7c7b\u578b\u5fc5\u987b\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u5b58\u653e\u57fa\u672c\u7c7b\u578b <code>ArrayList&lt;int&gt;</code> \u662f\u4e0d\u884c\u7684\u3002\u9700\u8981\u4f7f\u7528\u5305\u88c5\u5668\uff0c\u4f8b\u5982 <code>Interge</code>\u3001<code>Long</code>\u3001<code>Float</code>\u3001<code>Double</code>\u3001<code>Short</code>\u3001<code>Byte</code>\u3001<code>Character</code> \u548c <code>Boolean</code>\uff08\u524d6\u4e2a\u7c7b\u6d3e\u751f\u4e8e\u516c\u5171\u7684\u8d85\u7c7b <code>Number</code>\uff09\u3002\u5305\u88c5\u5668\u7c7b\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5373\u4e00\u65e6\u6784\u9020\u4e86\u5305\u88c5\u5668\uff0c\u5c31\u4e0d\u5141\u8bb8\u66f4\u6539\u5305\u88c5\u5728\u5176\u4e2d\u7684\u503c\u3002\u540c\u65f6\uff0c\u5305\u88c5\u5668\u7c7b\u8fd8\u662f <code>final</code>\uff0c\u4e0d\u80fd\u6d3e\u751f\u5b83\u4eec\u7684\u5b50\u7c7b\u3002</p> <p>\u8bbf\u95ee\u5305\u88c5\u5668\u7684\u503c\u9700\u8981\u4f7f\u7528\u5305\u88c5\u5668\u7684\u65b9\u6cd5\uff0c\u4e0d\u8fc7\uff0c\u5728\u4f7f\u7528<code>ArrayList</code> \u7b49\u6570\u636e\u7ed3\u6784\u65f6\u4f1a\u81ea\u52a8\u5c06\u6211\u4eec\u7684\u8bed\u6cd5\u53d8\u6362\u6210\u8c03\u7528\u5305\u88c5\u5668\u65b9\u6cd5\u7684\u5f62\u5f0f\uff0c\u8fd9\u4e2a\u7279\u6027\u79f0\u4e3a <code>\u81ea\u52a8\u88c5\u7bb1</code>\u3002</p>"},{"location":"dev/java/CoreJava/ch05/#_10","title":"\u53d8\u957f\u53c2\u6570\u65b9\u6cd5","text":"<p>\u53ef\u4ee5\u7528 <code>T...</code> \u4f5c\u4e3a\u53d8\u957f\u6570\u7ec4\u4f20\u5165\u65b9\u6cd5\u4e2d\uff0c\u5728\u904d\u5386\u65f6\uff0c\u53ef\u4ee5\u7528 <code>for-each</code> \u8bed\u6cd5\u6216\u8005\u4e0b\u6807\u904d\u5386\u3002</p> <pre><code>public class Main {\n    public static int max(int... a) {\n        int M = Integer.MIN_VALUE;\n        System.out.printf(\"len = %d\\n\", a.length);\n        for (int x : a)\n            if (x &gt; M)\n                M = x;\n        return M;\n    }\n    public static void main(String[] args) {\n        System.out.printf(\"max = %d\", max(2, 8, 5));\n    }\n}\n</code></pre> <p><code>java</code> \u5141\u8bb8\u5c06\u6570\u7ec4\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f20\u7ed9\u6709\u53ef\u53d8\u53c2\u6570\u7684\u65b9\u6cd5\u3002</p>"},{"location":"essay/","title":"\u968f\u7b14","text":"<p>\u70b9\u51fb\u5de6\u4fa7\u6309\u94ae\u6253\u5f00\u6587\u7ae0</p> <p>\u5373\u5c06\u66f4\u65b0: - \u6211\u76842022\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386</p>"},{"location":"others/","title":"\u9648\u88d5\u6770\u7684\u4e2a\u4eba\u7f51\u7ad9","text":"<p>https://codezhxs.github.io</p> <p>\u6709\u65f6\u95f4\u7684\u8bdd\u66f4\u65b0:</p> <ul> <li> \u8001\u9ad8\u7684\u5317\u4eac\u7f8e\u98df\u63a2\u5e97\u8bb0\u5f55</li> <li> \u5982\u4f55\u8d2d\u4e70\u7279\u4ef7\u673a\u7968</li> <li> \u6211\u7684\u88c5\u673a\u914d\u7f6e</li> </ul>"},{"location":"others/BJ_food/","title":"\u5317\u4eac\u5e72\u996d\u53c2\u8003\u8868","text":"<p>\u8001\u9ad8\uff0c\u6211\u6700\u5e38\u770b\u7684\u7f8e\u98df\u535a\u4e3b\uff0c\u5e38\u9a7b\u5317\u4eac\uff0c\u62cd\u4e86\u5f88\u591a\u5317\u4eac\u7f8e\u98df\u63a2\u5e97\u7684\u89c6\u9891\u3002\u6070\u597d\u6211\u5728\u5317\u4eac\u8bfb\u7814\uff0c\u96be\u514d\u5c11\u4e0d\u4e86\u548c\u540c\u5b66\u670b\u53cb\u5403\u996d\uff0c\u56e0\u6b64\u5c06\u8001\u9ad8\u89c6\u9891\u4e2d\u7684\u9910\u9986\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u4f9b\u81ea\u5df1\u6216\u4ed6\u4eba\u67e5\u9605\u3002</p> <ul> <li>\u6309\u7167\u83dc\u7cfb\u5206\u7c7b\u3002</li> <li>\u70b9\u51fb\u9910\u9986\u540d\u53ef\u76f4\u8fbe\u8001\u9ad8\u7684B\u7ad9\u89c6\u9891\u3002\u7531\u4e8e\u6211\u65f6\u95f4\u6709\u9650\uff0c\u8bb8\u591a\u5e97\u94fa\u6ca1\u6709\u54c1\u5c1d\u8fc7\uff0c\u5efa\u8bae\u5728\u51b3\u5b9a\u53bb\u67d0\u4e00\u5bb6\u5e97\u4e4b\u524d\u70b9\u8fdb\u89c6\u9891\u94fe\u63a5\uff0c\u53c2\u7167\u8001\u9ad8\u4ee5\u53ca\u8bc4\u8bba\u533a\u7684\u8bc4\u4ef7\u51b3\u5b9a\u3002</li> <li>\u6709  \u56fe\u6807\u8868\u793a\u6211\u5403\u8fc7\uff0c\u4f1a\u7559\u4e0b\u77ed\u8bc4\u3002</li> <li>\u672c\u8d34\u7684\u9910\u5385\u5217\u8868\u52a8\u6001\u5220\u9664\uff0c\u88ab\u5220\u9664\u7684\u9910\u5385\u5728 \u8fd9\u91cc \u3002</li> <li>\u5982\u679c\u60a8\u53bb\u8fc7\u5176\u4e2d\u7684\u5e97\u94fa\uff0c\u53ef\u4ee5\u544a\u8bc9\u6211\u7528\u9910\u7684\u4f53\u9a8c\u5982\u4f55\uff0c\u6211\u4f1a\u5c06\u8bc4\u4ef7\u9644\u5728\u8868\u4e2d\u3002</li> </ul>"},{"location":"others/BJ_food/#_1","title":"\u4eac\u83dc","text":"<p>\u5305\u62ec\u5317\u4eac\u83dc\u3001\u519c\u5bb6\u83dc\u3001\u70e4\u9e2d\u3001\u6dae\u8089\u7b49\u3002</p> \u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u4fbf\u5b9c\u574a \u8fde\u9501  23.09.29\u4e16\u7eaa\u91d1\u6e90\u5e97 \u8bb0\u5f97\u5728 <code>\u7f8e\u5473\u4e0d\u7528\u7b49</code> \u53d6\u53f7\uff0c\u4ef7\u683c\u5c0f\u8d35\uff0c\u5473\u9053\u4e0d\u9519\u3002 \u56db\u5b63\u6c11\u798f \u8fde\u9501 \u5168\u805a\u5fb7 \u8fde\u9501 \u4eff\u81b3\u996d\u5e84 \u897f\u57ce\u533a\u4e1c\u57ce\u533a \u9e3f\u5bbe\u697c \u671d\u9633\u533a\u897f\u57ce\u533a \u6d77\u7897\u5c45 \u6d77\u6dc0\u533a\u4e1c\u57ce\u533a \u540c\u548c\u5c45 \u8fde\u9501 \u63d0\u7763 \u8fde\u9501 \u82b1\u5bb6\u6021\u56ed \u8fde\u9501 \u5c0f\u8363\u9152\u5bb6 \u671d\u9633\u533a \u5927\u9e2d\u68a8 \u8fde\u9501 \u5c0f\u540a\u68a8\u6c64 \u8fde\u9501 \u665f\u6c38\u5174 \u8fde\u9501 \u8363\u5e9c\u5bb4 \u95e8\u5934\u6c9f \u7f8a\u5927\u7237\u6dae\u8089 \u6d77\u6dc0\u533a\u671d\u9633\u533a \u5317\u5e73\u697c \u8fde\u9501 \u65b0\u62fe\u7396 \u65b0\u4eac\u83dc \u671d\u9633\u533a ---"},{"location":"others/BJ_food/#_2","title":"\u7ca4\u83dc","text":"<p>\u5305\u62ec\u7ca4\u83dc\u3001\u6e2f\u5f0f\u8336\u9910\u5385\u3001\u6f6e\u6c55\u83dc\u7b49\u3002</p> \u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u7ca4\u5c0f\u9986 \u4e1c\u57ce\u533a \u8521\u6f9c\u6e2f\u5f0f\u70b9\u5fc3 \u8fde\u9501 \u9676\u9676\u5c45 \u671d\u9633\u533a\u897f\u57ce\u533a \u91d1\u9f0e\u8f69 \u8fde\u9501 \u5317\u4eac\u53a8\u623f \u671d\u9633\u533a \u5229\u82d1 \u4e1c\u57ce\u533a\u671d\u9633\u533a \u4e00\u697c\u4e00\u996d\u5e97 \u6d77\u6dc0\u533a\u671d\u9633\u533a \u80a5\u798f\u62cd\u6863 \u8fde\u9501 \u6f6e\u5802 \u671d\u9633\u533a\u897f\u57ce\u533a"},{"location":"others/BJ_food/#_3","title":"\u5ddd\u83dc","text":"<p>\u5305\u62ec\u5ddd\u83dc\u3001\u81ea\u8d21\u76d0\u5e2e\u83dc\u3001\u6c34\u716e\u9c7c\u7b49\u3002</p> \u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u5b9c\u5bbe\u62db\u5f85\u6240 \u897f\u57ce\u533a  23.10.01 \u56fd\u5e86\u4eba\u5f88\u591a\uff0c\u7b49\u4e86\u4e24\u5c0f\u65f6\uff0c\u51fa\u54c1\u7565\u6709\u964d\u4f4e\uff0c\u603b\u4f53\u6ee1\u610f\u3002 \u9ebb\u516d\u8bb0 \u8fde\u9501 \u4fcf\u6c5f\u5357 \u8fde\u9501 \u9526\u5e9c\u76d0\u5e2e \u8fde\u9501 \u4e09\u6837\u83dc \u8fde\u9501 \u7709\u5dde\u4e1c\u5761 \u8fde\u9501 \u5ce8\u7709\u9152\u5bb6 \u8fde\u9501 \u8d21\u9662\u8700\u697c \u5ddd\u529e\u9910\u5385 \u4e1c\u57ce\u533a \u65b0\u5ddd\u529e\u9910\u5385 \u671d\u9633\u533a \u56db\u5ddd\u996d\u5e97 \u8fde\u9501 \u8bb8\u5bb6\u83dc \u671d\u9633\u533a \u6cf8\u5dde\u5e7a\u59b9\u79c1\u623f\u83dc \u671d\u9633\u533a \u5929\u4e0b\u76d0 \u4e1c\u57ce\u533a \u9f99\u4eba\u5c45 \u6c34\u716e\u9c7c \u8fde\u9501"},{"location":"others/BJ_food/#_4","title":"\u6e58\u83dc","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u6f47\u6e58\u9601 \u8fde\u9501  23.09.23\u5317\u82d1\u5e97 \u5f88\u4e0d\u9519\uff0c\u4ef7\u683c\u8fd8\u884c\uff0c\u670d\u52a1\u4e5f\u68d2\u3002 \u9690\u53a8 \u671d\u9633\u533a\u5927\u5174\u533a \u8d39\u5927\u53a8\u8fa3\u6912\u7092\u8089 \u8fde\u9501"},{"location":"others/BJ_food/#_5","title":"\u6c5f\u6d59\u83dc","text":"<p>\u5305\u62ec\u6dee\u626c\u83dc\u3001\u82cf\u83dc\u3001\u6d59\u6c5f\u83dc\u3001\u7ecd\u5174\u83dc\u7b49\u3002</p> \u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u677e\u9e64\u697c\u8001\u9ad8\u4e8c\u63a2\u677e\u9e64\u697c \u8fde\u9501 \u82cf\u5e2e\u8881 \u8fde\u9501 \u9f0e\u6cf0\u4e30 \u8fde\u9501 \u6dee\u626c\u5e9c \u4e1c\u57ce\u533a\u897f\u57ce\u533a \u5c0f\u53a8\u5a18 \u671d\u9633\u533a \u5916\u5a46\u5bb6 \u8fde\u9501 \u7eff\u8336\u9910\u5385 \u8fde\u9501 \u6842\u6ee1\u9647 \u8fde\u9501 \u5357\u4eac\u5927\u724c\u6863 \u8fde\u9501 \u7389\u534e\u53f0\u996d\u5e84 \u897f\u57ce\u533a\u671d\u9633\u533a \u6d59\u6c5f\u98df\u5e9c \u671d\u9633\u533a \u51b6\u6625 \u897f\u57ce\u533a \u6e38\u56ed\u4eac\u68a6 \u671d\u9633\u533a\u4e1c\u57ce\u533a \u7ecd\u5341\u4e09 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_6","title":"\u9c81\u83dc","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u6cf0\u4e30\u697c \u897f\u57ce\u533a  23.09.05 \u611f\u89c9\u4e00\u822c\uff0c\u4ef7\u683c\u7565\u8d35\uff0c\u4e0b\u6b21\u70b9\u4e00\u4efd\u5e72\u70b8\u4e38\u5b50\u8bd5\u8bd5\u3002 \u8403\u534e\u697c \u8fde\u9501 \u4e1c\u5174\u697c \u8fde\u9501 \u4e30\u6cfd\u56ed \u8fde\u9501 \u805a\u5fb7\u697c\u996d\u5e84 \u671d\u9633\u533a \u5317\u4eac\u67f3\u6cc9\u5c45 \u897f\u57ce\u533a \u9c81\u91c7 \u671d\u9633\u533a\u6d77\u6dc0\u533a"},{"location":"others/BJ_food/#_7","title":"\u95fd\u83dc","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u8386\u7530\u9910\u5385(\u95fd\u83dc)\u8001\u9ad8\u4e8c\u63a2\u8386\u7530\u9910\u5385 \u8fde\u9501 \u516b\u95fd\u98df\u5e9c \u671d\u9633\u533a"},{"location":"others/BJ_food/#_8","title":"\u4e91\u5357\u83dc","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u4e91\u6d77\u80b4 \u8fde\u9501 \u4e00\u5750\u4e00\u5fd8 \u671d\u9633\u533a \u4e91\u817e\u98df\u5e9c \u4e1c\u57ce\u533a \u8774\u8776\u6cc9\u5bbe\u9986 \u897f\u57ce\u533a"},{"location":"others/BJ_food/#_9","title":"\u9762\u9986","text":"\u5e97\u540d \u7c7b\u522b \u4f4d\u7f6e \u8bc4\u4ef7 \u8001\u5f20\u725b\u8089\u9762 \u725b\u8089\u9762 \u8fde\u9501 \u677e\u9e64\u697c\u82cf\u5f0f\u6c64\u9762 \u82cf\u5f0f\u6c64\u9762 \u6d77\u6dc0\u533a \u5473\u5343\u62c9\u9762 \u65e5\u5f0f\u62c9\u9762 \u8fde\u9501 A+Cafe \u521b\u610f\u9762 \u671d\u9633\u533a \u91cc\u9762 \u521b\u610f\u9762 \u671d\u9633\u533a \u535a\u591a\u4e00\u5e78\u820d \u65e5\u5f0f\u62c9\u9762 \u897f\u57ce\u533a\u671d\u9633\u533a \u8001\u5317\u4eac\u67f4\u6c0f \u725b\u8089\u9762 \u671d\u9633\u533a\u4e30\u53f0\u533a \u91cd\u5e86\u52c7\u76db\u725b\u8089\u9762 \u725b\u8089\u9762 \u671d\u9633\u533a \u80d6\u59b9\u9762\u5e84 \u5ddd\u6e1d\u9762 \u8fde\u9501 \u65e5\u51fa\u62c9\u9762 \u6e05\u6c64\u9762 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_10","title":"\u5c0f\u5403","text":"\u5e97\u540d \u7c7b\u522b \u4f4d\u7f6e \u8bc4\u4ef7 \u96c6\u5ba4 \u8584\u997c \u671d\u9633\u533a \u5143\u53e4\u4e91\u5883 \u751c\u54c1 \u671d\u9633\u533a Shake Shack \u6c49\u5821 \u8fde\u9501 \u6cb3\u6cbf\u8089\u997c \u5317\u4eac\u8089\u997c \u897f\u57ce\u533a\u4e1c\u57ce\u533a \u559c\u9f0e\u6d77\u80c6\u6c34\u997a \u6c34\u997a \u671d\u9633\u533a \u949f\u4e45\u592b\u80a0\u7c89\u738b \u80a0\u7c89 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_11","title":"\u5176\u4ed6","text":"\u5e97\u540d \u7c7b\u522b \u4f4d\u7f6e \u8bc4\u4ef7 \u9e7f\u6e2f\u5c0f\u9547 \u53f0\u6e7e\u83dc \u8fde\u9501 \u5c0f\u653e\u725b\u7092\u83dc\u9986 \u591a\u79cd\u83dc\u7cfb \u8fde\u9501 \u9e21\u5764\u8336\u5ba4 \u6d77\u5357\u9e21\u996d \u671d\u9633\u533a \u7802\u9505\u5c45 \u7802\u9505 \u8fde\u9501 \u897f\u8d1d\u839c\u9762\u6751 \u897f\u5317\u83dc \u8fde\u9501 \u5ea6\u5c0f\u6708 \u53f0\u6e7e\u83dc \u6d77\u6dc0\u533a\u671d\u9633\u533a \u8001\u897f\u5b89\u996d\u5e84 \u897f\u5317\u83dc \u8fde\u9501 \u706b\u70e7\u4e91 \u50a3\u65cf\u83dc \u671d\u9633\u533a \u5c0f\u5fbd\u821f \u5fbd\u83dc \u671d\u9633\u533a \u664b\u9633\u996d\u5e84 \u5c71\u897f\u83dc \u6d77\u6dc0\u533a\u897f\u57ce\u533a \u534a\u5929\u5996 \u70e4\u9c7c \u8fde\u9501 \u66b9\u7f57\u6cf0 \u6cf0\u56fd\u83dc \u671d\u9633\u533a \u529f\u5fb7\u6797\u7d20\u83dc\u996d\u5e84 \u7d20\u83dc \u4e1c\u57ce\u533a \u674f\u82b1\u5802 \u9655\u897f\u83dc \u8fde\u9501 \u8001\u5409\u5802 \u6caa\u83dc \u8fde\u9501 \u9e21\u8bb0\u9910\u5ba4 \u9e21\u9505 \u671d\u9633\u533a \u58ee\u58ee\u9152\u9986 \u4e2d\u897f\u7ed3\u5408 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_12","title":"\u897f\u9910","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u725b\u6392\u5bb6 \u8fde\u9501 \u5b89\u59ae\u610f\u5927\u5229\u9910\u5385 \u8fde\u9501 \u8428\u8389\u4e9a \u8fde\u9501 THE TACO BAR \u671d\u9633\u533a\u4e1c\u57ce\u533a \u610f\u5e93 \u671d\u9633\u533a"},{"location":"others/BJ_food/#_13","title":"\u65e5\u6599","text":"\u5e97\u540d \u4f4d\u7f6e \u8bc4\u4ef7 \u718a\u4e5f\u725b\u5e97 \u4e1c\u57ce\u533a \u80dc\u535a\u6bbf \u8fde\u9501 \u9e1f\u5c6f \u671d\u9633\u533a \u5c06\u592a\u65e0\u4e8c \u8fde\u9501"},{"location":"others/BJ_food_delete/","title":"BJ food delete","text":"\u5e97\u540d \u7c7b\u522b \u5220\u9664\u7406\u7531 \u9ed1\u5929\u9e45 \u897f\u9910 \u6ca1\u5728\u5730\u56fe\u4e2d\u627e\u5230\u3002 \u4e5d\u672c\u5c45\u9152\u5c4b \u65e5\u6599 \u8d27\u4e0d\u5bf9\u677f\uff0c\u516c\u4f17\u53f7\u53d1\u6587\u5634\u786c\u3002"},{"location":"others/latex/","title":"LaTeX \u5e38\u7528\u7b26\u53f7\u6574\u7406","text":"<p>\u7b14\u8005\u975e\u6570\u5b66\u7cfb\uff0c\u6574\u7406 LaTeX \u7b26\u53f7\u4ec5\u4ec5\u4e3a <code>Markdown</code> \u516c\u5f0f\u7f16\u8f91\u9700\u8981\uff0c\u5b58\u5728\u4e0d\u59a5\u4e4b\u5904 (\u771f\u7684\u5b58\u5728)\u3002</p> <p>\u53c2\u8003\u6587\u732e\u5df2\u5217\u4e8e\u6587\u672b\uff0c\u5176\u4e2d\u5305\u542b\u5b8c\u6574\u7684 <code>Latex\u7b26\u53f7\u516c\u5f0f\u8868</code>\u3002</p> <p>\u672c\u6587\u968f\u7b14\u8005\u4f7f\u7528\u4e0d\u65ad\u66f4\u65b0, \u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\u3002</p> <p>latex\u516c\u5f0f\u5728\u7ebf\u7f16\u8f91\u5668(\u542b\u6a21\u7248)</p>"},{"location":"others/latex/#_1","title":"\u5e0c\u814a\u5b57\u6bcd","text":"Name Display Capital Case Display Var Case Display <code>\\alpha</code> \\(\\alpha\\) <code>A</code> \\(A\\) <code>\\beta</code> \\(\\beta\\) <code>B</code> \\(B\\) <code>\\gamma</code> \\(\\gamma\\) <code>\\Gamma</code> \\(\\Gamma\\) <code>\\theta</code> \\(\\theta\\) <code>\\Theta</code> \\(\\Theta\\) <code>\\vartheta</code> \\(\\vartheta\\) <code>\\mu</code> \\(\\mu\\) <code>M</code> \\(M\\) <code>\\delta</code> \\(\\delta\\) <code>\\Delta</code> \\(\\Delta\\) <code>\\epsilon</code> \\(\\epsilon\\) <code>E</code> \\(E\\) <code>\\varepsilon</code> \\(\\varepsilon\\) <code>\\sigma</code> \\(\\sigma\\) <code>\\Sigma</code> \\(\\Sigma\\) <code>\\varsigma</code> \\(\\varsigma\\) <code>\\pi</code> \\(\\pi\\) <code>\\Pi</code> \\(\\Pi\\) <code>\\varpi</code> \\(\\varpi\\) <code>\\omega</code> \\(\\omega\\) <code>\\Omega</code> \\(\\Omega\\) <code>\\xi</code> \\(\\xi\\) <code>\\Xi</code> \\(\\Xi\\) <code>\\zeta</code> \\(\\zeta\\) <code>Z</code> \\(Z\\) <code>\\chi</code> \\(\\chi\\) <code>X</code> \\(X\\) <code>\\rho</code> \\(\\rho\\) <code>P</code> \\(P\\) <code>\\varrho</code> \\(\\varrho\\) <code>\\phi</code> \\(\\phi\\) <code>\\Phi</code> \\(\\Phi\\) <code>\\varphi</code> \\(\\varphi\\) <code>\\eta</code> \\(\\eta\\) <code>H</code> \\(H\\) <code>\\lambda</code> \\(\\lambda\\) <code>\\Lambda</code> \\(\\Lambda\\) <code>\\kappa</code> \\(\\kappa\\) <code>K</code> \\(K\\) <code>\\nu</code> \\(\\nu\\) <code>N</code> \\(N\\) <code>\\upsilon</code> \\(\\upsilon\\) <code>\\Upsilon</code> \\(\\Upsilon\\) <code>\\psi</code> \\(\\psi\\) <code>\\Psi</code> \\(\\Psi\\) <code>\\tau</code> \\(\\tau\\) <code>T</code> \\(T\\) <code>\\iota</code> \\(\\iota\\) <code>I</code> \\(I\\) <code>\\omicron</code> \\(\\omicron\\) <code>O</code> \\(O\\) <p>\u6709\u4ee3\u7801\u7684\u5927\u5199\u5e0c\u814a\u5b57\u6bcd\uff0c\u76f4\u63a5\u6572\u83b7\u5f97\u6b63\u4f53\uff0c\u4f7f\u7528<code>\\var</code>\u524d\u7f00\u8f6c\u5316\u4e3a\u659c\u4f53</p> <p>\u5982\uff1a<code>\\Gamma</code> \\(\\Gamma\\)\uff08\u6b63\uff09 <code>\\varGamma</code> \\(\\varGamma\\)\uff08\u659c\uff09</p> <p>\u6ca1\u6709\u4ee3\u7801\u7684\u5927\u5199\u5e0c\u814a\u5b57\u6bcd\uff0c\u76f4\u63a5\u6572\u5f97\u659c\u4f53\uff0c\u4f7f\u7528<code>\\text</code>\u547d\u4ee4\u8f6c\u5316\u4e3a\u6b63\u4f53</p> <p>\u5982\uff1a<code>T</code> \\(T\\)\u76f4\u63a5\u6572\uff08\u659c\uff09 <code>\\text T</code> \\(\\text T\\)\uff08\u6b63\uff09</p> <p>\uff08\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>\\rm</code>\u5c06\u4e0b\u4e00\u4e2a\u5355\u8bcd\u53d8\u6b63\uff0c<code>\\text T</code>\u7684\u4f5c\u7528\u8303\u56f4\u53ea\u662f\u4e0b\u4e00\u4e2a\u5b57\u6bcd\uff1b\u53ef\u4ee5\u5c1d\u8bd5\u52a0<code>{}</code>\uff09</p>"},{"location":"others/latex/#_2","title":"\u8fd0\u7b97","text":""},{"location":"others/latex/#_3","title":"\u7b80\u5355\u8fd0\u7b97","text":"Type Typeset <code>+</code> \\(+\\) <code>-</code> \\(-\\) <code>\\pm</code> \\(\\pm\\) <code>\\mp</code> \\(\\mp\\) <code>\\times</code> \\(\\times\\) <code>\\cdot</code> \\(\\cdot\\) <code>\\div</code> \\(\\div\\) <code>\\bmod</code> \\(\\bmod\\) <code>\\oplus</code> \\(\\oplus\\) <code>\\cap</code> \\(\\cap\\) <code>\\cup</code> \\(\\cup\\) <code>\\wedge</code> <code>\\land</code> \\(\\land\\) <code>\\vee</code> <code>\\lor</code> \\(\\lor\\) <code>\\ast</code> \\(\\ast\\) <code>\\det</code> \\(\\det\\)"},{"location":"others/latex/#_4","title":"\u590d\u6742\u8fd0\u7b97","text":"Type Typeset <code>\\sqrt{abc}</code> \\(\\sqrt{abc}\\) <code>\\sqrt[n]{abc}</code> \\(\\sqrt[n]{abc}\\) <code>\\frac{abc}{xyz}</code> \\(\\frac{abc}{xyz}\\) <code>\\int_{a}^{b}</code> \\(\\int_{a}^{b}\\) <code>\\iiint_{a}^{b}</code> \\(\\iiint_{a}^{b}\\) <code>\\oint_{a}^{b}</code> \\(\\oint_{a}^{b}\\) <code>\\frac{\\mathrm{d} y}{\\mathrm{d} x}</code> \\(\\frac{\\mathrm{d} y}{\\mathrm{d} x}\\) <code>\\frac{\\mathrm{d}^{n} y}{\\mathrm{d} x^{n}}</code> \\(\\frac{\\mathrm{d}^{n} y}{\\mathrm{d} x^{n}}\\) <code>\\frac{\\partial f}{\\partial x}</code> \\(\\frac{\\partial f}{\\partial x}\\) <code>\\frac{\\partial ^{n} f}{\\partial x^{n}}</code> \\(\\frac{\\partial ^{n} f}{\\partial x^{n}}\\) <code>\\sum_{i=1}^{n}</code> \\(\\sum_{i=1}^{n}\\) <code>\\prod_{i=1}^{n}</code> \\(\\prod_{i=1}^{n}\\) <code>\\bigcap_{i=1}^{n}</code> \\(\\bigcap_{i=1}^{n}\\) <code>\\bigcup_{i=1}^{n}</code> \\(\\bigcup_{i=1}^{n}\\) <p>(\u60f3\u8981\u8ba9\u89d2\u6807\u51fa\u73b0\u5728\u6b63\u4e0a\u548c\u6b63\u4e0b\u65b9\uff0c\u4f7f\u7528\u5757\u7ea7\u516c\u5f0f\u800c\u4e0d\u662f\u884c\u5185\u516c\u5f0f)</p>"},{"location":"others/latex/#_5","title":"\u51fd\u6570","text":"Type Typeset <code>\\arccos</code> \\(\\arccos\\) <code>\\arcsin</code> \\(\\arcsin\\) <code>\\arctan</code> \\(\\arctan\\) <code>\\cos</code> \\(\\cos\\) <code>\\cosh</code> \\(\\cosh\\) <code>\\cot</code> \\(\\cot\\) <code>\\lg</code> \\(\\lg\\) <code>\\ln</code> \\(\\ln\\) <code>\\log</code> \\(\\log\\) <code>\\sin</code> \\(\\sin\\) <code>\\sinh</code> \\(\\sinh\\) <code>\\tan</code> \\(\\tan\\) <code>\\tanh</code> \\(\\tanh\\)"},{"location":"others/latex/#_6","title":"\u6781\u9650\u8fd0\u7b97\u7b26","text":"Type Typeset <code>\\lim</code> \\(\\lim\\) <code>\\inf</code> \\(\\inf\\) <code>\\sup</code> \\(\\sup\\) <code>\\min</code> \\(\\min\\) <code>\\max</code> \\(\\max\\)"},{"location":"others/latex/#_7","title":"\u7b26\u53f7","text":"<p>\u4e00\u4e9b\u952e\u76d8\u4e0a\u53ef\u76f4\u63a5\u6572\u51fa\u7684\u7b26\u53f7\uff0c\u524d\u9762\u52a0<code>\\</code>\u5373\u53ef\u3002</p> <p>\u5982\uff1a<code>\\%</code> \\(\\to \\%\\) <code>\\_</code> \\(\\to \\_\\)</p>"},{"location":"others/latex/#_8","title":"\u70b9\u7f00","text":"Type Typeset <code>a^2</code> \\(a^2\\) <code>a_1</code> \\(a_1\\) <code>\\bar{a}</code> \\(\\bar{a}\\) <code>\\dot{a}</code> \\(\\dot{a}\\) <code>\\ddot{a}</code> \\(\\ddot{a}\\) <code>\\vec{a}</code> \\(\\vec{a}\\) <code>\\hat{a}</code> \\(\\hat{a}\\) <code>\\tilde{a}</code> \\(\\tilde{a}\\) <code>\\mathring{a}</code> \\(\\mathring{a}\\) <code>f^{''}</code> \\(f^{''}\\) <code>90^\\circ</code> \\(90^\\circ\\) <code>\\overset{\\frown}\\psi</code> \\(\\overset{\\frown}\\psi\\) <code>\\overset{?}{=}</code> \\(\\overset{?}{=}\\) <code>\\overset{ping}{\u62fc}\\overset{yin}{\u97f3}</code> \\(\\overset{ping}{\u62fc}\\overset{yin}{\u97f3}\\) <code>\\overset{\u306f\u3044}{\u5165}\u308b</code> \\(\\overset{\u306f\u3044}{\u5165}\u308b\\) <code>\\underset{t\\in R}{max}</code> \\(\\underset{t\\in R}{max}\\)"},{"location":"others/latex/#_9","title":"\u4e8c\u5143\u5173\u7cfb","text":"Type Typeset <code>&lt;</code> \\(&lt;\\) <code>&gt;</code> \\(&gt;\\) <code>\\le</code> \\(\\le\\) <code>\\ge</code> \\(\\ge\\) <code>\\leqslant</code> \\(\\leqslant\\) <code>\\geqslant</code> \\(\\geqslant\\) <code>=</code> \\(=\\) <code>\\ne</code> \\(\\ne\\) <code>:</code> \\(:\\) <code>\\in</code> \\(\\in\\) <code>\\notin</code> \\(\\notin\\) <code>\\ni</code> <code>\\owns</code> \\(\\ni\\) <code>\\ll</code> \\(\\ll\\) <code>\\gg</code> \\(\\gg\\) <code>\\sim</code> \\(\\sim\\) <code>\\approx</code> \\(\\approx\\) <code>\\cong</code> \\(\\cong\\) <code>\\equiv</code> \\(\\equiv\\) <code>\\subset</code> \\(\\subset\\) <code>\\supset</code> \\(\\supset\\) <code>\\subseteq</code> \\(\\subseteq\\) <code>\\subsetneqq</code> \\(\\subsetneqq\\) <code>\\perp</code> \\(\\perp\\) <code>\\parallel</code> \\(\\parallel\\) <code>\\mid</code> \\(\\mid\\) <code>\\propto</code> \\(\\propto\\)"},{"location":"others/latex/#miscellaneous-symbols","title":"Miscellaneous Symbols","text":"Type Typeset <code>\\therefore</code> \\(\\therefore\\) <code>\\because</code> \\(\\because\\) <code>\\ell</code> \\(\\ell\\) <code>\\partial</code> \\(\\partial\\) <code>\\infty</code> \\(\\infty\\) <code>\\varnothing</code> <code>\\emptyset</code> \\(\\emptyset\\) <code>\\forall</code> \\(\\forall\\) <code>\\exists</code> \\(\\exists\\) <code>\\triangle</code> \\(\\triangle\\) <code>\\angle</code> \\(\\angle\\) <code>\\surd</code> \\(\\surd\\) <code>\\nabla</code> \\(\\nabla\\) <code>\\neg</code> <code>\\lnot</code> \\(\\neg\\) <code>\\ldots</code> \\(\\ldots\\) <code>\\cdots</code> \\(\\cdots\\) <code>\\vdots</code> \\(\\vdots\\) <code>\\ddots</code> \\(\\ddots\\) <code>\\S</code> \\(\\S\\)"},{"location":"others/latex/#_10","title":"\u5a31\u4e50","text":"Type Typeset <code>\\spadesuit</code> \\(\\spadesuit\\) <code>\\heartsuit</code> \\(\\heartsuit\\) <code>\\diamondsuit</code> \\(\\diamondsuit\\) <code>\\clubsuit</code> \\(\\clubsuit\\)"},{"location":"others/latex/#_11","title":"\u7bad\u5934","text":"Type Typeset <code>\\to</code> <code>\\rightarrow</code> \\(\\to\\) <code>\\leftarrow</code> \\(\\leftarrow\\) <code>\\Rightarrow</code> \\(\\Rightarrow\\) <code>\\Leftarrow</code> \\(\\Leftarrow\\) <code>\\Longrightarrow</code> \\(\\Longrightarrow\\) <code>\\Longleftarrow</code> \\(\\Longleftarrow\\) <code>\\Leftrightarrow</code> \\(\\Leftrightarrow\\) <code>\\iff</code> <code>\\Longleftrightarrow</code> \\(\\iff\\)"},{"location":"others/latex/#_12","title":"\u5305\u88f9\u7ed3\u6784","text":"Type Typeset <code>\\overrightarrow{AB}</code> \\(\\overrightarrow{AB}\\) <code>\\overline{AB}</code> \\(\\overline{AB}\\) <code>\\underline{abc}</code> \\(\\underline{abc}\\) <code>\\tilde{abc}</code> \\(\\tilde{abc}\\) <code>\\widetilde{abc}</code> \\(\\widetilde{abc}\\) <code>\\overbrace{abc}</code> \\(\\overbrace{abc}\\) <code>\\underbrace{abc}</code> \\(\\underbrace{abc}\\)"},{"location":"others/latex/#_13","title":"\u62ec\u53f7","text":""},{"location":"others/latex/#_14","title":"\u666e\u901a\u62ec\u53f7","text":"Type Typeset <code>(</code> <code>)</code> \\((\\quad)\\) <code>[</code> <code>]</code> \\([\\quad]\\) <code>\\lbrace</code> <code>\\rbrace</code> \\(\\lbrace\\quad\\rbrace\\) <code>\\langle</code> <code>\\rangle</code> \\(\\langle\\quad\\rangle\\) <p>\u4f7f\u7528<code>\\left \\(</code>\u548c<code>\\right \\}</code>\u6253\u51fa\u5927\u7684\u5305\u88f9\u62ec\u53f7. \u7528<code>.</code>\u4ee3\u66ff\u62ec\u53f7\u53ef\u4ee5\u7a7a\u51fa\u6765\u4e00\u534a\u7684\u62ec\u53f7</p>"},{"location":"others/latex/#_15","title":"\u7edd\u5bf9\u503c/\u53d6\u6a21","text":"<p><code>\\left | a \\right |</code> \\(\\left | a \\right |\\) <code>\\left \\| \\vec{a} \\right \\|</code> \\(\\left \\| \\vec{a} \\right \\|\\)</p>"},{"location":"others/latex/#_16","title":"\u5411\u91cf","text":"Type Typeset <code>\\begin{matrix} a&amp;b \\\\ c&amp;d \\end{matrix}</code> \\(\\begin{matrix}a&amp;b\\\\c&amp;d\\end{matrix}\\) <code>\\begin{pmatrix} a&amp;b \\\\ c&amp;d \\end{pmatrix}</code> \\(\\begin{pmatrix}a&amp;b\\\\c&amp;d\\end{pmatrix}\\) <code>\\begin{bmatrix} a&amp;b \\\\ c&amp;d \\end{bmatrix}</code> \\(\\begin{bmatrix}a&amp;b\\\\c&amp;d\\end{bmatrix}\\) <code>\\begin{Bmatrix} a&amp;b \\\\ c&amp;d \\end{Bmatrix}</code> \\(\\begin{Bmatrix}a&amp;b\\\\c&amp;d\\end{Bmatrix}\\) <code>\\begin{vmatrix} a&amp;b \\\\ c&amp;d \\end{vmatrix}</code> \\(\\begin{vmatrix}a&amp;b\\\\c&amp;d\\end{vmatrix}\\) <code>\\begin{Vmatrix} a&amp;b \\\\ c&amp;d \\end{Vmatrix}</code> \\(\\begin{Vmatrix}a&amp;b\\\\c&amp;d\\end{Vmatrix}\\) <p>\u4e24\u4fa7\u62ec\u53f7\u4e5f\u53ef\u4ee5\u7528 <code>\\left</code> <code>\\right</code>+\u62ec\u53f7 \u6765\u5305\u88f9</p> <p>\u589e\u5e7f\u77e9\u9635</p> <pre><code>\\left[\n    \\begin{array}{cc|c}\n      1 &amp; 2 &amp; 3 \\\\\n      4 &amp; 5 &amp; 6\n    \\end{array}\n\\right]\n</code></pre> \\[  \\left[     \\begin{array}{cc|c}       1 &amp; 2 &amp; 3 \\\\       4 &amp; 5 &amp; 6     \\end{array} \\right] \\]"},{"location":"others/latex/#_17","title":"\u65b9\u7a0b\u7ec4","text":"<pre><code>\\left\\{\n\\begin{array}{c}\n    a_{11}x_1+a_{12}x_2+\\cdots+a_{1n}x_n=b_1 \\\\\n    a_{21}x_1+a_{22}x_2+\\cdots+a_{2n}x_n=b_2 \\\\\n    \\vdots \\\\\n    a_{n1}x_1+a_{n2}x_2+\\cdots+a_{nn}x_n=b_n\n\\end{array}\n\\right.\n</code></pre> \\[ \\left\\{ \\begin{array}{c}     a_{11}x_1+a_{12}x_2+\\cdots+a_{1n}x_n=b_1 \\\\     a_{21}x_1+a_{22}x_2+\\cdots+a_{2n}x_n=b_2 \\\\     \\vdots \\\\     a_{n1}x_1+a_{n2}x_2+\\cdots+a_{nn}x_n=b_n \\end{array} \\right. \\]"},{"location":"others/latex/#_18","title":"\u6587\u6863\u5e03\u5c40","text":""},{"location":"others/latex/#_19","title":"\u7a7a\u683c","text":"Name Type Typeset <code>aa</code> \\(aa\\) interword space <code>a\\ a</code> \\(a\\ a\\) 1 em <code>a\\quad a</code> \\(a\\quad a\\) 2 em <code>a\\qquad a</code> \\(a\\qquad a\\)"},{"location":"others/latex/#_20","title":"\u7d27\u7f29","text":"Name Type Typeset <code>aa</code> \\(aa\\) thinspace <code>a\\!a</code> \\(a\\!a\\) medspcae <code>a\\negmedspace a</code> \\(a\\negmedspace a\\) thickspace <code>a\\negthickspace a</code> \\(a\\negthickspace a\\)"},{"location":"others/latex/#_21","title":"\u5b57\u53f7","text":"Type Typeset <code>text</code> \\(text\\) <code>\\tiny text</code> \\(\\tiny text\\) <code>\\small text</code> \\(\\small text\\) <code>\\normalsize text</code> \\(\\normalsize text\\) <code>\\large text</code> \\(\\large text\\) <code>\\huge text</code> \\(\\huge text\\)"},{"location":"others/latex/#_22","title":"\u5b57\u4f53","text":"Type Typeset <code>\\mathbf{A}</code> \\(\\mathbf{A}\\) <code>\\mathcal{A}</code> \\(\\mathcal{A}\\) <code>\\mathit{A}</code> \\(\\mathit{A}\\) <code>\\mathrm{A}</code> \\(\\mathrm{A}\\) <code>\\mathsf{A}</code> \\(\\mathsf{A}\\) <code>\\mathtt{A}</code> \\(\\mathtt{A}\\) <code>\\mathbb{A}</code> \\(\\mathbb{A}\\) <code>\\mathfrak{A}</code> \\(\\mathfrak{A}\\) <code>\\mathscr{A}</code> \\(\\mathscr{A}\\)"},{"location":"others/latex/#_23","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u767e\u5ea6\u6587\u5e93 | Latex\u7b26\u53f7\u5bf9\u5e94\u8868</p> <p>\u767e\u5ea6\u6587\u5e93 | LaTeX Symbols\u7b26\u53f7</p> <p>CSDN | Markdown\u4e2dLatex \u6570\u5b66\u516c\u5f0f\u57fa\u672c\u8bed\u6cd5</p> <p>CSDN | \u6700\u5168 Markdown + Latex \u7f16\u5199\u6280\u5de7</p> <p>CSDN | LaTeX\u6570\u5b66\u7b26\u53f7\u603b\u7ed3</p> <p>\u7b80\u4e66 | LaTeX \u5bfc\u6570\u76f8\u5173\u7b26\u53f7</p>"}]}